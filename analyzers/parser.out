Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> imprimir
Rule 2     cuerpo -> asignacion
Rule 3     cuerpo -> funciones
Rule 4     cuerpo -> llamada_funcion
Rule 5     cuerpo -> constante
Rule 6     cuerpo -> lectura
Rule 7     cuerpo -> bwhile
Rule 8     cuerpo -> bdo
Rule 9     cuerpo -> bfor
Rule 10    cuerpo -> bforeach
Rule 11    cuerpo -> btry
Rule 12    cuerpo -> condicion_ifelse
Rule 13    cuerpo -> condicion_else
Rule 14    cuerpo -> condicion_elseif
Rule 15    cuerpo -> bswitch
Rule 16    cuerpo -> bcase
Rule 17    cuerpo -> bgoto
Rule 18    cuerpo -> bcolas
Rule 19    cuerpo -> bpila
Rule 20    cuerpo -> bcortes
Rule 21    cuerpo -> brand
Rule 22    cuerpo -> escribir
Rule 23    cuerpo -> btrim
Rule 24    cuerpo -> otros
Rule 25    cuerpo -> breturn
Rule 26    cuerpo -> comment
Rule 27    cuerpo -> casting
Rule 28    cuerpo -> bconcat
Rule 29    cuerpo -> simbolos
Rule 30    asignacion -> VARIABLE EQUALS valor SEMI
Rule 31    asignacion -> VAR asignacion
Rule 32    asignacion -> proteccion asignacion
Rule 33    asignacion -> VARIABLE EQUALS brand
Rule 34    asignacion -> VARIABLE EQUALS escribir
Rule 35    asignacion -> VARIABLE EQUALS btrim
Rule 36    asignacion -> VARIABLE EQUALS lectura
Rule 37    asignacion -> VARIABLE EQUALS bconcat
Rule 38    asignacion -> asignacion_array
Rule 39    asignacion -> VARIABLE EQUALS operaciones_mat SEMI
Rule 40    asignacion -> aumentoCasting
Rule 41    asignacion_array -> VARIABLE EQUALS array_def SEMI
Rule 42    constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
Rule 43    constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
Rule 44    valor -> tipoDato
Rule 45    valor -> bcolas
Rule 46    valor -> bpila
Rule 47    tipoDato -> numero
Rule 48    tipoDato -> CADENA
Rule 49    tipoDato -> BOOLEANO
Rule 50    numero -> ENTERO
Rule 51    numero -> DECIMAL
Rule 52    imprimir -> ECHO valor SEMI
Rule 53    imprimir -> PRINT valor SEMI
Rule 54    imprimir -> PRINT LPAREN valor RPAREN SEMI
Rule 55    imprimir -> PRINT bconcat
Rule 56    imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
Rule 57    imprimir -> ECHO bconcat
Rule 58    imprimir -> ECHO operaciones_mat SEMI
Rule 59    imprimir -> PRINT operaciones_mat SEMI
Rule 60    condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 61    condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 62    condicion_else -> ELSE LBRACE cuerpo RBRACE
Rule 63    condicion_ifelse -> condicion_if
Rule 64    condicion_ifelse -> condicion_if condicion_else
Rule 65    condicion_ifelse -> condicion_if condicion_elseif
Rule 66    condicion_ifelse -> condicion_if condicion_elseif condicion_else
Rule 67    condicion -> VARIABLE operador_logico VARIABLE
Rule 68    condicion -> valor operador_logico valor
Rule 69    condicion -> VARIABLE operador_logico valor
Rule 70    condicion -> VARIABLE condicion_booleana VARIABLE
Rule 71    condicion -> valor condicion_booleana valor
Rule 72    condicion -> VARIABLE condicion_booleana valor
Rule 73    condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor
Rule 74    condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
Rule 75    condicion -> condicion condicion_booleana condicion
Rule 76    condicion -> condicion condicion_booleana comprobacion
Rule 77    bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
Rule 78    stc_bloque -> stc_bloque SEMI cuerpo
Rule 79    stc_bloque -> breturn
Rule 80    stc_bloque_def -> LBRACE stc_bloque RBRACE
Rule 81    for_incr -> VARIABLE SUMA SUMA
Rule 82    for_incr -> SUMA SUMA VARIABLE
Rule 83    for_incr -> VARIABLE RESTA RESTA
Rule 84    for_incr -> RESTA RESTA VARIABLE
Rule 85    for_incr -> VARIABLE SUMA EQUALS numero
Rule 86    for_incr -> VARIABLE RESTA EQUALS numero
Rule 87    bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
Rule 88    bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
Rule 89    bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque
Rule 90    bdo -> DO LBRACE cuerpo RBRACE bwhile
Rule 91    bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
Rule 92    bcase -> CASE ENTERO COLON
Rule 93    innerSwitch -> bcase cuerpo BREAK SEMI
Rule 94    innerSwitch -> CASE ENTERO COLON cuerpo BREAK SEMI innerSwitch
Rule 95    btry -> TRY LBRACE stc_bloque_def RBRACE catches
Rule 96    catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
Rule 97    catches -> empty
Rule 98    operadores -> SUMA
Rule 99    operadores -> RESTA
Rule 100   operadores -> MULTIPLICACION
Rule 101   operadores -> DIVISION
Rule 102   operadores -> MODULO
Rule 103   operador_logico -> SMALLER
Rule 104   operador_logico -> GREATER
Rule 105   operador_logico -> IS_SMALLER_OR_EQUAL
Rule 106   operador_logico -> IS_GREATER_OR_EQUAL
Rule 107   incrementos_mat -> MINUS_EQUAL
Rule 108   incrementos_mat -> MOD_EQUAL
Rule 109   incrementos_mat -> MUL_EQUAL
Rule 110   incrementos_mat -> PLUS_EQUAL
Rule 111   incrementos_mat -> DIV_EQUAL
Rule 112   condicion_booleana -> AND
Rule 113   condicion_booleana -> OR
Rule 114   condicion_booleana -> XOR
Rule 115   condicion_booleana -> IS_EQUAL
Rule 116   condicion_booleana -> IS_NOT_EQUAL
Rule 117   condicion_booleana -> IS_IDENTICAL
Rule 118   condicion_booleana -> IS_NOT_IDENTICAL
Rule 119   operaciones_mat -> valor operadores valor
Rule 120   operaciones_mat -> valor operadores operaciones_mat
Rule 121   operaciones_mat -> VARIABLE operadores VARIABLE
Rule 122   operaciones_mat -> operaciones_mat_par
Rule 123   operaciones_mat_par -> LPAREN valor operadores valor RPAREN
Rule 124   operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN
Rule 125   operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN
Rule 126   operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor
Rule 127   funciones -> funcion_nparams
Rule 128   funciones -> proteccion funcion_nparams
Rule 129   funciones -> funcion_blank
Rule 130   funciones -> proteccion funcion_blank
Rule 131   funciones -> funcion_void
Rule 132   param -> VARIABLE
Rule 133   param -> asignacion
Rule 134   funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
Rule 135   params_list -> params_list COMMA param
Rule 136   params_list -> param
Rule 137   funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
Rule 138   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
Rule 139   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
Rule 140   llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI
Rule 141   brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
Rule 142   proteccion -> PUBLIC
Rule 143   proteccion -> PRIVATE
Rule 144   proteccion -> PROTECTED
Rule 145   proteccion -> STATIC
Rule 146   breturn -> empty
Rule 147   breturn -> RETURN SEMI
Rule 148   breturn -> RETURN NULL SEMI
Rule 149   breturn -> RETURN VARIABLE SEMI
Rule 150   breturn -> RETURN BOOLEANO SEMI
Rule 151   array_def -> ARRAY LPAREN RPAREN
Rule 152   array_def -> ARRAY LPAREN array_elmnt RPAREN
Rule 153   array_elmnt -> array_elmnt COMMA valor
Rule 154   array_elmnt -> valor
Rule 155   empty -> <empty>
Rule 156   bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
Rule 157   bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
Rule 158   lectura -> READLINE LPAREN CADENA RPAREN SEMI
Rule 159   lectura -> READLINE LPAREN RPAREN SEMI
Rule 160   escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
Rule 161   btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
Rule 162   comment -> COMENTARIOS
Rule 163   comment -> DOC_COMENTARIOS
Rule 164   bgoto -> GOTO NOMBRE SEMI
Rule 165   bcortes -> EXIT SEMI
Rule 166   bcortes -> BREAK SEMI
Rule 167   bcortes -> DEFAULT SEMI
Rule 168   bcortes -> CONTINUE SEMI
Rule 169   otros -> SMALLER NOMBRE GREATER
Rule 170   otros -> NOMBRE COLON
Rule 171   comprobacion -> NOMBRE LPAREN valor RPAREN
Rule 172   comprobacion -> NOMBRE LPAREN VARIABLE RPAREN
Rule 173   simbolos -> LPAREN RPAREN
Rule 174   simbolos -> LPAREN
Rule 175   simbolos -> RPAREN
Rule 176   simbolos -> LBRACKET RBRACKET
Rule 177   simbolos -> LBRACKET
Rule 178   simbolos -> RBRACKET
Rule 179   simbolos -> LBRACE RBRACE
Rule 180   simbolos -> LBRACE
Rule 181   simbolos -> RBRACE instrucciones
Rule 182   simbolos -> OPEN_TAG CLOSE_TAG
Rule 183   simbolos -> OPEN_TAG
Rule 184   simbolos -> CLOSE_TAG
Rule 185   instrucciones -> condicion_else
Rule 186   instrucciones -> condicion_elseif
Rule 187   instrucciones -> bwhile
Rule 188   instrucciones -> bfor
Rule 189   bconcat -> CADENA CONCAT CADENA SEMI
Rule 190   bconcat -> VARIABLE CONCAT VARIABLE SEMI
Rule 191   bconcat -> VARIABLE CONCAT CADENA SEMI
Rule 192   bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI
Rule 193   bconcat -> CADENA CONCAT_EQUAL CADENA SEMI
Rule 194   tiposCast -> STRING
Rule 195   tiposCast -> BOOL
Rule 196   tiposCast -> BOOLEAN
Rule 197   tiposCast -> DOUBLE
Rule 198   tiposCast -> FLOAT
Rule 199   tiposCast -> ARRAY
Rule 200   tiposCast -> OBJECT
Rule 201   tiposCast -> INTEGER
Rule 202   tiposCast -> INT
Rule 203   casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 204   casting -> LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 205   aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI
Rule 206   aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

Terminals, with rules where they appear

AND                  : 112
ARRAY                : 43 151 152 199
AS                   : 87
BOOL                 : 195
BOOLEAN              : 196
BOOLEANO             : 49 150
BREAK                : 93 94 166
CADENA               : 42 48 158 160 189 189 191 192 193 193
CASE                 : 92 94
CATCH                : 96
CLOSE_TAG            : 182 184
COLON                : 89 92 94 137 170
COMENTARIOS          : 162
COMMA                : 42 43 135 141 153 160
CONCAT               : 189 190 191
CONCAT_EQUAL         : 192 193
CONTINUE             : 168
DECIMAL              : 51
DEFAULT              : 167
DEFINE               : 42 43
DIVISION             : 101
DIV_EQUAL            : 111
DO                   : 90
DOC_COMENTARIOS      : 163
DOUBLE               : 197
ECHO                 : 52 56 57 58
ELSE                 : 62
ELSEIF               : 61
ENTERO               : 50 56 92 94 141 141
EQUALS               : 30 33 34 35 36 37 39 41 85 86 156 157 203 206
EXIT                 : 165
FLOAT                : 198
FOR                  : 77
FOREACH              : 87
FUNCTION             : 134 137 138 139
FWRITE               : 160
GOTO                 : 164
GREATER              : 104 169
IF                   : 60
INT                  : 202
INTEGER              : 201
IS_EQUAL             : 115
IS_GREATER_OR_EQUAL  : 106
IS_IDENTICAL         : 117
IS_NOT_EQUAL         : 116
IS_NOT_IDENTICAL     : 118
IS_SMALLER_OR_EQUAL  : 105
LBRACE               : 60 61 62 80 88 90 91 95 137 139 179 180
LBRACKET             : 56 176 177
LPAREN               : 42 43 54 60 61 73 74 77 87 88 89 91 96 123 124 125 126 134 137 138 139 140 141 151 152 156 157 158 159 160 161 161 171 172 173 174 203 204
MINUS_EQUAL          : 107
MODULO               : 102
MOD_EQUAL            : 108
MULTIPLICACION       : 100
MUL_EQUAL            : 109
NEW                  : 156 157
NOMBRE               : 43 56 96 134 137 138 139 140 160 161 161 164 169 170 171 172
NULL                 : 148
OBJECT               : 200
OPEN_TAG             : 182 183
OR                   : 113
PLUS_EQUAL           : 110
PRINT                : 53 54 55 59
PRIVATE              : 143
PROTECTED            : 144
PUBLIC               : 142
RAND                 : 141
RBRACE               : 60 61 62 80 88 90 91 95 137 139 179 181
RBRACKET             : 56 176 178
READLINE             : 158 159
RESTA                : 83 83 84 84 86 99
RETURN               : 147 148 149 150
RPAREN               : 42 43 54 60 61 73 74 77 87 88 89 91 96 123 124 125 126 134 137 138 139 140 141 151 152 156 157 158 159 160 161 161 171 172 173 175 203 204
SEMI                 : 30 39 41 42 43 52 53 54 56 58 59 77 78 91 93 94 140 141 147 148 149 150 156 157 158 159 160 161 164 165 166 167 168 189 190 191 192 193 203 204 205 206
SMALLER              : 103 169
SPLQUEUE             : 156
SPLSTACK             : 157
STATIC               : 145
STRING               : 194
SUMA                 : 81 81 82 82 85 98
SWITCH               : 91
TRIM                 : 161
TRY                  : 95
VAR                  : 31
VARIABLE             : 30 33 34 35 36 37 39 41 67 67 69 70 70 72 73 74 81 82 83 84 85 86 87 87 91 96 121 121 125 125 126 132 149 156 157 172 190 190 191 192 203 203 204 205 206 206
VOID                 : 137
WHILE                : 88 89
XOR                  : 114
error                : 

Nonterminals, with rules where they appear

array_def            : 41
array_elmnt          : 152 153
asignacion           : 2 31 32 77 133
asignacion_array     : 38
aumentoCasting       : 40
bcase                : 16 93
bcolas               : 18 45
bconcat              : 28 37 55 57
bcortes              : 20
bdo                  : 8
bfor                 : 9 188
bforeach             : 10
bgoto                : 17
bpila                : 19 46
brand                : 21 33
breturn              : 25 79
bswitch              : 15
btrim                : 23 35
btry                 : 11
bwhile               : 7 90 187
casting              : 27
catches              : 95 96
comment              : 26
comprobacion         : 76
condicion            : 60 61 75 75 76 77 88 89
condicion_booleana   : 70 71 72 74 75 76
condicion_else       : 13 64 66 185
condicion_elseif     : 14 65 66 186
condicion_if         : 63 64 65 66
condicion_ifelse     : 12
constante            : 5
cuerpo               : 60 61 62 78 90 91 93 94 0
empty                : 97 137 139 146
escribir             : 22 34
for_incr             : 77
funcion_blank        : 129 130
funcion_nparams      : 127 128
funcion_void         : 131
funciones            : 3
imprimir             : 1
incrementos_mat      : 205
innerSwitch          : 94
instrucciones        : 181
lectura              : 6 36
llamada_funcion      : 4
numero               : 47 85 86
operaciones_mat      : 39 58 59 120
operaciones_mat_par  : 122 124
operador_logico      : 67 68 69 73
operadores           : 73 74 119 120 121 123 124 125 126 126 206
otros                : 24
param                : 135 136
params_list          : 134 135 140
proteccion           : 32 128 130
simbolos             : 29
stc_bloque           : 78 80 88 89
stc_bloque_def       : 77 87 95 96 134 138
tipoDato             : 44 205 206
tiposCast            : 203 204
valor                : 30 42 52 53 54 68 68 69 71 71 72 73 73 74 74 119 119 120 123 123 124 126 126 153 154 171

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . bforeach
    (11) cuerpo -> . btry
    (12) cuerpo -> . condicion_ifelse
    (13) cuerpo -> . condicion_else
    (14) cuerpo -> . condicion_elseif
    (15) cuerpo -> . bswitch
    (16) cuerpo -> . bcase
    (17) cuerpo -> . bgoto
    (18) cuerpo -> . bcolas
    (19) cuerpo -> . bpila
    (20) cuerpo -> . bcortes
    (21) cuerpo -> . brand
    (22) cuerpo -> . escribir
    (23) cuerpo -> . btrim
    (24) cuerpo -> . otros
    (25) cuerpo -> . breturn
    (26) cuerpo -> . comment
    (27) cuerpo -> . casting
    (28) cuerpo -> . bconcat
    (29) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (127) funciones -> . funcion_nparams
    (128) funciones -> . proteccion funcion_nparams
    (129) funciones -> . funcion_blank
    (130) funciones -> . proteccion funcion_blank
    (131) funciones -> . funcion_void
    (140) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (158) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (159) lectura -> . READLINE LPAREN RPAREN SEMI
    (88) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (90) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (77) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (87) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (95) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) condicion_ifelse -> . condicion_if
    (64) condicion_ifelse -> . condicion_if condicion_else
    (65) condicion_ifelse -> . condicion_if condicion_elseif
    (66) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (62) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (61) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (91) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (92) bcase -> . CASE ENTERO COLON
    (164) bgoto -> . GOTO NOMBRE SEMI
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (165) bcortes -> . EXIT SEMI
    (166) bcortes -> . BREAK SEMI
    (167) bcortes -> . DEFAULT SEMI
    (168) bcortes -> . CONTINUE SEMI
    (141) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (160) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (161) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (169) otros -> . SMALLER NOMBRE GREATER
    (170) otros -> . NOMBRE COLON
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI
    (162) comment -> . COMENTARIOS
    (163) comment -> . DOC_COMENTARIOS
    (203) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (204) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (173) simbolos -> . LPAREN RPAREN
    (174) simbolos -> . LPAREN
    (175) simbolos -> . RPAREN
    (176) simbolos -> . LBRACKET RBRACKET
    (177) simbolos -> . LBRACKET
    (178) simbolos -> . RBRACKET
    (179) simbolos -> . LBRACE RBRACE
    (180) simbolos -> . LBRACE
    (181) simbolos -> . RBRACE instrucciones
    (182) simbolos -> . OPEN_TAG CLOSE_TAG
    (183) simbolos -> . OPEN_TAG
    (184) simbolos -> . CLOSE_TAG
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (134) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (137) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (60) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (155) empty -> .

    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    VARIABLE        shift and go to state 38
    VAR             shift and go to state 39
    NOMBRE          shift and go to state 35
    DEFINE          shift and go to state 46
    READLINE        shift and go to state 48
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    ELSE            shift and go to state 57
    ELSEIF          shift and go to state 58
    SWITCH          shift and go to state 59
    CASE            shift and go to state 60
    GOTO            shift and go to state 61
    EXIT            shift and go to state 62
    BREAK           shift and go to state 63
    DEFAULT         shift and go to state 64
    CONTINUE        shift and go to state 65
    RAND            shift and go to state 66
    FWRITE          shift and go to state 67
    TRIM            shift and go to state 68
    SMALLER         shift and go to state 69
    RETURN          shift and go to state 71
    COMENTARIOS     shift and go to state 72
    DOC_COMENTARIOS shift and go to state 73
    LPAREN          shift and go to state 33
    CADENA          shift and go to state 47
    RPAREN          shift and go to state 34
    LBRACKET        shift and go to state 36
    RBRACKET        shift and go to state 37
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 74
    CLOSE_TAG       shift and go to state 75
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79
    FUNCTION        shift and go to state 80
    IF              shift and go to state 81
    $end            reduce using rule 155 (empty -> .)

    cuerpo                         shift and go to state 1
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    bforeach                       shift and go to state 11
    btry                           shift and go to state 12
    condicion_ifelse               shift and go to state 13
    condicion_else                 shift and go to state 14
    condicion_elseif               shift and go to state 15
    bswitch                        shift and go to state 16
    bcase                          shift and go to state 17
    bgoto                          shift and go to state 18
    bcolas                         shift and go to state 19
    bpila                          shift and go to state 20
    bcortes                        shift and go to state 21
    brand                          shift and go to state 22
    escribir                       shift and go to state 23
    btrim                          shift and go to state 24
    otros                          shift and go to state 25
    breturn                        shift and go to state 26
    comment                        shift and go to state 27
    casting                        shift and go to state 28
    bconcat                        shift and go to state 29
    simbolos                       shift and go to state 30
    proteccion                     shift and go to state 40
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42
    funcion_nparams                shift and go to state 43
    funcion_blank                  shift and go to state 44
    funcion_void                   shift and go to state 45
    condicion_if                   shift and go to state 56
    empty                          shift and go to state 70

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> imprimir .

    $end            reduce using rule 1 (cuerpo -> imprimir .)
    RBRACE          reduce using rule 1 (cuerpo -> imprimir .)
    SEMI            reduce using rule 1 (cuerpo -> imprimir .)


state 3

    (2) cuerpo -> asignacion .

    $end            reduce using rule 2 (cuerpo -> asignacion .)
    RBRACE          reduce using rule 2 (cuerpo -> asignacion .)
    SEMI            reduce using rule 2 (cuerpo -> asignacion .)


state 4

    (3) cuerpo -> funciones .

    $end            reduce using rule 3 (cuerpo -> funciones .)
    RBRACE          reduce using rule 3 (cuerpo -> funciones .)
    SEMI            reduce using rule 3 (cuerpo -> funciones .)


state 5

    (4) cuerpo -> llamada_funcion .

    $end            reduce using rule 4 (cuerpo -> llamada_funcion .)
    RBRACE          reduce using rule 4 (cuerpo -> llamada_funcion .)
    SEMI            reduce using rule 4 (cuerpo -> llamada_funcion .)


state 6

    (5) cuerpo -> constante .

    $end            reduce using rule 5 (cuerpo -> constante .)
    RBRACE          reduce using rule 5 (cuerpo -> constante .)
    SEMI            reduce using rule 5 (cuerpo -> constante .)


state 7

    (6) cuerpo -> lectura .

    $end            reduce using rule 6 (cuerpo -> lectura .)
    RBRACE          reduce using rule 6 (cuerpo -> lectura .)
    SEMI            reduce using rule 6 (cuerpo -> lectura .)


state 8

    (7) cuerpo -> bwhile .

    $end            reduce using rule 7 (cuerpo -> bwhile .)
    RBRACE          reduce using rule 7 (cuerpo -> bwhile .)
    SEMI            reduce using rule 7 (cuerpo -> bwhile .)


state 9

    (8) cuerpo -> bdo .

    $end            reduce using rule 8 (cuerpo -> bdo .)
    RBRACE          reduce using rule 8 (cuerpo -> bdo .)
    SEMI            reduce using rule 8 (cuerpo -> bdo .)


state 10

    (9) cuerpo -> bfor .

    $end            reduce using rule 9 (cuerpo -> bfor .)
    RBRACE          reduce using rule 9 (cuerpo -> bfor .)
    SEMI            reduce using rule 9 (cuerpo -> bfor .)


state 11

    (10) cuerpo -> bforeach .

    $end            reduce using rule 10 (cuerpo -> bforeach .)
    RBRACE          reduce using rule 10 (cuerpo -> bforeach .)
    SEMI            reduce using rule 10 (cuerpo -> bforeach .)


state 12

    (11) cuerpo -> btry .

    $end            reduce using rule 11 (cuerpo -> btry .)
    RBRACE          reduce using rule 11 (cuerpo -> btry .)
    SEMI            reduce using rule 11 (cuerpo -> btry .)


state 13

    (12) cuerpo -> condicion_ifelse .

    $end            reduce using rule 12 (cuerpo -> condicion_ifelse .)
    RBRACE          reduce using rule 12 (cuerpo -> condicion_ifelse .)
    SEMI            reduce using rule 12 (cuerpo -> condicion_ifelse .)


state 14

    (13) cuerpo -> condicion_else .

    $end            reduce using rule 13 (cuerpo -> condicion_else .)
    RBRACE          reduce using rule 13 (cuerpo -> condicion_else .)
    SEMI            reduce using rule 13 (cuerpo -> condicion_else .)


state 15

    (14) cuerpo -> condicion_elseif .

    $end            reduce using rule 14 (cuerpo -> condicion_elseif .)
    RBRACE          reduce using rule 14 (cuerpo -> condicion_elseif .)
    SEMI            reduce using rule 14 (cuerpo -> condicion_elseif .)


state 16

    (15) cuerpo -> bswitch .

    $end            reduce using rule 15 (cuerpo -> bswitch .)
    RBRACE          reduce using rule 15 (cuerpo -> bswitch .)
    SEMI            reduce using rule 15 (cuerpo -> bswitch .)


state 17

    (16) cuerpo -> bcase .

    $end            reduce using rule 16 (cuerpo -> bcase .)
    RBRACE          reduce using rule 16 (cuerpo -> bcase .)
    SEMI            reduce using rule 16 (cuerpo -> bcase .)


state 18

    (17) cuerpo -> bgoto .

    $end            reduce using rule 17 (cuerpo -> bgoto .)
    RBRACE          reduce using rule 17 (cuerpo -> bgoto .)
    SEMI            reduce using rule 17 (cuerpo -> bgoto .)


state 19

    (18) cuerpo -> bcolas .

    $end            reduce using rule 18 (cuerpo -> bcolas .)
    RBRACE          reduce using rule 18 (cuerpo -> bcolas .)
    SEMI            reduce using rule 18 (cuerpo -> bcolas .)


state 20

    (19) cuerpo -> bpila .

    $end            reduce using rule 19 (cuerpo -> bpila .)
    RBRACE          reduce using rule 19 (cuerpo -> bpila .)
    SEMI            reduce using rule 19 (cuerpo -> bpila .)


state 21

    (20) cuerpo -> bcortes .

    $end            reduce using rule 20 (cuerpo -> bcortes .)
    RBRACE          reduce using rule 20 (cuerpo -> bcortes .)
    SEMI            reduce using rule 20 (cuerpo -> bcortes .)


state 22

    (21) cuerpo -> brand .

    $end            reduce using rule 21 (cuerpo -> brand .)
    RBRACE          reduce using rule 21 (cuerpo -> brand .)
    SEMI            reduce using rule 21 (cuerpo -> brand .)


state 23

    (22) cuerpo -> escribir .

    $end            reduce using rule 22 (cuerpo -> escribir .)
    RBRACE          reduce using rule 22 (cuerpo -> escribir .)
    SEMI            reduce using rule 22 (cuerpo -> escribir .)


state 24

    (23) cuerpo -> btrim .

    $end            reduce using rule 23 (cuerpo -> btrim .)
    RBRACE          reduce using rule 23 (cuerpo -> btrim .)
    SEMI            reduce using rule 23 (cuerpo -> btrim .)


state 25

    (24) cuerpo -> otros .

    $end            reduce using rule 24 (cuerpo -> otros .)
    RBRACE          reduce using rule 24 (cuerpo -> otros .)
    SEMI            reduce using rule 24 (cuerpo -> otros .)


state 26

    (25) cuerpo -> breturn .

    $end            reduce using rule 25 (cuerpo -> breturn .)
    RBRACE          reduce using rule 25 (cuerpo -> breturn .)
    SEMI            reduce using rule 25 (cuerpo -> breturn .)


state 27

    (26) cuerpo -> comment .

    $end            reduce using rule 26 (cuerpo -> comment .)
    RBRACE          reduce using rule 26 (cuerpo -> comment .)
    SEMI            reduce using rule 26 (cuerpo -> comment .)


state 28

    (27) cuerpo -> casting .

    $end            reduce using rule 27 (cuerpo -> casting .)
    RBRACE          reduce using rule 27 (cuerpo -> casting .)
    SEMI            reduce using rule 27 (cuerpo -> casting .)


state 29

    (28) cuerpo -> bconcat .

    $end            reduce using rule 28 (cuerpo -> bconcat .)
    RBRACE          reduce using rule 28 (cuerpo -> bconcat .)
    SEMI            reduce using rule 28 (cuerpo -> bconcat .)


state 30

    (29) cuerpo -> simbolos .

    $end            reduce using rule 29 (cuerpo -> simbolos .)
    RBRACE          reduce using rule 29 (cuerpo -> simbolos .)
    SEMI            reduce using rule 29 (cuerpo -> simbolos .)


state 31

    (52) imprimir -> ECHO . valor SEMI
    (56) imprimir -> ECHO . NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> ECHO . bconcat
    (58) imprimir -> ECHO . operaciones_mat SEMI
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (119) operaciones_mat -> . valor operadores valor
    (120) operaciones_mat -> . valor operadores operaciones_mat
    (121) operaciones_mat -> . VARIABLE operadores VARIABLE
    (122) operaciones_mat -> . operaciones_mat_par
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (123) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (124) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (125) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (126) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    NOMBRE          shift and go to state 83
    CADENA          shift and go to state 90
    VARIABLE        shift and go to state 91
    BOOLEANO        shift and go to state 94
    LPAREN          shift and go to state 95
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 82
    bconcat                        shift and go to state 85
    operaciones_mat                shift and go to state 86
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    operaciones_mat_par            shift and go to state 92
    numero                         shift and go to state 93

state 32

    (53) imprimir -> PRINT . valor SEMI
    (54) imprimir -> PRINT . LPAREN valor RPAREN SEMI
    (55) imprimir -> PRINT . bconcat
    (59) imprimir -> PRINT . operaciones_mat SEMI
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (119) operaciones_mat -> . valor operadores valor
    (120) operaciones_mat -> . valor operadores operaciones_mat
    (121) operaciones_mat -> . VARIABLE operadores VARIABLE
    (122) operaciones_mat -> . operaciones_mat_par
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (123) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (124) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (125) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (126) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    LPAREN          shift and go to state 98
    CADENA          shift and go to state 90
    VARIABLE        shift and go to state 91
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 97
    bconcat                        shift and go to state 99
    operaciones_mat                shift and go to state 100
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    operaciones_mat_par            shift and go to state 92
    numero                         shift and go to state 93

state 33

    (204) casting -> LPAREN . tiposCast RPAREN VARIABLE SEMI
    (173) simbolos -> LPAREN . RPAREN
    (174) simbolos -> LPAREN .
    (194) tiposCast -> . STRING
    (195) tiposCast -> . BOOL
    (196) tiposCast -> . BOOLEAN
    (197) tiposCast -> . DOUBLE
    (198) tiposCast -> . FLOAT
    (199) tiposCast -> . ARRAY
    (200) tiposCast -> . OBJECT
    (201) tiposCast -> . INTEGER
    (202) tiposCast -> . INT

    RPAREN          shift and go to state 102
    $end            reduce using rule 174 (simbolos -> LPAREN .)
    RBRACE          reduce using rule 174 (simbolos -> LPAREN .)
    SEMI            reduce using rule 174 (simbolos -> LPAREN .)
    STRING          shift and go to state 103
    BOOL            shift and go to state 104
    BOOLEAN         shift and go to state 105
    DOUBLE          shift and go to state 106
    FLOAT           shift and go to state 107
    ARRAY           shift and go to state 108
    OBJECT          shift and go to state 109
    INTEGER         shift and go to state 110
    INT             shift and go to state 111

    tiposCast                      shift and go to state 101

state 34

    (175) simbolos -> RPAREN .

    $end            reduce using rule 175 (simbolos -> RPAREN .)
    RBRACE          reduce using rule 175 (simbolos -> RPAREN .)
    SEMI            reduce using rule 175 (simbolos -> RPAREN .)


state 35

    (140) llamada_funcion -> NOMBRE . LPAREN params_list RPAREN SEMI
    (170) otros -> NOMBRE . COLON

    LPAREN          shift and go to state 112
    COLON           shift and go to state 113


state 36

    (176) simbolos -> LBRACKET . RBRACKET
    (177) simbolos -> LBRACKET .

    RBRACKET        shift and go to state 114
    $end            reduce using rule 177 (simbolos -> LBRACKET .)
    RBRACE          reduce using rule 177 (simbolos -> LBRACKET .)
    SEMI            reduce using rule 177 (simbolos -> LBRACKET .)


state 37

    (178) simbolos -> RBRACKET .

    $end            reduce using rule 178 (simbolos -> RBRACKET .)
    RBRACE          reduce using rule 178 (simbolos -> RBRACKET .)
    SEMI            reduce using rule 178 (simbolos -> RBRACKET .)


state 38

    (30) asignacion -> VARIABLE . EQUALS valor SEMI
    (33) asignacion -> VARIABLE . EQUALS brand
    (34) asignacion -> VARIABLE . EQUALS escribir
    (35) asignacion -> VARIABLE . EQUALS btrim
    (36) asignacion -> VARIABLE . EQUALS lectura
    (37) asignacion -> VARIABLE . EQUALS bconcat
    (39) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (203) casting -> VARIABLE . EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (190) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (191) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (192) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (41) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (205) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (107) incrementos_mat -> . MINUS_EQUAL
    (108) incrementos_mat -> . MOD_EQUAL
    (109) incrementos_mat -> . MUL_EQUAL
    (110) incrementos_mat -> . PLUS_EQUAL
    (111) incrementos_mat -> . DIV_EQUAL

    EQUALS          shift and go to state 115
    CONCAT          shift and go to state 116
    CONCAT_EQUAL    shift and go to state 117
    MINUS_EQUAL     shift and go to state 119
    MOD_EQUAL       shift and go to state 120
    MUL_EQUAL       shift and go to state 121
    PLUS_EQUAL      shift and go to state 122
    DIV_EQUAL       shift and go to state 123

    incrementos_mat                shift and go to state 118

state 39

    (31) asignacion -> VAR . asignacion
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 125
    VAR             shift and go to state 39
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79

    asignacion                     shift and go to state 124
    proteccion                     shift and go to state 126
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42

state 40

    (32) asignacion -> proteccion . asignacion
    (128) funciones -> proteccion . funcion_nparams
    (130) funciones -> proteccion . funcion_blank
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (134) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 125
    VAR             shift and go to state 39
    FUNCTION        shift and go to state 130
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79

    proteccion                     shift and go to state 126
    asignacion                     shift and go to state 127
    funcion_nparams                shift and go to state 128
    funcion_blank                  shift and go to state 129
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42

state 41

    (38) asignacion -> asignacion_array .

    $end            reduce using rule 38 (asignacion -> asignacion_array .)
    RBRACE          reduce using rule 38 (asignacion -> asignacion_array .)
    SEMI            reduce using rule 38 (asignacion -> asignacion_array .)
    RPAREN          reduce using rule 38 (asignacion -> asignacion_array .)
    COMMA           reduce using rule 38 (asignacion -> asignacion_array .)
    VARIABLE        reduce using rule 38 (asignacion -> asignacion_array .)
    LPAREN          reduce using rule 38 (asignacion -> asignacion_array .)
    CADENA          reduce using rule 38 (asignacion -> asignacion_array .)
    BOOLEANO        reduce using rule 38 (asignacion -> asignacion_array .)
    ENTERO          reduce using rule 38 (asignacion -> asignacion_array .)
    DECIMAL         reduce using rule 38 (asignacion -> asignacion_array .)


state 42

    (40) asignacion -> aumentoCasting .

    $end            reduce using rule 40 (asignacion -> aumentoCasting .)
    RBRACE          reduce using rule 40 (asignacion -> aumentoCasting .)
    SEMI            reduce using rule 40 (asignacion -> aumentoCasting .)
    RPAREN          reduce using rule 40 (asignacion -> aumentoCasting .)
    COMMA           reduce using rule 40 (asignacion -> aumentoCasting .)
    VARIABLE        reduce using rule 40 (asignacion -> aumentoCasting .)
    LPAREN          reduce using rule 40 (asignacion -> aumentoCasting .)
    CADENA          reduce using rule 40 (asignacion -> aumentoCasting .)
    BOOLEANO        reduce using rule 40 (asignacion -> aumentoCasting .)
    ENTERO          reduce using rule 40 (asignacion -> aumentoCasting .)
    DECIMAL         reduce using rule 40 (asignacion -> aumentoCasting .)


state 43

    (127) funciones -> funcion_nparams .

    $end            reduce using rule 127 (funciones -> funcion_nparams .)
    RBRACE          reduce using rule 127 (funciones -> funcion_nparams .)
    SEMI            reduce using rule 127 (funciones -> funcion_nparams .)


state 44

    (129) funciones -> funcion_blank .

    $end            reduce using rule 129 (funciones -> funcion_blank .)
    RBRACE          reduce using rule 129 (funciones -> funcion_blank .)
    SEMI            reduce using rule 129 (funciones -> funcion_blank .)


state 45

    (131) funciones -> funcion_void .

    $end            reduce using rule 131 (funciones -> funcion_void .)
    RBRACE          reduce using rule 131 (funciones -> funcion_void .)
    SEMI            reduce using rule 131 (funciones -> funcion_void .)


state 46

    (42) constante -> DEFINE . LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> DEFINE . LPAREN NOMBRE COMMA ARRAY RPAREN SEMI

    LPAREN          shift and go to state 131


state 47

    (189) bconcat -> CADENA . CONCAT CADENA SEMI
    (193) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI

    CONCAT          shift and go to state 132
    CONCAT_EQUAL    shift and go to state 133


state 48

    (158) lectura -> READLINE . LPAREN CADENA RPAREN SEMI
    (159) lectura -> READLINE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 134


state 49

    (88) bwhile -> WHILE . LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> WHILE . LPAREN condicion RPAREN COLON stc_bloque

    LPAREN          shift and go to state 135


state 50

    (179) simbolos -> LBRACE . RBRACE
    (180) simbolos -> LBRACE .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 136
    $end            reduce using rule 180 (simbolos -> LBRACE .)
    SEMI            reduce using rule 180 (simbolos -> LBRACE .)

  ! RBRACE          [ reduce using rule 180 (simbolos -> LBRACE .) ]


state 51

    (181) simbolos -> RBRACE . instrucciones
    (185) instrucciones -> . condicion_else
    (186) instrucciones -> . condicion_elseif
    (187) instrucciones -> . bwhile
    (188) instrucciones -> . bfor
    (62) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (61) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (88) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (77) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def

    ELSE            shift and go to state 57
    ELSEIF          shift and go to state 58
    WHILE           shift and go to state 49
    FOR             shift and go to state 53

    instrucciones                  shift and go to state 137
    condicion_else                 shift and go to state 138
    condicion_elseif               shift and go to state 139
    bwhile                         shift and go to state 140
    bfor                           shift and go to state 141

state 52

    (90) bdo -> DO . LBRACE cuerpo RBRACE bwhile

    LBRACE          shift and go to state 142


state 53

    (77) bfor -> FOR . LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def

    LPAREN          shift and go to state 143


state 54

    (87) bforeach -> FOREACH . LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 144


state 55

    (95) btry -> TRY . LBRACE stc_bloque_def RBRACE catches

    LBRACE          shift and go to state 145


state 56

    (63) condicion_ifelse -> condicion_if .
    (64) condicion_ifelse -> condicion_if . condicion_else
    (65) condicion_ifelse -> condicion_if . condicion_elseif
    (66) condicion_ifelse -> condicion_if . condicion_elseif condicion_else
    (62) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (61) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    $end            reduce using rule 63 (condicion_ifelse -> condicion_if .)
    RBRACE          reduce using rule 63 (condicion_ifelse -> condicion_if .)
    SEMI            reduce using rule 63 (condicion_ifelse -> condicion_if .)
    ELSE            shift and go to state 57
    ELSEIF          shift and go to state 58

    condicion_else                 shift and go to state 146
    condicion_elseif               shift and go to state 147

state 57

    (62) condicion_else -> ELSE . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 148


state 58

    (61) condicion_elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 149


state 59

    (91) bswitch -> SWITCH . LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE

    LPAREN          shift and go to state 150


state 60

    (92) bcase -> CASE . ENTERO COLON

    ENTERO          shift and go to state 151


state 61

    (164) bgoto -> GOTO . NOMBRE SEMI

    NOMBRE          shift and go to state 152


state 62

    (165) bcortes -> EXIT . SEMI

    SEMI            shift and go to state 153


state 63

    (166) bcortes -> BREAK . SEMI

    SEMI            shift and go to state 154


state 64

    (167) bcortes -> DEFAULT . SEMI

    SEMI            shift and go to state 155


state 65

    (168) bcortes -> CONTINUE . SEMI

    SEMI            shift and go to state 156


state 66

    (141) brand -> RAND . LPAREN ENTERO COMMA ENTERO RPAREN SEMI

    LPAREN          shift and go to state 157


state 67

    (160) escribir -> FWRITE . LPAREN NOMBRE COMMA CADENA RPAREN SEMI

    LPAREN          shift and go to state 158


state 68

    (161) btrim -> TRIM . LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 159


state 69

    (169) otros -> SMALLER . NOMBRE GREATER

    NOMBRE          shift and go to state 160


state 70

    (146) breturn -> empty .

    $end            reduce using rule 146 (breturn -> empty .)
    RBRACE          reduce using rule 146 (breturn -> empty .)
    SEMI            reduce using rule 146 (breturn -> empty .)


state 71

    (147) breturn -> RETURN . SEMI
    (148) breturn -> RETURN . NULL SEMI
    (149) breturn -> RETURN . VARIABLE SEMI
    (150) breturn -> RETURN . BOOLEANO SEMI

    SEMI            shift and go to state 161
    NULL            shift and go to state 162
    VARIABLE        shift and go to state 163
    BOOLEANO        shift and go to state 164


state 72

    (162) comment -> COMENTARIOS .

    $end            reduce using rule 162 (comment -> COMENTARIOS .)
    RBRACE          reduce using rule 162 (comment -> COMENTARIOS .)
    SEMI            reduce using rule 162 (comment -> COMENTARIOS .)


state 73

    (163) comment -> DOC_COMENTARIOS .

    $end            reduce using rule 163 (comment -> DOC_COMENTARIOS .)
    RBRACE          reduce using rule 163 (comment -> DOC_COMENTARIOS .)
    SEMI            reduce using rule 163 (comment -> DOC_COMENTARIOS .)


state 74

    (182) simbolos -> OPEN_TAG . CLOSE_TAG
    (183) simbolos -> OPEN_TAG .

    CLOSE_TAG       shift and go to state 165
    $end            reduce using rule 183 (simbolos -> OPEN_TAG .)
    RBRACE          reduce using rule 183 (simbolos -> OPEN_TAG .)
    SEMI            reduce using rule 183 (simbolos -> OPEN_TAG .)


state 75

    (184) simbolos -> CLOSE_TAG .

    $end            reduce using rule 184 (simbolos -> CLOSE_TAG .)
    RBRACE          reduce using rule 184 (simbolos -> CLOSE_TAG .)
    SEMI            reduce using rule 184 (simbolos -> CLOSE_TAG .)


state 76

    (142) proteccion -> PUBLIC .

    VARIABLE        reduce using rule 142 (proteccion -> PUBLIC .)
    VAR             reduce using rule 142 (proteccion -> PUBLIC .)
    FUNCTION        reduce using rule 142 (proteccion -> PUBLIC .)
    PUBLIC          reduce using rule 142 (proteccion -> PUBLIC .)
    PRIVATE         reduce using rule 142 (proteccion -> PUBLIC .)
    PROTECTED       reduce using rule 142 (proteccion -> PUBLIC .)
    STATIC          reduce using rule 142 (proteccion -> PUBLIC .)


state 77

    (143) proteccion -> PRIVATE .

    VARIABLE        reduce using rule 143 (proteccion -> PRIVATE .)
    VAR             reduce using rule 143 (proteccion -> PRIVATE .)
    FUNCTION        reduce using rule 143 (proteccion -> PRIVATE .)
    PUBLIC          reduce using rule 143 (proteccion -> PRIVATE .)
    PRIVATE         reduce using rule 143 (proteccion -> PRIVATE .)
    PROTECTED       reduce using rule 143 (proteccion -> PRIVATE .)
    STATIC          reduce using rule 143 (proteccion -> PRIVATE .)


state 78

    (144) proteccion -> PROTECTED .

    VARIABLE        reduce using rule 144 (proteccion -> PROTECTED .)
    VAR             reduce using rule 144 (proteccion -> PROTECTED .)
    FUNCTION        reduce using rule 144 (proteccion -> PROTECTED .)
    PUBLIC          reduce using rule 144 (proteccion -> PROTECTED .)
    PRIVATE         reduce using rule 144 (proteccion -> PROTECTED .)
    PROTECTED       reduce using rule 144 (proteccion -> PROTECTED .)
    STATIC          reduce using rule 144 (proteccion -> PROTECTED .)


state 79

    (145) proteccion -> STATIC .

    VARIABLE        reduce using rule 145 (proteccion -> STATIC .)
    VAR             reduce using rule 145 (proteccion -> STATIC .)
    FUNCTION        reduce using rule 145 (proteccion -> STATIC .)
    PUBLIC          reduce using rule 145 (proteccion -> STATIC .)
    PRIVATE         reduce using rule 145 (proteccion -> STATIC .)
    PROTECTED       reduce using rule 145 (proteccion -> STATIC .)
    STATIC          reduce using rule 145 (proteccion -> STATIC .)


state 80

    (134) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (137) funcion_void -> FUNCTION . NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    NOMBRE          shift and go to state 166


state 81

    (60) condicion_if -> IF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 167


state 82

    (52) imprimir -> ECHO valor . SEMI
    (119) operaciones_mat -> valor . operadores valor
    (120) operaciones_mat -> valor . operadores operaciones_mat
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    SEMI            shift and go to state 168
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 169

state 83

    (56) imprimir -> ECHO NOMBRE . LBRACKET ENTERO RBRACKET SEMI

    LBRACKET        shift and go to state 175


state 84

    (50) numero -> ENTERO .

    SEMI            reduce using rule 50 (numero -> ENTERO .)
    SUMA            reduce using rule 50 (numero -> ENTERO .)
    RESTA           reduce using rule 50 (numero -> ENTERO .)
    MULTIPLICACION  reduce using rule 50 (numero -> ENTERO .)
    DIVISION        reduce using rule 50 (numero -> ENTERO .)
    MODULO          reduce using rule 50 (numero -> ENTERO .)
    RPAREN          reduce using rule 50 (numero -> ENTERO .)
    SMALLER         reduce using rule 50 (numero -> ENTERO .)
    GREATER         reduce using rule 50 (numero -> ENTERO .)
    IS_SMALLER_OR_EQUAL reduce using rule 50 (numero -> ENTERO .)
    IS_GREATER_OR_EQUAL reduce using rule 50 (numero -> ENTERO .)
    AND             reduce using rule 50 (numero -> ENTERO .)
    OR              reduce using rule 50 (numero -> ENTERO .)
    XOR             reduce using rule 50 (numero -> ENTERO .)
    IS_EQUAL        reduce using rule 50 (numero -> ENTERO .)
    IS_NOT_EQUAL    reduce using rule 50 (numero -> ENTERO .)
    IS_IDENTICAL    reduce using rule 50 (numero -> ENTERO .)
    IS_NOT_IDENTICAL reduce using rule 50 (numero -> ENTERO .)
    COMMA           reduce using rule 50 (numero -> ENTERO .)


state 85

    (57) imprimir -> ECHO bconcat .

    $end            reduce using rule 57 (imprimir -> ECHO bconcat .)
    RBRACE          reduce using rule 57 (imprimir -> ECHO bconcat .)
    SEMI            reduce using rule 57 (imprimir -> ECHO bconcat .)


state 86

    (58) imprimir -> ECHO operaciones_mat . SEMI

    SEMI            shift and go to state 176


state 87

    (44) valor -> tipoDato .

    SEMI            reduce using rule 44 (valor -> tipoDato .)
    SUMA            reduce using rule 44 (valor -> tipoDato .)
    RESTA           reduce using rule 44 (valor -> tipoDato .)
    MULTIPLICACION  reduce using rule 44 (valor -> tipoDato .)
    DIVISION        reduce using rule 44 (valor -> tipoDato .)
    MODULO          reduce using rule 44 (valor -> tipoDato .)
    RPAREN          reduce using rule 44 (valor -> tipoDato .)
    SMALLER         reduce using rule 44 (valor -> tipoDato .)
    GREATER         reduce using rule 44 (valor -> tipoDato .)
    IS_SMALLER_OR_EQUAL reduce using rule 44 (valor -> tipoDato .)
    IS_GREATER_OR_EQUAL reduce using rule 44 (valor -> tipoDato .)
    AND             reduce using rule 44 (valor -> tipoDato .)
    OR              reduce using rule 44 (valor -> tipoDato .)
    XOR             reduce using rule 44 (valor -> tipoDato .)
    IS_EQUAL        reduce using rule 44 (valor -> tipoDato .)
    IS_NOT_EQUAL    reduce using rule 44 (valor -> tipoDato .)
    IS_IDENTICAL    reduce using rule 44 (valor -> tipoDato .)
    IS_NOT_IDENTICAL reduce using rule 44 (valor -> tipoDato .)
    COMMA           reduce using rule 44 (valor -> tipoDato .)


state 88

    (45) valor -> bcolas .

    SEMI            reduce using rule 45 (valor -> bcolas .)
    SUMA            reduce using rule 45 (valor -> bcolas .)
    RESTA           reduce using rule 45 (valor -> bcolas .)
    MULTIPLICACION  reduce using rule 45 (valor -> bcolas .)
    DIVISION        reduce using rule 45 (valor -> bcolas .)
    MODULO          reduce using rule 45 (valor -> bcolas .)
    RPAREN          reduce using rule 45 (valor -> bcolas .)
    SMALLER         reduce using rule 45 (valor -> bcolas .)
    GREATER         reduce using rule 45 (valor -> bcolas .)
    IS_SMALLER_OR_EQUAL reduce using rule 45 (valor -> bcolas .)
    IS_GREATER_OR_EQUAL reduce using rule 45 (valor -> bcolas .)
    AND             reduce using rule 45 (valor -> bcolas .)
    OR              reduce using rule 45 (valor -> bcolas .)
    XOR             reduce using rule 45 (valor -> bcolas .)
    IS_EQUAL        reduce using rule 45 (valor -> bcolas .)
    IS_NOT_EQUAL    reduce using rule 45 (valor -> bcolas .)
    IS_IDENTICAL    reduce using rule 45 (valor -> bcolas .)
    IS_NOT_IDENTICAL reduce using rule 45 (valor -> bcolas .)
    COMMA           reduce using rule 45 (valor -> bcolas .)


state 89

    (46) valor -> bpila .

    SEMI            reduce using rule 46 (valor -> bpila .)
    SUMA            reduce using rule 46 (valor -> bpila .)
    RESTA           reduce using rule 46 (valor -> bpila .)
    MULTIPLICACION  reduce using rule 46 (valor -> bpila .)
    DIVISION        reduce using rule 46 (valor -> bpila .)
    MODULO          reduce using rule 46 (valor -> bpila .)
    RPAREN          reduce using rule 46 (valor -> bpila .)
    SMALLER         reduce using rule 46 (valor -> bpila .)
    GREATER         reduce using rule 46 (valor -> bpila .)
    IS_SMALLER_OR_EQUAL reduce using rule 46 (valor -> bpila .)
    IS_GREATER_OR_EQUAL reduce using rule 46 (valor -> bpila .)
    AND             reduce using rule 46 (valor -> bpila .)
    OR              reduce using rule 46 (valor -> bpila .)
    XOR             reduce using rule 46 (valor -> bpila .)
    IS_EQUAL        reduce using rule 46 (valor -> bpila .)
    IS_NOT_EQUAL    reduce using rule 46 (valor -> bpila .)
    IS_IDENTICAL    reduce using rule 46 (valor -> bpila .)
    IS_NOT_IDENTICAL reduce using rule 46 (valor -> bpila .)
    COMMA           reduce using rule 46 (valor -> bpila .)


state 90

    (189) bconcat -> CADENA . CONCAT CADENA SEMI
    (193) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI
    (48) tipoDato -> CADENA .

    CONCAT          shift and go to state 132
    CONCAT_EQUAL    shift and go to state 133
    SEMI            reduce using rule 48 (tipoDato -> CADENA .)
    SUMA            reduce using rule 48 (tipoDato -> CADENA .)
    RESTA           reduce using rule 48 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 48 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 48 (tipoDato -> CADENA .)
    MODULO          reduce using rule 48 (tipoDato -> CADENA .)


state 91

    (190) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (191) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (192) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (121) operaciones_mat -> VARIABLE . operadores VARIABLE
    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    CONCAT          shift and go to state 116
    CONCAT_EQUAL    shift and go to state 117
    EQUALS          shift and go to state 178
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 177

state 92

    (122) operaciones_mat -> operaciones_mat_par .

    SEMI            reduce using rule 122 (operaciones_mat -> operaciones_mat_par .)


state 93

    (47) tipoDato -> numero .

    SEMI            reduce using rule 47 (tipoDato -> numero .)
    SUMA            reduce using rule 47 (tipoDato -> numero .)
    RESTA           reduce using rule 47 (tipoDato -> numero .)
    MULTIPLICACION  reduce using rule 47 (tipoDato -> numero .)
    DIVISION        reduce using rule 47 (tipoDato -> numero .)
    MODULO          reduce using rule 47 (tipoDato -> numero .)
    RPAREN          reduce using rule 47 (tipoDato -> numero .)
    SMALLER         reduce using rule 47 (tipoDato -> numero .)
    GREATER         reduce using rule 47 (tipoDato -> numero .)
    IS_SMALLER_OR_EQUAL reduce using rule 47 (tipoDato -> numero .)
    IS_GREATER_OR_EQUAL reduce using rule 47 (tipoDato -> numero .)
    AND             reduce using rule 47 (tipoDato -> numero .)
    OR              reduce using rule 47 (tipoDato -> numero .)
    XOR             reduce using rule 47 (tipoDato -> numero .)
    IS_EQUAL        reduce using rule 47 (tipoDato -> numero .)
    IS_NOT_EQUAL    reduce using rule 47 (tipoDato -> numero .)
    IS_IDENTICAL    reduce using rule 47 (tipoDato -> numero .)
    IS_NOT_IDENTICAL reduce using rule 47 (tipoDato -> numero .)
    COMMA           reduce using rule 47 (tipoDato -> numero .)


state 94

    (49) tipoDato -> BOOLEANO .

    SEMI            reduce using rule 49 (tipoDato -> BOOLEANO .)
    SUMA            reduce using rule 49 (tipoDato -> BOOLEANO .)
    RESTA           reduce using rule 49 (tipoDato -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 49 (tipoDato -> BOOLEANO .)
    DIVISION        reduce using rule 49 (tipoDato -> BOOLEANO .)
    MODULO          reduce using rule 49 (tipoDato -> BOOLEANO .)
    RPAREN          reduce using rule 49 (tipoDato -> BOOLEANO .)
    SMALLER         reduce using rule 49 (tipoDato -> BOOLEANO .)
    GREATER         reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_SMALLER_OR_EQUAL reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_GREATER_OR_EQUAL reduce using rule 49 (tipoDato -> BOOLEANO .)
    AND             reduce using rule 49 (tipoDato -> BOOLEANO .)
    OR              reduce using rule 49 (tipoDato -> BOOLEANO .)
    XOR             reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_EQUAL        reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_NOT_EQUAL    reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_IDENTICAL    reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_NOT_IDENTICAL reduce using rule 49 (tipoDato -> BOOLEANO .)
    COMMA           reduce using rule 49 (tipoDato -> BOOLEANO .)


state 95

    (123) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (124) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (125) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (126) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 180
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 179
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 96

    (51) numero -> DECIMAL .

    SEMI            reduce using rule 51 (numero -> DECIMAL .)
    SUMA            reduce using rule 51 (numero -> DECIMAL .)
    RESTA           reduce using rule 51 (numero -> DECIMAL .)
    MULTIPLICACION  reduce using rule 51 (numero -> DECIMAL .)
    DIVISION        reduce using rule 51 (numero -> DECIMAL .)
    MODULO          reduce using rule 51 (numero -> DECIMAL .)
    RPAREN          reduce using rule 51 (numero -> DECIMAL .)
    SMALLER         reduce using rule 51 (numero -> DECIMAL .)
    GREATER         reduce using rule 51 (numero -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 51 (numero -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 51 (numero -> DECIMAL .)
    AND             reduce using rule 51 (numero -> DECIMAL .)
    OR              reduce using rule 51 (numero -> DECIMAL .)
    XOR             reduce using rule 51 (numero -> DECIMAL .)
    IS_EQUAL        reduce using rule 51 (numero -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 51 (numero -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 51 (numero -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 51 (numero -> DECIMAL .)
    COMMA           reduce using rule 51 (numero -> DECIMAL .)


state 97

    (53) imprimir -> PRINT valor . SEMI
    (119) operaciones_mat -> valor . operadores valor
    (120) operaciones_mat -> valor . operadores operaciones_mat
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    SEMI            shift and go to state 182
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 169

state 98

    (54) imprimir -> PRINT LPAREN . valor RPAREN SEMI
    (123) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (124) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (125) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (126) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 180
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 183
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 99

    (55) imprimir -> PRINT bconcat .

    $end            reduce using rule 55 (imprimir -> PRINT bconcat .)
    RBRACE          reduce using rule 55 (imprimir -> PRINT bconcat .)
    SEMI            reduce using rule 55 (imprimir -> PRINT bconcat .)


state 100

    (59) imprimir -> PRINT operaciones_mat . SEMI

    SEMI            shift and go to state 184


state 101

    (204) casting -> LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 185


state 102

    (173) simbolos -> LPAREN RPAREN .

    $end            reduce using rule 173 (simbolos -> LPAREN RPAREN .)
    RBRACE          reduce using rule 173 (simbolos -> LPAREN RPAREN .)
    SEMI            reduce using rule 173 (simbolos -> LPAREN RPAREN .)


state 103

    (194) tiposCast -> STRING .

    RPAREN          reduce using rule 194 (tiposCast -> STRING .)


state 104

    (195) tiposCast -> BOOL .

    RPAREN          reduce using rule 195 (tiposCast -> BOOL .)


state 105

    (196) tiposCast -> BOOLEAN .

    RPAREN          reduce using rule 196 (tiposCast -> BOOLEAN .)


state 106

    (197) tiposCast -> DOUBLE .

    RPAREN          reduce using rule 197 (tiposCast -> DOUBLE .)


state 107

    (198) tiposCast -> FLOAT .

    RPAREN          reduce using rule 198 (tiposCast -> FLOAT .)


state 108

    (199) tiposCast -> ARRAY .

    RPAREN          reduce using rule 199 (tiposCast -> ARRAY .)


state 109

    (200) tiposCast -> OBJECT .

    RPAREN          reduce using rule 200 (tiposCast -> OBJECT .)


state 110

    (201) tiposCast -> INTEGER .

    RPAREN          reduce using rule 201 (tiposCast -> INTEGER .)


state 111

    (202) tiposCast -> INT .

    RPAREN          reduce using rule 202 (tiposCast -> INT .)


state 112

    (140) llamada_funcion -> NOMBRE LPAREN . params_list RPAREN SEMI
    (135) params_list -> . params_list COMMA param
    (136) params_list -> . param
    (132) param -> . VARIABLE
    (133) param -> . asignacion
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 188
    VAR             shift and go to state 39
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79

    params_list                    shift and go to state 186
    param                          shift and go to state 187
    asignacion                     shift and go to state 189
    proteccion                     shift and go to state 126
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42

state 113

    (170) otros -> NOMBRE COLON .

    $end            reduce using rule 170 (otros -> NOMBRE COLON .)
    RBRACE          reduce using rule 170 (otros -> NOMBRE COLON .)
    SEMI            reduce using rule 170 (otros -> NOMBRE COLON .)


state 114

    (176) simbolos -> LBRACKET RBRACKET .

    $end            reduce using rule 176 (simbolos -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 176 (simbolos -> LBRACKET RBRACKET .)
    SEMI            reduce using rule 176 (simbolos -> LBRACKET RBRACKET .)


state 115

    (30) asignacion -> VARIABLE EQUALS . valor SEMI
    (33) asignacion -> VARIABLE EQUALS . brand
    (34) asignacion -> VARIABLE EQUALS . escribir
    (35) asignacion -> VARIABLE EQUALS . btrim
    (36) asignacion -> VARIABLE EQUALS . lectura
    (37) asignacion -> VARIABLE EQUALS . bconcat
    (39) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (156) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI
    (203) casting -> VARIABLE EQUALS . LPAREN tiposCast RPAREN VARIABLE SEMI
    (41) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (206) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (141) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (160) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (161) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (158) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (159) lectura -> . READLINE LPAREN RPAREN SEMI
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (119) operaciones_mat -> . valor operadores valor
    (120) operaciones_mat -> . valor operadores operaciones_mat
    (121) operaciones_mat -> . VARIABLE operadores VARIABLE
    (122) operaciones_mat -> . operaciones_mat_par
    (151) array_def -> . ARRAY LPAREN RPAREN
    (152) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (123) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (124) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (125) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (126) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    NEW             shift and go to state 198
    LPAREN          shift and go to state 199
    VARIABLE        shift and go to state 190
    RAND            shift and go to state 66
    FWRITE          shift and go to state 67
    TRIM            shift and go to state 68
    READLINE        shift and go to state 48
    CADENA          shift and go to state 90
    ARRAY           shift and go to state 201
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 191
    brand                          shift and go to state 192
    escribir                       shift and go to state 193
    btrim                          shift and go to state 194
    lectura                        shift and go to state 195
    bconcat                        shift and go to state 196
    operaciones_mat                shift and go to state 197
    array_def                      shift and go to state 200
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    operaciones_mat_par            shift and go to state 92
    numero                         shift and go to state 93

state 116

    (190) bconcat -> VARIABLE CONCAT . VARIABLE SEMI
    (191) bconcat -> VARIABLE CONCAT . CADENA SEMI

    VARIABLE        shift and go to state 202
    CADENA          shift and go to state 203


state 117

    (192) bconcat -> VARIABLE CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 204


state 118

    (205) aumentoCasting -> VARIABLE incrementos_mat . tipoDato SEMI
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    tipoDato                       shift and go to state 205
    numero                         shift and go to state 93

state 119

    (107) incrementos_mat -> MINUS_EQUAL .

    CADENA          reduce using rule 107 (incrementos_mat -> MINUS_EQUAL .)
    BOOLEANO        reduce using rule 107 (incrementos_mat -> MINUS_EQUAL .)
    ENTERO          reduce using rule 107 (incrementos_mat -> MINUS_EQUAL .)
    DECIMAL         reduce using rule 107 (incrementos_mat -> MINUS_EQUAL .)


state 120

    (108) incrementos_mat -> MOD_EQUAL .

    CADENA          reduce using rule 108 (incrementos_mat -> MOD_EQUAL .)
    BOOLEANO        reduce using rule 108 (incrementos_mat -> MOD_EQUAL .)
    ENTERO          reduce using rule 108 (incrementos_mat -> MOD_EQUAL .)
    DECIMAL         reduce using rule 108 (incrementos_mat -> MOD_EQUAL .)


state 121

    (109) incrementos_mat -> MUL_EQUAL .

    CADENA          reduce using rule 109 (incrementos_mat -> MUL_EQUAL .)
    BOOLEANO        reduce using rule 109 (incrementos_mat -> MUL_EQUAL .)
    ENTERO          reduce using rule 109 (incrementos_mat -> MUL_EQUAL .)
    DECIMAL         reduce using rule 109 (incrementos_mat -> MUL_EQUAL .)


state 122

    (110) incrementos_mat -> PLUS_EQUAL .

    CADENA          reduce using rule 110 (incrementos_mat -> PLUS_EQUAL .)
    BOOLEANO        reduce using rule 110 (incrementos_mat -> PLUS_EQUAL .)
    ENTERO          reduce using rule 110 (incrementos_mat -> PLUS_EQUAL .)
    DECIMAL         reduce using rule 110 (incrementos_mat -> PLUS_EQUAL .)


state 123

    (111) incrementos_mat -> DIV_EQUAL .

    CADENA          reduce using rule 111 (incrementos_mat -> DIV_EQUAL .)
    BOOLEANO        reduce using rule 111 (incrementos_mat -> DIV_EQUAL .)
    ENTERO          reduce using rule 111 (incrementos_mat -> DIV_EQUAL .)
    DECIMAL         reduce using rule 111 (incrementos_mat -> DIV_EQUAL .)


state 124

    (31) asignacion -> VAR asignacion .

    $end            reduce using rule 31 (asignacion -> VAR asignacion .)
    RBRACE          reduce using rule 31 (asignacion -> VAR asignacion .)
    SEMI            reduce using rule 31 (asignacion -> VAR asignacion .)
    RPAREN          reduce using rule 31 (asignacion -> VAR asignacion .)
    COMMA           reduce using rule 31 (asignacion -> VAR asignacion .)
    VARIABLE        reduce using rule 31 (asignacion -> VAR asignacion .)
    LPAREN          reduce using rule 31 (asignacion -> VAR asignacion .)
    CADENA          reduce using rule 31 (asignacion -> VAR asignacion .)
    BOOLEANO        reduce using rule 31 (asignacion -> VAR asignacion .)
    ENTERO          reduce using rule 31 (asignacion -> VAR asignacion .)
    DECIMAL         reduce using rule 31 (asignacion -> VAR asignacion .)


state 125

    (30) asignacion -> VARIABLE . EQUALS valor SEMI
    (33) asignacion -> VARIABLE . EQUALS brand
    (34) asignacion -> VARIABLE . EQUALS escribir
    (35) asignacion -> VARIABLE . EQUALS btrim
    (36) asignacion -> VARIABLE . EQUALS lectura
    (37) asignacion -> VARIABLE . EQUALS bconcat
    (39) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (41) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (205) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (107) incrementos_mat -> . MINUS_EQUAL
    (108) incrementos_mat -> . MOD_EQUAL
    (109) incrementos_mat -> . MUL_EQUAL
    (110) incrementos_mat -> . PLUS_EQUAL
    (111) incrementos_mat -> . DIV_EQUAL

    EQUALS          shift and go to state 206
    MINUS_EQUAL     shift and go to state 119
    MOD_EQUAL       shift and go to state 120
    MUL_EQUAL       shift and go to state 121
    PLUS_EQUAL      shift and go to state 122
    DIV_EQUAL       shift and go to state 123

    incrementos_mat                shift and go to state 118

state 126

    (32) asignacion -> proteccion . asignacion
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 125
    VAR             shift and go to state 39
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79

    proteccion                     shift and go to state 126
    asignacion                     shift and go to state 127
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42

state 127

    (32) asignacion -> proteccion asignacion .

    $end            reduce using rule 32 (asignacion -> proteccion asignacion .)
    RBRACE          reduce using rule 32 (asignacion -> proteccion asignacion .)
    SEMI            reduce using rule 32 (asignacion -> proteccion asignacion .)
    RPAREN          reduce using rule 32 (asignacion -> proteccion asignacion .)
    COMMA           reduce using rule 32 (asignacion -> proteccion asignacion .)
    VARIABLE        reduce using rule 32 (asignacion -> proteccion asignacion .)
    LPAREN          reduce using rule 32 (asignacion -> proteccion asignacion .)
    CADENA          reduce using rule 32 (asignacion -> proteccion asignacion .)
    BOOLEANO        reduce using rule 32 (asignacion -> proteccion asignacion .)
    ENTERO          reduce using rule 32 (asignacion -> proteccion asignacion .)
    DECIMAL         reduce using rule 32 (asignacion -> proteccion asignacion .)


state 128

    (128) funciones -> proteccion funcion_nparams .

    $end            reduce using rule 128 (funciones -> proteccion funcion_nparams .)
    RBRACE          reduce using rule 128 (funciones -> proteccion funcion_nparams .)
    SEMI            reduce using rule 128 (funciones -> proteccion funcion_nparams .)


state 129

    (130) funciones -> proteccion funcion_blank .

    $end            reduce using rule 130 (funciones -> proteccion funcion_blank .)
    RBRACE          reduce using rule 130 (funciones -> proteccion funcion_blank .)
    SEMI            reduce using rule 130 (funciones -> proteccion funcion_blank .)


state 130

    (134) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE

    NOMBRE          shift and go to state 207


state 131

    (42) constante -> DEFINE LPAREN . CADENA COMMA valor RPAREN SEMI
    (43) constante -> DEFINE LPAREN . NOMBRE COMMA ARRAY RPAREN SEMI

    CADENA          shift and go to state 208
    NOMBRE          shift and go to state 209


state 132

    (189) bconcat -> CADENA CONCAT . CADENA SEMI

    CADENA          shift and go to state 210


state 133

    (193) bconcat -> CADENA CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 211


state 134

    (158) lectura -> READLINE LPAREN . CADENA RPAREN SEMI
    (159) lectura -> READLINE LPAREN . RPAREN SEMI

    CADENA          shift and go to state 212
    RPAREN          shift and go to state 213


state 135

    (88) bwhile -> WHILE LPAREN . condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> WHILE LPAREN . condicion RPAREN COLON stc_bloque
    (67) condicion -> . VARIABLE operador_logico VARIABLE
    (68) condicion -> . valor operador_logico valor
    (69) condicion -> . VARIABLE operador_logico valor
    (70) condicion -> . VARIABLE condicion_booleana VARIABLE
    (71) condicion -> . valor condicion_booleana valor
    (72) condicion -> . VARIABLE condicion_booleana valor
    (73) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (74) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (75) condicion -> . condicion condicion_booleana condicion
    (76) condicion -> . condicion condicion_booleana comprobacion
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 216
    LPAREN          shift and go to state 214
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    condicion                      shift and go to state 215
    valor                          shift and go to state 217
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 136

    (179) simbolos -> LBRACE RBRACE .

    $end            reduce using rule 179 (simbolos -> LBRACE RBRACE .)
    RBRACE          reduce using rule 179 (simbolos -> LBRACE RBRACE .)
    SEMI            reduce using rule 179 (simbolos -> LBRACE RBRACE .)


state 137

    (181) simbolos -> RBRACE instrucciones .

    $end            reduce using rule 181 (simbolos -> RBRACE instrucciones .)
    RBRACE          reduce using rule 181 (simbolos -> RBRACE instrucciones .)
    SEMI            reduce using rule 181 (simbolos -> RBRACE instrucciones .)


state 138

    (185) instrucciones -> condicion_else .

    RBRACE          reduce using rule 185 (instrucciones -> condicion_else .)
    SEMI            reduce using rule 185 (instrucciones -> condicion_else .)
    $end            reduce using rule 185 (instrucciones -> condicion_else .)


state 139

    (186) instrucciones -> condicion_elseif .

    RBRACE          reduce using rule 186 (instrucciones -> condicion_elseif .)
    SEMI            reduce using rule 186 (instrucciones -> condicion_elseif .)
    $end            reduce using rule 186 (instrucciones -> condicion_elseif .)


state 140

    (187) instrucciones -> bwhile .

    RBRACE          reduce using rule 187 (instrucciones -> bwhile .)
    SEMI            reduce using rule 187 (instrucciones -> bwhile .)
    $end            reduce using rule 187 (instrucciones -> bwhile .)


state 141

    (188) instrucciones -> bfor .

    RBRACE          reduce using rule 188 (instrucciones -> bfor .)
    SEMI            reduce using rule 188 (instrucciones -> bfor .)
    $end            reduce using rule 188 (instrucciones -> bfor .)


state 142

    (90) bdo -> DO LBRACE . cuerpo RBRACE bwhile
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . bforeach
    (11) cuerpo -> . btry
    (12) cuerpo -> . condicion_ifelse
    (13) cuerpo -> . condicion_else
    (14) cuerpo -> . condicion_elseif
    (15) cuerpo -> . bswitch
    (16) cuerpo -> . bcase
    (17) cuerpo -> . bgoto
    (18) cuerpo -> . bcolas
    (19) cuerpo -> . bpila
    (20) cuerpo -> . bcortes
    (21) cuerpo -> . brand
    (22) cuerpo -> . escribir
    (23) cuerpo -> . btrim
    (24) cuerpo -> . otros
    (25) cuerpo -> . breturn
    (26) cuerpo -> . comment
    (27) cuerpo -> . casting
    (28) cuerpo -> . bconcat
    (29) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (127) funciones -> . funcion_nparams
    (128) funciones -> . proteccion funcion_nparams
    (129) funciones -> . funcion_blank
    (130) funciones -> . proteccion funcion_blank
    (131) funciones -> . funcion_void
    (140) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (158) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (159) lectura -> . READLINE LPAREN RPAREN SEMI
    (88) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (90) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (77) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (87) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (95) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) condicion_ifelse -> . condicion_if
    (64) condicion_ifelse -> . condicion_if condicion_else
    (65) condicion_ifelse -> . condicion_if condicion_elseif
    (66) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (62) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (61) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (91) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (92) bcase -> . CASE ENTERO COLON
    (164) bgoto -> . GOTO NOMBRE SEMI
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (165) bcortes -> . EXIT SEMI
    (166) bcortes -> . BREAK SEMI
    (167) bcortes -> . DEFAULT SEMI
    (168) bcortes -> . CONTINUE SEMI
    (141) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (160) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (161) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (169) otros -> . SMALLER NOMBRE GREATER
    (170) otros -> . NOMBRE COLON
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI
    (162) comment -> . COMENTARIOS
    (163) comment -> . DOC_COMENTARIOS
    (203) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (204) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (173) simbolos -> . LPAREN RPAREN
    (174) simbolos -> . LPAREN
    (175) simbolos -> . RPAREN
    (176) simbolos -> . LBRACKET RBRACKET
    (177) simbolos -> . LBRACKET
    (178) simbolos -> . RBRACKET
    (179) simbolos -> . LBRACE RBRACE
    (180) simbolos -> . LBRACE
    (181) simbolos -> . RBRACE instrucciones
    (182) simbolos -> . OPEN_TAG CLOSE_TAG
    (183) simbolos -> . OPEN_TAG
    (184) simbolos -> . CLOSE_TAG
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (134) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (137) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (60) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (155) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    VARIABLE        shift and go to state 38
    VAR             shift and go to state 39
    NOMBRE          shift and go to state 35
    DEFINE          shift and go to state 46
    READLINE        shift and go to state 48
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    ELSE            shift and go to state 57
    ELSEIF          shift and go to state 58
    SWITCH          shift and go to state 59
    CASE            shift and go to state 60
    GOTO            shift and go to state 61
    EXIT            shift and go to state 62
    BREAK           shift and go to state 63
    DEFAULT         shift and go to state 64
    CONTINUE        shift and go to state 65
    RAND            shift and go to state 66
    FWRITE          shift and go to state 67
    TRIM            shift and go to state 68
    SMALLER         shift and go to state 69
    RETURN          shift and go to state 71
    COMENTARIOS     shift and go to state 72
    DOC_COMENTARIOS shift and go to state 73
    LPAREN          shift and go to state 33
    CADENA          shift and go to state 47
    RPAREN          shift and go to state 34
    LBRACKET        shift and go to state 36
    RBRACKET        shift and go to state 37
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 74
    CLOSE_TAG       shift and go to state 75
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79
    FUNCTION        shift and go to state 80
    IF              shift and go to state 81

  ! RBRACE          [ reduce using rule 155 (empty -> .) ]

    cuerpo                         shift and go to state 218
    bwhile                         shift and go to state 8
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    bforeach                       shift and go to state 11
    btry                           shift and go to state 12
    condicion_ifelse               shift and go to state 13
    condicion_else                 shift and go to state 14
    condicion_elseif               shift and go to state 15
    bswitch                        shift and go to state 16
    bcase                          shift and go to state 17
    bgoto                          shift and go to state 18
    bcolas                         shift and go to state 19
    bpila                          shift and go to state 20
    bcortes                        shift and go to state 21
    brand                          shift and go to state 22
    escribir                       shift and go to state 23
    btrim                          shift and go to state 24
    otros                          shift and go to state 25
    breturn                        shift and go to state 26
    comment                        shift and go to state 27
    casting                        shift and go to state 28
    bconcat                        shift and go to state 29
    simbolos                       shift and go to state 30
    proteccion                     shift and go to state 40
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42
    funcion_nparams                shift and go to state 43
    funcion_blank                  shift and go to state 44
    funcion_void                   shift and go to state 45
    condicion_if                   shift and go to state 56
    empty                          shift and go to state 70

state 143

    (77) bfor -> FOR LPAREN . asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 125
    VAR             shift and go to state 39
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79

    asignacion                     shift and go to state 219
    proteccion                     shift and go to state 126
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42

state 144

    (87) bforeach -> FOREACH LPAREN . VARIABLE AS VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 220


state 145

    (95) btry -> TRY LBRACE . stc_bloque_def RBRACE catches
    (80) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 221

    stc_bloque_def                 shift and go to state 222

state 146

    (64) condicion_ifelse -> condicion_if condicion_else .

    $end            reduce using rule 64 (condicion_ifelse -> condicion_if condicion_else .)
    RBRACE          reduce using rule 64 (condicion_ifelse -> condicion_if condicion_else .)
    SEMI            reduce using rule 64 (condicion_ifelse -> condicion_if condicion_else .)


state 147

    (65) condicion_ifelse -> condicion_if condicion_elseif .
    (66) condicion_ifelse -> condicion_if condicion_elseif . condicion_else
    (62) condicion_else -> . ELSE LBRACE cuerpo RBRACE

    $end            reduce using rule 65 (condicion_ifelse -> condicion_if condicion_elseif .)
    RBRACE          reduce using rule 65 (condicion_ifelse -> condicion_if condicion_elseif .)
    SEMI            reduce using rule 65 (condicion_ifelse -> condicion_if condicion_elseif .)
    ELSE            shift and go to state 57

    condicion_else                 shift and go to state 223

state 148

    (62) condicion_else -> ELSE LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . bforeach
    (11) cuerpo -> . btry
    (12) cuerpo -> . condicion_ifelse
    (13) cuerpo -> . condicion_else
    (14) cuerpo -> . condicion_elseif
    (15) cuerpo -> . bswitch
    (16) cuerpo -> . bcase
    (17) cuerpo -> . bgoto
    (18) cuerpo -> . bcolas
    (19) cuerpo -> . bpila
    (20) cuerpo -> . bcortes
    (21) cuerpo -> . brand
    (22) cuerpo -> . escribir
    (23) cuerpo -> . btrim
    (24) cuerpo -> . otros
    (25) cuerpo -> . breturn
    (26) cuerpo -> . comment
    (27) cuerpo -> . casting
    (28) cuerpo -> . bconcat
    (29) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (127) funciones -> . funcion_nparams
    (128) funciones -> . proteccion funcion_nparams
    (129) funciones -> . funcion_blank
    (130) funciones -> . proteccion funcion_blank
    (131) funciones -> . funcion_void
    (140) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (158) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (159) lectura -> . READLINE LPAREN RPAREN SEMI
    (88) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (90) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (77) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (87) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (95) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) condicion_ifelse -> . condicion_if
    (64) condicion_ifelse -> . condicion_if condicion_else
    (65) condicion_ifelse -> . condicion_if condicion_elseif
    (66) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (62) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (61) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (91) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (92) bcase -> . CASE ENTERO COLON
    (164) bgoto -> . GOTO NOMBRE SEMI
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (165) bcortes -> . EXIT SEMI
    (166) bcortes -> . BREAK SEMI
    (167) bcortes -> . DEFAULT SEMI
    (168) bcortes -> . CONTINUE SEMI
    (141) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (160) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (161) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (169) otros -> . SMALLER NOMBRE GREATER
    (170) otros -> . NOMBRE COLON
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI
    (162) comment -> . COMENTARIOS
    (163) comment -> . DOC_COMENTARIOS
    (203) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (204) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (173) simbolos -> . LPAREN RPAREN
    (174) simbolos -> . LPAREN
    (175) simbolos -> . RPAREN
    (176) simbolos -> . LBRACKET RBRACKET
    (177) simbolos -> . LBRACKET
    (178) simbolos -> . RBRACKET
    (179) simbolos -> . LBRACE RBRACE
    (180) simbolos -> . LBRACE
    (181) simbolos -> . RBRACE instrucciones
    (182) simbolos -> . OPEN_TAG CLOSE_TAG
    (183) simbolos -> . OPEN_TAG
    (184) simbolos -> . CLOSE_TAG
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (134) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (137) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (60) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (155) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    VARIABLE        shift and go to state 38
    VAR             shift and go to state 39
    NOMBRE          shift and go to state 35
    DEFINE          shift and go to state 46
    READLINE        shift and go to state 48
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    ELSE            shift and go to state 57
    ELSEIF          shift and go to state 58
    SWITCH          shift and go to state 59
    CASE            shift and go to state 60
    GOTO            shift and go to state 61
    EXIT            shift and go to state 62
    BREAK           shift and go to state 63
    DEFAULT         shift and go to state 64
    CONTINUE        shift and go to state 65
    RAND            shift and go to state 66
    FWRITE          shift and go to state 67
    TRIM            shift and go to state 68
    SMALLER         shift and go to state 69
    RETURN          shift and go to state 71
    COMENTARIOS     shift and go to state 72
    DOC_COMENTARIOS shift and go to state 73
    LPAREN          shift and go to state 33
    CADENA          shift and go to state 47
    RPAREN          shift and go to state 34
    LBRACKET        shift and go to state 36
    RBRACKET        shift and go to state 37
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 74
    CLOSE_TAG       shift and go to state 75
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79
    FUNCTION        shift and go to state 80
    IF              shift and go to state 81

  ! RBRACE          [ reduce using rule 155 (empty -> .) ]

    cuerpo                         shift and go to state 224
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    bforeach                       shift and go to state 11
    btry                           shift and go to state 12
    condicion_ifelse               shift and go to state 13
    condicion_else                 shift and go to state 14
    condicion_elseif               shift and go to state 15
    bswitch                        shift and go to state 16
    bcase                          shift and go to state 17
    bgoto                          shift and go to state 18
    bcolas                         shift and go to state 19
    bpila                          shift and go to state 20
    bcortes                        shift and go to state 21
    brand                          shift and go to state 22
    escribir                       shift and go to state 23
    btrim                          shift and go to state 24
    otros                          shift and go to state 25
    breturn                        shift and go to state 26
    comment                        shift and go to state 27
    casting                        shift and go to state 28
    bconcat                        shift and go to state 29
    simbolos                       shift and go to state 30
    proteccion                     shift and go to state 40
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42
    funcion_nparams                shift and go to state 43
    funcion_blank                  shift and go to state 44
    funcion_void                   shift and go to state 45
    condicion_if                   shift and go to state 56
    empty                          shift and go to state 70

state 149

    (61) condicion_elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (67) condicion -> . VARIABLE operador_logico VARIABLE
    (68) condicion -> . valor operador_logico valor
    (69) condicion -> . VARIABLE operador_logico valor
    (70) condicion -> . VARIABLE condicion_booleana VARIABLE
    (71) condicion -> . valor condicion_booleana valor
    (72) condicion -> . VARIABLE condicion_booleana valor
    (73) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (74) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (75) condicion -> . condicion condicion_booleana condicion
    (76) condicion -> . condicion condicion_booleana comprobacion
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 216
    LPAREN          shift and go to state 214
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    condicion                      shift and go to state 225
    valor                          shift and go to state 217
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 150

    (91) bswitch -> SWITCH LPAREN . VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE

    VARIABLE        shift and go to state 226


state 151

    (92) bcase -> CASE ENTERO . COLON

    COLON           shift and go to state 227


state 152

    (164) bgoto -> GOTO NOMBRE . SEMI

    SEMI            shift and go to state 228


state 153

    (165) bcortes -> EXIT SEMI .

    $end            reduce using rule 165 (bcortes -> EXIT SEMI .)
    RBRACE          reduce using rule 165 (bcortes -> EXIT SEMI .)
    SEMI            reduce using rule 165 (bcortes -> EXIT SEMI .)


state 154

    (166) bcortes -> BREAK SEMI .

    $end            reduce using rule 166 (bcortes -> BREAK SEMI .)
    RBRACE          reduce using rule 166 (bcortes -> BREAK SEMI .)
    SEMI            reduce using rule 166 (bcortes -> BREAK SEMI .)


state 155

    (167) bcortes -> DEFAULT SEMI .

    $end            reduce using rule 167 (bcortes -> DEFAULT SEMI .)
    RBRACE          reduce using rule 167 (bcortes -> DEFAULT SEMI .)
    SEMI            reduce using rule 167 (bcortes -> DEFAULT SEMI .)


state 156

    (168) bcortes -> CONTINUE SEMI .

    $end            reduce using rule 168 (bcortes -> CONTINUE SEMI .)
    RBRACE          reduce using rule 168 (bcortes -> CONTINUE SEMI .)
    SEMI            reduce using rule 168 (bcortes -> CONTINUE SEMI .)


state 157

    (141) brand -> RAND LPAREN . ENTERO COMMA ENTERO RPAREN SEMI

    ENTERO          shift and go to state 229


state 158

    (160) escribir -> FWRITE LPAREN . NOMBRE COMMA CADENA RPAREN SEMI

    NOMBRE          shift and go to state 230


state 159

    (161) btrim -> TRIM LPAREN . NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 231


state 160

    (169) otros -> SMALLER NOMBRE . GREATER

    GREATER         shift and go to state 232


state 161

    (147) breturn -> RETURN SEMI .

    $end            reduce using rule 147 (breturn -> RETURN SEMI .)
    RBRACE          reduce using rule 147 (breturn -> RETURN SEMI .)
    SEMI            reduce using rule 147 (breturn -> RETURN SEMI .)


state 162

    (148) breturn -> RETURN NULL . SEMI

    SEMI            shift and go to state 233


state 163

    (149) breturn -> RETURN VARIABLE . SEMI

    SEMI            shift and go to state 234


state 164

    (150) breturn -> RETURN BOOLEANO . SEMI

    SEMI            shift and go to state 235


state 165

    (182) simbolos -> OPEN_TAG CLOSE_TAG .

    $end            reduce using rule 182 (simbolos -> OPEN_TAG CLOSE_TAG .)
    RBRACE          reduce using rule 182 (simbolos -> OPEN_TAG CLOSE_TAG .)
    SEMI            reduce using rule 182 (simbolos -> OPEN_TAG CLOSE_TAG .)


state 166

    (134) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE
    (137) funcion_void -> FUNCTION NOMBRE . LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    LPAREN          shift and go to state 236


state 167

    (60) condicion_if -> IF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (67) condicion -> . VARIABLE operador_logico VARIABLE
    (68) condicion -> . valor operador_logico valor
    (69) condicion -> . VARIABLE operador_logico valor
    (70) condicion -> . VARIABLE condicion_booleana VARIABLE
    (71) condicion -> . valor condicion_booleana valor
    (72) condicion -> . VARIABLE condicion_booleana valor
    (73) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (74) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (75) condicion -> . condicion condicion_booleana condicion
    (76) condicion -> . condicion condicion_booleana comprobacion
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 216
    LPAREN          shift and go to state 214
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    condicion                      shift and go to state 237
    valor                          shift and go to state 217
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 168

    (52) imprimir -> ECHO valor SEMI .

    $end            reduce using rule 52 (imprimir -> ECHO valor SEMI .)
    RBRACE          reduce using rule 52 (imprimir -> ECHO valor SEMI .)
    SEMI            reduce using rule 52 (imprimir -> ECHO valor SEMI .)


state 169

    (119) operaciones_mat -> valor operadores . valor
    (120) operaciones_mat -> valor operadores . operaciones_mat
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (119) operaciones_mat -> . valor operadores valor
    (120) operaciones_mat -> . valor operadores operaciones_mat
    (121) operaciones_mat -> . VARIABLE operadores VARIABLE
    (122) operaciones_mat -> . operaciones_mat_par
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (123) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (124) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (125) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (126) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 240
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    LPAREN          shift and go to state 95
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 238
    operaciones_mat                shift and go to state 239
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    operaciones_mat_par            shift and go to state 92
    numero                         shift and go to state 93

state 170

    (98) operadores -> SUMA .

    VARIABLE        reduce using rule 98 (operadores -> SUMA .)
    CADENA          reduce using rule 98 (operadores -> SUMA .)
    BOOLEANO        reduce using rule 98 (operadores -> SUMA .)
    LPAREN          reduce using rule 98 (operadores -> SUMA .)
    ENTERO          reduce using rule 98 (operadores -> SUMA .)
    DECIMAL         reduce using rule 98 (operadores -> SUMA .)


state 171

    (99) operadores -> RESTA .

    VARIABLE        reduce using rule 99 (operadores -> RESTA .)
    CADENA          reduce using rule 99 (operadores -> RESTA .)
    BOOLEANO        reduce using rule 99 (operadores -> RESTA .)
    LPAREN          reduce using rule 99 (operadores -> RESTA .)
    ENTERO          reduce using rule 99 (operadores -> RESTA .)
    DECIMAL         reduce using rule 99 (operadores -> RESTA .)


state 172

    (100) operadores -> MULTIPLICACION .

    VARIABLE        reduce using rule 100 (operadores -> MULTIPLICACION .)
    CADENA          reduce using rule 100 (operadores -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 100 (operadores -> MULTIPLICACION .)
    LPAREN          reduce using rule 100 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 100 (operadores -> MULTIPLICACION .)
    DECIMAL         reduce using rule 100 (operadores -> MULTIPLICACION .)


state 173

    (101) operadores -> DIVISION .

    VARIABLE        reduce using rule 101 (operadores -> DIVISION .)
    CADENA          reduce using rule 101 (operadores -> DIVISION .)
    BOOLEANO        reduce using rule 101 (operadores -> DIVISION .)
    LPAREN          reduce using rule 101 (operadores -> DIVISION .)
    ENTERO          reduce using rule 101 (operadores -> DIVISION .)
    DECIMAL         reduce using rule 101 (operadores -> DIVISION .)


state 174

    (102) operadores -> MODULO .

    VARIABLE        reduce using rule 102 (operadores -> MODULO .)
    CADENA          reduce using rule 102 (operadores -> MODULO .)
    BOOLEANO        reduce using rule 102 (operadores -> MODULO .)
    LPAREN          reduce using rule 102 (operadores -> MODULO .)
    ENTERO          reduce using rule 102 (operadores -> MODULO .)
    DECIMAL         reduce using rule 102 (operadores -> MODULO .)


state 175

    (56) imprimir -> ECHO NOMBRE LBRACKET . ENTERO RBRACKET SEMI

    ENTERO          shift and go to state 241


state 176

    (58) imprimir -> ECHO operaciones_mat SEMI .

    $end            reduce using rule 58 (imprimir -> ECHO operaciones_mat SEMI .)
    RBRACE          reduce using rule 58 (imprimir -> ECHO operaciones_mat SEMI .)
    SEMI            reduce using rule 58 (imprimir -> ECHO operaciones_mat SEMI .)


state 177

    (121) operaciones_mat -> VARIABLE operadores . VARIABLE

    VARIABLE        shift and go to state 242


state 178

    (156) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI

    NEW             shift and go to state 198


state 179

    (123) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (124) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 243

state 180

    (125) operaciones_mat_par -> LPAREN VARIABLE . operadores VARIABLE RPAREN
    (126) operaciones_mat_par -> LPAREN VARIABLE . operadores valor RPAREN operadores valor
    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    EQUALS          shift and go to state 178
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 244

state 181

    (48) tipoDato -> CADENA .

    SUMA            reduce using rule 48 (tipoDato -> CADENA .)
    RESTA           reduce using rule 48 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 48 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 48 (tipoDato -> CADENA .)
    MODULO          reduce using rule 48 (tipoDato -> CADENA .)
    RPAREN          reduce using rule 48 (tipoDato -> CADENA .)
    SEMI            reduce using rule 48 (tipoDato -> CADENA .)
    SMALLER         reduce using rule 48 (tipoDato -> CADENA .)
    GREATER         reduce using rule 48 (tipoDato -> CADENA .)
    IS_SMALLER_OR_EQUAL reduce using rule 48 (tipoDato -> CADENA .)
    IS_GREATER_OR_EQUAL reduce using rule 48 (tipoDato -> CADENA .)
    AND             reduce using rule 48 (tipoDato -> CADENA .)
    OR              reduce using rule 48 (tipoDato -> CADENA .)
    XOR             reduce using rule 48 (tipoDato -> CADENA .)
    IS_EQUAL        reduce using rule 48 (tipoDato -> CADENA .)
    IS_NOT_EQUAL    reduce using rule 48 (tipoDato -> CADENA .)
    IS_IDENTICAL    reduce using rule 48 (tipoDato -> CADENA .)
    IS_NOT_IDENTICAL reduce using rule 48 (tipoDato -> CADENA .)
    COMMA           reduce using rule 48 (tipoDato -> CADENA .)


state 182

    (53) imprimir -> PRINT valor SEMI .

    $end            reduce using rule 53 (imprimir -> PRINT valor SEMI .)
    RBRACE          reduce using rule 53 (imprimir -> PRINT valor SEMI .)
    SEMI            reduce using rule 53 (imprimir -> PRINT valor SEMI .)


state 183

    (54) imprimir -> PRINT LPAREN valor . RPAREN SEMI
    (123) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (124) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    RPAREN          shift and go to state 245
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 243

state 184

    (59) imprimir -> PRINT operaciones_mat SEMI .

    $end            reduce using rule 59 (imprimir -> PRINT operaciones_mat SEMI .)
    RBRACE          reduce using rule 59 (imprimir -> PRINT operaciones_mat SEMI .)
    SEMI            reduce using rule 59 (imprimir -> PRINT operaciones_mat SEMI .)


state 185

    (204) casting -> LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 246


state 186

    (140) llamada_funcion -> NOMBRE LPAREN params_list . RPAREN SEMI
    (135) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 247
    COMMA           shift and go to state 248


state 187

    (136) params_list -> param .

    RPAREN          reduce using rule 136 (params_list -> param .)
    COMMA           reduce using rule 136 (params_list -> param .)


state 188

    (132) param -> VARIABLE .
    (30) asignacion -> VARIABLE . EQUALS valor SEMI
    (33) asignacion -> VARIABLE . EQUALS brand
    (34) asignacion -> VARIABLE . EQUALS escribir
    (35) asignacion -> VARIABLE . EQUALS btrim
    (36) asignacion -> VARIABLE . EQUALS lectura
    (37) asignacion -> VARIABLE . EQUALS bconcat
    (39) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (41) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (205) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (107) incrementos_mat -> . MINUS_EQUAL
    (108) incrementos_mat -> . MOD_EQUAL
    (109) incrementos_mat -> . MUL_EQUAL
    (110) incrementos_mat -> . PLUS_EQUAL
    (111) incrementos_mat -> . DIV_EQUAL

    RPAREN          reduce using rule 132 (param -> VARIABLE .)
    COMMA           reduce using rule 132 (param -> VARIABLE .)
    EQUALS          shift and go to state 206
    MINUS_EQUAL     shift and go to state 119
    MOD_EQUAL       shift and go to state 120
    MUL_EQUAL       shift and go to state 121
    PLUS_EQUAL      shift and go to state 122
    DIV_EQUAL       shift and go to state 123

    incrementos_mat                shift and go to state 118

state 189

    (133) param -> asignacion .

    RPAREN          reduce using rule 133 (param -> asignacion .)
    COMMA           reduce using rule 133 (param -> asignacion .)


state 190

    (206) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores tipoDato SEMI
    (190) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (191) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (192) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (121) operaciones_mat -> VARIABLE . operadores VARIABLE
    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    CONCAT          shift and go to state 116
    CONCAT_EQUAL    shift and go to state 117
    EQUALS          shift and go to state 178
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 249

state 191

    (30) asignacion -> VARIABLE EQUALS valor . SEMI
    (119) operaciones_mat -> valor . operadores valor
    (120) operaciones_mat -> valor . operadores operaciones_mat
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    SEMI            shift and go to state 250
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 169

state 192

    (33) asignacion -> VARIABLE EQUALS brand .

    $end            reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)
    RBRACE          reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)
    SEMI            reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)
    RPAREN          reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)
    COMMA           reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)
    VARIABLE        reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)
    LPAREN          reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)
    CADENA          reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)
    BOOLEANO        reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)
    ENTERO          reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)
    DECIMAL         reduce using rule 33 (asignacion -> VARIABLE EQUALS brand .)


state 193

    (34) asignacion -> VARIABLE EQUALS escribir .

    $end            reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)
    RBRACE          reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)
    SEMI            reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)
    RPAREN          reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)
    COMMA           reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)
    VARIABLE        reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)
    LPAREN          reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)
    CADENA          reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)
    BOOLEANO        reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)
    ENTERO          reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)
    DECIMAL         reduce using rule 34 (asignacion -> VARIABLE EQUALS escribir .)


state 194

    (35) asignacion -> VARIABLE EQUALS btrim .

    $end            reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)
    RBRACE          reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)
    SEMI            reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)
    RPAREN          reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)
    COMMA           reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)
    VARIABLE        reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)
    LPAREN          reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)
    CADENA          reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)
    BOOLEANO        reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)
    ENTERO          reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)
    DECIMAL         reduce using rule 35 (asignacion -> VARIABLE EQUALS btrim .)


state 195

    (36) asignacion -> VARIABLE EQUALS lectura .

    $end            reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)
    RBRACE          reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)
    SEMI            reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)
    RPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)
    COMMA           reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)
    VARIABLE        reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)
    LPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)
    CADENA          reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)
    BOOLEANO        reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)
    ENTERO          reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)
    DECIMAL         reduce using rule 36 (asignacion -> VARIABLE EQUALS lectura .)


state 196

    (37) asignacion -> VARIABLE EQUALS bconcat .

    $end            reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)
    RBRACE          reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)
    SEMI            reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)
    RPAREN          reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)
    COMMA           reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)
    VARIABLE        reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)
    LPAREN          reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)
    CADENA          reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)
    BOOLEANO        reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)
    ENTERO          reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)
    DECIMAL         reduce using rule 37 (asignacion -> VARIABLE EQUALS bconcat .)


state 197

    (39) asignacion -> VARIABLE EQUALS operaciones_mat . SEMI

    SEMI            shift and go to state 251


state 198

    (156) bcolas -> VARIABLE EQUALS NEW . SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE EQUALS NEW . SPLSTACK LPAREN RPAREN SEMI

    SPLQUEUE        shift and go to state 252
    SPLSTACK        shift and go to state 253


state 199

    (203) casting -> VARIABLE EQUALS LPAREN . tiposCast RPAREN VARIABLE SEMI
    (123) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (124) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (125) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (126) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (194) tiposCast -> . STRING
    (195) tiposCast -> . BOOL
    (196) tiposCast -> . BOOLEAN
    (197) tiposCast -> . DOUBLE
    (198) tiposCast -> . FLOAT
    (199) tiposCast -> . ARRAY
    (200) tiposCast -> . OBJECT
    (201) tiposCast -> . INTEGER
    (202) tiposCast -> . INT
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 180
    STRING          shift and go to state 103
    BOOL            shift and go to state 104
    BOOLEAN         shift and go to state 105
    DOUBLE          shift and go to state 106
    FLOAT           shift and go to state 107
    ARRAY           shift and go to state 108
    OBJECT          shift and go to state 109
    INTEGER         shift and go to state 110
    INT             shift and go to state 111
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    tiposCast                      shift and go to state 254
    valor                          shift and go to state 179
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 200

    (41) asignacion_array -> VARIABLE EQUALS array_def . SEMI

    SEMI            shift and go to state 255


state 201

    (151) array_def -> ARRAY . LPAREN RPAREN
    (152) array_def -> ARRAY . LPAREN array_elmnt RPAREN

    LPAREN          shift and go to state 256


state 202

    (190) bconcat -> VARIABLE CONCAT VARIABLE . SEMI

    SEMI            shift and go to state 257


state 203

    (191) bconcat -> VARIABLE CONCAT CADENA . SEMI

    SEMI            shift and go to state 258


state 204

    (192) bconcat -> VARIABLE CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 259


state 205

    (205) aumentoCasting -> VARIABLE incrementos_mat tipoDato . SEMI

    SEMI            shift and go to state 260


state 206

    (30) asignacion -> VARIABLE EQUALS . valor SEMI
    (33) asignacion -> VARIABLE EQUALS . brand
    (34) asignacion -> VARIABLE EQUALS . escribir
    (35) asignacion -> VARIABLE EQUALS . btrim
    (36) asignacion -> VARIABLE EQUALS . lectura
    (37) asignacion -> VARIABLE EQUALS . bconcat
    (39) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (41) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (206) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (141) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (160) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (161) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (158) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (159) lectura -> . READLINE LPAREN RPAREN SEMI
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (119) operaciones_mat -> . valor operadores valor
    (120) operaciones_mat -> . valor operadores operaciones_mat
    (121) operaciones_mat -> . VARIABLE operadores VARIABLE
    (122) operaciones_mat -> . operaciones_mat_par
    (151) array_def -> . ARRAY LPAREN RPAREN
    (152) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (123) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (124) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (125) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (126) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 190
    RAND            shift and go to state 66
    FWRITE          shift and go to state 67
    TRIM            shift and go to state 68
    READLINE        shift and go to state 48
    CADENA          shift and go to state 90
    ARRAY           shift and go to state 201
    BOOLEANO        shift and go to state 94
    LPAREN          shift and go to state 95
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 191
    brand                          shift and go to state 192
    escribir                       shift and go to state 193
    btrim                          shift and go to state 194
    lectura                        shift and go to state 195
    bconcat                        shift and go to state 196
    operaciones_mat                shift and go to state 197
    array_def                      shift and go to state 200
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    operaciones_mat_par            shift and go to state 92
    numero                         shift and go to state 93

state 207

    (134) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE

    LPAREN          shift and go to state 261


state 208

    (42) constante -> DEFINE LPAREN CADENA . COMMA valor RPAREN SEMI

    COMMA           shift and go to state 262


state 209

    (43) constante -> DEFINE LPAREN NOMBRE . COMMA ARRAY RPAREN SEMI

    COMMA           shift and go to state 263


state 210

    (189) bconcat -> CADENA CONCAT CADENA . SEMI

    SEMI            shift and go to state 264


state 211

    (193) bconcat -> CADENA CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 265


state 212

    (158) lectura -> READLINE LPAREN CADENA . RPAREN SEMI

    RPAREN          shift and go to state 266


state 213

    (159) lectura -> READLINE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 267


state 214

    (73) condicion -> LPAREN . VARIABLE operadores valor RPAREN operador_logico valor
    (74) condicion -> LPAREN . VARIABLE operadores valor RPAREN condicion_booleana valor

    VARIABLE        shift and go to state 268


state 215

    (88) bwhile -> WHILE LPAREN condicion . RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> WHILE LPAREN condicion . RPAREN COLON stc_bloque
    (75) condicion -> condicion . condicion_booleana condicion
    (76) condicion -> condicion . condicion_booleana comprobacion
    (112) condicion_booleana -> . AND
    (113) condicion_booleana -> . OR
    (114) condicion_booleana -> . XOR
    (115) condicion_booleana -> . IS_EQUAL
    (116) condicion_booleana -> . IS_NOT_EQUAL
    (117) condicion_booleana -> . IS_IDENTICAL
    (118) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 269
    AND             shift and go to state 271
    OR              shift and go to state 272
    XOR             shift and go to state 273
    IS_EQUAL        shift and go to state 274
    IS_NOT_EQUAL    shift and go to state 275
    IS_IDENTICAL    shift and go to state 276
    IS_NOT_IDENTICAL shift and go to state 277

    condicion_booleana             shift and go to state 270

state 216

    (67) condicion -> VARIABLE . operador_logico VARIABLE
    (69) condicion -> VARIABLE . operador_logico valor
    (70) condicion -> VARIABLE . condicion_booleana VARIABLE
    (72) condicion -> VARIABLE . condicion_booleana valor
    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (103) operador_logico -> . SMALLER
    (104) operador_logico -> . GREATER
    (105) operador_logico -> . IS_SMALLER_OR_EQUAL
    (106) operador_logico -> . IS_GREATER_OR_EQUAL
    (112) condicion_booleana -> . AND
    (113) condicion_booleana -> . OR
    (114) condicion_booleana -> . XOR
    (115) condicion_booleana -> . IS_EQUAL
    (116) condicion_booleana -> . IS_NOT_EQUAL
    (117) condicion_booleana -> . IS_IDENTICAL
    (118) condicion_booleana -> . IS_NOT_IDENTICAL

    EQUALS          shift and go to state 178
    SMALLER         shift and go to state 280
    GREATER         shift and go to state 281
    IS_SMALLER_OR_EQUAL shift and go to state 282
    IS_GREATER_OR_EQUAL shift and go to state 283
    AND             shift and go to state 271
    OR              shift and go to state 272
    XOR             shift and go to state 273
    IS_EQUAL        shift and go to state 274
    IS_NOT_EQUAL    shift and go to state 275
    IS_IDENTICAL    shift and go to state 276
    IS_NOT_IDENTICAL shift and go to state 277

    operador_logico                shift and go to state 278
    condicion_booleana             shift and go to state 279

state 217

    (68) condicion -> valor . operador_logico valor
    (71) condicion -> valor . condicion_booleana valor
    (103) operador_logico -> . SMALLER
    (104) operador_logico -> . GREATER
    (105) operador_logico -> . IS_SMALLER_OR_EQUAL
    (106) operador_logico -> . IS_GREATER_OR_EQUAL
    (112) condicion_booleana -> . AND
    (113) condicion_booleana -> . OR
    (114) condicion_booleana -> . XOR
    (115) condicion_booleana -> . IS_EQUAL
    (116) condicion_booleana -> . IS_NOT_EQUAL
    (117) condicion_booleana -> . IS_IDENTICAL
    (118) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 280
    GREATER         shift and go to state 281
    IS_SMALLER_OR_EQUAL shift and go to state 282
    IS_GREATER_OR_EQUAL shift and go to state 283
    AND             shift and go to state 271
    OR              shift and go to state 272
    XOR             shift and go to state 273
    IS_EQUAL        shift and go to state 274
    IS_NOT_EQUAL    shift and go to state 275
    IS_IDENTICAL    shift and go to state 276
    IS_NOT_IDENTICAL shift and go to state 277

    operador_logico                shift and go to state 284
    condicion_booleana             shift and go to state 285

state 218

    (90) bdo -> DO LBRACE cuerpo . RBRACE bwhile

    RBRACE          shift and go to state 286


state 219

    (77) bfor -> FOR LPAREN asignacion . condicion SEMI for_incr RPAREN stc_bloque_def
    (67) condicion -> . VARIABLE operador_logico VARIABLE
    (68) condicion -> . valor operador_logico valor
    (69) condicion -> . VARIABLE operador_logico valor
    (70) condicion -> . VARIABLE condicion_booleana VARIABLE
    (71) condicion -> . valor condicion_booleana valor
    (72) condicion -> . VARIABLE condicion_booleana valor
    (73) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (74) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (75) condicion -> . condicion condicion_booleana condicion
    (76) condicion -> . condicion condicion_booleana comprobacion
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 216
    LPAREN          shift and go to state 214
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    condicion                      shift and go to state 287
    valor                          shift and go to state 217
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 220

    (87) bforeach -> FOREACH LPAREN VARIABLE . AS VARIABLE RPAREN stc_bloque_def

    AS              shift and go to state 288


state 221

    (80) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (78) stc_bloque -> . stc_bloque SEMI cuerpo
    (79) stc_bloque -> . breturn
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI
    (155) empty -> .

    RETURN          shift and go to state 71
    RBRACE          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)

    stc_bloque                     shift and go to state 289
    breturn                        shift and go to state 290
    empty                          shift and go to state 70

state 222

    (95) btry -> TRY LBRACE stc_bloque_def . RBRACE catches

    RBRACE          shift and go to state 291


state 223

    (66) condicion_ifelse -> condicion_if condicion_elseif condicion_else .

    $end            reduce using rule 66 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    RBRACE          reduce using rule 66 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    SEMI            reduce using rule 66 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)


state 224

    (62) condicion_else -> ELSE LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 292


state 225

    (61) condicion_elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE
    (75) condicion -> condicion . condicion_booleana condicion
    (76) condicion -> condicion . condicion_booleana comprobacion
    (112) condicion_booleana -> . AND
    (113) condicion_booleana -> . OR
    (114) condicion_booleana -> . XOR
    (115) condicion_booleana -> . IS_EQUAL
    (116) condicion_booleana -> . IS_NOT_EQUAL
    (117) condicion_booleana -> . IS_IDENTICAL
    (118) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 293
    AND             shift and go to state 271
    OR              shift and go to state 272
    XOR             shift and go to state 273
    IS_EQUAL        shift and go to state 274
    IS_NOT_EQUAL    shift and go to state 275
    IS_IDENTICAL    shift and go to state 276
    IS_NOT_IDENTICAL shift and go to state 277

    condicion_booleana             shift and go to state 270

state 226

    (91) bswitch -> SWITCH LPAREN VARIABLE . RPAREN LBRACE cuerpo SEMI RBRACE

    RPAREN          shift and go to state 294


state 227

    (92) bcase -> CASE ENTERO COLON .

    $end            reduce using rule 92 (bcase -> CASE ENTERO COLON .)
    RBRACE          reduce using rule 92 (bcase -> CASE ENTERO COLON .)
    SEMI            reduce using rule 92 (bcase -> CASE ENTERO COLON .)


state 228

    (164) bgoto -> GOTO NOMBRE SEMI .

    $end            reduce using rule 164 (bgoto -> GOTO NOMBRE SEMI .)
    RBRACE          reduce using rule 164 (bgoto -> GOTO NOMBRE SEMI .)
    SEMI            reduce using rule 164 (bgoto -> GOTO NOMBRE SEMI .)


state 229

    (141) brand -> RAND LPAREN ENTERO . COMMA ENTERO RPAREN SEMI

    COMMA           shift and go to state 295


state 230

    (160) escribir -> FWRITE LPAREN NOMBRE . COMMA CADENA RPAREN SEMI

    COMMA           shift and go to state 296


state 231

    (161) btrim -> TRIM LPAREN NOMBRE . LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 297


state 232

    (169) otros -> SMALLER NOMBRE GREATER .

    $end            reduce using rule 169 (otros -> SMALLER NOMBRE GREATER .)
    RBRACE          reduce using rule 169 (otros -> SMALLER NOMBRE GREATER .)
    SEMI            reduce using rule 169 (otros -> SMALLER NOMBRE GREATER .)


state 233

    (148) breturn -> RETURN NULL SEMI .

    $end            reduce using rule 148 (breturn -> RETURN NULL SEMI .)
    RBRACE          reduce using rule 148 (breturn -> RETURN NULL SEMI .)
    SEMI            reduce using rule 148 (breturn -> RETURN NULL SEMI .)


state 234

    (149) breturn -> RETURN VARIABLE SEMI .

    $end            reduce using rule 149 (breturn -> RETURN VARIABLE SEMI .)
    RBRACE          reduce using rule 149 (breturn -> RETURN VARIABLE SEMI .)
    SEMI            reduce using rule 149 (breturn -> RETURN VARIABLE SEMI .)


state 235

    (150) breturn -> RETURN BOOLEANO SEMI .

    $end            reduce using rule 150 (breturn -> RETURN BOOLEANO SEMI .)
    RBRACE          reduce using rule 150 (breturn -> RETURN BOOLEANO SEMI .)
    SEMI            reduce using rule 150 (breturn -> RETURN BOOLEANO SEMI .)


state 236

    (134) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (138) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (139) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (137) funcion_void -> FUNCTION NOMBRE LPAREN . RPAREN COLON VOID LBRACE empty RBRACE
    (135) params_list -> . params_list COMMA param
    (136) params_list -> . param
    (132) param -> . VARIABLE
    (133) param -> . asignacion
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    RPAREN          shift and go to state 299
    VARIABLE        shift and go to state 188
    VAR             shift and go to state 39
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79

    params_list                    shift and go to state 298
    param                          shift and go to state 187
    asignacion                     shift and go to state 189
    proteccion                     shift and go to state 126
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42

state 237

    (60) condicion_if -> IF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE
    (75) condicion -> condicion . condicion_booleana condicion
    (76) condicion -> condicion . condicion_booleana comprobacion
    (112) condicion_booleana -> . AND
    (113) condicion_booleana -> . OR
    (114) condicion_booleana -> . XOR
    (115) condicion_booleana -> . IS_EQUAL
    (116) condicion_booleana -> . IS_NOT_EQUAL
    (117) condicion_booleana -> . IS_IDENTICAL
    (118) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 300
    AND             shift and go to state 271
    OR              shift and go to state 272
    XOR             shift and go to state 273
    IS_EQUAL        shift and go to state 274
    IS_NOT_EQUAL    shift and go to state 275
    IS_IDENTICAL    shift and go to state 276
    IS_NOT_IDENTICAL shift and go to state 277

    condicion_booleana             shift and go to state 270

state 238

    (119) operaciones_mat -> valor operadores valor .
    (119) operaciones_mat -> valor . operadores valor
    (120) operaciones_mat -> valor . operadores operaciones_mat
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    SEMI            reduce using rule 119 (operaciones_mat -> valor operadores valor .)
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 169

state 239

    (120) operaciones_mat -> valor operadores operaciones_mat .

    SEMI            reduce using rule 120 (operaciones_mat -> valor operadores operaciones_mat .)


state 240

    (121) operaciones_mat -> VARIABLE . operadores VARIABLE
    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    EQUALS          shift and go to state 178
    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 177

state 241

    (56) imprimir -> ECHO NOMBRE LBRACKET ENTERO . RBRACKET SEMI

    RBRACKET        shift and go to state 301


state 242

    (121) operaciones_mat -> VARIABLE operadores VARIABLE .

    SEMI            reduce using rule 121 (operaciones_mat -> VARIABLE operadores VARIABLE .)


state 243

    (123) operaciones_mat_par -> LPAREN valor operadores . valor RPAREN
    (124) operaciones_mat_par -> LPAREN valor operadores . operaciones_mat_par RPAREN
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (123) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (124) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (125) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (126) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    LPAREN          shift and go to state 95
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    VARIABLE        shift and go to state 304
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 302
    operaciones_mat_par            shift and go to state 303
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 244

    (125) operaciones_mat_par -> LPAREN VARIABLE operadores . VARIABLE RPAREN
    (126) operaciones_mat_par -> LPAREN VARIABLE operadores . valor RPAREN operadores valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 305
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 306
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 245

    (54) imprimir -> PRINT LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 307


state 246

    (204) casting -> LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 308


state 247

    (140) llamada_funcion -> NOMBRE LPAREN params_list RPAREN . SEMI

    SEMI            shift and go to state 309


state 248

    (135) params_list -> params_list COMMA . param
    (132) param -> . VARIABLE
    (133) param -> . asignacion
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 188
    VAR             shift and go to state 39
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79

    param                          shift and go to state 310
    asignacion                     shift and go to state 189
    proteccion                     shift and go to state 126
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42

state 249

    (206) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . tipoDato SEMI
    (121) operaciones_mat -> VARIABLE operadores . VARIABLE
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 242
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    tipoDato                       shift and go to state 311
    numero                         shift and go to state 93

state 250

    (30) asignacion -> VARIABLE EQUALS valor SEMI .

    $end            reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RBRACE          reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)
    SEMI            reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RPAREN          reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)
    COMMA           reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)
    VARIABLE        reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)
    LPAREN          reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)
    CADENA          reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BOOLEANO        reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)
    ENTERO          reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)
    DECIMAL         reduce using rule 30 (asignacion -> VARIABLE EQUALS valor SEMI .)


state 251

    (39) asignacion -> VARIABLE EQUALS operaciones_mat SEMI .

    $end            reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RBRACE          reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    SEMI            reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RPAREN          reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    COMMA           reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    VARIABLE        reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    LPAREN          reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    CADENA          reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BOOLEANO        reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    ENTERO          reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    DECIMAL         reduce using rule 39 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)


state 252

    (156) bcolas -> VARIABLE EQUALS NEW SPLQUEUE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 312


state 253

    (157) bpila -> VARIABLE EQUALS NEW SPLSTACK . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 313


state 254

    (203) casting -> VARIABLE EQUALS LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 314


state 255

    (41) asignacion_array -> VARIABLE EQUALS array_def SEMI .

    $end            reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RBRACE          reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    SEMI            reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RPAREN          reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    COMMA           reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    VARIABLE        reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    LPAREN          reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    CADENA          reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BOOLEANO        reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    ENTERO          reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    DECIMAL         reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)


state 256

    (151) array_def -> ARRAY LPAREN . RPAREN
    (152) array_def -> ARRAY LPAREN . array_elmnt RPAREN
    (153) array_elmnt -> . array_elmnt COMMA valor
    (154) array_elmnt -> . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    RPAREN          shift and go to state 315
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    VARIABLE        shift and go to state 304
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    array_elmnt                    shift and go to state 316
    valor                          shift and go to state 317
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 257

    (190) bconcat -> VARIABLE CONCAT VARIABLE SEMI .

    $end            reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RBRACE          reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    SEMI            reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RPAREN          reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    COMMA           reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    VARIABLE        reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    LPAREN          reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    CADENA          reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BOOLEANO        reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    ENTERO          reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    DECIMAL         reduce using rule 190 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)


state 258

    (191) bconcat -> VARIABLE CONCAT CADENA SEMI .

    $end            reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    SEMI            reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    COMMA           reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    LPAREN          reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    CADENA          reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 191 (bconcat -> VARIABLE CONCAT CADENA SEMI .)


state 259

    (192) bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    LPAREN          reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 192 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)


state 260

    (205) aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .

    $end            reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RBRACE          reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    SEMI            reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RPAREN          reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    COMMA           reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    VARIABLE        reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    LPAREN          reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    CADENA          reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BOOLEANO        reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    ENTERO          reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    DECIMAL         reduce using rule 205 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)


state 261

    (134) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (138) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (139) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (135) params_list -> . params_list COMMA param
    (136) params_list -> . param
    (132) param -> . VARIABLE
    (133) param -> . asignacion
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    RPAREN          shift and go to state 318
    VARIABLE        shift and go to state 188
    VAR             shift and go to state 39
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79

    params_list                    shift and go to state 298
    param                          shift and go to state 187
    asignacion                     shift and go to state 189
    proteccion                     shift and go to state 126
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42

state 262

    (42) constante -> DEFINE LPAREN CADENA COMMA . valor RPAREN SEMI
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    VARIABLE        shift and go to state 304
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 319
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 263

    (43) constante -> DEFINE LPAREN NOMBRE COMMA . ARRAY RPAREN SEMI

    ARRAY           shift and go to state 320


state 264

    (189) bconcat -> CADENA CONCAT CADENA SEMI .

    $end            reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)
    SEMI            reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)
    COMMA           reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)
    LPAREN          reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)
    CADENA          reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 189 (bconcat -> CADENA CONCAT CADENA SEMI .)


state 265

    (193) bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    LPAREN          reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 193 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)


state 266

    (158) lectura -> READLINE LPAREN CADENA RPAREN . SEMI

    SEMI            shift and go to state 321


state 267

    (159) lectura -> READLINE LPAREN RPAREN SEMI .

    $end            reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 159 (lectura -> READLINE LPAREN RPAREN SEMI .)


state 268

    (73) condicion -> LPAREN VARIABLE . operadores valor RPAREN operador_logico valor
    (74) condicion -> LPAREN VARIABLE . operadores valor RPAREN condicion_booleana valor
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 322

state 269

    (88) bwhile -> WHILE LPAREN condicion RPAREN . LBRACE stc_bloque RBRACE
    (89) bwhile -> WHILE LPAREN condicion RPAREN . COLON stc_bloque

    LBRACE          shift and go to state 323
    COLON           shift and go to state 324


state 270

    (75) condicion -> condicion condicion_booleana . condicion
    (76) condicion -> condicion condicion_booleana . comprobacion
    (67) condicion -> . VARIABLE operador_logico VARIABLE
    (68) condicion -> . valor operador_logico valor
    (69) condicion -> . VARIABLE operador_logico valor
    (70) condicion -> . VARIABLE condicion_booleana VARIABLE
    (71) condicion -> . valor condicion_booleana valor
    (72) condicion -> . VARIABLE condicion_booleana valor
    (73) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (74) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (75) condicion -> . condicion condicion_booleana condicion
    (76) condicion -> . condicion condicion_booleana comprobacion
    (171) comprobacion -> . NOMBRE LPAREN valor RPAREN
    (172) comprobacion -> . NOMBRE LPAREN VARIABLE RPAREN
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 216
    LPAREN          shift and go to state 214
    NOMBRE          shift and go to state 327
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    condicion                      shift and go to state 325
    comprobacion                   shift and go to state 326
    valor                          shift and go to state 217
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 271

    (112) condicion_booleana -> AND .

    VARIABLE        reduce using rule 112 (condicion_booleana -> AND .)
    LPAREN          reduce using rule 112 (condicion_booleana -> AND .)
    NOMBRE          reduce using rule 112 (condicion_booleana -> AND .)
    CADENA          reduce using rule 112 (condicion_booleana -> AND .)
    BOOLEANO        reduce using rule 112 (condicion_booleana -> AND .)
    ENTERO          reduce using rule 112 (condicion_booleana -> AND .)
    DECIMAL         reduce using rule 112 (condicion_booleana -> AND .)


state 272

    (113) condicion_booleana -> OR .

    VARIABLE        reduce using rule 113 (condicion_booleana -> OR .)
    LPAREN          reduce using rule 113 (condicion_booleana -> OR .)
    NOMBRE          reduce using rule 113 (condicion_booleana -> OR .)
    CADENA          reduce using rule 113 (condicion_booleana -> OR .)
    BOOLEANO        reduce using rule 113 (condicion_booleana -> OR .)
    ENTERO          reduce using rule 113 (condicion_booleana -> OR .)
    DECIMAL         reduce using rule 113 (condicion_booleana -> OR .)


state 273

    (114) condicion_booleana -> XOR .

    VARIABLE        reduce using rule 114 (condicion_booleana -> XOR .)
    LPAREN          reduce using rule 114 (condicion_booleana -> XOR .)
    NOMBRE          reduce using rule 114 (condicion_booleana -> XOR .)
    CADENA          reduce using rule 114 (condicion_booleana -> XOR .)
    BOOLEANO        reduce using rule 114 (condicion_booleana -> XOR .)
    ENTERO          reduce using rule 114 (condicion_booleana -> XOR .)
    DECIMAL         reduce using rule 114 (condicion_booleana -> XOR .)


state 274

    (115) condicion_booleana -> IS_EQUAL .

    VARIABLE        reduce using rule 115 (condicion_booleana -> IS_EQUAL .)
    LPAREN          reduce using rule 115 (condicion_booleana -> IS_EQUAL .)
    NOMBRE          reduce using rule 115 (condicion_booleana -> IS_EQUAL .)
    CADENA          reduce using rule 115 (condicion_booleana -> IS_EQUAL .)
    BOOLEANO        reduce using rule 115 (condicion_booleana -> IS_EQUAL .)
    ENTERO          reduce using rule 115 (condicion_booleana -> IS_EQUAL .)
    DECIMAL         reduce using rule 115 (condicion_booleana -> IS_EQUAL .)


state 275

    (116) condicion_booleana -> IS_NOT_EQUAL .

    VARIABLE        reduce using rule 116 (condicion_booleana -> IS_NOT_EQUAL .)
    LPAREN          reduce using rule 116 (condicion_booleana -> IS_NOT_EQUAL .)
    NOMBRE          reduce using rule 116 (condicion_booleana -> IS_NOT_EQUAL .)
    CADENA          reduce using rule 116 (condicion_booleana -> IS_NOT_EQUAL .)
    BOOLEANO        reduce using rule 116 (condicion_booleana -> IS_NOT_EQUAL .)
    ENTERO          reduce using rule 116 (condicion_booleana -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 116 (condicion_booleana -> IS_NOT_EQUAL .)


state 276

    (117) condicion_booleana -> IS_IDENTICAL .

    VARIABLE        reduce using rule 117 (condicion_booleana -> IS_IDENTICAL .)
    LPAREN          reduce using rule 117 (condicion_booleana -> IS_IDENTICAL .)
    NOMBRE          reduce using rule 117 (condicion_booleana -> IS_IDENTICAL .)
    CADENA          reduce using rule 117 (condicion_booleana -> IS_IDENTICAL .)
    BOOLEANO        reduce using rule 117 (condicion_booleana -> IS_IDENTICAL .)
    ENTERO          reduce using rule 117 (condicion_booleana -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 117 (condicion_booleana -> IS_IDENTICAL .)


state 277

    (118) condicion_booleana -> IS_NOT_IDENTICAL .

    VARIABLE        reduce using rule 118 (condicion_booleana -> IS_NOT_IDENTICAL .)
    LPAREN          reduce using rule 118 (condicion_booleana -> IS_NOT_IDENTICAL .)
    NOMBRE          reduce using rule 118 (condicion_booleana -> IS_NOT_IDENTICAL .)
    CADENA          reduce using rule 118 (condicion_booleana -> IS_NOT_IDENTICAL .)
    BOOLEANO        reduce using rule 118 (condicion_booleana -> IS_NOT_IDENTICAL .)
    ENTERO          reduce using rule 118 (condicion_booleana -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 118 (condicion_booleana -> IS_NOT_IDENTICAL .)


state 278

    (67) condicion -> VARIABLE operador_logico . VARIABLE
    (69) condicion -> VARIABLE operador_logico . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 328
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 329
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 279

    (70) condicion -> VARIABLE condicion_booleana . VARIABLE
    (72) condicion -> VARIABLE condicion_booleana . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 330
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 331
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 280

    (103) operador_logico -> SMALLER .

    VARIABLE        reduce using rule 103 (operador_logico -> SMALLER .)
    CADENA          reduce using rule 103 (operador_logico -> SMALLER .)
    BOOLEANO        reduce using rule 103 (operador_logico -> SMALLER .)
    ENTERO          reduce using rule 103 (operador_logico -> SMALLER .)
    DECIMAL         reduce using rule 103 (operador_logico -> SMALLER .)


state 281

    (104) operador_logico -> GREATER .

    VARIABLE        reduce using rule 104 (operador_logico -> GREATER .)
    CADENA          reduce using rule 104 (operador_logico -> GREATER .)
    BOOLEANO        reduce using rule 104 (operador_logico -> GREATER .)
    ENTERO          reduce using rule 104 (operador_logico -> GREATER .)
    DECIMAL         reduce using rule 104 (operador_logico -> GREATER .)


state 282

    (105) operador_logico -> IS_SMALLER_OR_EQUAL .

    VARIABLE        reduce using rule 105 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    CADENA          reduce using rule 105 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    BOOLEANO        reduce using rule 105 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    ENTERO          reduce using rule 105 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 105 (operador_logico -> IS_SMALLER_OR_EQUAL .)


state 283

    (106) operador_logico -> IS_GREATER_OR_EQUAL .

    VARIABLE        reduce using rule 106 (operador_logico -> IS_GREATER_OR_EQUAL .)
    CADENA          reduce using rule 106 (operador_logico -> IS_GREATER_OR_EQUAL .)
    BOOLEANO        reduce using rule 106 (operador_logico -> IS_GREATER_OR_EQUAL .)
    ENTERO          reduce using rule 106 (operador_logico -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 106 (operador_logico -> IS_GREATER_OR_EQUAL .)


state 284

    (68) condicion -> valor operador_logico . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    VARIABLE        shift and go to state 304
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 332
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 285

    (71) condicion -> valor condicion_booleana . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    VARIABLE        shift and go to state 304
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 333
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 286

    (90) bdo -> DO LBRACE cuerpo RBRACE . bwhile
    (88) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque

    WHILE           shift and go to state 49

    bwhile                         shift and go to state 334

state 287

    (77) bfor -> FOR LPAREN asignacion condicion . SEMI for_incr RPAREN stc_bloque_def
    (75) condicion -> condicion . condicion_booleana condicion
    (76) condicion -> condicion . condicion_booleana comprobacion
    (112) condicion_booleana -> . AND
    (113) condicion_booleana -> . OR
    (114) condicion_booleana -> . XOR
    (115) condicion_booleana -> . IS_EQUAL
    (116) condicion_booleana -> . IS_NOT_EQUAL
    (117) condicion_booleana -> . IS_IDENTICAL
    (118) condicion_booleana -> . IS_NOT_IDENTICAL

    SEMI            shift and go to state 335
    AND             shift and go to state 271
    OR              shift and go to state 272
    XOR             shift and go to state 273
    IS_EQUAL        shift and go to state 274
    IS_NOT_EQUAL    shift and go to state 275
    IS_IDENTICAL    shift and go to state 276
    IS_NOT_IDENTICAL shift and go to state 277

    condicion_booleana             shift and go to state 270

state 288

    (87) bforeach -> FOREACH LPAREN VARIABLE AS . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 336


state 289

    (80) stc_bloque_def -> LBRACE stc_bloque . RBRACE
    (78) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 337
    SEMI            shift and go to state 338


state 290

    (79) stc_bloque -> breturn .

    RBRACE          reduce using rule 79 (stc_bloque -> breturn .)
    SEMI            reduce using rule 79 (stc_bloque -> breturn .)
    $end            reduce using rule 79 (stc_bloque -> breturn .)


state 291

    (95) btry -> TRY LBRACE stc_bloque_def RBRACE . catches
    (96) catches -> . catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
    (97) catches -> . empty
    (155) empty -> .

    CATCH           reduce using rule 155 (empty -> .)
    $end            reduce using rule 155 (empty -> .)
    RBRACE          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)

    catches                        shift and go to state 339
    empty                          shift and go to state 340

state 292

    (62) condicion_else -> ELSE LBRACE cuerpo RBRACE .

    $end            reduce using rule 62 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 62 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 62 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)


state 293

    (61) condicion_elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 341


state 294

    (91) bswitch -> SWITCH LPAREN VARIABLE RPAREN . LBRACE cuerpo SEMI RBRACE

    LBRACE          shift and go to state 342


state 295

    (141) brand -> RAND LPAREN ENTERO COMMA . ENTERO RPAREN SEMI

    ENTERO          shift and go to state 343


state 296

    (160) escribir -> FWRITE LPAREN NOMBRE COMMA . CADENA RPAREN SEMI

    CADENA          shift and go to state 344


state 297

    (161) btrim -> TRIM LPAREN NOMBRE LPAREN . NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 345


state 298

    (134) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list . RPAREN stc_bloque_def
    (135) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 346
    COMMA           shift and go to state 248


state 299

    (138) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (139) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (137) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN . COLON VOID LBRACE empty RBRACE
    (80) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 348
    COLON           shift and go to state 349

    stc_bloque_def                 shift and go to state 347

state 300

    (60) condicion_if -> IF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 350


state 301

    (56) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET . SEMI

    SEMI            shift and go to state 351


state 302

    (123) operaciones_mat_par -> LPAREN valor operadores valor . RPAREN

    RPAREN          shift and go to state 352


state 303

    (124) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par . RPAREN

    RPAREN          shift and go to state 353


state 304

    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    EQUALS          shift and go to state 178


state 305

    (125) operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE . RPAREN
    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 354
    EQUALS          shift and go to state 178


state 306

    (126) operaciones_mat_par -> LPAREN VARIABLE operadores valor . RPAREN operadores valor

    RPAREN          shift and go to state 355


state 307

    (54) imprimir -> PRINT LPAREN valor RPAREN SEMI .

    $end            reduce using rule 54 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 54 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 54 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)


state 308

    (204) casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 204 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 204 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 204 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 309

    (140) llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .

    $end            reduce using rule 140 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    RBRACE          reduce using rule 140 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    SEMI            reduce using rule 140 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)


state 310

    (135) params_list -> params_list COMMA param .

    RPAREN          reduce using rule 135 (params_list -> params_list COMMA param .)
    COMMA           reduce using rule 135 (params_list -> params_list COMMA param .)


state 311

    (206) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato . SEMI

    SEMI            shift and go to state 356


state 312

    (156) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 357


state 313

    (157) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 358


state 314

    (203) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 359


state 315

    (151) array_def -> ARRAY LPAREN RPAREN .

    SEMI            reduce using rule 151 (array_def -> ARRAY LPAREN RPAREN .)


state 316

    (152) array_def -> ARRAY LPAREN array_elmnt . RPAREN
    (153) array_elmnt -> array_elmnt . COMMA valor

    RPAREN          shift and go to state 360
    COMMA           shift and go to state 361


state 317

    (154) array_elmnt -> valor .

    RPAREN          reduce using rule 154 (array_elmnt -> valor .)
    COMMA           reduce using rule 154 (array_elmnt -> valor .)


state 318

    (138) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (139) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (80) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 348

    stc_bloque_def                 shift and go to state 347

state 319

    (42) constante -> DEFINE LPAREN CADENA COMMA valor . RPAREN SEMI

    RPAREN          shift and go to state 362


state 320

    (43) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY . RPAREN SEMI

    RPAREN          shift and go to state 363


state 321

    (158) lectura -> READLINE LPAREN CADENA RPAREN SEMI .

    $end            reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    SEMI            reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    COMMA           reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    CADENA          reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 158 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)


state 322

    (73) condicion -> LPAREN VARIABLE operadores . valor RPAREN operador_logico valor
    (74) condicion -> LPAREN VARIABLE operadores . valor RPAREN condicion_booleana valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    VARIABLE        shift and go to state 304
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 364
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 323

    (88) bwhile -> WHILE LPAREN condicion RPAREN LBRACE . stc_bloque RBRACE
    (78) stc_bloque -> . stc_bloque SEMI cuerpo
    (79) stc_bloque -> . breturn
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI
    (155) empty -> .

    RETURN          shift and go to state 71
    RBRACE          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)

    stc_bloque                     shift and go to state 365
    breturn                        shift and go to state 290
    empty                          shift and go to state 70

state 324

    (89) bwhile -> WHILE LPAREN condicion RPAREN COLON . stc_bloque
    (78) stc_bloque -> . stc_bloque SEMI cuerpo
    (79) stc_bloque -> . breturn
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI
    (155) empty -> .

    RETURN          shift and go to state 71
    RBRACE          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    $end            reduce using rule 155 (empty -> .)

    stc_bloque                     shift and go to state 366
    breturn                        shift and go to state 290
    empty                          shift and go to state 70

state 325

    (75) condicion -> condicion condicion_booleana condicion .
    (75) condicion -> condicion . condicion_booleana condicion
    (76) condicion -> condicion . condicion_booleana comprobacion
    (112) condicion_booleana -> . AND
    (113) condicion_booleana -> . OR
    (114) condicion_booleana -> . XOR
    (115) condicion_booleana -> . IS_EQUAL
    (116) condicion_booleana -> . IS_NOT_EQUAL
    (117) condicion_booleana -> . IS_IDENTICAL
    (118) condicion_booleana -> . IS_NOT_IDENTICAL

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IS_EQUAL resolved as shift
  ! shift/reduce conflict for IS_NOT_EQUAL resolved as shift
  ! shift/reduce conflict for IS_IDENTICAL resolved as shift
  ! shift/reduce conflict for IS_NOT_IDENTICAL resolved as shift
    RPAREN          reduce using rule 75 (condicion -> condicion condicion_booleana condicion .)
    SEMI            reduce using rule 75 (condicion -> condicion condicion_booleana condicion .)
    AND             shift and go to state 271
    OR              shift and go to state 272
    XOR             shift and go to state 273
    IS_EQUAL        shift and go to state 274
    IS_NOT_EQUAL    shift and go to state 275
    IS_IDENTICAL    shift and go to state 276
    IS_NOT_IDENTICAL shift and go to state 277

  ! AND             [ reduce using rule 75 (condicion -> condicion condicion_booleana condicion .) ]
  ! OR              [ reduce using rule 75 (condicion -> condicion condicion_booleana condicion .) ]
  ! XOR             [ reduce using rule 75 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_EQUAL        [ reduce using rule 75 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 75 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_IDENTICAL    [ reduce using rule 75 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 75 (condicion -> condicion condicion_booleana condicion .) ]

    condicion_booleana             shift and go to state 270

state 326

    (76) condicion -> condicion condicion_booleana comprobacion .

    RPAREN          reduce using rule 76 (condicion -> condicion condicion_booleana comprobacion .)
    AND             reduce using rule 76 (condicion -> condicion condicion_booleana comprobacion .)
    OR              reduce using rule 76 (condicion -> condicion condicion_booleana comprobacion .)
    XOR             reduce using rule 76 (condicion -> condicion condicion_booleana comprobacion .)
    IS_EQUAL        reduce using rule 76 (condicion -> condicion condicion_booleana comprobacion .)
    IS_NOT_EQUAL    reduce using rule 76 (condicion -> condicion condicion_booleana comprobacion .)
    IS_IDENTICAL    reduce using rule 76 (condicion -> condicion condicion_booleana comprobacion .)
    IS_NOT_IDENTICAL reduce using rule 76 (condicion -> condicion condicion_booleana comprobacion .)
    SEMI            reduce using rule 76 (condicion -> condicion condicion_booleana comprobacion .)


state 327

    (171) comprobacion -> NOMBRE . LPAREN valor RPAREN
    (172) comprobacion -> NOMBRE . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 367


state 328

    (67) condicion -> VARIABLE operador_logico VARIABLE .
    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 67 (condicion -> VARIABLE operador_logico VARIABLE .)
    AND             reduce using rule 67 (condicion -> VARIABLE operador_logico VARIABLE .)
    OR              reduce using rule 67 (condicion -> VARIABLE operador_logico VARIABLE .)
    XOR             reduce using rule 67 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_EQUAL        reduce using rule 67 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 67 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_IDENTICAL    reduce using rule 67 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 67 (condicion -> VARIABLE operador_logico VARIABLE .)
    SEMI            reduce using rule 67 (condicion -> VARIABLE operador_logico VARIABLE .)
    EQUALS          shift and go to state 178


state 329

    (69) condicion -> VARIABLE operador_logico valor .

    RPAREN          reduce using rule 69 (condicion -> VARIABLE operador_logico valor .)
    AND             reduce using rule 69 (condicion -> VARIABLE operador_logico valor .)
    OR              reduce using rule 69 (condicion -> VARIABLE operador_logico valor .)
    XOR             reduce using rule 69 (condicion -> VARIABLE operador_logico valor .)
    IS_EQUAL        reduce using rule 69 (condicion -> VARIABLE operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 69 (condicion -> VARIABLE operador_logico valor .)
    IS_IDENTICAL    reduce using rule 69 (condicion -> VARIABLE operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 69 (condicion -> VARIABLE operador_logico valor .)
    SEMI            reduce using rule 69 (condicion -> VARIABLE operador_logico valor .)


state 330

    (70) condicion -> VARIABLE condicion_booleana VARIABLE .
    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 70 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    AND             reduce using rule 70 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    OR              reduce using rule 70 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    XOR             reduce using rule 70 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_EQUAL        reduce using rule 70 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 70 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_IDENTICAL    reduce using rule 70 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 70 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    SEMI            reduce using rule 70 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    EQUALS          shift and go to state 178


state 331

    (72) condicion -> VARIABLE condicion_booleana valor .

    RPAREN          reduce using rule 72 (condicion -> VARIABLE condicion_booleana valor .)
    AND             reduce using rule 72 (condicion -> VARIABLE condicion_booleana valor .)
    OR              reduce using rule 72 (condicion -> VARIABLE condicion_booleana valor .)
    XOR             reduce using rule 72 (condicion -> VARIABLE condicion_booleana valor .)
    IS_EQUAL        reduce using rule 72 (condicion -> VARIABLE condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 72 (condicion -> VARIABLE condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 72 (condicion -> VARIABLE condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 72 (condicion -> VARIABLE condicion_booleana valor .)
    SEMI            reduce using rule 72 (condicion -> VARIABLE condicion_booleana valor .)


state 332

    (68) condicion -> valor operador_logico valor .

    RPAREN          reduce using rule 68 (condicion -> valor operador_logico valor .)
    AND             reduce using rule 68 (condicion -> valor operador_logico valor .)
    OR              reduce using rule 68 (condicion -> valor operador_logico valor .)
    XOR             reduce using rule 68 (condicion -> valor operador_logico valor .)
    IS_EQUAL        reduce using rule 68 (condicion -> valor operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 68 (condicion -> valor operador_logico valor .)
    IS_IDENTICAL    reduce using rule 68 (condicion -> valor operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 68 (condicion -> valor operador_logico valor .)
    SEMI            reduce using rule 68 (condicion -> valor operador_logico valor .)


state 333

    (71) condicion -> valor condicion_booleana valor .

    RPAREN          reduce using rule 71 (condicion -> valor condicion_booleana valor .)
    AND             reduce using rule 71 (condicion -> valor condicion_booleana valor .)
    OR              reduce using rule 71 (condicion -> valor condicion_booleana valor .)
    XOR             reduce using rule 71 (condicion -> valor condicion_booleana valor .)
    IS_EQUAL        reduce using rule 71 (condicion -> valor condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 71 (condicion -> valor condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 71 (condicion -> valor condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 71 (condicion -> valor condicion_booleana valor .)
    SEMI            reduce using rule 71 (condicion -> valor condicion_booleana valor .)


state 334

    (90) bdo -> DO LBRACE cuerpo RBRACE bwhile .

    $end            reduce using rule 90 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    RBRACE          reduce using rule 90 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    SEMI            reduce using rule 90 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)


state 335

    (77) bfor -> FOR LPAREN asignacion condicion SEMI . for_incr RPAREN stc_bloque_def
    (81) for_incr -> . VARIABLE SUMA SUMA
    (82) for_incr -> . SUMA SUMA VARIABLE
    (83) for_incr -> . VARIABLE RESTA RESTA
    (84) for_incr -> . RESTA RESTA VARIABLE
    (85) for_incr -> . VARIABLE SUMA EQUALS numero
    (86) for_incr -> . VARIABLE RESTA EQUALS numero

    VARIABLE        shift and go to state 369
    SUMA            shift and go to state 370
    RESTA           shift and go to state 371

    for_incr                       shift and go to state 368

state 336

    (87) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 372


state 337

    (80) stc_bloque_def -> LBRACE stc_bloque RBRACE .

    RBRACE          reduce using rule 80 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    $end            reduce using rule 80 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 80 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    CATCH           reduce using rule 80 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)


state 338

    (78) stc_bloque -> stc_bloque SEMI . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . bforeach
    (11) cuerpo -> . btry
    (12) cuerpo -> . condicion_ifelse
    (13) cuerpo -> . condicion_else
    (14) cuerpo -> . condicion_elseif
    (15) cuerpo -> . bswitch
    (16) cuerpo -> . bcase
    (17) cuerpo -> . bgoto
    (18) cuerpo -> . bcolas
    (19) cuerpo -> . bpila
    (20) cuerpo -> . bcortes
    (21) cuerpo -> . brand
    (22) cuerpo -> . escribir
    (23) cuerpo -> . btrim
    (24) cuerpo -> . otros
    (25) cuerpo -> . breturn
    (26) cuerpo -> . comment
    (27) cuerpo -> . casting
    (28) cuerpo -> . bconcat
    (29) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (127) funciones -> . funcion_nparams
    (128) funciones -> . proteccion funcion_nparams
    (129) funciones -> . funcion_blank
    (130) funciones -> . proteccion funcion_blank
    (131) funciones -> . funcion_void
    (140) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (158) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (159) lectura -> . READLINE LPAREN RPAREN SEMI
    (88) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (90) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (77) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (87) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (95) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) condicion_ifelse -> . condicion_if
    (64) condicion_ifelse -> . condicion_if condicion_else
    (65) condicion_ifelse -> . condicion_if condicion_elseif
    (66) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (62) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (61) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (91) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (92) bcase -> . CASE ENTERO COLON
    (164) bgoto -> . GOTO NOMBRE SEMI
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (165) bcortes -> . EXIT SEMI
    (166) bcortes -> . BREAK SEMI
    (167) bcortes -> . DEFAULT SEMI
    (168) bcortes -> . CONTINUE SEMI
    (141) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (160) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (161) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (169) otros -> . SMALLER NOMBRE GREATER
    (170) otros -> . NOMBRE COLON
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI
    (162) comment -> . COMENTARIOS
    (163) comment -> . DOC_COMENTARIOS
    (203) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (204) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (173) simbolos -> . LPAREN RPAREN
    (174) simbolos -> . LPAREN
    (175) simbolos -> . RPAREN
    (176) simbolos -> . LBRACKET RBRACKET
    (177) simbolos -> . LBRACKET
    (178) simbolos -> . RBRACKET
    (179) simbolos -> . LBRACE RBRACE
    (180) simbolos -> . LBRACE
    (181) simbolos -> . RBRACE instrucciones
    (182) simbolos -> . OPEN_TAG CLOSE_TAG
    (183) simbolos -> . OPEN_TAG
    (184) simbolos -> . CLOSE_TAG
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (134) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (137) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (60) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (155) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    VARIABLE        shift and go to state 38
    VAR             shift and go to state 39
    NOMBRE          shift and go to state 35
    DEFINE          shift and go to state 46
    READLINE        shift and go to state 48
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    ELSE            shift and go to state 57
    ELSEIF          shift and go to state 58
    SWITCH          shift and go to state 59
    CASE            shift and go to state 60
    GOTO            shift and go to state 61
    EXIT            shift and go to state 62
    BREAK           shift and go to state 63
    DEFAULT         shift and go to state 64
    CONTINUE        shift and go to state 65
    RAND            shift and go to state 66
    FWRITE          shift and go to state 67
    TRIM            shift and go to state 68
    SMALLER         shift and go to state 69
    RETURN          shift and go to state 71
    COMENTARIOS     shift and go to state 72
    DOC_COMENTARIOS shift and go to state 73
    LPAREN          shift and go to state 33
    CADENA          shift and go to state 47
    RPAREN          shift and go to state 34
    LBRACKET        shift and go to state 36
    RBRACKET        shift and go to state 37
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 74
    CLOSE_TAG       shift and go to state 75
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79
    FUNCTION        shift and go to state 80
    IF              shift and go to state 81
    SEMI            reduce using rule 155 (empty -> .)
    $end            reduce using rule 155 (empty -> .)

  ! RBRACE          [ reduce using rule 155 (empty -> .) ]

    cuerpo                         shift and go to state 373
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    bforeach                       shift and go to state 11
    btry                           shift and go to state 12
    condicion_ifelse               shift and go to state 13
    condicion_else                 shift and go to state 14
    condicion_elseif               shift and go to state 15
    bswitch                        shift and go to state 16
    bcase                          shift and go to state 17
    bgoto                          shift and go to state 18
    bcolas                         shift and go to state 19
    bpila                          shift and go to state 20
    bcortes                        shift and go to state 21
    brand                          shift and go to state 22
    escribir                       shift and go to state 23
    btrim                          shift and go to state 24
    otros                          shift and go to state 25
    breturn                        shift and go to state 26
    comment                        shift and go to state 27
    casting                        shift and go to state 28
    bconcat                        shift and go to state 29
    simbolos                       shift and go to state 30
    proteccion                     shift and go to state 40
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42
    funcion_nparams                shift and go to state 43
    funcion_blank                  shift and go to state 44
    funcion_void                   shift and go to state 45
    condicion_if                   shift and go to state 56
    empty                          shift and go to state 70

state 339

    (95) btry -> TRY LBRACE stc_bloque_def RBRACE catches .
    (96) catches -> catches . CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    $end            reduce using rule 95 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    RBRACE          reduce using rule 95 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    SEMI            reduce using rule 95 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    CATCH           shift and go to state 374


state 340

    (97) catches -> empty .

    CATCH           reduce using rule 97 (catches -> empty .)
    $end            reduce using rule 97 (catches -> empty .)
    RBRACE          reduce using rule 97 (catches -> empty .)
    SEMI            reduce using rule 97 (catches -> empty .)


state 341

    (61) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . bforeach
    (11) cuerpo -> . btry
    (12) cuerpo -> . condicion_ifelse
    (13) cuerpo -> . condicion_else
    (14) cuerpo -> . condicion_elseif
    (15) cuerpo -> . bswitch
    (16) cuerpo -> . bcase
    (17) cuerpo -> . bgoto
    (18) cuerpo -> . bcolas
    (19) cuerpo -> . bpila
    (20) cuerpo -> . bcortes
    (21) cuerpo -> . brand
    (22) cuerpo -> . escribir
    (23) cuerpo -> . btrim
    (24) cuerpo -> . otros
    (25) cuerpo -> . breturn
    (26) cuerpo -> . comment
    (27) cuerpo -> . casting
    (28) cuerpo -> . bconcat
    (29) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (127) funciones -> . funcion_nparams
    (128) funciones -> . proteccion funcion_nparams
    (129) funciones -> . funcion_blank
    (130) funciones -> . proteccion funcion_blank
    (131) funciones -> . funcion_void
    (140) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (158) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (159) lectura -> . READLINE LPAREN RPAREN SEMI
    (88) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (90) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (77) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (87) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (95) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) condicion_ifelse -> . condicion_if
    (64) condicion_ifelse -> . condicion_if condicion_else
    (65) condicion_ifelse -> . condicion_if condicion_elseif
    (66) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (62) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (61) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (91) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (92) bcase -> . CASE ENTERO COLON
    (164) bgoto -> . GOTO NOMBRE SEMI
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (165) bcortes -> . EXIT SEMI
    (166) bcortes -> . BREAK SEMI
    (167) bcortes -> . DEFAULT SEMI
    (168) bcortes -> . CONTINUE SEMI
    (141) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (160) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (161) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (169) otros -> . SMALLER NOMBRE GREATER
    (170) otros -> . NOMBRE COLON
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI
    (162) comment -> . COMENTARIOS
    (163) comment -> . DOC_COMENTARIOS
    (203) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (204) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (173) simbolos -> . LPAREN RPAREN
    (174) simbolos -> . LPAREN
    (175) simbolos -> . RPAREN
    (176) simbolos -> . LBRACKET RBRACKET
    (177) simbolos -> . LBRACKET
    (178) simbolos -> . RBRACKET
    (179) simbolos -> . LBRACE RBRACE
    (180) simbolos -> . LBRACE
    (181) simbolos -> . RBRACE instrucciones
    (182) simbolos -> . OPEN_TAG CLOSE_TAG
    (183) simbolos -> . OPEN_TAG
    (184) simbolos -> . CLOSE_TAG
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (134) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (137) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (60) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (155) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    VARIABLE        shift and go to state 38
    VAR             shift and go to state 39
    NOMBRE          shift and go to state 35
    DEFINE          shift and go to state 46
    READLINE        shift and go to state 48
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    ELSE            shift and go to state 57
    ELSEIF          shift and go to state 58
    SWITCH          shift and go to state 59
    CASE            shift and go to state 60
    GOTO            shift and go to state 61
    EXIT            shift and go to state 62
    BREAK           shift and go to state 63
    DEFAULT         shift and go to state 64
    CONTINUE        shift and go to state 65
    RAND            shift and go to state 66
    FWRITE          shift and go to state 67
    TRIM            shift and go to state 68
    SMALLER         shift and go to state 69
    RETURN          shift and go to state 71
    COMENTARIOS     shift and go to state 72
    DOC_COMENTARIOS shift and go to state 73
    LPAREN          shift and go to state 33
    CADENA          shift and go to state 47
    RPAREN          shift and go to state 34
    LBRACKET        shift and go to state 36
    RBRACKET        shift and go to state 37
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 74
    CLOSE_TAG       shift and go to state 75
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79
    FUNCTION        shift and go to state 80
    IF              shift and go to state 81

  ! RBRACE          [ reduce using rule 155 (empty -> .) ]

    cuerpo                         shift and go to state 375
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    bforeach                       shift and go to state 11
    btry                           shift and go to state 12
    condicion_ifelse               shift and go to state 13
    condicion_else                 shift and go to state 14
    condicion_elseif               shift and go to state 15
    bswitch                        shift and go to state 16
    bcase                          shift and go to state 17
    bgoto                          shift and go to state 18
    bcolas                         shift and go to state 19
    bpila                          shift and go to state 20
    bcortes                        shift and go to state 21
    brand                          shift and go to state 22
    escribir                       shift and go to state 23
    btrim                          shift and go to state 24
    otros                          shift and go to state 25
    breturn                        shift and go to state 26
    comment                        shift and go to state 27
    casting                        shift and go to state 28
    bconcat                        shift and go to state 29
    simbolos                       shift and go to state 30
    proteccion                     shift and go to state 40
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42
    funcion_nparams                shift and go to state 43
    funcion_blank                  shift and go to state 44
    funcion_void                   shift and go to state 45
    condicion_if                   shift and go to state 56
    empty                          shift and go to state 70

state 342

    (91) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE . cuerpo SEMI RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . bforeach
    (11) cuerpo -> . btry
    (12) cuerpo -> . condicion_ifelse
    (13) cuerpo -> . condicion_else
    (14) cuerpo -> . condicion_elseif
    (15) cuerpo -> . bswitch
    (16) cuerpo -> . bcase
    (17) cuerpo -> . bgoto
    (18) cuerpo -> . bcolas
    (19) cuerpo -> . bpila
    (20) cuerpo -> . bcortes
    (21) cuerpo -> . brand
    (22) cuerpo -> . escribir
    (23) cuerpo -> . btrim
    (24) cuerpo -> . otros
    (25) cuerpo -> . breturn
    (26) cuerpo -> . comment
    (27) cuerpo -> . casting
    (28) cuerpo -> . bconcat
    (29) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (127) funciones -> . funcion_nparams
    (128) funciones -> . proteccion funcion_nparams
    (129) funciones -> . funcion_blank
    (130) funciones -> . proteccion funcion_blank
    (131) funciones -> . funcion_void
    (140) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (158) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (159) lectura -> . READLINE LPAREN RPAREN SEMI
    (88) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (90) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (77) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (87) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (95) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) condicion_ifelse -> . condicion_if
    (64) condicion_ifelse -> . condicion_if condicion_else
    (65) condicion_ifelse -> . condicion_if condicion_elseif
    (66) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (62) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (61) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (91) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (92) bcase -> . CASE ENTERO COLON
    (164) bgoto -> . GOTO NOMBRE SEMI
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (165) bcortes -> . EXIT SEMI
    (166) bcortes -> . BREAK SEMI
    (167) bcortes -> . DEFAULT SEMI
    (168) bcortes -> . CONTINUE SEMI
    (141) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (160) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (161) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (169) otros -> . SMALLER NOMBRE GREATER
    (170) otros -> . NOMBRE COLON
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI
    (162) comment -> . COMENTARIOS
    (163) comment -> . DOC_COMENTARIOS
    (203) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (204) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (173) simbolos -> . LPAREN RPAREN
    (174) simbolos -> . LPAREN
    (175) simbolos -> . RPAREN
    (176) simbolos -> . LBRACKET RBRACKET
    (177) simbolos -> . LBRACKET
    (178) simbolos -> . RBRACKET
    (179) simbolos -> . LBRACE RBRACE
    (180) simbolos -> . LBRACE
    (181) simbolos -> . RBRACE instrucciones
    (182) simbolos -> . OPEN_TAG CLOSE_TAG
    (183) simbolos -> . OPEN_TAG
    (184) simbolos -> . CLOSE_TAG
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (134) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (137) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (60) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (155) empty -> .

    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    VARIABLE        shift and go to state 38
    VAR             shift and go to state 39
    NOMBRE          shift and go to state 35
    DEFINE          shift and go to state 46
    READLINE        shift and go to state 48
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    ELSE            shift and go to state 57
    ELSEIF          shift and go to state 58
    SWITCH          shift and go to state 59
    CASE            shift and go to state 60
    GOTO            shift and go to state 61
    EXIT            shift and go to state 62
    BREAK           shift and go to state 63
    DEFAULT         shift and go to state 64
    CONTINUE        shift and go to state 65
    RAND            shift and go to state 66
    FWRITE          shift and go to state 67
    TRIM            shift and go to state 68
    SMALLER         shift and go to state 69
    RETURN          shift and go to state 71
    COMENTARIOS     shift and go to state 72
    DOC_COMENTARIOS shift and go to state 73
    LPAREN          shift and go to state 33
    CADENA          shift and go to state 47
    RPAREN          shift and go to state 34
    LBRACKET        shift and go to state 36
    RBRACKET        shift and go to state 37
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 74
    CLOSE_TAG       shift and go to state 75
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79
    FUNCTION        shift and go to state 80
    IF              shift and go to state 81
    SEMI            reduce using rule 155 (empty -> .)

    cuerpo                         shift and go to state 376
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    bforeach                       shift and go to state 11
    btry                           shift and go to state 12
    condicion_ifelse               shift and go to state 13
    condicion_else                 shift and go to state 14
    condicion_elseif               shift and go to state 15
    bswitch                        shift and go to state 16
    bcase                          shift and go to state 17
    bgoto                          shift and go to state 18
    bcolas                         shift and go to state 19
    bpila                          shift and go to state 20
    bcortes                        shift and go to state 21
    brand                          shift and go to state 22
    escribir                       shift and go to state 23
    btrim                          shift and go to state 24
    otros                          shift and go to state 25
    breturn                        shift and go to state 26
    comment                        shift and go to state 27
    casting                        shift and go to state 28
    bconcat                        shift and go to state 29
    simbolos                       shift and go to state 30
    proteccion                     shift and go to state 40
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42
    funcion_nparams                shift and go to state 43
    funcion_blank                  shift and go to state 44
    funcion_void                   shift and go to state 45
    condicion_if                   shift and go to state 56
    empty                          shift and go to state 70

state 343

    (141) brand -> RAND LPAREN ENTERO COMMA ENTERO . RPAREN SEMI

    RPAREN          shift and go to state 377


state 344

    (160) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA . RPAREN SEMI

    RPAREN          shift and go to state 378


state 345

    (161) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE . RPAREN RPAREN SEMI

    RPAREN          shift and go to state 379


state 346

    (134) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN . stc_bloque_def
    (80) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 221

    stc_bloque_def                 shift and go to state 380

state 347

    (138) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .

    $end            reduce using rule 138 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 138 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    SEMI            reduce using rule 138 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)


state 348

    (139) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE . empty RBRACE
    (80) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (155) empty -> .
    (78) stc_bloque -> . stc_bloque SEMI cuerpo
    (79) stc_bloque -> . breturn
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI

    RBRACE          reduce using rule 155 (empty -> .)
    SEMI            reduce using rule 155 (empty -> .)
    RETURN          shift and go to state 71

    empty                          shift and go to state 381
    stc_bloque                     shift and go to state 289
    breturn                        shift and go to state 290

state 349

    (137) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON . VOID LBRACE empty RBRACE

    VOID            shift and go to state 382


state 350

    (60) condicion_if -> IF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . bforeach
    (11) cuerpo -> . btry
    (12) cuerpo -> . condicion_ifelse
    (13) cuerpo -> . condicion_else
    (14) cuerpo -> . condicion_elseif
    (15) cuerpo -> . bswitch
    (16) cuerpo -> . bcase
    (17) cuerpo -> . bgoto
    (18) cuerpo -> . bcolas
    (19) cuerpo -> . bpila
    (20) cuerpo -> . bcortes
    (21) cuerpo -> . brand
    (22) cuerpo -> . escribir
    (23) cuerpo -> . btrim
    (24) cuerpo -> . otros
    (25) cuerpo -> . breturn
    (26) cuerpo -> . comment
    (27) cuerpo -> . casting
    (28) cuerpo -> . bconcat
    (29) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (30) asignacion -> . VARIABLE EQUALS valor SEMI
    (31) asignacion -> . VAR asignacion
    (32) asignacion -> . proteccion asignacion
    (33) asignacion -> . VARIABLE EQUALS brand
    (34) asignacion -> . VARIABLE EQUALS escribir
    (35) asignacion -> . VARIABLE EQUALS btrim
    (36) asignacion -> . VARIABLE EQUALS lectura
    (37) asignacion -> . VARIABLE EQUALS bconcat
    (38) asignacion -> . asignacion_array
    (39) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (40) asignacion -> . aumentoCasting
    (127) funciones -> . funcion_nparams
    (128) funciones -> . proteccion funcion_nparams
    (129) funciones -> . funcion_blank
    (130) funciones -> . proteccion funcion_blank
    (131) funciones -> . funcion_void
    (140) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (158) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (159) lectura -> . READLINE LPAREN RPAREN SEMI
    (88) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (89) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (90) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (77) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (87) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (95) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) condicion_ifelse -> . condicion_if
    (64) condicion_ifelse -> . condicion_if condicion_else
    (65) condicion_ifelse -> . condicion_if condicion_elseif
    (66) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (62) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (61) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (91) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (92) bcase -> . CASE ENTERO COLON
    (164) bgoto -> . GOTO NOMBRE SEMI
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (165) bcortes -> . EXIT SEMI
    (166) bcortes -> . BREAK SEMI
    (167) bcortes -> . DEFAULT SEMI
    (168) bcortes -> . CONTINUE SEMI
    (141) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (160) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (161) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (169) otros -> . SMALLER NOMBRE GREATER
    (170) otros -> . NOMBRE COLON
    (146) breturn -> . empty
    (147) breturn -> . RETURN SEMI
    (148) breturn -> . RETURN NULL SEMI
    (149) breturn -> . RETURN VARIABLE SEMI
    (150) breturn -> . RETURN BOOLEANO SEMI
    (162) comment -> . COMENTARIOS
    (163) comment -> . DOC_COMENTARIOS
    (203) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (204) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (189) bconcat -> . CADENA CONCAT CADENA SEMI
    (190) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (191) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (192) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (193) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (173) simbolos -> . LPAREN RPAREN
    (174) simbolos -> . LPAREN
    (175) simbolos -> . RPAREN
    (176) simbolos -> . LBRACKET RBRACKET
    (177) simbolos -> . LBRACKET
    (178) simbolos -> . RBRACKET
    (179) simbolos -> . LBRACE RBRACE
    (180) simbolos -> . LBRACE
    (181) simbolos -> . RBRACE instrucciones
    (182) simbolos -> . OPEN_TAG CLOSE_TAG
    (183) simbolos -> . OPEN_TAG
    (184) simbolos -> . CLOSE_TAG
    (142) proteccion -> . PUBLIC
    (143) proteccion -> . PRIVATE
    (144) proteccion -> . PROTECTED
    (145) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (205) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (206) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (134) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (138) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (139) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (137) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (60) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (155) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 31
    PRINT           shift and go to state 32
    VARIABLE        shift and go to state 38
    VAR             shift and go to state 39
    NOMBRE          shift and go to state 35
    DEFINE          shift and go to state 46
    READLINE        shift and go to state 48
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    ELSE            shift and go to state 57
    ELSEIF          shift and go to state 58
    SWITCH          shift and go to state 59
    CASE            shift and go to state 60
    GOTO            shift and go to state 61
    EXIT            shift and go to state 62
    BREAK           shift and go to state 63
    DEFAULT         shift and go to state 64
    CONTINUE        shift and go to state 65
    RAND            shift and go to state 66
    FWRITE          shift and go to state 67
    TRIM            shift and go to state 68
    SMALLER         shift and go to state 69
    RETURN          shift and go to state 71
    COMENTARIOS     shift and go to state 72
    DOC_COMENTARIOS shift and go to state 73
    LPAREN          shift and go to state 33
    CADENA          shift and go to state 47
    RPAREN          shift and go to state 34
    LBRACKET        shift and go to state 36
    RBRACKET        shift and go to state 37
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 74
    CLOSE_TAG       shift and go to state 75
    PUBLIC          shift and go to state 76
    PRIVATE         shift and go to state 77
    PROTECTED       shift and go to state 78
    STATIC          shift and go to state 79
    FUNCTION        shift and go to state 80
    IF              shift and go to state 81

  ! RBRACE          [ reduce using rule 155 (empty -> .) ]

    cuerpo                         shift and go to state 383
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    bforeach                       shift and go to state 11
    btry                           shift and go to state 12
    condicion_ifelse               shift and go to state 13
    condicion_else                 shift and go to state 14
    condicion_elseif               shift and go to state 15
    bswitch                        shift and go to state 16
    bcase                          shift and go to state 17
    bgoto                          shift and go to state 18
    bcolas                         shift and go to state 19
    bpila                          shift and go to state 20
    bcortes                        shift and go to state 21
    brand                          shift and go to state 22
    escribir                       shift and go to state 23
    btrim                          shift and go to state 24
    otros                          shift and go to state 25
    breturn                        shift and go to state 26
    comment                        shift and go to state 27
    casting                        shift and go to state 28
    bconcat                        shift and go to state 29
    simbolos                       shift and go to state 30
    proteccion                     shift and go to state 40
    asignacion_array               shift and go to state 41
    aumentoCasting                 shift and go to state 42
    funcion_nparams                shift and go to state 43
    funcion_blank                  shift and go to state 44
    funcion_void                   shift and go to state 45
    condicion_if                   shift and go to state 56
    empty                          shift and go to state 70

state 351

    (56) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .

    $end            reduce using rule 56 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    RBRACE          reduce using rule 56 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    SEMI            reduce using rule 56 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)


state 352

    (123) operaciones_mat_par -> LPAREN valor operadores valor RPAREN .

    SEMI            reduce using rule 123 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)
    RPAREN          reduce using rule 123 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)


state 353

    (124) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .

    SEMI            reduce using rule 124 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)
    RPAREN          reduce using rule 124 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)


state 354

    (125) operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .

    SEMI            reduce using rule 125 (operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .)
    RPAREN          reduce using rule 125 (operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .)


state 355

    (126) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN . operadores valor
    (98) operadores -> . SUMA
    (99) operadores -> . RESTA
    (100) operadores -> . MULTIPLICACION
    (101) operadores -> . DIVISION
    (102) operadores -> . MODULO

    SUMA            shift and go to state 170
    RESTA           shift and go to state 171
    MULTIPLICACION  shift and go to state 172
    DIVISION        shift and go to state 173
    MODULO          shift and go to state 174

    operadores                     shift and go to state 384

state 356

    (206) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .

    $end            reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RBRACE          reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    SEMI            reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RPAREN          reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    COMMA           reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    VARIABLE        reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    LPAREN          reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    CADENA          reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BOOLEANO        reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    ENTERO          reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    DECIMAL         reduce using rule 206 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)


state 357

    (156) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 385


state 358

    (157) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN . SEMI

    SEMI            shift and go to state 386


state 359

    (203) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 387


state 360

    (152) array_def -> ARRAY LPAREN array_elmnt RPAREN .

    SEMI            reduce using rule 152 (array_def -> ARRAY LPAREN array_elmnt RPAREN .)


state 361

    (153) array_elmnt -> array_elmnt COMMA . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    VARIABLE        shift and go to state 304
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 388
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 362

    (42) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN . SEMI

    SEMI            shift and go to state 389


state 363

    (43) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN . SEMI

    SEMI            shift and go to state 390


state 364

    (73) condicion -> LPAREN VARIABLE operadores valor . RPAREN operador_logico valor
    (74) condicion -> LPAREN VARIABLE operadores valor . RPAREN condicion_booleana valor

    RPAREN          shift and go to state 391


state 365

    (88) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque . RBRACE
    (78) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 392
    SEMI            shift and go to state 338


state 366

    (89) bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .
    (78) stc_bloque -> stc_bloque . SEMI cuerpo

  ! shift/reduce conflict for SEMI resolved as shift
    $end            reduce using rule 89 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    RBRACE          reduce using rule 89 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    SEMI            shift and go to state 338

  ! SEMI            [ reduce using rule 89 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .) ]


state 367

    (171) comprobacion -> NOMBRE LPAREN . valor RPAREN
    (172) comprobacion -> NOMBRE LPAREN . VARIABLE RPAREN
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 394
    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 393
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 368

    (77) bfor -> FOR LPAREN asignacion condicion SEMI for_incr . RPAREN stc_bloque_def

    RPAREN          shift and go to state 395


state 369

    (81) for_incr -> VARIABLE . SUMA SUMA
    (83) for_incr -> VARIABLE . RESTA RESTA
    (85) for_incr -> VARIABLE . SUMA EQUALS numero
    (86) for_incr -> VARIABLE . RESTA EQUALS numero

    SUMA            shift and go to state 396
    RESTA           shift and go to state 397


state 370

    (82) for_incr -> SUMA . SUMA VARIABLE

    SUMA            shift and go to state 398


state 371

    (84) for_incr -> RESTA . RESTA VARIABLE

    RESTA           shift and go to state 399


state 372

    (87) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN . stc_bloque_def
    (80) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 221

    stc_bloque_def                 shift and go to state 400

state 373

    (78) stc_bloque -> stc_bloque SEMI cuerpo .

    RBRACE          reduce using rule 78 (stc_bloque -> stc_bloque SEMI cuerpo .)
    SEMI            reduce using rule 78 (stc_bloque -> stc_bloque SEMI cuerpo .)
    $end            reduce using rule 78 (stc_bloque -> stc_bloque SEMI cuerpo .)


state 374

    (96) catches -> catches CATCH . LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 401


state 375

    (61) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 402


state 376

    (91) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo . SEMI RBRACE

    SEMI            shift and go to state 403


state 377

    (141) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN . SEMI

    SEMI            shift and go to state 404


state 378

    (160) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN . SEMI

    SEMI            shift and go to state 405


state 379

    (161) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN . RPAREN SEMI

    RPAREN          shift and go to state 406


state 380

    (134) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .

    $end            reduce using rule 134 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 134 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    SEMI            reduce using rule 134 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)


state 381

    (139) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty . RBRACE
    (146) breturn -> empty .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 407
    SEMI            reduce using rule 146 (breturn -> empty .)

  ! RBRACE          [ reduce using rule 146 (breturn -> empty .) ]


state 382

    (137) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID . LBRACE empty RBRACE

    LBRACE          shift and go to state 408


state 383

    (60) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 409


state 384

    (126) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    VARIABLE        shift and go to state 304
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 410
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 385

    (156) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .

    $end            reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    AND             reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    OR              reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    XOR             reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 156 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)


state 386

    (157) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .

    $end            reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    AND             reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    OR              reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    XOR             reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 157 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)


state 387

    (203) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 203 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 203 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 203 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 388

    (153) array_elmnt -> array_elmnt COMMA valor .

    RPAREN          reduce using rule 153 (array_elmnt -> array_elmnt COMMA valor .)
    COMMA           reduce using rule 153 (array_elmnt -> array_elmnt COMMA valor .)


state 389

    (42) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .

    $end            reduce using rule 42 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    RBRACE          reduce using rule 42 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    SEMI            reduce using rule 42 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)


state 390

    (43) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .

    $end            reduce using rule 43 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    RBRACE          reduce using rule 43 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    SEMI            reduce using rule 43 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)


state 391

    (73) condicion -> LPAREN VARIABLE operadores valor RPAREN . operador_logico valor
    (74) condicion -> LPAREN VARIABLE operadores valor RPAREN . condicion_booleana valor
    (103) operador_logico -> . SMALLER
    (104) operador_logico -> . GREATER
    (105) operador_logico -> . IS_SMALLER_OR_EQUAL
    (106) operador_logico -> . IS_GREATER_OR_EQUAL
    (112) condicion_booleana -> . AND
    (113) condicion_booleana -> . OR
    (114) condicion_booleana -> . XOR
    (115) condicion_booleana -> . IS_EQUAL
    (116) condicion_booleana -> . IS_NOT_EQUAL
    (117) condicion_booleana -> . IS_IDENTICAL
    (118) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 280
    GREATER         shift and go to state 281
    IS_SMALLER_OR_EQUAL shift and go to state 282
    IS_GREATER_OR_EQUAL shift and go to state 283
    AND             shift and go to state 271
    OR              shift and go to state 272
    XOR             shift and go to state 273
    IS_EQUAL        shift and go to state 274
    IS_NOT_EQUAL    shift and go to state 275
    IS_IDENTICAL    shift and go to state 276
    IS_NOT_IDENTICAL shift and go to state 277

    operador_logico                shift and go to state 411
    condicion_booleana             shift and go to state 412

state 392

    (88) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .

    $end            reduce using rule 88 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    RBRACE          reduce using rule 88 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 88 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)


state 393

    (171) comprobacion -> NOMBRE LPAREN valor . RPAREN

    RPAREN          shift and go to state 413


state 394

    (172) comprobacion -> NOMBRE LPAREN VARIABLE . RPAREN
    (156) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 414
    EQUALS          shift and go to state 178


state 395

    (77) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN . stc_bloque_def
    (80) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 221

    stc_bloque_def                 shift and go to state 415

state 396

    (81) for_incr -> VARIABLE SUMA . SUMA
    (85) for_incr -> VARIABLE SUMA . EQUALS numero

    SUMA            shift and go to state 416
    EQUALS          shift and go to state 417


state 397

    (83) for_incr -> VARIABLE RESTA . RESTA
    (86) for_incr -> VARIABLE RESTA . EQUALS numero

    RESTA           shift and go to state 418
    EQUALS          shift and go to state 419


state 398

    (82) for_incr -> SUMA SUMA . VARIABLE

    VARIABLE        shift and go to state 420


state 399

    (84) for_incr -> RESTA RESTA . VARIABLE

    VARIABLE        shift and go to state 421


state 400

    (87) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .

    $end            reduce using rule 87 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 87 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 87 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)


state 401

    (96) catches -> catches CATCH LPAREN . NOMBRE VARIABLE RPAREN stc_bloque_def

    NOMBRE          shift and go to state 422


state 402

    (61) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    $end            reduce using rule 61 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 61 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 61 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    ELSE            reduce using rule 61 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 403

    (91) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI . RBRACE

    RBRACE          shift and go to state 423


state 404

    (141) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .

    $end            reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RBRACE          reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    SEMI            reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RPAREN          reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    COMMA           reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    VARIABLE        reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    LPAREN          reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    CADENA          reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BOOLEANO        reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    ENTERO          reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    DECIMAL         reduce using rule 141 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)


state 405

    (160) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .

    $end            reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    SEMI            reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    COMMA           reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    CADENA          reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 160 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)


state 406

    (161) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN . SEMI

    SEMI            shift and go to state 424


state 407

    (139) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .

    $end            reduce using rule 139 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    RBRACE          reduce using rule 139 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    SEMI            reduce using rule 139 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)


state 408

    (137) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE . empty RBRACE
    (155) empty -> .

    RBRACE          reduce using rule 155 (empty -> .)

    empty                          shift and go to state 425

state 409

    (60) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 60 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    ELSEIF          reduce using rule 60 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 60 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 60 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 60 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 410

    (126) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .

    SEMI            reduce using rule 126 (operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .)
    RPAREN          reduce using rule 126 (operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .)


state 411

    (73) condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    VARIABLE        shift and go to state 304
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 426
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 412

    (74) condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (156) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (157) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 181
    BOOLEANO        shift and go to state 94
    VARIABLE        shift and go to state 304
    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    valor                          shift and go to state 427
    tipoDato                       shift and go to state 87
    bcolas                         shift and go to state 88
    bpila                          shift and go to state 89
    numero                         shift and go to state 93

state 413

    (171) comprobacion -> NOMBRE LPAREN valor RPAREN .

    RPAREN          reduce using rule 171 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    AND             reduce using rule 171 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    OR              reduce using rule 171 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    XOR             reduce using rule 171 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_EQUAL        reduce using rule 171 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_NOT_EQUAL    reduce using rule 171 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_IDENTICAL    reduce using rule 171 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 171 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    SEMI            reduce using rule 171 (comprobacion -> NOMBRE LPAREN valor RPAREN .)


state 414

    (172) comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .

    RPAREN          reduce using rule 172 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 172 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 172 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    XOR             reduce using rule 172 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_EQUAL        reduce using rule 172 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_NOT_EQUAL    reduce using rule 172 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_IDENTICAL    reduce using rule 172 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 172 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    SEMI            reduce using rule 172 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)


state 415

    (77) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .

    $end            reduce using rule 77 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 77 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    SEMI            reduce using rule 77 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)


state 416

    (81) for_incr -> VARIABLE SUMA SUMA .

    RPAREN          reduce using rule 81 (for_incr -> VARIABLE SUMA SUMA .)


state 417

    (85) for_incr -> VARIABLE SUMA EQUALS . numero
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    numero                         shift and go to state 428

state 418

    (83) for_incr -> VARIABLE RESTA RESTA .

    RPAREN          reduce using rule 83 (for_incr -> VARIABLE RESTA RESTA .)


state 419

    (86) for_incr -> VARIABLE RESTA EQUALS . numero
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    ENTERO          shift and go to state 84
    DECIMAL         shift and go to state 96

    numero                         shift and go to state 429

state 420

    (82) for_incr -> SUMA SUMA VARIABLE .

    RPAREN          reduce using rule 82 (for_incr -> SUMA SUMA VARIABLE .)


state 421

    (84) for_incr -> RESTA RESTA VARIABLE .

    RPAREN          reduce using rule 84 (for_incr -> RESTA RESTA VARIABLE .)


state 422

    (96) catches -> catches CATCH LPAREN NOMBRE . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 430


state 423

    (91) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .

    $end            reduce using rule 91 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .)
    RBRACE          reduce using rule 91 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .)
    SEMI            reduce using rule 91 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .)


state 424

    (161) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .

    $end            reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    SEMI            reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    COMMA           reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    CADENA          reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 161 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)


state 425

    (137) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty . RBRACE

    RBRACE          shift and go to state 431


state 426

    (73) condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .

    RPAREN          reduce using rule 73 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    AND             reduce using rule 73 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    OR              reduce using rule 73 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    XOR             reduce using rule 73 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_EQUAL        reduce using rule 73 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 73 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_IDENTICAL    reduce using rule 73 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 73 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    SEMI            reduce using rule 73 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)


state 427

    (74) condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .

    RPAREN          reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    AND             reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    OR              reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    XOR             reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_EQUAL        reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    SEMI            reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)


state 428

    (85) for_incr -> VARIABLE SUMA EQUALS numero .

    RPAREN          reduce using rule 85 (for_incr -> VARIABLE SUMA EQUALS numero .)


state 429

    (86) for_incr -> VARIABLE RESTA EQUALS numero .

    RPAREN          reduce using rule 86 (for_incr -> VARIABLE RESTA EQUALS numero .)


state 430

    (96) catches -> catches CATCH LPAREN NOMBRE VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 432


state 431

    (137) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .

    $end            reduce using rule 137 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    RBRACE          reduce using rule 137 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    SEMI            reduce using rule 137 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)


state 432

    (96) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN . stc_bloque_def
    (80) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 221

    stc_bloque_def                 shift and go to state 433

state 433

    (96) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .

    CATCH           reduce using rule 96 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    $end            reduce using rule 96 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 96 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 96 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACE in state 50 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 142 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 148 resolved as shift
WARNING: shift/reduce conflict for AND in state 325 resolved as shift
WARNING: shift/reduce conflict for OR in state 325 resolved as shift
WARNING: shift/reduce conflict for XOR in state 325 resolved as shift
WARNING: shift/reduce conflict for IS_EQUAL in state 325 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_EQUAL in state 325 resolved as shift
WARNING: shift/reduce conflict for IS_IDENTICAL in state 325 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_IDENTICAL in state 325 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 338 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 341 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 350 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 366 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 381 resolved as shift
