Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> imprimir
Rule 2     cuerpo -> asignacion
Rule 3     cuerpo -> funciones
Rule 4     cuerpo -> llamada_funcion
Rule 5     cuerpo -> constante
Rule 6     cuerpo -> lectura
Rule 7     cuerpo -> condicion_ifelse
Rule 8     cuerpo -> bwhile
Rule 9     cuerpo -> bdo
Rule 10    cuerpo -> bfor
Rule 11    cuerpo -> incrementOp
Rule 12    cuerpo -> bforeach
Rule 13    cuerpo -> btry
Rule 14    cuerpo -> bswitch
Rule 15    cuerpo -> bcase
Rule 16    cuerpo -> bgoto
Rule 17    cuerpo -> bcolas
Rule 18    cuerpo -> bpila
Rule 19    cuerpo -> bcortes
Rule 20    cuerpo -> brand
Rule 21    cuerpo -> escribir
Rule 22    cuerpo -> btrim
Rule 23    cuerpo -> otros
Rule 24    cuerpo -> breturn
Rule 25    cuerpo -> comment
Rule 26    cuerpo -> casting
Rule 27    cuerpo -> bconcat
Rule 28    cuerpo -> simbolos
Rule 29    cuerpo -> funcionesCP_semi
Rule 30    cuerpo -> addpila
Rule 31    cuerpo -> addcola
Rule 32    cuerpo -> minuscola
Rule 33    cuerpo -> arraypop
Rule 34    cuerpo -> arraypush
Rule 35    cuerpo -> poppila
Rule 36    asignacion -> VARIABLE EQUALS valor SEMI
Rule 37    asignacion -> VAR asignacion
Rule 38    asignacion -> proteccion asignacion
Rule 39    asignacion -> VARIABLE EQUALS brand
Rule 40    asignacion -> VARIABLE EQUALS escribir
Rule 41    asignacion -> VARIABLE EQUALS btrim
Rule 42    asignacion -> VARIABLE EQUALS lectura
Rule 43    asignacion -> VARIABLE EQUALS bconcat
Rule 44    asignacion -> asignacion_array
Rule 45    asignacion -> VARIABLE EQUALS operaciones_mat SEMI
Rule 46    asignacion -> aumentoCasting
Rule 47    asignacion -> VARIABLE EQUALS llamada_funcion
Rule 48    asignacion -> VARIABLE EQUALS arrayvalues SEMI
Rule 49    asignacion_array -> VARIABLE EQUALS array_def SEMI
Rule 50    valor -> tipoDato
Rule 51    valor -> bcolas
Rule 52    valor -> bpila
Rule 53    tipoDato -> numero
Rule 54    tipoDato -> CADENA
Rule 55    tipoDato -> BOOLEANO
Rule 56    numero -> ENTERO
Rule 57    numero -> DECIMAL
Rule 58    imprimir -> ECHO valor SEMI
Rule 59    imprimir -> PRINT valor SEMI
Rule 60    imprimir -> PRINT LPAREN valor RPAREN SEMI
Rule 61    imprimir -> PRINT bconcat
Rule 62    imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
Rule 63    imprimir -> ECHO bconcat
Rule 64    imprimir -> ECHO operaciones_mat SEMI
Rule 65    imprimir -> PRINT operaciones_mat SEMI
Rule 66    imprimir -> ECHO VARIABLE SEMI
Rule 67    imprimir -> PRINT VARIABLE SEMI
Rule 68    imprimir -> ECHO funcionesCP_semi
Rule 69    imprimir -> PRINT funcionesCP_semi
Rule 70    imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI
Rule 71    imprimir -> ECHO poppila
Rule 72    imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI
Rule 73    imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI
Rule 74    imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI
Rule 75    condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 76    condicion_if -> IF LPAREN condicion RPAREN llamada_funcion
Rule 77    condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 78    condicion_else -> ELSE LBRACE cuerpo RBRACE
Rule 79    condicion_ifelse -> condicion_if
Rule 80    condicion_ifelse -> condicion_if condicion_else
Rule 81    condicion_ifelse -> condicion_if condicion_elseif
Rule 82    condicion_ifelse -> condicion_if condicion_elseif condicion_else
Rule 83    condicion -> VARIABLE operador_logico VARIABLE
Rule 84    condicion -> valor operador_logico valor
Rule 85    condicion -> VARIABLE operador_logico valor
Rule 86    condicion -> VARIABLE condicion_booleana VARIABLE
Rule 87    condicion -> valor condicion_booleana valor
Rule 88    condicion -> VARIABLE condicion_booleana valor
Rule 89    condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor
Rule 90    condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
Rule 91    condicion -> condicion condicion_booleana condicion
Rule 92    condicion -> condicion condicion_booleana comprobacion
Rule 93    condicion -> aumentoCasting
Rule 94    condicion -> VARIABLE
Rule 95    condicion -> funcionesCP
Rule 96    bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
Rule 97    stc_bloque -> stc_bloque SEMI cuerpo
Rule 98    stc_bloque -> breturn
Rule 99    stc_bloque_def -> LBRACE stc_bloque RBRACE
Rule 100   stc_bloque_def -> LBRACE cuerpo RBRACE
Rule 101   for_incr -> VARIABLE SUMA SUMA
Rule 102   for_incr -> SUMA SUMA VARIABLE
Rule 103   for_incr -> VARIABLE RESTA RESTA
Rule 104   for_incr -> RESTA RESTA VARIABLE
Rule 105   for_incr -> VARIABLE SUMA EQUALS numero
Rule 106   for_incr -> VARIABLE RESTA EQUALS numero
Rule 107   incrementOp -> VARIABLE SUMA SUMA SEMI
Rule 108   incrementOp -> VARIABLE RESTA RESTA SEMI
Rule 109   bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
Rule 110   bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
Rule 111   bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque
Rule 112   bwhile -> WHILE LPAREN condicion RPAREN SEMI
Rule 113   bwhile -> <empty>
Rule 114   bdo -> DO LBRACE cuerpo RBRACE bwhile
Rule 115   bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
Rule 116   bcase -> CASE ENTERO COLON
Rule 117   bcase -> CASE CADENA COLON
Rule 118   innerSwitch -> bcase cuerpo BREAK SEMI
Rule 119   innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch
Rule 120   btry -> TRY LBRACE stc_bloque_def RBRACE catches
Rule 121   catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
Rule 122   catches -> empty
Rule 123   operadores -> SUMA
Rule 124   operadores -> RESTA
Rule 125   operadores -> MULTIPLICACION
Rule 126   operadores -> DIVISION
Rule 127   operadores -> MODULO
Rule 128   operador_logico -> SMALLER
Rule 129   operador_logico -> GREATER
Rule 130   operador_logico -> IS_SMALLER_OR_EQUAL
Rule 131   operador_logico -> IS_GREATER_OR_EQUAL
Rule 132   incrementos_mat -> MINUS_EQUAL
Rule 133   incrementos_mat -> MOD_EQUAL
Rule 134   incrementos_mat -> MUL_EQUAL
Rule 135   incrementos_mat -> PLUS_EQUAL
Rule 136   incrementos_mat -> DIV_EQUAL
Rule 137   condicion_booleana -> AND
Rule 138   condicion_booleana -> OR
Rule 139   condicion_booleana -> XOR
Rule 140   condicion_booleana -> IS_EQUAL
Rule 141   condicion_booleana -> IS_NOT_EQUAL
Rule 142   condicion_booleana -> IS_IDENTICAL
Rule 143   condicion_booleana -> IS_NOT_IDENTICAL
Rule 144   operaciones_mat -> valor operadores valor
Rule 145   operaciones_mat -> valor operadores operaciones_mat
Rule 146   operaciones_mat -> VARIABLE operadores VARIABLE
Rule 147   operaciones_mat -> operaciones_mat_par
Rule 148   operaciones_mat_par -> LPAREN valor operadores valor RPAREN
Rule 149   operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN
Rule 150   operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN
Rule 151   operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor
Rule 152   operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN
Rule 153   operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
Rule 154   funciones -> funcion_nparams
Rule 155   funciones -> proteccion funcion_nparams
Rule 156   funciones -> funcion_blank
Rule 157   funciones -> proteccion funcion_blank
Rule 158   funciones -> funcion_void
Rule 159   param -> VARIABLE
Rule 160   param -> asignacion
Rule 161   funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
Rule 162   params_list -> params_list COMMA param
Rule 163   params_list -> param
Rule 164   params_list -> empty
Rule 165   funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
Rule 166   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
Rule 167   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
Rule 168   llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI
Rule 169   brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
Rule 170   proteccion -> PUBLIC
Rule 171   proteccion -> PRIVATE
Rule 172   proteccion -> PROTECTED
Rule 173   proteccion -> STATIC
Rule 174   breturn -> empty
Rule 175   breturn -> RETURN SEMI
Rule 176   breturn -> RETURN NULL SEMI
Rule 177   breturn -> RETURN VARIABLE SEMI
Rule 178   breturn -> RETURN BOOLEANO SEMI
Rule 179   breturn -> breturn RBRACE
Rule 180   array_def -> ARRAY LPAREN RPAREN
Rule 181   array_def -> ARRAY LPAREN array_elmnt RPAREN
Rule 182   array_elmnt -> array_elmnt COMMA valor
Rule 183   array_elmnt -> valor
Rule 184   empty -> <empty>
Rule 185   bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
Rule 186   lectura -> READLINE LPAREN CADENA RPAREN SEMI
Rule 187   lectura -> READLINE LPAREN RPAREN SEMI
Rule 188   escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
Rule 189   btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
Rule 190   comment -> COMENTARIOS
Rule 191   comment -> DOC_COMENTARIOS
Rule 192   bgoto -> GOTO NOMBRE SEMI
Rule 193   bcortes -> EXIT SEMI
Rule 194   bcortes -> BREAK SEMI
Rule 195   bcortes -> DEFAULT SEMI
Rule 196   bcortes -> CONTINUE SEMI
Rule 197   otros -> SMALLER NOMBRE GREATER
Rule 198   otros -> SMALLER DIVISION NOMBRE GREATER
Rule 199   otros -> NOMBRE COLON
Rule 200   comprobacion -> NOMBRE LPAREN valor RPAREN
Rule 201   comprobacion -> NOMBRE LPAREN VARIABLE RPAREN
Rule 202   simbolos -> LPAREN RPAREN
Rule 203   simbolos -> LPAREN
Rule 204   simbolos -> RPAREN
Rule 205   simbolos -> LBRACKET RBRACKET
Rule 206   simbolos -> LBRACKET
Rule 207   simbolos -> RBRACKET
Rule 208   simbolos -> LBRACE RBRACE
Rule 209   simbolos -> LBRACE
Rule 210   simbolos -> RBRACE instrucciones
Rule 211   simbolos -> OPEN_TAG CLOSE_TAG
Rule 212   simbolos -> OPEN_TAG
Rule 213   simbolos -> CLOSE_TAG
Rule 214   instrucciones -> condicion_else
Rule 215   instrucciones -> condicion_elseif
Rule 216   instrucciones -> bwhile
Rule 217   instrucciones -> bfor
Rule 218   instrucciones -> funciones
Rule 219   instrucciones -> bswitch
Rule 220   instrucciones -> bdo
Rule 221   bconcat -> CADENA CONCAT CADENA SEMI
Rule 222   bconcat -> VARIABLE CONCAT CADENA SEMI
Rule 223   bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI
Rule 224   bconcat -> CADENA CONCAT_EQUAL CADENA SEMI
Rule 225   bconcat -> VARIABLE CONCAT VARIABLE SEMI
Rule 226   bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
Rule 227   tiposCast -> STRING
Rule 228   tiposCast -> BOOL
Rule 229   tiposCast -> BOOLEAN
Rule 230   tiposCast -> DOUBLE
Rule 231   tiposCast -> FLOAT
Rule 232   tiposCast -> ARRAY
Rule 233   tiposCast -> OBJECT
Rule 234   tiposCast -> INTEGER
Rule 235   tiposCast -> INT
Rule 236   casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 237   casting -> LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 238   aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI
Rule 239   aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
Rule 240   aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
Rule 241   aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor
Rule 242   aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI
Rule 243   bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
Rule 244   addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
Rule 245   poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI
Rule 246   funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN
Rule 247   funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN
Rule 248   funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN
Rule 249   funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN
Rule 250   funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN
Rule 251   funcionesCP_semi -> funcionesCP
Rule 252   funcionesCP_semi -> funcionesCP SEMI
Rule 253   addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
Rule 254   minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
Rule 255   constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
Rule 256   constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
Rule 257   arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI
Rule 258   arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
Rule 259   arrayvalues -> ARRAY_VALUES LPAREN VARIABLE RPAREN

Terminals, with rules where they appear

AND                  : 137
ARRAY                : 180 181 232 256
ARRAY_POP            : 257
ARRAY_PUSH           : 258
ARRAY_VALUES         : 259
AS                   : 109
BOOL                 : 228
BOOLEAN              : 229
BOOLEANO             : 55 178
BREAK                : 118 119 194
CADENA               : 54 117 186 188 221 221 222 223 224 224 226 255
CASE                 : 116 117
CATCH                : 121
CLOSE_TAG            : 211 213
COLON                : 111 116 117 165 199
COMENTARIOS          : 190
COMMA                : 70 162 169 182 188 255 256 258
CONCAT               : 221 222 225 226 226
CONCAT_EQUAL         : 223 224
CONTINUE             : 196
COUNT                : 248
CURRENT              : 250
DECIMAL              : 57
DEFAULT              : 195
DEFINE               : 255 256
DEQUEUE              : 254
DIVISION             : 126 198
DIV_EQUAL            : 136
DO                   : 114
DOC_COMENTARIOS      : 191
DOUBLE               : 230
ECHO                 : 58 62 63 64 66 68 70 71
ELSE                 : 78
ELSEIF               : 77
ENQUEUE              : 253
ENTERO               : 56 62 116 169 169
EQUALS               : 36 39 40 41 42 43 45 47 48 49 105 106 185 236 239 240 243
EXIT                 : 193
FLECHA               : 244 245 246 247 248 249 250 253 254
FLOAT                : 231
FOR                  : 96
FOREACH              : 109
FUNCTION             : 161 165 166 167
FWRITE               : 188
GOTO                 : 192
GREATER              : 129 197 198
IF                   : 75 76
INT                  : 235
INTEGER              : 234
IS_EQUAL             : 140
IS_GREATER_OR_EQUAL  : 131
IS_IDENTICAL         : 142
IS_NOT_EQUAL         : 141
IS_NOT_IDENTICAL     : 143
IS_SMALLER_OR_EQUAL  : 130
LBRACE               : 75 77 78 99 100 110 114 115 120 165 167 208 209
LBRACKET             : 62 205 206
LPAREN               : 60 72 73 74 75 76 77 89 90 96 109 110 111 112 115 121 148 149 150 151 152 153 161 165 166 167 168 169 180 181 185 186 187 188 189 189 200 201 202 203 236 237 243 244 245 246 247 248 249 250 253 254 255 256 257 258 259
MINUS_EQUAL          : 132
MODULO               : 127
MOD_EQUAL            : 133
MULTIPLICACION       : 125
MUL_EQUAL            : 134
NEW                  : 185 243
NEXT                 : 249
NOMBRE               : 62 70 121 161 165 166 167 168 188 189 189 192 197 198 199 200 201 256
NULL                 : 176
OBJECT               : 233
OPEN_TAG             : 211 212
OR                   : 138
PLUS_EQUAL           : 135
POP                  : 245
PRINT                : 59 60 61 65 67 69
PRINT_R              : 73 74
PRIVATE              : 171
PROTECTED            : 172
PUBLIC               : 170
PUSH                 : 244
RAND                 : 169
RBRACE               : 75 77 78 99 100 110 114 115 120 165 167 179 208 210
RBRACKET             : 62 205 207
READLINE             : 186 187
RESTA                : 103 103 104 104 106 108 108 124
RETURN               : 175 176 177 178
REWIND               : 246
RPAREN               : 60 72 73 74 75 76 77 89 90 96 109 110 111 112 115 121 148 149 150 151 152 153 161 165 166 167 168 169 180 181 185 186 187 188 189 189 200 201 202 204 236 237 243 244 245 246 247 248 249 250 253 254 255 256 257 258 259
SEMI                 : 36 45 48 49 58 59 60 62 64 65 66 67 70 72 73 74 96 97 107 108 112 118 119 168 169 175 176 177 178 185 186 187 188 189 192 193 194 195 196 221 222 223 224 225 226 236 237 238 239 240 242 243 244 245 252 253 254 255 256 257 258
SMALLER              : 128 197 198
SPLQUEUE             : 185
SPLSTACK             : 243
STATIC               : 173
STRING               : 227
SUMA                 : 101 101 102 102 105 107 107 123
SWITCH               : 115
TRIM                 : 189
TRY                  : 120
VALID                : 247
VAR                  : 37
VARIABLE             : 36 39 40 41 42 43 45 47 48 49 66 67 72 73 83 83 85 86 86 88 89 90 94 101 102 103 104 105 106 107 108 109 109 115 121 146 146 150 150 151 152 153 159 177 185 201 222 223 225 225 226 226 236 236 237 238 239 239 240 240 240 241 242 242 243 244 245 246 247 248 249 250 253 254 257 258 259
VAR_DUMP             : 72
VOID                 : 165
WHILE                : 110 111 112
XOR                  : 139
error                : 

Nonterminals, with rules where they appear

addcola              : 31
addpila              : 30
array_def            : 49
array_elmnt          : 181 182
arraypop             : 33
arraypush            : 34
arrayvalues          : 48 74
asignacion           : 2 37 38 96 160
asignacion_array     : 44
aumentoCasting       : 46 93
bcase                : 15 118 119
bcolas               : 17 51
bconcat              : 27 43 61 63
bcortes              : 19
bdo                  : 9 220
bfor                 : 10 217
bforeach             : 12
bgoto                : 16
bpila                : 18 52
brand                : 20 39
breturn              : 24 98 179
bswitch              : 14 219
btrim                : 22 41
btry                 : 13
bwhile               : 8 114 216
casting              : 26
catches              : 120 121
comment              : 25
comprobacion         : 92
condicion            : 75 76 77 91 91 92 96 110 111 112
condicion_booleana   : 86 87 88 90 91 92 241
condicion_else       : 80 82 214
condicion_elseif     : 81 82 215
condicion_if         : 79 80 81 82
condicion_ifelse     : 7
constante            : 5
cuerpo               : 75 77 78 97 100 114 118 119 0
empty                : 122 164 165 167 174
escribir             : 21 40
for_incr             : 96
funcion_blank        : 156 157
funcion_nparams      : 154 155
funcion_void         : 158
funciones            : 3 218
funcionesCP          : 95 251 252
funcionesCP_semi     : 29 68 69 70
imprimir             : 1
incrementOp          : 11
incrementos_mat      : 238 242
innerSwitch          : 115 119
instrucciones        : 210
lectura              : 6 42
llamada_funcion      : 4 47 76
minuscola            : 32
numero               : 53 105 106
operaciones_mat      : 45 64 65 145
operaciones_mat_par  : 147 149 240
operador_logico      : 83 84 85 89
operadores           : 89 90 144 145 146 148 149 150 151 151 152 153 153 239 240 240 241
otros                : 23
param                : 162 163
params_list          : 161 162 168
poppila              : 35 71
proteccion           : 38 155 157
simbolos             : 28
stc_bloque           : 97 99 110 111
stc_bloque_def       : 96 109 120 121 161 166
tipoDato             : 50 152 153 153 238 239 241
tiposCast            : 236 237
valor                : 36 58 59 60 84 84 85 87 87 88 89 89 90 90 144 144 145 148 148 149 151 151 182 183 200 241 244 253 254 255 258

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (58) imprimir -> . ECHO valor SEMI
    (59) imprimir -> . PRINT valor SEMI
    (60) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (61) imprimir -> . PRINT bconcat
    (62) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (63) imprimir -> . ECHO bconcat
    (64) imprimir -> . ECHO operaciones_mat SEMI
    (65) imprimir -> . PRINT operaciones_mat SEMI
    (66) imprimir -> . ECHO VARIABLE SEMI
    (67) imprimir -> . PRINT VARIABLE SEMI
    (68) imprimir -> . ECHO funcionesCP_semi
    (69) imprimir -> . PRINT funcionesCP_semi
    (70) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (71) imprimir -> . ECHO poppila
    (72) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (73) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (154) funciones -> . funcion_nparams
    (155) funciones -> . proteccion funcion_nparams
    (156) funciones -> . funcion_blank
    (157) funciones -> . proteccion funcion_blank
    (158) funciones -> . funcion_void
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (255) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (256) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (79) condicion_ifelse -> . condicion_if
    (80) condicion_ifelse -> . condicion_if condicion_else
    (81) condicion_ifelse -> . condicion_if condicion_elseif
    (82) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .
    (114) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (96) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (107) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (108) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (109) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (120) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (115) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON
    (192) bgoto -> . GOTO NOMBRE SEMI
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (193) bcortes -> . EXIT SEMI
    (194) bcortes -> . BREAK SEMI
    (195) bcortes -> . DEFAULT SEMI
    (196) bcortes -> . CONTINUE SEMI
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (197) otros -> . SMALLER NOMBRE GREATER
    (198) otros -> . SMALLER DIVISION NOMBRE GREATER
    (199) otros -> . NOMBRE COLON
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (190) comment -> . COMENTARIOS
    (191) comment -> . DOC_COMENTARIOS
    (236) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (237) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (202) simbolos -> . LPAREN RPAREN
    (203) simbolos -> . LPAREN
    (204) simbolos -> . RPAREN
    (205) simbolos -> . LBRACKET RBRACKET
    (206) simbolos -> . LBRACKET
    (207) simbolos -> . RBRACKET
    (208) simbolos -> . LBRACE RBRACE
    (209) simbolos -> . LBRACE
    (210) simbolos -> . RBRACE instrucciones
    (211) simbolos -> . OPEN_TAG CLOSE_TAG
    (212) simbolos -> . OPEN_TAG
    (213) simbolos -> . CLOSE_TAG
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (244) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (257) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (258) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (245) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (75) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (184) empty -> .
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 113 (bwhile -> .)
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    $end            reduce using rule 113 (bwhile -> .)
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 184 (empty -> .) ]
  ! $end            [ reduce using rule 184 (empty -> .) ]

    cuerpo                         shift and go to state 1
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> imprimir .

    $end            reduce using rule 1 (cuerpo -> imprimir .)
    RBRACE          reduce using rule 1 (cuerpo -> imprimir .)
    SEMI            reduce using rule 1 (cuerpo -> imprimir .)
    BREAK           reduce using rule 1 (cuerpo -> imprimir .)


state 3

    (2) cuerpo -> asignacion .

    $end            reduce using rule 2 (cuerpo -> asignacion .)
    RBRACE          reduce using rule 2 (cuerpo -> asignacion .)
    SEMI            reduce using rule 2 (cuerpo -> asignacion .)
    BREAK           reduce using rule 2 (cuerpo -> asignacion .)


state 4

    (3) cuerpo -> funciones .

    $end            reduce using rule 3 (cuerpo -> funciones .)
    RBRACE          reduce using rule 3 (cuerpo -> funciones .)
    SEMI            reduce using rule 3 (cuerpo -> funciones .)
    BREAK           reduce using rule 3 (cuerpo -> funciones .)


state 5

    (4) cuerpo -> llamada_funcion .

    $end            reduce using rule 4 (cuerpo -> llamada_funcion .)
    RBRACE          reduce using rule 4 (cuerpo -> llamada_funcion .)
    SEMI            reduce using rule 4 (cuerpo -> llamada_funcion .)
    BREAK           reduce using rule 4 (cuerpo -> llamada_funcion .)


state 6

    (5) cuerpo -> constante .

    $end            reduce using rule 5 (cuerpo -> constante .)
    RBRACE          reduce using rule 5 (cuerpo -> constante .)
    SEMI            reduce using rule 5 (cuerpo -> constante .)
    BREAK           reduce using rule 5 (cuerpo -> constante .)


state 7

    (6) cuerpo -> lectura .

    $end            reduce using rule 6 (cuerpo -> lectura .)
    RBRACE          reduce using rule 6 (cuerpo -> lectura .)
    SEMI            reduce using rule 6 (cuerpo -> lectura .)
    BREAK           reduce using rule 6 (cuerpo -> lectura .)


state 8

    (7) cuerpo -> condicion_ifelse .

    $end            reduce using rule 7 (cuerpo -> condicion_ifelse .)
    RBRACE          reduce using rule 7 (cuerpo -> condicion_ifelse .)
    SEMI            reduce using rule 7 (cuerpo -> condicion_ifelse .)
    BREAK           reduce using rule 7 (cuerpo -> condicion_ifelse .)


state 9

    (8) cuerpo -> bwhile .

    $end            reduce using rule 8 (cuerpo -> bwhile .)
    RBRACE          reduce using rule 8 (cuerpo -> bwhile .)
    SEMI            reduce using rule 8 (cuerpo -> bwhile .)
    BREAK           reduce using rule 8 (cuerpo -> bwhile .)


state 10

    (9) cuerpo -> bdo .

    $end            reduce using rule 9 (cuerpo -> bdo .)
    RBRACE          reduce using rule 9 (cuerpo -> bdo .)
    SEMI            reduce using rule 9 (cuerpo -> bdo .)
    BREAK           reduce using rule 9 (cuerpo -> bdo .)


state 11

    (10) cuerpo -> bfor .

    $end            reduce using rule 10 (cuerpo -> bfor .)
    RBRACE          reduce using rule 10 (cuerpo -> bfor .)
    SEMI            reduce using rule 10 (cuerpo -> bfor .)
    BREAK           reduce using rule 10 (cuerpo -> bfor .)


state 12

    (11) cuerpo -> incrementOp .

    $end            reduce using rule 11 (cuerpo -> incrementOp .)
    RBRACE          reduce using rule 11 (cuerpo -> incrementOp .)
    SEMI            reduce using rule 11 (cuerpo -> incrementOp .)
    BREAK           reduce using rule 11 (cuerpo -> incrementOp .)


state 13

    (12) cuerpo -> bforeach .

    $end            reduce using rule 12 (cuerpo -> bforeach .)
    RBRACE          reduce using rule 12 (cuerpo -> bforeach .)
    SEMI            reduce using rule 12 (cuerpo -> bforeach .)
    BREAK           reduce using rule 12 (cuerpo -> bforeach .)


state 14

    (13) cuerpo -> btry .

    $end            reduce using rule 13 (cuerpo -> btry .)
    RBRACE          reduce using rule 13 (cuerpo -> btry .)
    SEMI            reduce using rule 13 (cuerpo -> btry .)
    BREAK           reduce using rule 13 (cuerpo -> btry .)


state 15

    (14) cuerpo -> bswitch .

    $end            reduce using rule 14 (cuerpo -> bswitch .)
    RBRACE          reduce using rule 14 (cuerpo -> bswitch .)
    SEMI            reduce using rule 14 (cuerpo -> bswitch .)
    BREAK           reduce using rule 14 (cuerpo -> bswitch .)


state 16

    (15) cuerpo -> bcase .

    $end            reduce using rule 15 (cuerpo -> bcase .)
    RBRACE          reduce using rule 15 (cuerpo -> bcase .)
    SEMI            reduce using rule 15 (cuerpo -> bcase .)
    BREAK           reduce using rule 15 (cuerpo -> bcase .)


state 17

    (16) cuerpo -> bgoto .

    $end            reduce using rule 16 (cuerpo -> bgoto .)
    RBRACE          reduce using rule 16 (cuerpo -> bgoto .)
    SEMI            reduce using rule 16 (cuerpo -> bgoto .)
    BREAK           reduce using rule 16 (cuerpo -> bgoto .)


state 18

    (17) cuerpo -> bcolas .

    $end            reduce using rule 17 (cuerpo -> bcolas .)
    RBRACE          reduce using rule 17 (cuerpo -> bcolas .)
    SEMI            reduce using rule 17 (cuerpo -> bcolas .)
    BREAK           reduce using rule 17 (cuerpo -> bcolas .)


state 19

    (18) cuerpo -> bpila .

    $end            reduce using rule 18 (cuerpo -> bpila .)
    RBRACE          reduce using rule 18 (cuerpo -> bpila .)
    SEMI            reduce using rule 18 (cuerpo -> bpila .)
    BREAK           reduce using rule 18 (cuerpo -> bpila .)


state 20

    (19) cuerpo -> bcortes .

    $end            reduce using rule 19 (cuerpo -> bcortes .)
    RBRACE          reduce using rule 19 (cuerpo -> bcortes .)
    SEMI            reduce using rule 19 (cuerpo -> bcortes .)
    BREAK           reduce using rule 19 (cuerpo -> bcortes .)


state 21

    (20) cuerpo -> brand .

    $end            reduce using rule 20 (cuerpo -> brand .)
    RBRACE          reduce using rule 20 (cuerpo -> brand .)
    SEMI            reduce using rule 20 (cuerpo -> brand .)
    BREAK           reduce using rule 20 (cuerpo -> brand .)


state 22

    (21) cuerpo -> escribir .

    $end            reduce using rule 21 (cuerpo -> escribir .)
    RBRACE          reduce using rule 21 (cuerpo -> escribir .)
    SEMI            reduce using rule 21 (cuerpo -> escribir .)
    BREAK           reduce using rule 21 (cuerpo -> escribir .)


state 23

    (22) cuerpo -> btrim .

    $end            reduce using rule 22 (cuerpo -> btrim .)
    RBRACE          reduce using rule 22 (cuerpo -> btrim .)
    SEMI            reduce using rule 22 (cuerpo -> btrim .)
    BREAK           reduce using rule 22 (cuerpo -> btrim .)


state 24

    (23) cuerpo -> otros .

    $end            reduce using rule 23 (cuerpo -> otros .)
    RBRACE          reduce using rule 23 (cuerpo -> otros .)
    SEMI            reduce using rule 23 (cuerpo -> otros .)
    BREAK           reduce using rule 23 (cuerpo -> otros .)


state 25

    (24) cuerpo -> breturn .
    (179) breturn -> breturn . RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    $end            reduce using rule 24 (cuerpo -> breturn .)
    SEMI            reduce using rule 24 (cuerpo -> breturn .)
    BREAK           reduce using rule 24 (cuerpo -> breturn .)
    RBRACE          shift and go to state 91

  ! RBRACE          [ reduce using rule 24 (cuerpo -> breturn .) ]


state 26

    (25) cuerpo -> comment .

    $end            reduce using rule 25 (cuerpo -> comment .)
    RBRACE          reduce using rule 25 (cuerpo -> comment .)
    SEMI            reduce using rule 25 (cuerpo -> comment .)
    BREAK           reduce using rule 25 (cuerpo -> comment .)


state 27

    (26) cuerpo -> casting .

    $end            reduce using rule 26 (cuerpo -> casting .)
    RBRACE          reduce using rule 26 (cuerpo -> casting .)
    SEMI            reduce using rule 26 (cuerpo -> casting .)
    BREAK           reduce using rule 26 (cuerpo -> casting .)


state 28

    (27) cuerpo -> bconcat .

    $end            reduce using rule 27 (cuerpo -> bconcat .)
    RBRACE          reduce using rule 27 (cuerpo -> bconcat .)
    SEMI            reduce using rule 27 (cuerpo -> bconcat .)
    BREAK           reduce using rule 27 (cuerpo -> bconcat .)


state 29

    (28) cuerpo -> simbolos .

    $end            reduce using rule 28 (cuerpo -> simbolos .)
    RBRACE          reduce using rule 28 (cuerpo -> simbolos .)
    SEMI            reduce using rule 28 (cuerpo -> simbolos .)
    BREAK           reduce using rule 28 (cuerpo -> simbolos .)


state 30

    (29) cuerpo -> funcionesCP_semi .

    $end            reduce using rule 29 (cuerpo -> funcionesCP_semi .)
    RBRACE          reduce using rule 29 (cuerpo -> funcionesCP_semi .)
    SEMI            reduce using rule 29 (cuerpo -> funcionesCP_semi .)
    BREAK           reduce using rule 29 (cuerpo -> funcionesCP_semi .)


state 31

    (30) cuerpo -> addpila .

    $end            reduce using rule 30 (cuerpo -> addpila .)
    RBRACE          reduce using rule 30 (cuerpo -> addpila .)
    SEMI            reduce using rule 30 (cuerpo -> addpila .)
    BREAK           reduce using rule 30 (cuerpo -> addpila .)


state 32

    (31) cuerpo -> addcola .

    $end            reduce using rule 31 (cuerpo -> addcola .)
    RBRACE          reduce using rule 31 (cuerpo -> addcola .)
    SEMI            reduce using rule 31 (cuerpo -> addcola .)
    BREAK           reduce using rule 31 (cuerpo -> addcola .)


state 33

    (32) cuerpo -> minuscola .

    $end            reduce using rule 32 (cuerpo -> minuscola .)
    RBRACE          reduce using rule 32 (cuerpo -> minuscola .)
    SEMI            reduce using rule 32 (cuerpo -> minuscola .)
    BREAK           reduce using rule 32 (cuerpo -> minuscola .)


state 34

    (33) cuerpo -> arraypop .

    $end            reduce using rule 33 (cuerpo -> arraypop .)
    RBRACE          reduce using rule 33 (cuerpo -> arraypop .)
    SEMI            reduce using rule 33 (cuerpo -> arraypop .)
    BREAK           reduce using rule 33 (cuerpo -> arraypop .)


state 35

    (34) cuerpo -> arraypush .

    $end            reduce using rule 34 (cuerpo -> arraypush .)
    RBRACE          reduce using rule 34 (cuerpo -> arraypush .)
    SEMI            reduce using rule 34 (cuerpo -> arraypush .)
    BREAK           reduce using rule 34 (cuerpo -> arraypush .)


state 36

    (35) cuerpo -> poppila .

    $end            reduce using rule 35 (cuerpo -> poppila .)
    RBRACE          reduce using rule 35 (cuerpo -> poppila .)
    SEMI            reduce using rule 35 (cuerpo -> poppila .)
    BREAK           reduce using rule 35 (cuerpo -> poppila .)


state 37

    (58) imprimir -> ECHO . valor SEMI
    (62) imprimir -> ECHO . NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (63) imprimir -> ECHO . bconcat
    (64) imprimir -> ECHO . operaciones_mat SEMI
    (66) imprimir -> ECHO . VARIABLE SEMI
    (68) imprimir -> ECHO . funcionesCP_semi
    (70) imprimir -> ECHO . funcionesCP_semi COMMA NOMBRE SEMI
    (71) imprimir -> ECHO . poppila
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (144) operaciones_mat -> . valor operadores valor
    (145) operaciones_mat -> . valor operadores operaciones_mat
    (146) operaciones_mat -> . VARIABLE operadores VARIABLE
    (147) operaciones_mat -> . operaciones_mat_par
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (245) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (148) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (149) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (150) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    NOMBRE          shift and go to state 93
    VARIABLE        shift and go to state 97
    CADENA          shift and go to state 103
    BOOLEANO        shift and go to state 107
    LPAREN          shift and go to state 105
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 92
    bconcat                        shift and go to state 95
    operaciones_mat                shift and go to state 96
    funcionesCP_semi               shift and go to state 98
    poppila                        shift and go to state 99
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    operaciones_mat_par            shift and go to state 104
    funcionesCP                    shift and go to state 82
    numero                         shift and go to state 106

state 38

    (59) imprimir -> PRINT . valor SEMI
    (60) imprimir -> PRINT . LPAREN valor RPAREN SEMI
    (61) imprimir -> PRINT . bconcat
    (65) imprimir -> PRINT . operaciones_mat SEMI
    (67) imprimir -> PRINT . VARIABLE SEMI
    (69) imprimir -> PRINT . funcionesCP_semi
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (144) operaciones_mat -> . valor operadores valor
    (145) operaciones_mat -> . valor operadores operaciones_mat
    (146) operaciones_mat -> . VARIABLE operadores VARIABLE
    (147) operaciones_mat -> . operaciones_mat_par
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (148) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (149) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (150) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    LPAREN          shift and go to state 110
    VARIABLE        shift and go to state 113
    CADENA          shift and go to state 103
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 109
    bconcat                        shift and go to state 111
    operaciones_mat                shift and go to state 112
    funcionesCP_semi               shift and go to state 114
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    operaciones_mat_par            shift and go to state 104
    funcionesCP                    shift and go to state 82
    numero                         shift and go to state 106

state 39

    (237) casting -> LPAREN . tiposCast RPAREN VARIABLE SEMI
    (202) simbolos -> LPAREN . RPAREN
    (203) simbolos -> LPAREN .
    (227) tiposCast -> . STRING
    (228) tiposCast -> . BOOL
    (229) tiposCast -> . BOOLEAN
    (230) tiposCast -> . DOUBLE
    (231) tiposCast -> . FLOAT
    (232) tiposCast -> . ARRAY
    (233) tiposCast -> . OBJECT
    (234) tiposCast -> . INTEGER
    (235) tiposCast -> . INT

    RPAREN          shift and go to state 116
    $end            reduce using rule 203 (simbolos -> LPAREN .)
    RBRACE          reduce using rule 203 (simbolos -> LPAREN .)
    SEMI            reduce using rule 203 (simbolos -> LPAREN .)
    BREAK           reduce using rule 203 (simbolos -> LPAREN .)
    STRING          shift and go to state 117
    BOOL            shift and go to state 118
    BOOLEAN         shift and go to state 119
    DOUBLE          shift and go to state 120
    FLOAT           shift and go to state 121
    ARRAY           shift and go to state 122
    OBJECT          shift and go to state 123
    INTEGER         shift and go to state 124
    INT             shift and go to state 125

    tiposCast                      shift and go to state 115

state 40

    (204) simbolos -> RPAREN .

    $end            reduce using rule 204 (simbolos -> RPAREN .)
    RBRACE          reduce using rule 204 (simbolos -> RPAREN .)
    SEMI            reduce using rule 204 (simbolos -> RPAREN .)
    BREAK           reduce using rule 204 (simbolos -> RPAREN .)


state 41

    (168) llamada_funcion -> NOMBRE . LPAREN params_list RPAREN SEMI
    (199) otros -> NOMBRE . COLON

    LPAREN          shift and go to state 126
    COLON           shift and go to state 127


state 42

    (205) simbolos -> LBRACKET . RBRACKET
    (206) simbolos -> LBRACKET .

    RBRACKET        shift and go to state 128
    $end            reduce using rule 206 (simbolos -> LBRACKET .)
    RBRACE          reduce using rule 206 (simbolos -> LBRACKET .)
    SEMI            reduce using rule 206 (simbolos -> LBRACKET .)
    BREAK           reduce using rule 206 (simbolos -> LBRACKET .)


state 43

    (207) simbolos -> RBRACKET .

    $end            reduce using rule 207 (simbolos -> RBRACKET .)
    RBRACE          reduce using rule 207 (simbolos -> RBRACKET .)
    SEMI            reduce using rule 207 (simbolos -> RBRACKET .)
    BREAK           reduce using rule 207 (simbolos -> RBRACKET .)


state 44

    (36) asignacion -> VARIABLE . EQUALS valor SEMI
    (39) asignacion -> VARIABLE . EQUALS brand
    (40) asignacion -> VARIABLE . EQUALS escribir
    (41) asignacion -> VARIABLE . EQUALS btrim
    (42) asignacion -> VARIABLE . EQUALS lectura
    (43) asignacion -> VARIABLE . EQUALS bconcat
    (45) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (47) asignacion -> VARIABLE . EQUALS llamada_funcion
    (48) asignacion -> VARIABLE . EQUALS arrayvalues SEMI
    (107) incrementOp -> VARIABLE . SUMA SUMA SEMI
    (108) incrementOp -> VARIABLE . RESTA RESTA SEMI
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (236) casting -> VARIABLE . EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (222) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (223) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (226) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (244) addpila -> VARIABLE . FLECHA PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> VARIABLE . FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> VARIABLE . FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (245) poppila -> VARIABLE . FLECHA POP LPAREN RPAREN SEMI
    (49) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (238) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (246) funcionesCP -> VARIABLE . FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> VARIABLE . FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> VARIABLE . FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> VARIABLE . FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> VARIABLE . FLECHA CURRENT LPAREN RPAREN
    (132) incrementos_mat -> . MINUS_EQUAL
    (133) incrementos_mat -> . MOD_EQUAL
    (134) incrementos_mat -> . MUL_EQUAL
    (135) incrementos_mat -> . PLUS_EQUAL
    (136) incrementos_mat -> . DIV_EQUAL
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    EQUALS          shift and go to state 129
    SUMA            shift and go to state 130
    RESTA           shift and go to state 131
    CONCAT          shift and go to state 132
    CONCAT_EQUAL    shift and go to state 133
    FLECHA          shift and go to state 134
    MINUS_EQUAL     shift and go to state 137
    MOD_EQUAL       shift and go to state 138
    MUL_EQUAL       shift and go to state 139
    PLUS_EQUAL      shift and go to state 140
    DIV_EQUAL       shift and go to state 141
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    incrementos_mat                shift and go to state 135
    operadores                     shift and go to state 136

state 45

    (72) imprimir -> VAR_DUMP . LPAREN VARIABLE RPAREN SEMI

    LPAREN          shift and go to state 145


state 46

    (73) imprimir -> PRINT_R . LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> PRINT_R . LPAREN arrayvalues RPAREN SEMI

    LPAREN          shift and go to state 146


state 47

    (37) asignacion -> VAR . asignacion
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 148
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    asignacion                     shift and go to state 147
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 48

    (38) asignacion -> proteccion . asignacion
    (155) funciones -> proteccion . funcion_nparams
    (157) funciones -> proteccion . funcion_blank
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 148
    VAR             shift and go to state 47
    FUNCTION        shift and go to state 153
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    proteccion                     shift and go to state 149
    asignacion                     shift and go to state 150
    funcion_nparams                shift and go to state 151
    funcion_blank                  shift and go to state 152
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 49

    (44) asignacion -> asignacion_array .

    $end            reduce using rule 44 (asignacion -> asignacion_array .)
    RBRACE          reduce using rule 44 (asignacion -> asignacion_array .)
    SEMI            reduce using rule 44 (asignacion -> asignacion_array .)
    BREAK           reduce using rule 44 (asignacion -> asignacion_array .)
    RPAREN          reduce using rule 44 (asignacion -> asignacion_array .)
    COMMA           reduce using rule 44 (asignacion -> asignacion_array .)
    VARIABLE        reduce using rule 44 (asignacion -> asignacion_array .)
    LPAREN          reduce using rule 44 (asignacion -> asignacion_array .)
    CADENA          reduce using rule 44 (asignacion -> asignacion_array .)
    BOOLEANO        reduce using rule 44 (asignacion -> asignacion_array .)
    ENTERO          reduce using rule 44 (asignacion -> asignacion_array .)
    DECIMAL         reduce using rule 44 (asignacion -> asignacion_array .)


state 50

    (46) asignacion -> aumentoCasting .

    $end            reduce using rule 46 (asignacion -> aumentoCasting .)
    RBRACE          reduce using rule 46 (asignacion -> aumentoCasting .)
    SEMI            reduce using rule 46 (asignacion -> aumentoCasting .)
    BREAK           reduce using rule 46 (asignacion -> aumentoCasting .)
    RPAREN          reduce using rule 46 (asignacion -> aumentoCasting .)
    COMMA           reduce using rule 46 (asignacion -> aumentoCasting .)
    VARIABLE        reduce using rule 46 (asignacion -> aumentoCasting .)
    LPAREN          reduce using rule 46 (asignacion -> aumentoCasting .)
    CADENA          reduce using rule 46 (asignacion -> aumentoCasting .)
    BOOLEANO        reduce using rule 46 (asignacion -> aumentoCasting .)
    ENTERO          reduce using rule 46 (asignacion -> aumentoCasting .)
    DECIMAL         reduce using rule 46 (asignacion -> aumentoCasting .)


state 51

    (154) funciones -> funcion_nparams .

    $end            reduce using rule 154 (funciones -> funcion_nparams .)
    RBRACE          reduce using rule 154 (funciones -> funcion_nparams .)
    SEMI            reduce using rule 154 (funciones -> funcion_nparams .)
    BREAK           reduce using rule 154 (funciones -> funcion_nparams .)


state 52

    (156) funciones -> funcion_blank .

    $end            reduce using rule 156 (funciones -> funcion_blank .)
    RBRACE          reduce using rule 156 (funciones -> funcion_blank .)
    SEMI            reduce using rule 156 (funciones -> funcion_blank .)
    BREAK           reduce using rule 156 (funciones -> funcion_blank .)


state 53

    (158) funciones -> funcion_void .

    $end            reduce using rule 158 (funciones -> funcion_void .)
    RBRACE          reduce using rule 158 (funciones -> funcion_void .)
    SEMI            reduce using rule 158 (funciones -> funcion_void .)
    BREAK           reduce using rule 158 (funciones -> funcion_void .)


state 54

    (255) constante -> DEFINE . LPAREN CADENA COMMA valor RPAREN SEMI
    (256) constante -> DEFINE . LPAREN NOMBRE COMMA ARRAY RPAREN SEMI

    LPAREN          shift and go to state 154


state 55

    (221) bconcat -> CADENA . CONCAT CADENA SEMI
    (224) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI

    CONCAT          shift and go to state 155
    CONCAT_EQUAL    shift and go to state 156


state 56

    (186) lectura -> READLINE . LPAREN CADENA RPAREN SEMI
    (187) lectura -> READLINE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 157


state 57

    (79) condicion_ifelse -> condicion_if .
    (80) condicion_ifelse -> condicion_if . condicion_else
    (81) condicion_ifelse -> condicion_if . condicion_elseif
    (82) condicion_ifelse -> condicion_if . condicion_elseif condicion_else
    (78) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (77) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    $end            reduce using rule 79 (condicion_ifelse -> condicion_if .)
    RBRACE          reduce using rule 79 (condicion_ifelse -> condicion_if .)
    SEMI            reduce using rule 79 (condicion_ifelse -> condicion_if .)
    BREAK           reduce using rule 79 (condicion_ifelse -> condicion_if .)
    ELSE            shift and go to state 160
    ELSEIF          shift and go to state 161

    condicion_else                 shift and go to state 158
    condicion_elseif               shift and go to state 159

state 58

    (110) bwhile -> WHILE . LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> WHILE . LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> WHILE . LPAREN condicion RPAREN SEMI

    LPAREN          shift and go to state 162


state 59

    (208) simbolos -> LBRACE . RBRACE
    (209) simbolos -> LBRACE .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 163
    $end            reduce using rule 209 (simbolos -> LBRACE .)
    SEMI            reduce using rule 209 (simbolos -> LBRACE .)
    BREAK           reduce using rule 209 (simbolos -> LBRACE .)

  ! RBRACE          [ reduce using rule 209 (simbolos -> LBRACE .) ]


state 60

    (210) simbolos -> RBRACE . instrucciones
    (214) instrucciones -> . condicion_else
    (215) instrucciones -> . condicion_elseif
    (216) instrucciones -> . bwhile
    (217) instrucciones -> . bfor
    (218) instrucciones -> . funciones
    (219) instrucciones -> . bswitch
    (220) instrucciones -> . bdo
    (78) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (77) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .
    (96) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (154) funciones -> . funcion_nparams
    (155) funciones -> . proteccion funcion_nparams
    (156) funciones -> . funcion_blank
    (157) funciones -> . proteccion funcion_blank
    (158) funciones -> . funcion_void
    (115) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (114) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    ELSE            shift and go to state 160
    ELSEIF          shift and go to state 161
    WHILE           shift and go to state 58
    RBRACE          reduce using rule 113 (bwhile -> .)
    SEMI            reduce using rule 113 (bwhile -> .)
    $end            reduce using rule 113 (bwhile -> .)
    BREAK           reduce using rule 113 (bwhile -> .)
    FOR             shift and go to state 62
    SWITCH          shift and go to state 65
    DO              shift and go to state 61
    FUNCTION        shift and go to state 89
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    instrucciones                  shift and go to state 164
    condicion_else                 shift and go to state 165
    condicion_elseif               shift and go to state 166
    bwhile                         shift and go to state 167
    bfor                           shift and go to state 168
    funciones                      shift and go to state 169
    bswitch                        shift and go to state 170
    bdo                            shift and go to state 171
    funcion_nparams                shift and go to state 51
    proteccion                     shift and go to state 172
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53

state 61

    (114) bdo -> DO . LBRACE cuerpo RBRACE bwhile

    LBRACE          shift and go to state 173


state 62

    (96) bfor -> FOR . LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def

    LPAREN          shift and go to state 174


state 63

    (109) bforeach -> FOREACH . LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 175


state 64

    (120) btry -> TRY . LBRACE stc_bloque_def RBRACE catches

    LBRACE          shift and go to state 176


state 65

    (115) bswitch -> SWITCH . LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE

    LPAREN          shift and go to state 177


state 66

    (116) bcase -> CASE . ENTERO COLON
    (117) bcase -> CASE . CADENA COLON

    ENTERO          shift and go to state 178
    CADENA          shift and go to state 179


state 67

    (192) bgoto -> GOTO . NOMBRE SEMI

    NOMBRE          shift and go to state 180


state 68

    (193) bcortes -> EXIT . SEMI

    SEMI            shift and go to state 181


state 69

    (194) bcortes -> BREAK . SEMI

    SEMI            shift and go to state 182


state 70

    (195) bcortes -> DEFAULT . SEMI

    SEMI            shift and go to state 183


state 71

    (196) bcortes -> CONTINUE . SEMI

    SEMI            shift and go to state 184


state 72

    (169) brand -> RAND . LPAREN ENTERO COMMA ENTERO RPAREN SEMI

    LPAREN          shift and go to state 185


state 73

    (188) escribir -> FWRITE . LPAREN NOMBRE COMMA CADENA RPAREN SEMI

    LPAREN          shift and go to state 186


state 74

    (189) btrim -> TRIM . LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 187


state 75

    (197) otros -> SMALLER . NOMBRE GREATER
    (198) otros -> SMALLER . DIVISION NOMBRE GREATER

    NOMBRE          shift and go to state 188
    DIVISION        shift and go to state 189


state 76

    (174) breturn -> empty .

    RBRACE          reduce using rule 174 (breturn -> empty .)
    $end            reduce using rule 174 (breturn -> empty .)
    SEMI            reduce using rule 174 (breturn -> empty .)
    BREAK           reduce using rule 174 (breturn -> empty .)


state 77

    (175) breturn -> RETURN . SEMI
    (176) breturn -> RETURN . NULL SEMI
    (177) breturn -> RETURN . VARIABLE SEMI
    (178) breturn -> RETURN . BOOLEANO SEMI

    SEMI            shift and go to state 190
    NULL            shift and go to state 191
    VARIABLE        shift and go to state 192
    BOOLEANO        shift and go to state 193


state 78

    (190) comment -> COMENTARIOS .

    $end            reduce using rule 190 (comment -> COMENTARIOS .)
    RBRACE          reduce using rule 190 (comment -> COMENTARIOS .)
    SEMI            reduce using rule 190 (comment -> COMENTARIOS .)
    BREAK           reduce using rule 190 (comment -> COMENTARIOS .)


state 79

    (191) comment -> DOC_COMENTARIOS .

    $end            reduce using rule 191 (comment -> DOC_COMENTARIOS .)
    RBRACE          reduce using rule 191 (comment -> DOC_COMENTARIOS .)
    SEMI            reduce using rule 191 (comment -> DOC_COMENTARIOS .)
    BREAK           reduce using rule 191 (comment -> DOC_COMENTARIOS .)


state 80

    (211) simbolos -> OPEN_TAG . CLOSE_TAG
    (212) simbolos -> OPEN_TAG .

    CLOSE_TAG       shift and go to state 194
    $end            reduce using rule 212 (simbolos -> OPEN_TAG .)
    RBRACE          reduce using rule 212 (simbolos -> OPEN_TAG .)
    SEMI            reduce using rule 212 (simbolos -> OPEN_TAG .)
    BREAK           reduce using rule 212 (simbolos -> OPEN_TAG .)


state 81

    (213) simbolos -> CLOSE_TAG .

    $end            reduce using rule 213 (simbolos -> CLOSE_TAG .)
    RBRACE          reduce using rule 213 (simbolos -> CLOSE_TAG .)
    SEMI            reduce using rule 213 (simbolos -> CLOSE_TAG .)
    BREAK           reduce using rule 213 (simbolos -> CLOSE_TAG .)


state 82

    (251) funcionesCP_semi -> funcionesCP .
    (252) funcionesCP_semi -> funcionesCP . SEMI

  ! shift/reduce conflict for SEMI resolved as shift
    $end            reduce using rule 251 (funcionesCP_semi -> funcionesCP .)
    COMMA           reduce using rule 251 (funcionesCP_semi -> funcionesCP .)
    RBRACE          reduce using rule 251 (funcionesCP_semi -> funcionesCP .)
    BREAK           reduce using rule 251 (funcionesCP_semi -> funcionesCP .)
    SEMI            shift and go to state 195

  ! SEMI            [ reduce using rule 251 (funcionesCP_semi -> funcionesCP .) ]


state 83

    (257) arraypop -> ARRAY_POP . LPAREN VARIABLE RPAREN SEMI

    LPAREN          shift and go to state 196


state 84

    (258) arraypush -> ARRAY_PUSH . LPAREN VARIABLE COMMA valor RPAREN SEMI

    LPAREN          shift and go to state 197


state 85

    (170) proteccion -> PUBLIC .

    VARIABLE        reduce using rule 170 (proteccion -> PUBLIC .)
    VAR             reduce using rule 170 (proteccion -> PUBLIC .)
    FUNCTION        reduce using rule 170 (proteccion -> PUBLIC .)
    PUBLIC          reduce using rule 170 (proteccion -> PUBLIC .)
    PRIVATE         reduce using rule 170 (proteccion -> PUBLIC .)
    PROTECTED       reduce using rule 170 (proteccion -> PUBLIC .)
    STATIC          reduce using rule 170 (proteccion -> PUBLIC .)


state 86

    (171) proteccion -> PRIVATE .

    VARIABLE        reduce using rule 171 (proteccion -> PRIVATE .)
    VAR             reduce using rule 171 (proteccion -> PRIVATE .)
    FUNCTION        reduce using rule 171 (proteccion -> PRIVATE .)
    PUBLIC          reduce using rule 171 (proteccion -> PRIVATE .)
    PRIVATE         reduce using rule 171 (proteccion -> PRIVATE .)
    PROTECTED       reduce using rule 171 (proteccion -> PRIVATE .)
    STATIC          reduce using rule 171 (proteccion -> PRIVATE .)


state 87

    (172) proteccion -> PROTECTED .

    VARIABLE        reduce using rule 172 (proteccion -> PROTECTED .)
    VAR             reduce using rule 172 (proteccion -> PROTECTED .)
    FUNCTION        reduce using rule 172 (proteccion -> PROTECTED .)
    PUBLIC          reduce using rule 172 (proteccion -> PROTECTED .)
    PRIVATE         reduce using rule 172 (proteccion -> PROTECTED .)
    PROTECTED       reduce using rule 172 (proteccion -> PROTECTED .)
    STATIC          reduce using rule 172 (proteccion -> PROTECTED .)


state 88

    (173) proteccion -> STATIC .

    VARIABLE        reduce using rule 173 (proteccion -> STATIC .)
    VAR             reduce using rule 173 (proteccion -> STATIC .)
    FUNCTION        reduce using rule 173 (proteccion -> STATIC .)
    PUBLIC          reduce using rule 173 (proteccion -> STATIC .)
    PRIVATE         reduce using rule 173 (proteccion -> STATIC .)
    PROTECTED       reduce using rule 173 (proteccion -> STATIC .)
    STATIC          reduce using rule 173 (proteccion -> STATIC .)


state 89

    (161) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> FUNCTION . NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    NOMBRE          shift and go to state 198


state 90

    (75) condicion_if -> IF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> IF . LPAREN condicion RPAREN llamada_funcion

    LPAREN          shift and go to state 199


state 91

    (179) breturn -> breturn RBRACE .

    RBRACE          reduce using rule 179 (breturn -> breturn RBRACE .)
    $end            reduce using rule 179 (breturn -> breturn RBRACE .)
    SEMI            reduce using rule 179 (breturn -> breturn RBRACE .)
    BREAK           reduce using rule 179 (breturn -> breturn RBRACE .)


state 92

    (58) imprimir -> ECHO valor . SEMI
    (144) operaciones_mat -> valor . operadores valor
    (145) operaciones_mat -> valor . operadores operaciones_mat
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SEMI            shift and go to state 200
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 201

state 93

    (62) imprimir -> ECHO NOMBRE . LBRACKET ENTERO RBRACKET SEMI

    LBRACKET        shift and go to state 204


state 94

    (56) numero -> ENTERO .

    SEMI            reduce using rule 56 (numero -> ENTERO .)
    SUMA            reduce using rule 56 (numero -> ENTERO .)
    RESTA           reduce using rule 56 (numero -> ENTERO .)
    MULTIPLICACION  reduce using rule 56 (numero -> ENTERO .)
    DIVISION        reduce using rule 56 (numero -> ENTERO .)
    MODULO          reduce using rule 56 (numero -> ENTERO .)
    RPAREN          reduce using rule 56 (numero -> ENTERO .)
    AND             reduce using rule 56 (numero -> ENTERO .)
    OR              reduce using rule 56 (numero -> ENTERO .)
    XOR             reduce using rule 56 (numero -> ENTERO .)
    IS_EQUAL        reduce using rule 56 (numero -> ENTERO .)
    IS_NOT_EQUAL    reduce using rule 56 (numero -> ENTERO .)
    IS_IDENTICAL    reduce using rule 56 (numero -> ENTERO .)
    IS_NOT_IDENTICAL reduce using rule 56 (numero -> ENTERO .)
    SMALLER         reduce using rule 56 (numero -> ENTERO .)
    GREATER         reduce using rule 56 (numero -> ENTERO .)
    IS_SMALLER_OR_EQUAL reduce using rule 56 (numero -> ENTERO .)
    IS_GREATER_OR_EQUAL reduce using rule 56 (numero -> ENTERO .)
    COMMA           reduce using rule 56 (numero -> ENTERO .)
    $end            reduce using rule 56 (numero -> ENTERO .)
    RBRACE          reduce using rule 56 (numero -> ENTERO .)
    BREAK           reduce using rule 56 (numero -> ENTERO .)
    VARIABLE        reduce using rule 56 (numero -> ENTERO .)
    LPAREN          reduce using rule 56 (numero -> ENTERO .)
    CADENA          reduce using rule 56 (numero -> ENTERO .)
    BOOLEANO        reduce using rule 56 (numero -> ENTERO .)
    ENTERO          reduce using rule 56 (numero -> ENTERO .)
    DECIMAL         reduce using rule 56 (numero -> ENTERO .)


state 95

    (63) imprimir -> ECHO bconcat .

    $end            reduce using rule 63 (imprimir -> ECHO bconcat .)
    RBRACE          reduce using rule 63 (imprimir -> ECHO bconcat .)
    SEMI            reduce using rule 63 (imprimir -> ECHO bconcat .)
    BREAK           reduce using rule 63 (imprimir -> ECHO bconcat .)


state 96

    (64) imprimir -> ECHO operaciones_mat . SEMI

    SEMI            shift and go to state 205


state 97

    (66) imprimir -> ECHO VARIABLE . SEMI
    (222) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (223) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (226) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (146) operaciones_mat -> VARIABLE . operadores VARIABLE
    (245) poppila -> VARIABLE . FLECHA POP LPAREN RPAREN SEMI
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (246) funcionesCP -> VARIABLE . FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> VARIABLE . FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> VARIABLE . FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> VARIABLE . FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> VARIABLE . FLECHA CURRENT LPAREN RPAREN
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SEMI            shift and go to state 206
    CONCAT          shift and go to state 132
    CONCAT_EQUAL    shift and go to state 133
    FLECHA          shift and go to state 208
    EQUALS          shift and go to state 209
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 207

state 98

    (68) imprimir -> ECHO funcionesCP_semi .
    (70) imprimir -> ECHO funcionesCP_semi . COMMA NOMBRE SEMI

    $end            reduce using rule 68 (imprimir -> ECHO funcionesCP_semi .)
    RBRACE          reduce using rule 68 (imprimir -> ECHO funcionesCP_semi .)
    SEMI            reduce using rule 68 (imprimir -> ECHO funcionesCP_semi .)
    BREAK           reduce using rule 68 (imprimir -> ECHO funcionesCP_semi .)
    COMMA           shift and go to state 210


state 99

    (71) imprimir -> ECHO poppila .

    $end            reduce using rule 71 (imprimir -> ECHO poppila .)
    RBRACE          reduce using rule 71 (imprimir -> ECHO poppila .)
    SEMI            reduce using rule 71 (imprimir -> ECHO poppila .)
    BREAK           reduce using rule 71 (imprimir -> ECHO poppila .)


state 100

    (50) valor -> tipoDato .

    SEMI            reduce using rule 50 (valor -> tipoDato .)
    SUMA            reduce using rule 50 (valor -> tipoDato .)
    RESTA           reduce using rule 50 (valor -> tipoDato .)
    MULTIPLICACION  reduce using rule 50 (valor -> tipoDato .)
    DIVISION        reduce using rule 50 (valor -> tipoDato .)
    MODULO          reduce using rule 50 (valor -> tipoDato .)
    RPAREN          reduce using rule 50 (valor -> tipoDato .)
    SMALLER         reduce using rule 50 (valor -> tipoDato .)
    GREATER         reduce using rule 50 (valor -> tipoDato .)
    IS_SMALLER_OR_EQUAL reduce using rule 50 (valor -> tipoDato .)
    IS_GREATER_OR_EQUAL reduce using rule 50 (valor -> tipoDato .)
    AND             reduce using rule 50 (valor -> tipoDato .)
    OR              reduce using rule 50 (valor -> tipoDato .)
    XOR             reduce using rule 50 (valor -> tipoDato .)
    IS_EQUAL        reduce using rule 50 (valor -> tipoDato .)
    IS_NOT_EQUAL    reduce using rule 50 (valor -> tipoDato .)
    IS_IDENTICAL    reduce using rule 50 (valor -> tipoDato .)
    IS_NOT_IDENTICAL reduce using rule 50 (valor -> tipoDato .)
    COMMA           reduce using rule 50 (valor -> tipoDato .)
    $end            reduce using rule 50 (valor -> tipoDato .)
    RBRACE          reduce using rule 50 (valor -> tipoDato .)
    BREAK           reduce using rule 50 (valor -> tipoDato .)
    VARIABLE        reduce using rule 50 (valor -> tipoDato .)
    LPAREN          reduce using rule 50 (valor -> tipoDato .)
    CADENA          reduce using rule 50 (valor -> tipoDato .)
    BOOLEANO        reduce using rule 50 (valor -> tipoDato .)
    ENTERO          reduce using rule 50 (valor -> tipoDato .)
    DECIMAL         reduce using rule 50 (valor -> tipoDato .)


state 101

    (51) valor -> bcolas .

    SEMI            reduce using rule 51 (valor -> bcolas .)
    SUMA            reduce using rule 51 (valor -> bcolas .)
    RESTA           reduce using rule 51 (valor -> bcolas .)
    MULTIPLICACION  reduce using rule 51 (valor -> bcolas .)
    DIVISION        reduce using rule 51 (valor -> bcolas .)
    MODULO          reduce using rule 51 (valor -> bcolas .)
    RPAREN          reduce using rule 51 (valor -> bcolas .)
    SMALLER         reduce using rule 51 (valor -> bcolas .)
    GREATER         reduce using rule 51 (valor -> bcolas .)
    IS_SMALLER_OR_EQUAL reduce using rule 51 (valor -> bcolas .)
    IS_GREATER_OR_EQUAL reduce using rule 51 (valor -> bcolas .)
    AND             reduce using rule 51 (valor -> bcolas .)
    OR              reduce using rule 51 (valor -> bcolas .)
    XOR             reduce using rule 51 (valor -> bcolas .)
    IS_EQUAL        reduce using rule 51 (valor -> bcolas .)
    IS_NOT_EQUAL    reduce using rule 51 (valor -> bcolas .)
    IS_IDENTICAL    reduce using rule 51 (valor -> bcolas .)
    IS_NOT_IDENTICAL reduce using rule 51 (valor -> bcolas .)
    COMMA           reduce using rule 51 (valor -> bcolas .)
    $end            reduce using rule 51 (valor -> bcolas .)
    RBRACE          reduce using rule 51 (valor -> bcolas .)
    BREAK           reduce using rule 51 (valor -> bcolas .)
    VARIABLE        reduce using rule 51 (valor -> bcolas .)
    LPAREN          reduce using rule 51 (valor -> bcolas .)
    CADENA          reduce using rule 51 (valor -> bcolas .)
    BOOLEANO        reduce using rule 51 (valor -> bcolas .)
    ENTERO          reduce using rule 51 (valor -> bcolas .)
    DECIMAL         reduce using rule 51 (valor -> bcolas .)


state 102

    (52) valor -> bpila .

    SEMI            reduce using rule 52 (valor -> bpila .)
    SUMA            reduce using rule 52 (valor -> bpila .)
    RESTA           reduce using rule 52 (valor -> bpila .)
    MULTIPLICACION  reduce using rule 52 (valor -> bpila .)
    DIVISION        reduce using rule 52 (valor -> bpila .)
    MODULO          reduce using rule 52 (valor -> bpila .)
    RPAREN          reduce using rule 52 (valor -> bpila .)
    SMALLER         reduce using rule 52 (valor -> bpila .)
    GREATER         reduce using rule 52 (valor -> bpila .)
    IS_SMALLER_OR_EQUAL reduce using rule 52 (valor -> bpila .)
    IS_GREATER_OR_EQUAL reduce using rule 52 (valor -> bpila .)
    AND             reduce using rule 52 (valor -> bpila .)
    OR              reduce using rule 52 (valor -> bpila .)
    XOR             reduce using rule 52 (valor -> bpila .)
    IS_EQUAL        reduce using rule 52 (valor -> bpila .)
    IS_NOT_EQUAL    reduce using rule 52 (valor -> bpila .)
    IS_IDENTICAL    reduce using rule 52 (valor -> bpila .)
    IS_NOT_IDENTICAL reduce using rule 52 (valor -> bpila .)
    COMMA           reduce using rule 52 (valor -> bpila .)
    $end            reduce using rule 52 (valor -> bpila .)
    RBRACE          reduce using rule 52 (valor -> bpila .)
    BREAK           reduce using rule 52 (valor -> bpila .)
    VARIABLE        reduce using rule 52 (valor -> bpila .)
    LPAREN          reduce using rule 52 (valor -> bpila .)
    CADENA          reduce using rule 52 (valor -> bpila .)
    BOOLEANO        reduce using rule 52 (valor -> bpila .)
    ENTERO          reduce using rule 52 (valor -> bpila .)
    DECIMAL         reduce using rule 52 (valor -> bpila .)


state 103

    (221) bconcat -> CADENA . CONCAT CADENA SEMI
    (224) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI
    (54) tipoDato -> CADENA .

    CONCAT          shift and go to state 155
    CONCAT_EQUAL    shift and go to state 156
    SEMI            reduce using rule 54 (tipoDato -> CADENA .)
    SUMA            reduce using rule 54 (tipoDato -> CADENA .)
    RESTA           reduce using rule 54 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 54 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 54 (tipoDato -> CADENA .)
    MODULO          reduce using rule 54 (tipoDato -> CADENA .)


state 104

    (147) operaciones_mat -> operaciones_mat_par .

    SEMI            reduce using rule 147 (operaciones_mat -> operaciones_mat_par .)


state 105

    (148) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (149) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (150) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN
    (153) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 212
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 211
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 106

    (53) tipoDato -> numero .

    SEMI            reduce using rule 53 (tipoDato -> numero .)
    SUMA            reduce using rule 53 (tipoDato -> numero .)
    RESTA           reduce using rule 53 (tipoDato -> numero .)
    MULTIPLICACION  reduce using rule 53 (tipoDato -> numero .)
    DIVISION        reduce using rule 53 (tipoDato -> numero .)
    MODULO          reduce using rule 53 (tipoDato -> numero .)
    RPAREN          reduce using rule 53 (tipoDato -> numero .)
    AND             reduce using rule 53 (tipoDato -> numero .)
    OR              reduce using rule 53 (tipoDato -> numero .)
    XOR             reduce using rule 53 (tipoDato -> numero .)
    IS_EQUAL        reduce using rule 53 (tipoDato -> numero .)
    IS_NOT_EQUAL    reduce using rule 53 (tipoDato -> numero .)
    IS_IDENTICAL    reduce using rule 53 (tipoDato -> numero .)
    IS_NOT_IDENTICAL reduce using rule 53 (tipoDato -> numero .)
    SMALLER         reduce using rule 53 (tipoDato -> numero .)
    GREATER         reduce using rule 53 (tipoDato -> numero .)
    IS_SMALLER_OR_EQUAL reduce using rule 53 (tipoDato -> numero .)
    IS_GREATER_OR_EQUAL reduce using rule 53 (tipoDato -> numero .)
    COMMA           reduce using rule 53 (tipoDato -> numero .)
    $end            reduce using rule 53 (tipoDato -> numero .)
    RBRACE          reduce using rule 53 (tipoDato -> numero .)
    BREAK           reduce using rule 53 (tipoDato -> numero .)
    VARIABLE        reduce using rule 53 (tipoDato -> numero .)
    LPAREN          reduce using rule 53 (tipoDato -> numero .)
    CADENA          reduce using rule 53 (tipoDato -> numero .)
    BOOLEANO        reduce using rule 53 (tipoDato -> numero .)
    ENTERO          reduce using rule 53 (tipoDato -> numero .)
    DECIMAL         reduce using rule 53 (tipoDato -> numero .)


state 107

    (55) tipoDato -> BOOLEANO .

    SEMI            reduce using rule 55 (tipoDato -> BOOLEANO .)
    SUMA            reduce using rule 55 (tipoDato -> BOOLEANO .)
    RESTA           reduce using rule 55 (tipoDato -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 55 (tipoDato -> BOOLEANO .)
    DIVISION        reduce using rule 55 (tipoDato -> BOOLEANO .)
    MODULO          reduce using rule 55 (tipoDato -> BOOLEANO .)
    RPAREN          reduce using rule 55 (tipoDato -> BOOLEANO .)
    AND             reduce using rule 55 (tipoDato -> BOOLEANO .)
    OR              reduce using rule 55 (tipoDato -> BOOLEANO .)
    XOR             reduce using rule 55 (tipoDato -> BOOLEANO .)
    IS_EQUAL        reduce using rule 55 (tipoDato -> BOOLEANO .)
    IS_NOT_EQUAL    reduce using rule 55 (tipoDato -> BOOLEANO .)
    IS_IDENTICAL    reduce using rule 55 (tipoDato -> BOOLEANO .)
    IS_NOT_IDENTICAL reduce using rule 55 (tipoDato -> BOOLEANO .)
    SMALLER         reduce using rule 55 (tipoDato -> BOOLEANO .)
    GREATER         reduce using rule 55 (tipoDato -> BOOLEANO .)
    IS_SMALLER_OR_EQUAL reduce using rule 55 (tipoDato -> BOOLEANO .)
    IS_GREATER_OR_EQUAL reduce using rule 55 (tipoDato -> BOOLEANO .)
    COMMA           reduce using rule 55 (tipoDato -> BOOLEANO .)
    $end            reduce using rule 55 (tipoDato -> BOOLEANO .)
    RBRACE          reduce using rule 55 (tipoDato -> BOOLEANO .)
    BREAK           reduce using rule 55 (tipoDato -> BOOLEANO .)
    VARIABLE        reduce using rule 55 (tipoDato -> BOOLEANO .)
    LPAREN          reduce using rule 55 (tipoDato -> BOOLEANO .)
    CADENA          reduce using rule 55 (tipoDato -> BOOLEANO .)
    BOOLEANO        reduce using rule 55 (tipoDato -> BOOLEANO .)
    ENTERO          reduce using rule 55 (tipoDato -> BOOLEANO .)
    DECIMAL         reduce using rule 55 (tipoDato -> BOOLEANO .)


state 108

    (57) numero -> DECIMAL .

    SEMI            reduce using rule 57 (numero -> DECIMAL .)
    SUMA            reduce using rule 57 (numero -> DECIMAL .)
    RESTA           reduce using rule 57 (numero -> DECIMAL .)
    MULTIPLICACION  reduce using rule 57 (numero -> DECIMAL .)
    DIVISION        reduce using rule 57 (numero -> DECIMAL .)
    MODULO          reduce using rule 57 (numero -> DECIMAL .)
    RPAREN          reduce using rule 57 (numero -> DECIMAL .)
    AND             reduce using rule 57 (numero -> DECIMAL .)
    OR              reduce using rule 57 (numero -> DECIMAL .)
    XOR             reduce using rule 57 (numero -> DECIMAL .)
    IS_EQUAL        reduce using rule 57 (numero -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 57 (numero -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 57 (numero -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 57 (numero -> DECIMAL .)
    SMALLER         reduce using rule 57 (numero -> DECIMAL .)
    GREATER         reduce using rule 57 (numero -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 57 (numero -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 57 (numero -> DECIMAL .)
    COMMA           reduce using rule 57 (numero -> DECIMAL .)
    $end            reduce using rule 57 (numero -> DECIMAL .)
    RBRACE          reduce using rule 57 (numero -> DECIMAL .)
    BREAK           reduce using rule 57 (numero -> DECIMAL .)
    VARIABLE        reduce using rule 57 (numero -> DECIMAL .)
    LPAREN          reduce using rule 57 (numero -> DECIMAL .)
    CADENA          reduce using rule 57 (numero -> DECIMAL .)
    BOOLEANO        reduce using rule 57 (numero -> DECIMAL .)
    ENTERO          reduce using rule 57 (numero -> DECIMAL .)
    DECIMAL         reduce using rule 57 (numero -> DECIMAL .)


state 109

    (59) imprimir -> PRINT valor . SEMI
    (144) operaciones_mat -> valor . operadores valor
    (145) operaciones_mat -> valor . operadores operaciones_mat
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SEMI            shift and go to state 214
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 201

state 110

    (60) imprimir -> PRINT LPAREN . valor RPAREN SEMI
    (148) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (149) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (150) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN
    (153) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 212
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 215
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 111

    (61) imprimir -> PRINT bconcat .

    $end            reduce using rule 61 (imprimir -> PRINT bconcat .)
    RBRACE          reduce using rule 61 (imprimir -> PRINT bconcat .)
    SEMI            reduce using rule 61 (imprimir -> PRINT bconcat .)
    BREAK           reduce using rule 61 (imprimir -> PRINT bconcat .)


state 112

    (65) imprimir -> PRINT operaciones_mat . SEMI

    SEMI            shift and go to state 216


state 113

    (67) imprimir -> PRINT VARIABLE . SEMI
    (222) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (223) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (226) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (146) operaciones_mat -> VARIABLE . operadores VARIABLE
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (246) funcionesCP -> VARIABLE . FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> VARIABLE . FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> VARIABLE . FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> VARIABLE . FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> VARIABLE . FLECHA CURRENT LPAREN RPAREN
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SEMI            shift and go to state 217
    CONCAT          shift and go to state 132
    CONCAT_EQUAL    shift and go to state 133
    EQUALS          shift and go to state 209
    FLECHA          shift and go to state 218
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 207

state 114

    (69) imprimir -> PRINT funcionesCP_semi .

    $end            reduce using rule 69 (imprimir -> PRINT funcionesCP_semi .)
    RBRACE          reduce using rule 69 (imprimir -> PRINT funcionesCP_semi .)
    SEMI            reduce using rule 69 (imprimir -> PRINT funcionesCP_semi .)
    BREAK           reduce using rule 69 (imprimir -> PRINT funcionesCP_semi .)


state 115

    (237) casting -> LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 219


state 116

    (202) simbolos -> LPAREN RPAREN .

    $end            reduce using rule 202 (simbolos -> LPAREN RPAREN .)
    RBRACE          reduce using rule 202 (simbolos -> LPAREN RPAREN .)
    SEMI            reduce using rule 202 (simbolos -> LPAREN RPAREN .)
    BREAK           reduce using rule 202 (simbolos -> LPAREN RPAREN .)


state 117

    (227) tiposCast -> STRING .

    RPAREN          reduce using rule 227 (tiposCast -> STRING .)


state 118

    (228) tiposCast -> BOOL .

    RPAREN          reduce using rule 228 (tiposCast -> BOOL .)


state 119

    (229) tiposCast -> BOOLEAN .

    RPAREN          reduce using rule 229 (tiposCast -> BOOLEAN .)


state 120

    (230) tiposCast -> DOUBLE .

    RPAREN          reduce using rule 230 (tiposCast -> DOUBLE .)


state 121

    (231) tiposCast -> FLOAT .

    RPAREN          reduce using rule 231 (tiposCast -> FLOAT .)


state 122

    (232) tiposCast -> ARRAY .

    RPAREN          reduce using rule 232 (tiposCast -> ARRAY .)


state 123

    (233) tiposCast -> OBJECT .

    RPAREN          reduce using rule 233 (tiposCast -> OBJECT .)


state 124

    (234) tiposCast -> INTEGER .

    RPAREN          reduce using rule 234 (tiposCast -> INTEGER .)


state 125

    (235) tiposCast -> INT .

    RPAREN          reduce using rule 235 (tiposCast -> INT .)


state 126

    (168) llamada_funcion -> NOMBRE LPAREN . params_list RPAREN SEMI
    (162) params_list -> . params_list COMMA param
    (163) params_list -> . param
    (164) params_list -> . empty
    (159) param -> . VARIABLE
    (160) param -> . asignacion
    (184) empty -> .
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 223
    RPAREN          reduce using rule 184 (empty -> .)
    COMMA           reduce using rule 184 (empty -> .)
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    params_list                    shift and go to state 220
    param                          shift and go to state 221
    empty                          shift and go to state 222
    asignacion                     shift and go to state 224
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 127

    (199) otros -> NOMBRE COLON .

    $end            reduce using rule 199 (otros -> NOMBRE COLON .)
    RBRACE          reduce using rule 199 (otros -> NOMBRE COLON .)
    SEMI            reduce using rule 199 (otros -> NOMBRE COLON .)
    BREAK           reduce using rule 199 (otros -> NOMBRE COLON .)


state 128

    (205) simbolos -> LBRACKET RBRACKET .

    $end            reduce using rule 205 (simbolos -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 205 (simbolos -> LBRACKET RBRACKET .)
    SEMI            reduce using rule 205 (simbolos -> LBRACKET RBRACKET .)
    BREAK           reduce using rule 205 (simbolos -> LBRACKET RBRACKET .)


state 129

    (36) asignacion -> VARIABLE EQUALS . valor SEMI
    (39) asignacion -> VARIABLE EQUALS . brand
    (40) asignacion -> VARIABLE EQUALS . escribir
    (41) asignacion -> VARIABLE EQUALS . btrim
    (42) asignacion -> VARIABLE EQUALS . lectura
    (43) asignacion -> VARIABLE EQUALS . bconcat
    (45) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (47) asignacion -> VARIABLE EQUALS . llamada_funcion
    (48) asignacion -> VARIABLE EQUALS . arrayvalues SEMI
    (185) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI
    (236) casting -> VARIABLE EQUALS . LPAREN tiposCast RPAREN VARIABLE SEMI
    (49) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (239) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (144) operaciones_mat -> . valor operadores valor
    (145) operaciones_mat -> . valor operadores operaciones_mat
    (146) operaciones_mat -> . VARIABLE operadores VARIABLE
    (147) operaciones_mat -> . operaciones_mat_par
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (259) arrayvalues -> . ARRAY_VALUES LPAREN VARIABLE RPAREN
    (180) array_def -> . ARRAY LPAREN RPAREN
    (181) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (148) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (149) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (150) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    NEW             shift and go to state 235
    LPAREN          shift and go to state 236
    VARIABLE        shift and go to state 225
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    READLINE        shift and go to state 56
    CADENA          shift and go to state 103
    NOMBRE          shift and go to state 238
    ARRAY_VALUES    shift and go to state 239
    ARRAY           shift and go to state 240
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 226
    brand                          shift and go to state 227
    escribir                       shift and go to state 228
    btrim                          shift and go to state 229
    lectura                        shift and go to state 230
    bconcat                        shift and go to state 231
    operaciones_mat                shift and go to state 232
    llamada_funcion                shift and go to state 233
    arrayvalues                    shift and go to state 234
    array_def                      shift and go to state 237
    tipoDato                       shift and go to state 100
    operaciones_mat_par            shift and go to state 104
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 130

    (107) incrementOp -> VARIABLE SUMA . SUMA SEMI
    (123) operadores -> SUMA .

    SUMA            shift and go to state 241
    CADENA          reduce using rule 123 (operadores -> SUMA .)
    BOOLEANO        reduce using rule 123 (operadores -> SUMA .)
    ENTERO          reduce using rule 123 (operadores -> SUMA .)
    DECIMAL         reduce using rule 123 (operadores -> SUMA .)


state 131

    (108) incrementOp -> VARIABLE RESTA . RESTA SEMI
    (124) operadores -> RESTA .

    RESTA           shift and go to state 242
    CADENA          reduce using rule 124 (operadores -> RESTA .)
    BOOLEANO        reduce using rule 124 (operadores -> RESTA .)
    ENTERO          reduce using rule 124 (operadores -> RESTA .)
    DECIMAL         reduce using rule 124 (operadores -> RESTA .)


state 132

    (222) bconcat -> VARIABLE CONCAT . CADENA SEMI
    (225) bconcat -> VARIABLE CONCAT . VARIABLE SEMI
    (226) bconcat -> VARIABLE CONCAT . CADENA CONCAT VARIABLE SEMI

    CADENA          shift and go to state 244
    VARIABLE        shift and go to state 243


state 133

    (223) bconcat -> VARIABLE CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 245


state 134

    (244) addpila -> VARIABLE FLECHA . PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> VARIABLE FLECHA . ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> VARIABLE FLECHA . DEQUEUE LPAREN valor RPAREN SEMI
    (245) poppila -> VARIABLE FLECHA . POP LPAREN RPAREN SEMI
    (246) funcionesCP -> VARIABLE FLECHA . REWIND LPAREN RPAREN
    (247) funcionesCP -> VARIABLE FLECHA . VALID LPAREN RPAREN
    (248) funcionesCP -> VARIABLE FLECHA . COUNT LPAREN RPAREN
    (249) funcionesCP -> VARIABLE FLECHA . NEXT LPAREN RPAREN
    (250) funcionesCP -> VARIABLE FLECHA . CURRENT LPAREN RPAREN

    PUSH            shift and go to state 246
    ENQUEUE         shift and go to state 247
    DEQUEUE         shift and go to state 248
    POP             shift and go to state 249
    REWIND          shift and go to state 250
    VALID           shift and go to state 251
    COUNT           shift and go to state 252
    NEXT            shift and go to state 253
    CURRENT         shift and go to state 254


state 135

    (238) aumentoCasting -> VARIABLE incrementos_mat . tipoDato SEMI
    (242) aumentoCasting -> VARIABLE incrementos_mat . VARIABLE SEMI
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 255
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 256
    numero                         shift and go to state 106

state 136

    (241) aumentoCasting -> VARIABLE operadores . tipoDato condicion_booleana valor
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 257
    numero                         shift and go to state 106

state 137

    (132) incrementos_mat -> MINUS_EQUAL .

    VARIABLE        reduce using rule 132 (incrementos_mat -> MINUS_EQUAL .)
    CADENA          reduce using rule 132 (incrementos_mat -> MINUS_EQUAL .)
    BOOLEANO        reduce using rule 132 (incrementos_mat -> MINUS_EQUAL .)
    ENTERO          reduce using rule 132 (incrementos_mat -> MINUS_EQUAL .)
    DECIMAL         reduce using rule 132 (incrementos_mat -> MINUS_EQUAL .)


state 138

    (133) incrementos_mat -> MOD_EQUAL .

    VARIABLE        reduce using rule 133 (incrementos_mat -> MOD_EQUAL .)
    CADENA          reduce using rule 133 (incrementos_mat -> MOD_EQUAL .)
    BOOLEANO        reduce using rule 133 (incrementos_mat -> MOD_EQUAL .)
    ENTERO          reduce using rule 133 (incrementos_mat -> MOD_EQUAL .)
    DECIMAL         reduce using rule 133 (incrementos_mat -> MOD_EQUAL .)


state 139

    (134) incrementos_mat -> MUL_EQUAL .

    VARIABLE        reduce using rule 134 (incrementos_mat -> MUL_EQUAL .)
    CADENA          reduce using rule 134 (incrementos_mat -> MUL_EQUAL .)
    BOOLEANO        reduce using rule 134 (incrementos_mat -> MUL_EQUAL .)
    ENTERO          reduce using rule 134 (incrementos_mat -> MUL_EQUAL .)
    DECIMAL         reduce using rule 134 (incrementos_mat -> MUL_EQUAL .)


state 140

    (135) incrementos_mat -> PLUS_EQUAL .

    VARIABLE        reduce using rule 135 (incrementos_mat -> PLUS_EQUAL .)
    CADENA          reduce using rule 135 (incrementos_mat -> PLUS_EQUAL .)
    BOOLEANO        reduce using rule 135 (incrementos_mat -> PLUS_EQUAL .)
    ENTERO          reduce using rule 135 (incrementos_mat -> PLUS_EQUAL .)
    DECIMAL         reduce using rule 135 (incrementos_mat -> PLUS_EQUAL .)


state 141

    (136) incrementos_mat -> DIV_EQUAL .

    VARIABLE        reduce using rule 136 (incrementos_mat -> DIV_EQUAL .)
    CADENA          reduce using rule 136 (incrementos_mat -> DIV_EQUAL .)
    BOOLEANO        reduce using rule 136 (incrementos_mat -> DIV_EQUAL .)
    ENTERO          reduce using rule 136 (incrementos_mat -> DIV_EQUAL .)
    DECIMAL         reduce using rule 136 (incrementos_mat -> DIV_EQUAL .)


state 142

    (125) operadores -> MULTIPLICACION .

    CADENA          reduce using rule 125 (operadores -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 125 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 125 (operadores -> MULTIPLICACION .)
    DECIMAL         reduce using rule 125 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 125 (operadores -> MULTIPLICACION .)
    LPAREN          reduce using rule 125 (operadores -> MULTIPLICACION .)


state 143

    (126) operadores -> DIVISION .

    CADENA          reduce using rule 126 (operadores -> DIVISION .)
    BOOLEANO        reduce using rule 126 (operadores -> DIVISION .)
    ENTERO          reduce using rule 126 (operadores -> DIVISION .)
    DECIMAL         reduce using rule 126 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 126 (operadores -> DIVISION .)
    LPAREN          reduce using rule 126 (operadores -> DIVISION .)


state 144

    (127) operadores -> MODULO .

    CADENA          reduce using rule 127 (operadores -> MODULO .)
    BOOLEANO        reduce using rule 127 (operadores -> MODULO .)
    ENTERO          reduce using rule 127 (operadores -> MODULO .)
    DECIMAL         reduce using rule 127 (operadores -> MODULO .)
    VARIABLE        reduce using rule 127 (operadores -> MODULO .)
    LPAREN          reduce using rule 127 (operadores -> MODULO .)


state 145

    (72) imprimir -> VAR_DUMP LPAREN . VARIABLE RPAREN SEMI

    VARIABLE        shift and go to state 258


state 146

    (73) imprimir -> PRINT_R LPAREN . VARIABLE RPAREN SEMI
    (74) imprimir -> PRINT_R LPAREN . arrayvalues RPAREN SEMI
    (259) arrayvalues -> . ARRAY_VALUES LPAREN VARIABLE RPAREN

    VARIABLE        shift and go to state 259
    ARRAY_VALUES    shift and go to state 239

    arrayvalues                    shift and go to state 260

state 147

    (37) asignacion -> VAR asignacion .

    $end            reduce using rule 37 (asignacion -> VAR asignacion .)
    RBRACE          reduce using rule 37 (asignacion -> VAR asignacion .)
    SEMI            reduce using rule 37 (asignacion -> VAR asignacion .)
    BREAK           reduce using rule 37 (asignacion -> VAR asignacion .)
    RPAREN          reduce using rule 37 (asignacion -> VAR asignacion .)
    COMMA           reduce using rule 37 (asignacion -> VAR asignacion .)
    VARIABLE        reduce using rule 37 (asignacion -> VAR asignacion .)
    LPAREN          reduce using rule 37 (asignacion -> VAR asignacion .)
    CADENA          reduce using rule 37 (asignacion -> VAR asignacion .)
    BOOLEANO        reduce using rule 37 (asignacion -> VAR asignacion .)
    ENTERO          reduce using rule 37 (asignacion -> VAR asignacion .)
    DECIMAL         reduce using rule 37 (asignacion -> VAR asignacion .)


state 148

    (36) asignacion -> VARIABLE . EQUALS valor SEMI
    (39) asignacion -> VARIABLE . EQUALS brand
    (40) asignacion -> VARIABLE . EQUALS escribir
    (41) asignacion -> VARIABLE . EQUALS btrim
    (42) asignacion -> VARIABLE . EQUALS lectura
    (43) asignacion -> VARIABLE . EQUALS bconcat
    (45) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (47) asignacion -> VARIABLE . EQUALS llamada_funcion
    (48) asignacion -> VARIABLE . EQUALS arrayvalues SEMI
    (49) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (238) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (132) incrementos_mat -> . MINUS_EQUAL
    (133) incrementos_mat -> . MOD_EQUAL
    (134) incrementos_mat -> . MUL_EQUAL
    (135) incrementos_mat -> . PLUS_EQUAL
    (136) incrementos_mat -> . DIV_EQUAL
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    EQUALS          shift and go to state 261
    MINUS_EQUAL     shift and go to state 137
    MOD_EQUAL       shift and go to state 138
    MUL_EQUAL       shift and go to state 139
    PLUS_EQUAL      shift and go to state 140
    DIV_EQUAL       shift and go to state 141
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    incrementos_mat                shift and go to state 135
    operadores                     shift and go to state 136

state 149

    (38) asignacion -> proteccion . asignacion
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 148
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    proteccion                     shift and go to state 149
    asignacion                     shift and go to state 150
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 150

    (38) asignacion -> proteccion asignacion .

    $end            reduce using rule 38 (asignacion -> proteccion asignacion .)
    RBRACE          reduce using rule 38 (asignacion -> proteccion asignacion .)
    SEMI            reduce using rule 38 (asignacion -> proteccion asignacion .)
    BREAK           reduce using rule 38 (asignacion -> proteccion asignacion .)
    RPAREN          reduce using rule 38 (asignacion -> proteccion asignacion .)
    COMMA           reduce using rule 38 (asignacion -> proteccion asignacion .)
    VARIABLE        reduce using rule 38 (asignacion -> proteccion asignacion .)
    LPAREN          reduce using rule 38 (asignacion -> proteccion asignacion .)
    CADENA          reduce using rule 38 (asignacion -> proteccion asignacion .)
    BOOLEANO        reduce using rule 38 (asignacion -> proteccion asignacion .)
    ENTERO          reduce using rule 38 (asignacion -> proteccion asignacion .)
    DECIMAL         reduce using rule 38 (asignacion -> proteccion asignacion .)


state 151

    (155) funciones -> proteccion funcion_nparams .

    $end            reduce using rule 155 (funciones -> proteccion funcion_nparams .)
    RBRACE          reduce using rule 155 (funciones -> proteccion funcion_nparams .)
    SEMI            reduce using rule 155 (funciones -> proteccion funcion_nparams .)
    BREAK           reduce using rule 155 (funciones -> proteccion funcion_nparams .)


state 152

    (157) funciones -> proteccion funcion_blank .

    $end            reduce using rule 157 (funciones -> proteccion funcion_blank .)
    RBRACE          reduce using rule 157 (funciones -> proteccion funcion_blank .)
    SEMI            reduce using rule 157 (funciones -> proteccion funcion_blank .)
    BREAK           reduce using rule 157 (funciones -> proteccion funcion_blank .)


state 153

    (161) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE

    NOMBRE          shift and go to state 262


state 154

    (255) constante -> DEFINE LPAREN . CADENA COMMA valor RPAREN SEMI
    (256) constante -> DEFINE LPAREN . NOMBRE COMMA ARRAY RPAREN SEMI

    CADENA          shift and go to state 263
    NOMBRE          shift and go to state 264


state 155

    (221) bconcat -> CADENA CONCAT . CADENA SEMI

    CADENA          shift and go to state 265


state 156

    (224) bconcat -> CADENA CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 266


state 157

    (186) lectura -> READLINE LPAREN . CADENA RPAREN SEMI
    (187) lectura -> READLINE LPAREN . RPAREN SEMI

    CADENA          shift and go to state 267
    RPAREN          shift and go to state 268


state 158

    (80) condicion_ifelse -> condicion_if condicion_else .

    $end            reduce using rule 80 (condicion_ifelse -> condicion_if condicion_else .)
    RBRACE          reduce using rule 80 (condicion_ifelse -> condicion_if condicion_else .)
    SEMI            reduce using rule 80 (condicion_ifelse -> condicion_if condicion_else .)
    BREAK           reduce using rule 80 (condicion_ifelse -> condicion_if condicion_else .)


state 159

    (81) condicion_ifelse -> condicion_if condicion_elseif .
    (82) condicion_ifelse -> condicion_if condicion_elseif . condicion_else
    (78) condicion_else -> . ELSE LBRACE cuerpo RBRACE

    $end            reduce using rule 81 (condicion_ifelse -> condicion_if condicion_elseif .)
    RBRACE          reduce using rule 81 (condicion_ifelse -> condicion_if condicion_elseif .)
    SEMI            reduce using rule 81 (condicion_ifelse -> condicion_if condicion_elseif .)
    BREAK           reduce using rule 81 (condicion_ifelse -> condicion_if condicion_elseif .)
    ELSE            shift and go to state 160

    condicion_else                 shift and go to state 269

state 160

    (78) condicion_else -> ELSE . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 270


state 161

    (77) condicion_elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 271


state 162

    (110) bwhile -> WHILE LPAREN . condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> WHILE LPAREN . condicion RPAREN COLON stc_bloque
    (112) bwhile -> WHILE LPAREN . condicion RPAREN SEMI
    (83) condicion -> . VARIABLE operador_logico VARIABLE
    (84) condicion -> . valor operador_logico valor
    (85) condicion -> . VARIABLE operador_logico valor
    (86) condicion -> . VARIABLE condicion_booleana VARIABLE
    (87) condicion -> . valor condicion_booleana valor
    (88) condicion -> . VARIABLE condicion_booleana valor
    (89) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (90) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (91) condicion -> . condicion condicion_booleana condicion
    (92) condicion -> . condicion condicion_booleana comprobacion
    (93) condicion -> . aumentoCasting
    (94) condicion -> . VARIABLE
    (95) condicion -> . funcionesCP
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 274
    LPAREN          shift and go to state 272
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    condicion                      shift and go to state 273
    valor                          shift and go to state 275
    aumentoCasting                 shift and go to state 276
    funcionesCP                    shift and go to state 277
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 163

    (208) simbolos -> LBRACE RBRACE .

    $end            reduce using rule 208 (simbolos -> LBRACE RBRACE .)
    RBRACE          reduce using rule 208 (simbolos -> LBRACE RBRACE .)
    SEMI            reduce using rule 208 (simbolos -> LBRACE RBRACE .)
    BREAK           reduce using rule 208 (simbolos -> LBRACE RBRACE .)


state 164

    (210) simbolos -> RBRACE instrucciones .

    $end            reduce using rule 210 (simbolos -> RBRACE instrucciones .)
    RBRACE          reduce using rule 210 (simbolos -> RBRACE instrucciones .)
    SEMI            reduce using rule 210 (simbolos -> RBRACE instrucciones .)
    BREAK           reduce using rule 210 (simbolos -> RBRACE instrucciones .)


state 165

    (214) instrucciones -> condicion_else .

    RBRACE          reduce using rule 214 (instrucciones -> condicion_else .)
    SEMI            reduce using rule 214 (instrucciones -> condicion_else .)
    $end            reduce using rule 214 (instrucciones -> condicion_else .)
    BREAK           reduce using rule 214 (instrucciones -> condicion_else .)


state 166

    (215) instrucciones -> condicion_elseif .

    RBRACE          reduce using rule 215 (instrucciones -> condicion_elseif .)
    SEMI            reduce using rule 215 (instrucciones -> condicion_elseif .)
    $end            reduce using rule 215 (instrucciones -> condicion_elseif .)
    BREAK           reduce using rule 215 (instrucciones -> condicion_elseif .)


state 167

    (216) instrucciones -> bwhile .

    RBRACE          reduce using rule 216 (instrucciones -> bwhile .)
    SEMI            reduce using rule 216 (instrucciones -> bwhile .)
    $end            reduce using rule 216 (instrucciones -> bwhile .)
    BREAK           reduce using rule 216 (instrucciones -> bwhile .)


state 168

    (217) instrucciones -> bfor .

    RBRACE          reduce using rule 217 (instrucciones -> bfor .)
    SEMI            reduce using rule 217 (instrucciones -> bfor .)
    $end            reduce using rule 217 (instrucciones -> bfor .)
    BREAK           reduce using rule 217 (instrucciones -> bfor .)


state 169

    (218) instrucciones -> funciones .

    RBRACE          reduce using rule 218 (instrucciones -> funciones .)
    SEMI            reduce using rule 218 (instrucciones -> funciones .)
    $end            reduce using rule 218 (instrucciones -> funciones .)
    BREAK           reduce using rule 218 (instrucciones -> funciones .)


state 170

    (219) instrucciones -> bswitch .

    RBRACE          reduce using rule 219 (instrucciones -> bswitch .)
    SEMI            reduce using rule 219 (instrucciones -> bswitch .)
    $end            reduce using rule 219 (instrucciones -> bswitch .)
    BREAK           reduce using rule 219 (instrucciones -> bswitch .)


state 171

    (220) instrucciones -> bdo .

    RBRACE          reduce using rule 220 (instrucciones -> bdo .)
    SEMI            reduce using rule 220 (instrucciones -> bdo .)
    $end            reduce using rule 220 (instrucciones -> bdo .)
    BREAK           reduce using rule 220 (instrucciones -> bdo .)


state 172

    (155) funciones -> proteccion . funcion_nparams
    (157) funciones -> proteccion . funcion_blank
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE

    FUNCTION        shift and go to state 153

    funcion_nparams                shift and go to state 151
    funcion_blank                  shift and go to state 152

state 173

    (114) bdo -> DO LBRACE . cuerpo RBRACE bwhile
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (58) imprimir -> . ECHO valor SEMI
    (59) imprimir -> . PRINT valor SEMI
    (60) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (61) imprimir -> . PRINT bconcat
    (62) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (63) imprimir -> . ECHO bconcat
    (64) imprimir -> . ECHO operaciones_mat SEMI
    (65) imprimir -> . PRINT operaciones_mat SEMI
    (66) imprimir -> . ECHO VARIABLE SEMI
    (67) imprimir -> . PRINT VARIABLE SEMI
    (68) imprimir -> . ECHO funcionesCP_semi
    (69) imprimir -> . PRINT funcionesCP_semi
    (70) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (71) imprimir -> . ECHO poppila
    (72) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (73) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (154) funciones -> . funcion_nparams
    (155) funciones -> . proteccion funcion_nparams
    (156) funciones -> . funcion_blank
    (157) funciones -> . proteccion funcion_blank
    (158) funciones -> . funcion_void
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (255) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (256) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (79) condicion_ifelse -> . condicion_if
    (80) condicion_ifelse -> . condicion_if condicion_else
    (81) condicion_ifelse -> . condicion_if condicion_elseif
    (82) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .
    (114) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (96) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (107) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (108) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (109) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (120) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (115) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON
    (192) bgoto -> . GOTO NOMBRE SEMI
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (193) bcortes -> . EXIT SEMI
    (194) bcortes -> . BREAK SEMI
    (195) bcortes -> . DEFAULT SEMI
    (196) bcortes -> . CONTINUE SEMI
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (197) otros -> . SMALLER NOMBRE GREATER
    (198) otros -> . SMALLER DIVISION NOMBRE GREATER
    (199) otros -> . NOMBRE COLON
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (190) comment -> . COMENTARIOS
    (191) comment -> . DOC_COMENTARIOS
    (236) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (237) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (202) simbolos -> . LPAREN RPAREN
    (203) simbolos -> . LPAREN
    (204) simbolos -> . RPAREN
    (205) simbolos -> . LBRACKET RBRACKET
    (206) simbolos -> . LBRACKET
    (207) simbolos -> . RBRACKET
    (208) simbolos -> . LBRACE RBRACE
    (209) simbolos -> . LBRACE
    (210) simbolos -> . RBRACE instrucciones
    (211) simbolos -> . OPEN_TAG CLOSE_TAG
    (212) simbolos -> . OPEN_TAG
    (213) simbolos -> . CLOSE_TAG
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (244) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (257) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (258) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (245) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (75) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (184) empty -> .
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 113 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 184 (empty -> .) ]

    cuerpo                         shift and go to state 278
    bwhile                         shift and go to state 9
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 174

    (96) bfor -> FOR LPAREN . asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 148
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    asignacion                     shift and go to state 279
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 175

    (109) bforeach -> FOREACH LPAREN . VARIABLE AS VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 280


state 176

    (120) btry -> TRY LBRACE . stc_bloque_def RBRACE catches
    (99) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (100) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 281

    stc_bloque_def                 shift and go to state 282

state 177

    (115) bswitch -> SWITCH LPAREN . VARIABLE RPAREN LBRACE innerSwitch RBRACE

    VARIABLE        shift and go to state 283


state 178

    (116) bcase -> CASE ENTERO . COLON

    COLON           shift and go to state 284


state 179

    (117) bcase -> CASE CADENA . COLON

    COLON           shift and go to state 285


state 180

    (192) bgoto -> GOTO NOMBRE . SEMI

    SEMI            shift and go to state 286


state 181

    (193) bcortes -> EXIT SEMI .

    $end            reduce using rule 193 (bcortes -> EXIT SEMI .)
    RBRACE          reduce using rule 193 (bcortes -> EXIT SEMI .)
    SEMI            reduce using rule 193 (bcortes -> EXIT SEMI .)
    BREAK           reduce using rule 193 (bcortes -> EXIT SEMI .)


state 182

    (194) bcortes -> BREAK SEMI .

    $end            reduce using rule 194 (bcortes -> BREAK SEMI .)
    RBRACE          reduce using rule 194 (bcortes -> BREAK SEMI .)
    SEMI            reduce using rule 194 (bcortes -> BREAK SEMI .)
    BREAK           reduce using rule 194 (bcortes -> BREAK SEMI .)


state 183

    (195) bcortes -> DEFAULT SEMI .

    $end            reduce using rule 195 (bcortes -> DEFAULT SEMI .)
    RBRACE          reduce using rule 195 (bcortes -> DEFAULT SEMI .)
    SEMI            reduce using rule 195 (bcortes -> DEFAULT SEMI .)
    BREAK           reduce using rule 195 (bcortes -> DEFAULT SEMI .)


state 184

    (196) bcortes -> CONTINUE SEMI .

    $end            reduce using rule 196 (bcortes -> CONTINUE SEMI .)
    RBRACE          reduce using rule 196 (bcortes -> CONTINUE SEMI .)
    SEMI            reduce using rule 196 (bcortes -> CONTINUE SEMI .)
    BREAK           reduce using rule 196 (bcortes -> CONTINUE SEMI .)


state 185

    (169) brand -> RAND LPAREN . ENTERO COMMA ENTERO RPAREN SEMI

    ENTERO          shift and go to state 287


state 186

    (188) escribir -> FWRITE LPAREN . NOMBRE COMMA CADENA RPAREN SEMI

    NOMBRE          shift and go to state 288


state 187

    (189) btrim -> TRIM LPAREN . NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 289


state 188

    (197) otros -> SMALLER NOMBRE . GREATER

    GREATER         shift and go to state 290


state 189

    (198) otros -> SMALLER DIVISION . NOMBRE GREATER

    NOMBRE          shift and go to state 291


state 190

    (175) breturn -> RETURN SEMI .

    RBRACE          reduce using rule 175 (breturn -> RETURN SEMI .)
    $end            reduce using rule 175 (breturn -> RETURN SEMI .)
    SEMI            reduce using rule 175 (breturn -> RETURN SEMI .)
    BREAK           reduce using rule 175 (breturn -> RETURN SEMI .)


state 191

    (176) breturn -> RETURN NULL . SEMI

    SEMI            shift and go to state 292


state 192

    (177) breturn -> RETURN VARIABLE . SEMI

    SEMI            shift and go to state 293


state 193

    (178) breturn -> RETURN BOOLEANO . SEMI

    SEMI            shift and go to state 294


state 194

    (211) simbolos -> OPEN_TAG CLOSE_TAG .

    $end            reduce using rule 211 (simbolos -> OPEN_TAG CLOSE_TAG .)
    RBRACE          reduce using rule 211 (simbolos -> OPEN_TAG CLOSE_TAG .)
    SEMI            reduce using rule 211 (simbolos -> OPEN_TAG CLOSE_TAG .)
    BREAK           reduce using rule 211 (simbolos -> OPEN_TAG CLOSE_TAG .)


state 195

    (252) funcionesCP_semi -> funcionesCP SEMI .

    $end            reduce using rule 252 (funcionesCP_semi -> funcionesCP SEMI .)
    COMMA           reduce using rule 252 (funcionesCP_semi -> funcionesCP SEMI .)
    RBRACE          reduce using rule 252 (funcionesCP_semi -> funcionesCP SEMI .)
    SEMI            reduce using rule 252 (funcionesCP_semi -> funcionesCP SEMI .)
    BREAK           reduce using rule 252 (funcionesCP_semi -> funcionesCP SEMI .)


state 196

    (257) arraypop -> ARRAY_POP LPAREN . VARIABLE RPAREN SEMI

    VARIABLE        shift and go to state 295


state 197

    (258) arraypush -> ARRAY_PUSH LPAREN . VARIABLE COMMA valor RPAREN SEMI

    VARIABLE        shift and go to state 296


state 198

    (161) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> FUNCTION NOMBRE . LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    LPAREN          shift and go to state 297


state 199

    (75) condicion_if -> IF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> IF LPAREN . condicion RPAREN llamada_funcion
    (83) condicion -> . VARIABLE operador_logico VARIABLE
    (84) condicion -> . valor operador_logico valor
    (85) condicion -> . VARIABLE operador_logico valor
    (86) condicion -> . VARIABLE condicion_booleana VARIABLE
    (87) condicion -> . valor condicion_booleana valor
    (88) condicion -> . VARIABLE condicion_booleana valor
    (89) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (90) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (91) condicion -> . condicion condicion_booleana condicion
    (92) condicion -> . condicion condicion_booleana comprobacion
    (93) condicion -> . aumentoCasting
    (94) condicion -> . VARIABLE
    (95) condicion -> . funcionesCP
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 274
    LPAREN          shift and go to state 272
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    condicion                      shift and go to state 298
    valor                          shift and go to state 275
    aumentoCasting                 shift and go to state 276
    funcionesCP                    shift and go to state 277
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 200

    (58) imprimir -> ECHO valor SEMI .

    $end            reduce using rule 58 (imprimir -> ECHO valor SEMI .)
    RBRACE          reduce using rule 58 (imprimir -> ECHO valor SEMI .)
    SEMI            reduce using rule 58 (imprimir -> ECHO valor SEMI .)
    BREAK           reduce using rule 58 (imprimir -> ECHO valor SEMI .)


state 201

    (144) operaciones_mat -> valor operadores . valor
    (145) operaciones_mat -> valor operadores . operaciones_mat
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (144) operaciones_mat -> . valor operadores valor
    (145) operaciones_mat -> . valor operadores operaciones_mat
    (146) operaciones_mat -> . VARIABLE operadores VARIABLE
    (147) operaciones_mat -> . operaciones_mat_par
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (148) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (149) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (150) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 301
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    LPAREN          shift and go to state 105
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 299
    operaciones_mat                shift and go to state 300
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    operaciones_mat_par            shift and go to state 104
    numero                         shift and go to state 106

state 202

    (123) operadores -> SUMA .

    VARIABLE        reduce using rule 123 (operadores -> SUMA .)
    CADENA          reduce using rule 123 (operadores -> SUMA .)
    BOOLEANO        reduce using rule 123 (operadores -> SUMA .)
    LPAREN          reduce using rule 123 (operadores -> SUMA .)
    ENTERO          reduce using rule 123 (operadores -> SUMA .)
    DECIMAL         reduce using rule 123 (operadores -> SUMA .)


state 203

    (124) operadores -> RESTA .

    VARIABLE        reduce using rule 124 (operadores -> RESTA .)
    CADENA          reduce using rule 124 (operadores -> RESTA .)
    BOOLEANO        reduce using rule 124 (operadores -> RESTA .)
    LPAREN          reduce using rule 124 (operadores -> RESTA .)
    ENTERO          reduce using rule 124 (operadores -> RESTA .)
    DECIMAL         reduce using rule 124 (operadores -> RESTA .)


state 204

    (62) imprimir -> ECHO NOMBRE LBRACKET . ENTERO RBRACKET SEMI

    ENTERO          shift and go to state 302


state 205

    (64) imprimir -> ECHO operaciones_mat SEMI .

    $end            reduce using rule 64 (imprimir -> ECHO operaciones_mat SEMI .)
    RBRACE          reduce using rule 64 (imprimir -> ECHO operaciones_mat SEMI .)
    SEMI            reduce using rule 64 (imprimir -> ECHO operaciones_mat SEMI .)
    BREAK           reduce using rule 64 (imprimir -> ECHO operaciones_mat SEMI .)


state 206

    (66) imprimir -> ECHO VARIABLE SEMI .

    $end            reduce using rule 66 (imprimir -> ECHO VARIABLE SEMI .)
    RBRACE          reduce using rule 66 (imprimir -> ECHO VARIABLE SEMI .)
    SEMI            reduce using rule 66 (imprimir -> ECHO VARIABLE SEMI .)
    BREAK           reduce using rule 66 (imprimir -> ECHO VARIABLE SEMI .)


state 207

    (146) operaciones_mat -> VARIABLE operadores . VARIABLE

    VARIABLE        shift and go to state 303


state 208

    (245) poppila -> VARIABLE FLECHA . POP LPAREN RPAREN SEMI
    (246) funcionesCP -> VARIABLE FLECHA . REWIND LPAREN RPAREN
    (247) funcionesCP -> VARIABLE FLECHA . VALID LPAREN RPAREN
    (248) funcionesCP -> VARIABLE FLECHA . COUNT LPAREN RPAREN
    (249) funcionesCP -> VARIABLE FLECHA . NEXT LPAREN RPAREN
    (250) funcionesCP -> VARIABLE FLECHA . CURRENT LPAREN RPAREN

    POP             shift and go to state 249
    REWIND          shift and go to state 250
    VALID           shift and go to state 251
    COUNT           shift and go to state 252
    NEXT            shift and go to state 253
    CURRENT         shift and go to state 254


state 209

    (185) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI

    NEW             shift and go to state 235


state 210

    (70) imprimir -> ECHO funcionesCP_semi COMMA . NOMBRE SEMI

    NOMBRE          shift and go to state 304


state 211

    (148) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (149) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 305

state 212

    (150) operaciones_mat_par -> LPAREN VARIABLE . operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> LPAREN VARIABLE . operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> LPAREN VARIABLE . operadores tipoDato RPAREN
    (153) operaciones_mat_par -> LPAREN VARIABLE . operadores tipoDato RPAREN operadores tipoDato
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    EQUALS          shift and go to state 209
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 306

state 213

    (54) tipoDato -> CADENA .

    SUMA            reduce using rule 54 (tipoDato -> CADENA .)
    RESTA           reduce using rule 54 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 54 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 54 (tipoDato -> CADENA .)
    MODULO          reduce using rule 54 (tipoDato -> CADENA .)
    RPAREN          reduce using rule 54 (tipoDato -> CADENA .)
    SEMI            reduce using rule 54 (tipoDato -> CADENA .)
    AND             reduce using rule 54 (tipoDato -> CADENA .)
    OR              reduce using rule 54 (tipoDato -> CADENA .)
    XOR             reduce using rule 54 (tipoDato -> CADENA .)
    IS_EQUAL        reduce using rule 54 (tipoDato -> CADENA .)
    IS_NOT_EQUAL    reduce using rule 54 (tipoDato -> CADENA .)
    IS_IDENTICAL    reduce using rule 54 (tipoDato -> CADENA .)
    IS_NOT_IDENTICAL reduce using rule 54 (tipoDato -> CADENA .)
    SMALLER         reduce using rule 54 (tipoDato -> CADENA .)
    GREATER         reduce using rule 54 (tipoDato -> CADENA .)
    IS_SMALLER_OR_EQUAL reduce using rule 54 (tipoDato -> CADENA .)
    IS_GREATER_OR_EQUAL reduce using rule 54 (tipoDato -> CADENA .)
    COMMA           reduce using rule 54 (tipoDato -> CADENA .)
    $end            reduce using rule 54 (tipoDato -> CADENA .)
    RBRACE          reduce using rule 54 (tipoDato -> CADENA .)
    BREAK           reduce using rule 54 (tipoDato -> CADENA .)
    VARIABLE        reduce using rule 54 (tipoDato -> CADENA .)
    LPAREN          reduce using rule 54 (tipoDato -> CADENA .)
    CADENA          reduce using rule 54 (tipoDato -> CADENA .)
    BOOLEANO        reduce using rule 54 (tipoDato -> CADENA .)
    ENTERO          reduce using rule 54 (tipoDato -> CADENA .)
    DECIMAL         reduce using rule 54 (tipoDato -> CADENA .)


state 214

    (59) imprimir -> PRINT valor SEMI .

    $end            reduce using rule 59 (imprimir -> PRINT valor SEMI .)
    RBRACE          reduce using rule 59 (imprimir -> PRINT valor SEMI .)
    SEMI            reduce using rule 59 (imprimir -> PRINT valor SEMI .)
    BREAK           reduce using rule 59 (imprimir -> PRINT valor SEMI .)


state 215

    (60) imprimir -> PRINT LPAREN valor . RPAREN SEMI
    (148) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (149) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    RPAREN          shift and go to state 307
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 305

state 216

    (65) imprimir -> PRINT operaciones_mat SEMI .

    $end            reduce using rule 65 (imprimir -> PRINT operaciones_mat SEMI .)
    RBRACE          reduce using rule 65 (imprimir -> PRINT operaciones_mat SEMI .)
    SEMI            reduce using rule 65 (imprimir -> PRINT operaciones_mat SEMI .)
    BREAK           reduce using rule 65 (imprimir -> PRINT operaciones_mat SEMI .)


state 217

    (67) imprimir -> PRINT VARIABLE SEMI .

    $end            reduce using rule 67 (imprimir -> PRINT VARIABLE SEMI .)
    RBRACE          reduce using rule 67 (imprimir -> PRINT VARIABLE SEMI .)
    SEMI            reduce using rule 67 (imprimir -> PRINT VARIABLE SEMI .)
    BREAK           reduce using rule 67 (imprimir -> PRINT VARIABLE SEMI .)


state 218

    (246) funcionesCP -> VARIABLE FLECHA . REWIND LPAREN RPAREN
    (247) funcionesCP -> VARIABLE FLECHA . VALID LPAREN RPAREN
    (248) funcionesCP -> VARIABLE FLECHA . COUNT LPAREN RPAREN
    (249) funcionesCP -> VARIABLE FLECHA . NEXT LPAREN RPAREN
    (250) funcionesCP -> VARIABLE FLECHA . CURRENT LPAREN RPAREN

    REWIND          shift and go to state 250
    VALID           shift and go to state 251
    COUNT           shift and go to state 252
    NEXT            shift and go to state 253
    CURRENT         shift and go to state 254


state 219

    (237) casting -> LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 308


state 220

    (168) llamada_funcion -> NOMBRE LPAREN params_list . RPAREN SEMI
    (162) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 309
    COMMA           shift and go to state 310


state 221

    (163) params_list -> param .

    RPAREN          reduce using rule 163 (params_list -> param .)
    COMMA           reduce using rule 163 (params_list -> param .)


state 222

    (164) params_list -> empty .

    RPAREN          reduce using rule 164 (params_list -> empty .)
    COMMA           reduce using rule 164 (params_list -> empty .)


state 223

    (159) param -> VARIABLE .
    (36) asignacion -> VARIABLE . EQUALS valor SEMI
    (39) asignacion -> VARIABLE . EQUALS brand
    (40) asignacion -> VARIABLE . EQUALS escribir
    (41) asignacion -> VARIABLE . EQUALS btrim
    (42) asignacion -> VARIABLE . EQUALS lectura
    (43) asignacion -> VARIABLE . EQUALS bconcat
    (45) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (47) asignacion -> VARIABLE . EQUALS llamada_funcion
    (48) asignacion -> VARIABLE . EQUALS arrayvalues SEMI
    (49) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (238) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (132) incrementos_mat -> . MINUS_EQUAL
    (133) incrementos_mat -> . MOD_EQUAL
    (134) incrementos_mat -> . MUL_EQUAL
    (135) incrementos_mat -> . PLUS_EQUAL
    (136) incrementos_mat -> . DIV_EQUAL
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    RPAREN          reduce using rule 159 (param -> VARIABLE .)
    COMMA           reduce using rule 159 (param -> VARIABLE .)
    EQUALS          shift and go to state 261
    MINUS_EQUAL     shift and go to state 137
    MOD_EQUAL       shift and go to state 138
    MUL_EQUAL       shift and go to state 139
    PLUS_EQUAL      shift and go to state 140
    DIV_EQUAL       shift and go to state 141
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    incrementos_mat                shift and go to state 135
    operadores                     shift and go to state 136

state 224

    (160) param -> asignacion .

    RPAREN          reduce using rule 160 (param -> asignacion .)
    COMMA           reduce using rule 160 (param -> asignacion .)


state 225

    (239) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores tipoDato SEMI
    (240) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores VARIABLE operadores operaciones_mat_par SEMI
    (222) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (223) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (226) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (146) operaciones_mat -> VARIABLE . operadores VARIABLE
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    CONCAT          shift and go to state 132
    CONCAT_EQUAL    shift and go to state 133
    EQUALS          shift and go to state 209
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 311

state 226

    (36) asignacion -> VARIABLE EQUALS valor . SEMI
    (144) operaciones_mat -> valor . operadores valor
    (145) operaciones_mat -> valor . operadores operaciones_mat
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SEMI            shift and go to state 312
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 201

state 227

    (39) asignacion -> VARIABLE EQUALS brand .

    $end            reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    RBRACE          reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    SEMI            reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    BREAK           reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    RPAREN          reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    COMMA           reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    VARIABLE        reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    LPAREN          reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    CADENA          reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    BOOLEANO        reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    ENTERO          reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    DECIMAL         reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)


state 228

    (40) asignacion -> VARIABLE EQUALS escribir .

    $end            reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    RBRACE          reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    SEMI            reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    BREAK           reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    RPAREN          reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    COMMA           reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    VARIABLE        reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    LPAREN          reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    CADENA          reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    BOOLEANO        reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    ENTERO          reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    DECIMAL         reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)


state 229

    (41) asignacion -> VARIABLE EQUALS btrim .

    $end            reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    RBRACE          reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    SEMI            reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    BREAK           reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    RPAREN          reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    COMMA           reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    VARIABLE        reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    LPAREN          reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    CADENA          reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    BOOLEANO        reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    ENTERO          reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    DECIMAL         reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)


state 230

    (42) asignacion -> VARIABLE EQUALS lectura .

    $end            reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    RBRACE          reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    SEMI            reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    BREAK           reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    RPAREN          reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    COMMA           reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    VARIABLE        reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    LPAREN          reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    CADENA          reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    BOOLEANO        reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    ENTERO          reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    DECIMAL         reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)


state 231

    (43) asignacion -> VARIABLE EQUALS bconcat .

    $end            reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    RBRACE          reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    SEMI            reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    BREAK           reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    RPAREN          reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    COMMA           reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    VARIABLE        reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    LPAREN          reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    CADENA          reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    BOOLEANO        reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    ENTERO          reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    DECIMAL         reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)


state 232

    (45) asignacion -> VARIABLE EQUALS operaciones_mat . SEMI

    SEMI            shift and go to state 313


state 233

    (47) asignacion -> VARIABLE EQUALS llamada_funcion .

    $end            reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    RBRACE          reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    SEMI            reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    BREAK           reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    RPAREN          reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    COMMA           reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    VARIABLE        reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    LPAREN          reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    CADENA          reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    BOOLEANO        reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    ENTERO          reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    DECIMAL         reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)


state 234

    (48) asignacion -> VARIABLE EQUALS arrayvalues . SEMI

    SEMI            shift and go to state 314


state 235

    (185) bcolas -> VARIABLE EQUALS NEW . SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE EQUALS NEW . SPLSTACK LPAREN RPAREN SEMI

    SPLQUEUE        shift and go to state 315
    SPLSTACK        shift and go to state 316


state 236

    (236) casting -> VARIABLE EQUALS LPAREN . tiposCast RPAREN VARIABLE SEMI
    (148) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (149) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (150) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN
    (153) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (227) tiposCast -> . STRING
    (228) tiposCast -> . BOOL
    (229) tiposCast -> . BOOLEAN
    (230) tiposCast -> . DOUBLE
    (231) tiposCast -> . FLOAT
    (232) tiposCast -> . ARRAY
    (233) tiposCast -> . OBJECT
    (234) tiposCast -> . INTEGER
    (235) tiposCast -> . INT
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 212
    STRING          shift and go to state 117
    BOOL            shift and go to state 118
    BOOLEAN         shift and go to state 119
    DOUBLE          shift and go to state 120
    FLOAT           shift and go to state 121
    ARRAY           shift and go to state 122
    OBJECT          shift and go to state 123
    INTEGER         shift and go to state 124
    INT             shift and go to state 125
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tiposCast                      shift and go to state 317
    valor                          shift and go to state 211
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 237

    (49) asignacion_array -> VARIABLE EQUALS array_def . SEMI

    SEMI            shift and go to state 318


state 238

    (168) llamada_funcion -> NOMBRE . LPAREN params_list RPAREN SEMI

    LPAREN          shift and go to state 126


state 239

    (259) arrayvalues -> ARRAY_VALUES . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 319


state 240

    (180) array_def -> ARRAY . LPAREN RPAREN
    (181) array_def -> ARRAY . LPAREN array_elmnt RPAREN

    LPAREN          shift and go to state 320


state 241

    (107) incrementOp -> VARIABLE SUMA SUMA . SEMI

    SEMI            shift and go to state 321


state 242

    (108) incrementOp -> VARIABLE RESTA RESTA . SEMI

    SEMI            shift and go to state 322


state 243

    (225) bconcat -> VARIABLE CONCAT VARIABLE . SEMI

    SEMI            shift and go to state 323


state 244

    (222) bconcat -> VARIABLE CONCAT CADENA . SEMI
    (226) bconcat -> VARIABLE CONCAT CADENA . CONCAT VARIABLE SEMI

    SEMI            shift and go to state 325
    CONCAT          shift and go to state 324


state 245

    (223) bconcat -> VARIABLE CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 326


state 246

    (244) addpila -> VARIABLE FLECHA PUSH . LPAREN valor RPAREN SEMI

    LPAREN          shift and go to state 327


state 247

    (253) addcola -> VARIABLE FLECHA ENQUEUE . LPAREN valor RPAREN SEMI

    LPAREN          shift and go to state 328


state 248

    (254) minuscola -> VARIABLE FLECHA DEQUEUE . LPAREN valor RPAREN SEMI

    LPAREN          shift and go to state 329


state 249

    (245) poppila -> VARIABLE FLECHA POP . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 330


state 250

    (246) funcionesCP -> VARIABLE FLECHA REWIND . LPAREN RPAREN

    LPAREN          shift and go to state 331


state 251

    (247) funcionesCP -> VARIABLE FLECHA VALID . LPAREN RPAREN

    LPAREN          shift and go to state 332


state 252

    (248) funcionesCP -> VARIABLE FLECHA COUNT . LPAREN RPAREN

    LPAREN          shift and go to state 333


state 253

    (249) funcionesCP -> VARIABLE FLECHA NEXT . LPAREN RPAREN

    LPAREN          shift and go to state 334


state 254

    (250) funcionesCP -> VARIABLE FLECHA CURRENT . LPAREN RPAREN

    LPAREN          shift and go to state 335


state 255

    (242) aumentoCasting -> VARIABLE incrementos_mat VARIABLE . SEMI

    SEMI            shift and go to state 336


state 256

    (238) aumentoCasting -> VARIABLE incrementos_mat tipoDato . SEMI

    SEMI            shift and go to state 337


state 257

    (241) aumentoCasting -> VARIABLE operadores tipoDato . condicion_booleana valor
    (137) condicion_booleana -> . AND
    (138) condicion_booleana -> . OR
    (139) condicion_booleana -> . XOR
    (140) condicion_booleana -> . IS_EQUAL
    (141) condicion_booleana -> . IS_NOT_EQUAL
    (142) condicion_booleana -> . IS_IDENTICAL
    (143) condicion_booleana -> . IS_NOT_IDENTICAL

    AND             shift and go to state 339
    OR              shift and go to state 340
    XOR             shift and go to state 341
    IS_EQUAL        shift and go to state 342
    IS_NOT_EQUAL    shift and go to state 343
    IS_IDENTICAL    shift and go to state 344
    IS_NOT_IDENTICAL shift and go to state 345

    condicion_booleana             shift and go to state 338

state 258

    (72) imprimir -> VAR_DUMP LPAREN VARIABLE . RPAREN SEMI

    RPAREN          shift and go to state 346


state 259

    (73) imprimir -> PRINT_R LPAREN VARIABLE . RPAREN SEMI

    RPAREN          shift and go to state 347


state 260

    (74) imprimir -> PRINT_R LPAREN arrayvalues . RPAREN SEMI

    RPAREN          shift and go to state 348


state 261

    (36) asignacion -> VARIABLE EQUALS . valor SEMI
    (39) asignacion -> VARIABLE EQUALS . brand
    (40) asignacion -> VARIABLE EQUALS . escribir
    (41) asignacion -> VARIABLE EQUALS . btrim
    (42) asignacion -> VARIABLE EQUALS . lectura
    (43) asignacion -> VARIABLE EQUALS . bconcat
    (45) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (47) asignacion -> VARIABLE EQUALS . llamada_funcion
    (48) asignacion -> VARIABLE EQUALS . arrayvalues SEMI
    (49) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (239) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (144) operaciones_mat -> . valor operadores valor
    (145) operaciones_mat -> . valor operadores operaciones_mat
    (146) operaciones_mat -> . VARIABLE operadores VARIABLE
    (147) operaciones_mat -> . operaciones_mat_par
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (259) arrayvalues -> . ARRAY_VALUES LPAREN VARIABLE RPAREN
    (180) array_def -> . ARRAY LPAREN RPAREN
    (181) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (148) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (149) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (150) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 225
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    READLINE        shift and go to state 56
    CADENA          shift and go to state 103
    NOMBRE          shift and go to state 238
    ARRAY_VALUES    shift and go to state 239
    ARRAY           shift and go to state 240
    BOOLEANO        shift and go to state 107
    LPAREN          shift and go to state 105
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 226
    brand                          shift and go to state 227
    escribir                       shift and go to state 228
    btrim                          shift and go to state 229
    lectura                        shift and go to state 230
    bconcat                        shift and go to state 231
    operaciones_mat                shift and go to state 232
    llamada_funcion                shift and go to state 233
    arrayvalues                    shift and go to state 234
    array_def                      shift and go to state 237
    tipoDato                       shift and go to state 100
    operaciones_mat_par            shift and go to state 104
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 262

    (161) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE

    LPAREN          shift and go to state 349


state 263

    (255) constante -> DEFINE LPAREN CADENA . COMMA valor RPAREN SEMI

    COMMA           shift and go to state 350


state 264

    (256) constante -> DEFINE LPAREN NOMBRE . COMMA ARRAY RPAREN SEMI

    COMMA           shift and go to state 351


state 265

    (221) bconcat -> CADENA CONCAT CADENA . SEMI

    SEMI            shift and go to state 352


state 266

    (224) bconcat -> CADENA CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 353


state 267

    (186) lectura -> READLINE LPAREN CADENA . RPAREN SEMI

    RPAREN          shift and go to state 354


state 268

    (187) lectura -> READLINE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 355


state 269

    (82) condicion_ifelse -> condicion_if condicion_elseif condicion_else .

    $end            reduce using rule 82 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    RBRACE          reduce using rule 82 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    SEMI            reduce using rule 82 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    BREAK           reduce using rule 82 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)


state 270

    (78) condicion_else -> ELSE LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (58) imprimir -> . ECHO valor SEMI
    (59) imprimir -> . PRINT valor SEMI
    (60) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (61) imprimir -> . PRINT bconcat
    (62) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (63) imprimir -> . ECHO bconcat
    (64) imprimir -> . ECHO operaciones_mat SEMI
    (65) imprimir -> . PRINT operaciones_mat SEMI
    (66) imprimir -> . ECHO VARIABLE SEMI
    (67) imprimir -> . PRINT VARIABLE SEMI
    (68) imprimir -> . ECHO funcionesCP_semi
    (69) imprimir -> . PRINT funcionesCP_semi
    (70) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (71) imprimir -> . ECHO poppila
    (72) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (73) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (154) funciones -> . funcion_nparams
    (155) funciones -> . proteccion funcion_nparams
    (156) funciones -> . funcion_blank
    (157) funciones -> . proteccion funcion_blank
    (158) funciones -> . funcion_void
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (255) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (256) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (79) condicion_ifelse -> . condicion_if
    (80) condicion_ifelse -> . condicion_if condicion_else
    (81) condicion_ifelse -> . condicion_if condicion_elseif
    (82) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .
    (114) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (96) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (107) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (108) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (109) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (120) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (115) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON
    (192) bgoto -> . GOTO NOMBRE SEMI
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (193) bcortes -> . EXIT SEMI
    (194) bcortes -> . BREAK SEMI
    (195) bcortes -> . DEFAULT SEMI
    (196) bcortes -> . CONTINUE SEMI
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (197) otros -> . SMALLER NOMBRE GREATER
    (198) otros -> . SMALLER DIVISION NOMBRE GREATER
    (199) otros -> . NOMBRE COLON
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (190) comment -> . COMENTARIOS
    (191) comment -> . DOC_COMENTARIOS
    (236) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (237) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (202) simbolos -> . LPAREN RPAREN
    (203) simbolos -> . LPAREN
    (204) simbolos -> . RPAREN
    (205) simbolos -> . LBRACKET RBRACKET
    (206) simbolos -> . LBRACKET
    (207) simbolos -> . RBRACKET
    (208) simbolos -> . LBRACE RBRACE
    (209) simbolos -> . LBRACE
    (210) simbolos -> . RBRACE instrucciones
    (211) simbolos -> . OPEN_TAG CLOSE_TAG
    (212) simbolos -> . OPEN_TAG
    (213) simbolos -> . CLOSE_TAG
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (244) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (257) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (258) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (245) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (75) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (184) empty -> .
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 113 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 184 (empty -> .) ]

    cuerpo                         shift and go to state 356
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 271

    (77) condicion_elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (83) condicion -> . VARIABLE operador_logico VARIABLE
    (84) condicion -> . valor operador_logico valor
    (85) condicion -> . VARIABLE operador_logico valor
    (86) condicion -> . VARIABLE condicion_booleana VARIABLE
    (87) condicion -> . valor condicion_booleana valor
    (88) condicion -> . VARIABLE condicion_booleana valor
    (89) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (90) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (91) condicion -> . condicion condicion_booleana condicion
    (92) condicion -> . condicion condicion_booleana comprobacion
    (93) condicion -> . aumentoCasting
    (94) condicion -> . VARIABLE
    (95) condicion -> . funcionesCP
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 274
    LPAREN          shift and go to state 272
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    condicion                      shift and go to state 357
    valor                          shift and go to state 275
    aumentoCasting                 shift and go to state 276
    funcionesCP                    shift and go to state 277
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 272

    (89) condicion -> LPAREN . VARIABLE operadores valor RPAREN operador_logico valor
    (90) condicion -> LPAREN . VARIABLE operadores valor RPAREN condicion_booleana valor

    VARIABLE        shift and go to state 358


state 273

    (110) bwhile -> WHILE LPAREN condicion . RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> WHILE LPAREN condicion . RPAREN COLON stc_bloque
    (112) bwhile -> WHILE LPAREN condicion . RPAREN SEMI
    (91) condicion -> condicion . condicion_booleana condicion
    (92) condicion -> condicion . condicion_booleana comprobacion
    (137) condicion_booleana -> . AND
    (138) condicion_booleana -> . OR
    (139) condicion_booleana -> . XOR
    (140) condicion_booleana -> . IS_EQUAL
    (141) condicion_booleana -> . IS_NOT_EQUAL
    (142) condicion_booleana -> . IS_IDENTICAL
    (143) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 359
    AND             shift and go to state 339
    OR              shift and go to state 340
    XOR             shift and go to state 341
    IS_EQUAL        shift and go to state 342
    IS_NOT_EQUAL    shift and go to state 343
    IS_IDENTICAL    shift and go to state 344
    IS_NOT_IDENTICAL shift and go to state 345

    condicion_booleana             shift and go to state 360

state 274

    (83) condicion -> VARIABLE . operador_logico VARIABLE
    (85) condicion -> VARIABLE . operador_logico valor
    (86) condicion -> VARIABLE . condicion_booleana VARIABLE
    (88) condicion -> VARIABLE . condicion_booleana valor
    (94) condicion -> VARIABLE .
    (238) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (246) funcionesCP -> VARIABLE . FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> VARIABLE . FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> VARIABLE . FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> VARIABLE . FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> VARIABLE . FLECHA CURRENT LPAREN RPAREN
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (128) operador_logico -> . SMALLER
    (129) operador_logico -> . GREATER
    (130) operador_logico -> . IS_SMALLER_OR_EQUAL
    (131) operador_logico -> . IS_GREATER_OR_EQUAL
    (137) condicion_booleana -> . AND
    (138) condicion_booleana -> . OR
    (139) condicion_booleana -> . XOR
    (140) condicion_booleana -> . IS_EQUAL
    (141) condicion_booleana -> . IS_NOT_EQUAL
    (142) condicion_booleana -> . IS_IDENTICAL
    (143) condicion_booleana -> . IS_NOT_IDENTICAL
    (132) incrementos_mat -> . MINUS_EQUAL
    (133) incrementos_mat -> . MOD_EQUAL
    (134) incrementos_mat -> . MUL_EQUAL
    (135) incrementos_mat -> . PLUS_EQUAL
    (136) incrementos_mat -> . DIV_EQUAL
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IS_EQUAL resolved as shift
  ! shift/reduce conflict for IS_NOT_EQUAL resolved as shift
  ! shift/reduce conflict for IS_IDENTICAL resolved as shift
  ! shift/reduce conflict for IS_NOT_IDENTICAL resolved as shift
    RPAREN          reduce using rule 94 (condicion -> VARIABLE .)
    SEMI            reduce using rule 94 (condicion -> VARIABLE .)
    EQUALS          shift and go to state 363
    FLECHA          shift and go to state 218
    SMALLER         shift and go to state 364
    GREATER         shift and go to state 365
    IS_SMALLER_OR_EQUAL shift and go to state 366
    IS_GREATER_OR_EQUAL shift and go to state 367
    AND             shift and go to state 339
    OR              shift and go to state 340
    XOR             shift and go to state 341
    IS_EQUAL        shift and go to state 342
    IS_NOT_EQUAL    shift and go to state 343
    IS_IDENTICAL    shift and go to state 344
    IS_NOT_IDENTICAL shift and go to state 345
    MINUS_EQUAL     shift and go to state 137
    MOD_EQUAL       shift and go to state 138
    MUL_EQUAL       shift and go to state 139
    PLUS_EQUAL      shift and go to state 140
    DIV_EQUAL       shift and go to state 141
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

  ! AND             [ reduce using rule 94 (condicion -> VARIABLE .) ]
  ! OR              [ reduce using rule 94 (condicion -> VARIABLE .) ]
  ! XOR             [ reduce using rule 94 (condicion -> VARIABLE .) ]
  ! IS_EQUAL        [ reduce using rule 94 (condicion -> VARIABLE .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 94 (condicion -> VARIABLE .) ]
  ! IS_IDENTICAL    [ reduce using rule 94 (condicion -> VARIABLE .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 94 (condicion -> VARIABLE .) ]

    operador_logico                shift and go to state 361
    condicion_booleana             shift and go to state 362
    incrementos_mat                shift and go to state 135
    operadores                     shift and go to state 136

state 275

    (84) condicion -> valor . operador_logico valor
    (87) condicion -> valor . condicion_booleana valor
    (128) operador_logico -> . SMALLER
    (129) operador_logico -> . GREATER
    (130) operador_logico -> . IS_SMALLER_OR_EQUAL
    (131) operador_logico -> . IS_GREATER_OR_EQUAL
    (137) condicion_booleana -> . AND
    (138) condicion_booleana -> . OR
    (139) condicion_booleana -> . XOR
    (140) condicion_booleana -> . IS_EQUAL
    (141) condicion_booleana -> . IS_NOT_EQUAL
    (142) condicion_booleana -> . IS_IDENTICAL
    (143) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 364
    GREATER         shift and go to state 365
    IS_SMALLER_OR_EQUAL shift and go to state 366
    IS_GREATER_OR_EQUAL shift and go to state 367
    AND             shift and go to state 339
    OR              shift and go to state 340
    XOR             shift and go to state 341
    IS_EQUAL        shift and go to state 342
    IS_NOT_EQUAL    shift and go to state 343
    IS_IDENTICAL    shift and go to state 344
    IS_NOT_IDENTICAL shift and go to state 345

    operador_logico                shift and go to state 368
    condicion_booleana             shift and go to state 369

state 276

    (93) condicion -> aumentoCasting .

    RPAREN          reduce using rule 93 (condicion -> aumentoCasting .)
    AND             reduce using rule 93 (condicion -> aumentoCasting .)
    OR              reduce using rule 93 (condicion -> aumentoCasting .)
    XOR             reduce using rule 93 (condicion -> aumentoCasting .)
    IS_EQUAL        reduce using rule 93 (condicion -> aumentoCasting .)
    IS_NOT_EQUAL    reduce using rule 93 (condicion -> aumentoCasting .)
    IS_IDENTICAL    reduce using rule 93 (condicion -> aumentoCasting .)
    IS_NOT_IDENTICAL reduce using rule 93 (condicion -> aumentoCasting .)
    SEMI            reduce using rule 93 (condicion -> aumentoCasting .)


state 277

    (95) condicion -> funcionesCP .

    RPAREN          reduce using rule 95 (condicion -> funcionesCP .)
    AND             reduce using rule 95 (condicion -> funcionesCP .)
    OR              reduce using rule 95 (condicion -> funcionesCP .)
    XOR             reduce using rule 95 (condicion -> funcionesCP .)
    IS_EQUAL        reduce using rule 95 (condicion -> funcionesCP .)
    IS_NOT_EQUAL    reduce using rule 95 (condicion -> funcionesCP .)
    IS_IDENTICAL    reduce using rule 95 (condicion -> funcionesCP .)
    IS_NOT_IDENTICAL reduce using rule 95 (condicion -> funcionesCP .)
    SEMI            reduce using rule 95 (condicion -> funcionesCP .)


state 278

    (114) bdo -> DO LBRACE cuerpo . RBRACE bwhile

    RBRACE          shift and go to state 370


state 279

    (96) bfor -> FOR LPAREN asignacion . condicion SEMI for_incr RPAREN stc_bloque_def
    (83) condicion -> . VARIABLE operador_logico VARIABLE
    (84) condicion -> . valor operador_logico valor
    (85) condicion -> . VARIABLE operador_logico valor
    (86) condicion -> . VARIABLE condicion_booleana VARIABLE
    (87) condicion -> . valor condicion_booleana valor
    (88) condicion -> . VARIABLE condicion_booleana valor
    (89) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (90) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (91) condicion -> . condicion condicion_booleana condicion
    (92) condicion -> . condicion condicion_booleana comprobacion
    (93) condicion -> . aumentoCasting
    (94) condicion -> . VARIABLE
    (95) condicion -> . funcionesCP
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 274
    LPAREN          shift and go to state 272
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    condicion                      shift and go to state 371
    valor                          shift and go to state 275
    aumentoCasting                 shift and go to state 276
    funcionesCP                    shift and go to state 277
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 280

    (109) bforeach -> FOREACH LPAREN VARIABLE . AS VARIABLE RPAREN stc_bloque_def

    AS              shift and go to state 372


state 281

    (99) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (100) stc_bloque_def -> LBRACE . cuerpo RBRACE
    (97) stc_bloque -> . stc_bloque SEMI cuerpo
    (98) stc_bloque -> . breturn
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (58) imprimir -> . ECHO valor SEMI
    (59) imprimir -> . PRINT valor SEMI
    (60) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (61) imprimir -> . PRINT bconcat
    (62) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (63) imprimir -> . ECHO bconcat
    (64) imprimir -> . ECHO operaciones_mat SEMI
    (65) imprimir -> . PRINT operaciones_mat SEMI
    (66) imprimir -> . ECHO VARIABLE SEMI
    (67) imprimir -> . PRINT VARIABLE SEMI
    (68) imprimir -> . ECHO funcionesCP_semi
    (69) imprimir -> . PRINT funcionesCP_semi
    (70) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (71) imprimir -> . ECHO poppila
    (72) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (73) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (154) funciones -> . funcion_nparams
    (155) funciones -> . proteccion funcion_nparams
    (156) funciones -> . funcion_blank
    (157) funciones -> . proteccion funcion_blank
    (158) funciones -> . funcion_void
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (255) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (256) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (79) condicion_ifelse -> . condicion_if
    (80) condicion_ifelse -> . condicion_if condicion_else
    (81) condicion_ifelse -> . condicion_if condicion_elseif
    (82) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .
    (114) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (96) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (107) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (108) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (109) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (120) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (115) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON
    (192) bgoto -> . GOTO NOMBRE SEMI
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (193) bcortes -> . EXIT SEMI
    (194) bcortes -> . BREAK SEMI
    (195) bcortes -> . DEFAULT SEMI
    (196) bcortes -> . CONTINUE SEMI
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (197) otros -> . SMALLER NOMBRE GREATER
    (198) otros -> . SMALLER DIVISION NOMBRE GREATER
    (199) otros -> . NOMBRE COLON
    (190) comment -> . COMENTARIOS
    (191) comment -> . DOC_COMENTARIOS
    (236) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (237) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (202) simbolos -> . LPAREN RPAREN
    (203) simbolos -> . LPAREN
    (204) simbolos -> . RPAREN
    (205) simbolos -> . LBRACKET RBRACKET
    (206) simbolos -> . LBRACKET
    (207) simbolos -> . RBRACKET
    (208) simbolos -> . LBRACE RBRACE
    (209) simbolos -> . LBRACE
    (210) simbolos -> . RBRACE instrucciones
    (211) simbolos -> . OPEN_TAG CLOSE_TAG
    (212) simbolos -> . OPEN_TAG
    (213) simbolos -> . CLOSE_TAG
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (244) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (257) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (258) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (245) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (184) empty -> .
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (75) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    RETURN          shift and go to state 77
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    SEMI            reduce using rule 184 (empty -> .)
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 113 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 184 (empty -> .) ]

    stc_bloque                     shift and go to state 373
    cuerpo                         shift and go to state 374
    breturn                        shift and go to state 375
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    empty                          shift and go to state 76
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    funcionesCP                    shift and go to state 82

state 282

    (120) btry -> TRY LBRACE stc_bloque_def . RBRACE catches

    RBRACE          shift and go to state 376


state 283

    (115) bswitch -> SWITCH LPAREN VARIABLE . RPAREN LBRACE innerSwitch RBRACE

    RPAREN          shift and go to state 377


state 284

    (116) bcase -> CASE ENTERO COLON .

    $end            reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    RBRACE          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    SEMI            reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    BREAK           reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    ECHO            reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    PRINT           reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    VAR_DUMP        reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    PRINT_R         reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    VARIABLE        reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    VAR             reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    NOMBRE          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    DEFINE          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    READLINE        reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    WHILE           reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    DO              reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    FOR             reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    FOREACH         reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    TRY             reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    SWITCH          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    CASE            reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    GOTO            reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    EXIT            reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    DEFAULT         reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    CONTINUE        reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    RAND            reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    FWRITE          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    TRIM            reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    SMALLER         reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    RETURN          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    COMENTARIOS     reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    DOC_COMENTARIOS reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    LPAREN          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    CADENA          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    RPAREN          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    LBRACKET        reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    RBRACKET        reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    LBRACE          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    OPEN_TAG        reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    CLOSE_TAG       reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    ARRAY_POP       reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    ARRAY_PUSH      reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    PUBLIC          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    PRIVATE         reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    PROTECTED       reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    STATIC          reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    FUNCTION        reduce using rule 116 (bcase -> CASE ENTERO COLON .)
    IF              reduce using rule 116 (bcase -> CASE ENTERO COLON .)


state 285

    (117) bcase -> CASE CADENA COLON .

    $end            reduce using rule 117 (bcase -> CASE CADENA COLON .)
    RBRACE          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    SEMI            reduce using rule 117 (bcase -> CASE CADENA COLON .)
    BREAK           reduce using rule 117 (bcase -> CASE CADENA COLON .)
    ECHO            reduce using rule 117 (bcase -> CASE CADENA COLON .)
    PRINT           reduce using rule 117 (bcase -> CASE CADENA COLON .)
    VAR_DUMP        reduce using rule 117 (bcase -> CASE CADENA COLON .)
    PRINT_R         reduce using rule 117 (bcase -> CASE CADENA COLON .)
    VARIABLE        reduce using rule 117 (bcase -> CASE CADENA COLON .)
    VAR             reduce using rule 117 (bcase -> CASE CADENA COLON .)
    NOMBRE          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    DEFINE          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    READLINE        reduce using rule 117 (bcase -> CASE CADENA COLON .)
    WHILE           reduce using rule 117 (bcase -> CASE CADENA COLON .)
    DO              reduce using rule 117 (bcase -> CASE CADENA COLON .)
    FOR             reduce using rule 117 (bcase -> CASE CADENA COLON .)
    FOREACH         reduce using rule 117 (bcase -> CASE CADENA COLON .)
    TRY             reduce using rule 117 (bcase -> CASE CADENA COLON .)
    SWITCH          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    CASE            reduce using rule 117 (bcase -> CASE CADENA COLON .)
    GOTO            reduce using rule 117 (bcase -> CASE CADENA COLON .)
    EXIT            reduce using rule 117 (bcase -> CASE CADENA COLON .)
    DEFAULT         reduce using rule 117 (bcase -> CASE CADENA COLON .)
    CONTINUE        reduce using rule 117 (bcase -> CASE CADENA COLON .)
    RAND            reduce using rule 117 (bcase -> CASE CADENA COLON .)
    FWRITE          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    TRIM            reduce using rule 117 (bcase -> CASE CADENA COLON .)
    SMALLER         reduce using rule 117 (bcase -> CASE CADENA COLON .)
    RETURN          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    COMENTARIOS     reduce using rule 117 (bcase -> CASE CADENA COLON .)
    DOC_COMENTARIOS reduce using rule 117 (bcase -> CASE CADENA COLON .)
    LPAREN          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    CADENA          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    RPAREN          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    LBRACKET        reduce using rule 117 (bcase -> CASE CADENA COLON .)
    RBRACKET        reduce using rule 117 (bcase -> CASE CADENA COLON .)
    LBRACE          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    OPEN_TAG        reduce using rule 117 (bcase -> CASE CADENA COLON .)
    CLOSE_TAG       reduce using rule 117 (bcase -> CASE CADENA COLON .)
    ARRAY_POP       reduce using rule 117 (bcase -> CASE CADENA COLON .)
    ARRAY_PUSH      reduce using rule 117 (bcase -> CASE CADENA COLON .)
    PUBLIC          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    PRIVATE         reduce using rule 117 (bcase -> CASE CADENA COLON .)
    PROTECTED       reduce using rule 117 (bcase -> CASE CADENA COLON .)
    STATIC          reduce using rule 117 (bcase -> CASE CADENA COLON .)
    FUNCTION        reduce using rule 117 (bcase -> CASE CADENA COLON .)
    IF              reduce using rule 117 (bcase -> CASE CADENA COLON .)


state 286

    (192) bgoto -> GOTO NOMBRE SEMI .

    $end            reduce using rule 192 (bgoto -> GOTO NOMBRE SEMI .)
    RBRACE          reduce using rule 192 (bgoto -> GOTO NOMBRE SEMI .)
    SEMI            reduce using rule 192 (bgoto -> GOTO NOMBRE SEMI .)
    BREAK           reduce using rule 192 (bgoto -> GOTO NOMBRE SEMI .)


state 287

    (169) brand -> RAND LPAREN ENTERO . COMMA ENTERO RPAREN SEMI

    COMMA           shift and go to state 378


state 288

    (188) escribir -> FWRITE LPAREN NOMBRE . COMMA CADENA RPAREN SEMI

    COMMA           shift and go to state 379


state 289

    (189) btrim -> TRIM LPAREN NOMBRE . LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 380


state 290

    (197) otros -> SMALLER NOMBRE GREATER .

    $end            reduce using rule 197 (otros -> SMALLER NOMBRE GREATER .)
    RBRACE          reduce using rule 197 (otros -> SMALLER NOMBRE GREATER .)
    SEMI            reduce using rule 197 (otros -> SMALLER NOMBRE GREATER .)
    BREAK           reduce using rule 197 (otros -> SMALLER NOMBRE GREATER .)


state 291

    (198) otros -> SMALLER DIVISION NOMBRE . GREATER

    GREATER         shift and go to state 381


state 292

    (176) breturn -> RETURN NULL SEMI .

    RBRACE          reduce using rule 176 (breturn -> RETURN NULL SEMI .)
    $end            reduce using rule 176 (breturn -> RETURN NULL SEMI .)
    SEMI            reduce using rule 176 (breturn -> RETURN NULL SEMI .)
    BREAK           reduce using rule 176 (breturn -> RETURN NULL SEMI .)


state 293

    (177) breturn -> RETURN VARIABLE SEMI .

    RBRACE          reduce using rule 177 (breturn -> RETURN VARIABLE SEMI .)
    $end            reduce using rule 177 (breturn -> RETURN VARIABLE SEMI .)
    SEMI            reduce using rule 177 (breturn -> RETURN VARIABLE SEMI .)
    BREAK           reduce using rule 177 (breturn -> RETURN VARIABLE SEMI .)


state 294

    (178) breturn -> RETURN BOOLEANO SEMI .

    RBRACE          reduce using rule 178 (breturn -> RETURN BOOLEANO SEMI .)
    $end            reduce using rule 178 (breturn -> RETURN BOOLEANO SEMI .)
    SEMI            reduce using rule 178 (breturn -> RETURN BOOLEANO SEMI .)
    BREAK           reduce using rule 178 (breturn -> RETURN BOOLEANO SEMI .)


state 295

    (257) arraypop -> ARRAY_POP LPAREN VARIABLE . RPAREN SEMI

    RPAREN          shift and go to state 382


state 296

    (258) arraypush -> ARRAY_PUSH LPAREN VARIABLE . COMMA valor RPAREN SEMI

    COMMA           shift and go to state 383


state 297

    (161) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (166) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (167) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (165) funcion_void -> FUNCTION NOMBRE LPAREN . RPAREN COLON VOID LBRACE empty RBRACE
    (162) params_list -> . params_list COMMA param
    (163) params_list -> . param
    (164) params_list -> . empty
    (159) param -> . VARIABLE
    (160) param -> . asignacion
    (184) empty -> .
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 385
    VARIABLE        shift and go to state 223
    COMMA           reduce using rule 184 (empty -> .)
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

  ! RPAREN          [ reduce using rule 184 (empty -> .) ]

    params_list                    shift and go to state 384
    empty                          shift and go to state 222
    param                          shift and go to state 221
    asignacion                     shift and go to state 224
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 298

    (75) condicion_if -> IF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> IF LPAREN condicion . RPAREN llamada_funcion
    (91) condicion -> condicion . condicion_booleana condicion
    (92) condicion -> condicion . condicion_booleana comprobacion
    (137) condicion_booleana -> . AND
    (138) condicion_booleana -> . OR
    (139) condicion_booleana -> . XOR
    (140) condicion_booleana -> . IS_EQUAL
    (141) condicion_booleana -> . IS_NOT_EQUAL
    (142) condicion_booleana -> . IS_IDENTICAL
    (143) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 386
    AND             shift and go to state 339
    OR              shift and go to state 340
    XOR             shift and go to state 341
    IS_EQUAL        shift and go to state 342
    IS_NOT_EQUAL    shift and go to state 343
    IS_IDENTICAL    shift and go to state 344
    IS_NOT_IDENTICAL shift and go to state 345

    condicion_booleana             shift and go to state 360

state 299

    (144) operaciones_mat -> valor operadores valor .
    (144) operaciones_mat -> valor . operadores valor
    (145) operaciones_mat -> valor . operadores operaciones_mat
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SEMI            reduce using rule 144 (operaciones_mat -> valor operadores valor .)
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 201

state 300

    (145) operaciones_mat -> valor operadores operaciones_mat .

    SEMI            reduce using rule 145 (operaciones_mat -> valor operadores operaciones_mat .)


state 301

    (146) operaciones_mat -> VARIABLE . operadores VARIABLE
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    EQUALS          shift and go to state 209
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 207

state 302

    (62) imprimir -> ECHO NOMBRE LBRACKET ENTERO . RBRACKET SEMI

    RBRACKET        shift and go to state 387


state 303

    (146) operaciones_mat -> VARIABLE operadores VARIABLE .

    SEMI            reduce using rule 146 (operaciones_mat -> VARIABLE operadores VARIABLE .)


state 304

    (70) imprimir -> ECHO funcionesCP_semi COMMA NOMBRE . SEMI

    SEMI            shift and go to state 388


state 305

    (148) operaciones_mat_par -> LPAREN valor operadores . valor RPAREN
    (149) operaciones_mat_par -> LPAREN valor operadores . operaciones_mat_par RPAREN
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (148) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (149) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (150) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    LPAREN          shift and go to state 105
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 389
    operaciones_mat_par            shift and go to state 390
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 306

    (150) operaciones_mat_par -> LPAREN VARIABLE operadores . VARIABLE RPAREN
    (151) operaciones_mat_par -> LPAREN VARIABLE operadores . valor RPAREN operadores valor
    (152) operaciones_mat_par -> LPAREN VARIABLE operadores . tipoDato RPAREN
    (153) operaciones_mat_par -> LPAREN VARIABLE operadores . tipoDato RPAREN operadores tipoDato
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 392
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 393
    tipoDato                       shift and go to state 394
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 307

    (60) imprimir -> PRINT LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 395


state 308

    (237) casting -> LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 396


state 309

    (168) llamada_funcion -> NOMBRE LPAREN params_list RPAREN . SEMI

    SEMI            shift and go to state 397


state 310

    (162) params_list -> params_list COMMA . param
    (159) param -> . VARIABLE
    (160) param -> . asignacion
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 223
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    param                          shift and go to state 398
    asignacion                     shift and go to state 224
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 311

    (239) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . tipoDato SEMI
    (240) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . VARIABLE operadores operaciones_mat_par SEMI
    (146) operaciones_mat -> VARIABLE operadores . VARIABLE
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 399
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 400
    numero                         shift and go to state 106

state 312

    (36) asignacion -> VARIABLE EQUALS valor SEMI .

    $end            reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RBRACE          reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    SEMI            reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BREAK           reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    COMMA           reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    VARIABLE        reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    LPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    CADENA          reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BOOLEANO        reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    ENTERO          reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    DECIMAL         reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)


state 313

    (45) asignacion -> VARIABLE EQUALS operaciones_mat SEMI .

    $end            reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RBRACE          reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    SEMI            reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BREAK           reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RPAREN          reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    COMMA           reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    VARIABLE        reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    LPAREN          reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    CADENA          reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BOOLEANO        reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    ENTERO          reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    DECIMAL         reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)


state 314

    (48) asignacion -> VARIABLE EQUALS arrayvalues SEMI .

    $end            reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    RBRACE          reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    SEMI            reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    BREAK           reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    RPAREN          reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    COMMA           reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    VARIABLE        reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    LPAREN          reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    CADENA          reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    BOOLEANO        reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    ENTERO          reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    DECIMAL         reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)


state 315

    (185) bcolas -> VARIABLE EQUALS NEW SPLQUEUE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 401


state 316

    (243) bpila -> VARIABLE EQUALS NEW SPLSTACK . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 402


state 317

    (236) casting -> VARIABLE EQUALS LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 403


state 318

    (49) asignacion_array -> VARIABLE EQUALS array_def SEMI .

    $end            reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RBRACE          reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    SEMI            reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BREAK           reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RPAREN          reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    COMMA           reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    VARIABLE        reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    LPAREN          reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    CADENA          reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BOOLEANO        reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    ENTERO          reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    DECIMAL         reduce using rule 49 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)


state 319

    (259) arrayvalues -> ARRAY_VALUES LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 404


state 320

    (180) array_def -> ARRAY LPAREN . RPAREN
    (181) array_def -> ARRAY LPAREN . array_elmnt RPAREN
    (182) array_elmnt -> . array_elmnt COMMA valor
    (183) array_elmnt -> . valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    RPAREN          shift and go to state 405
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    array_elmnt                    shift and go to state 406
    valor                          shift and go to state 407
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 321

    (107) incrementOp -> VARIABLE SUMA SUMA SEMI .

    $end            reduce using rule 107 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    RBRACE          reduce using rule 107 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    SEMI            reduce using rule 107 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    BREAK           reduce using rule 107 (incrementOp -> VARIABLE SUMA SUMA SEMI .)


state 322

    (108) incrementOp -> VARIABLE RESTA RESTA SEMI .

    $end            reduce using rule 108 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    RBRACE          reduce using rule 108 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    SEMI            reduce using rule 108 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    BREAK           reduce using rule 108 (incrementOp -> VARIABLE RESTA RESTA SEMI .)


state 323

    (225) bconcat -> VARIABLE CONCAT VARIABLE SEMI .

    $end            reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RBRACE          reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    SEMI            reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BREAK           reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RPAREN          reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    COMMA           reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    VARIABLE        reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    LPAREN          reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    CADENA          reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BOOLEANO        reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    ENTERO          reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    DECIMAL         reduce using rule 225 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)


state 324

    (226) bconcat -> VARIABLE CONCAT CADENA CONCAT . VARIABLE SEMI

    VARIABLE        shift and go to state 408


state 325

    (222) bconcat -> VARIABLE CONCAT CADENA SEMI .

    $end            reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    SEMI            reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BREAK           reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    COMMA           reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    LPAREN          reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    CADENA          reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 222 (bconcat -> VARIABLE CONCAT CADENA SEMI .)


state 326

    (223) bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BREAK           reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    LPAREN          reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 223 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)


state 327

    (244) addpila -> VARIABLE FLECHA PUSH LPAREN . valor RPAREN SEMI
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 409
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 328

    (253) addcola -> VARIABLE FLECHA ENQUEUE LPAREN . valor RPAREN SEMI
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 410
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 329

    (254) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN . valor RPAREN SEMI
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 411
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 330

    (245) poppila -> VARIABLE FLECHA POP LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 412


state 331

    (246) funcionesCP -> VARIABLE FLECHA REWIND LPAREN . RPAREN

    RPAREN          shift and go to state 413


state 332

    (247) funcionesCP -> VARIABLE FLECHA VALID LPAREN . RPAREN

    RPAREN          shift and go to state 414


state 333

    (248) funcionesCP -> VARIABLE FLECHA COUNT LPAREN . RPAREN

    RPAREN          shift and go to state 415


state 334

    (249) funcionesCP -> VARIABLE FLECHA NEXT LPAREN . RPAREN

    RPAREN          shift and go to state 416


state 335

    (250) funcionesCP -> VARIABLE FLECHA CURRENT LPAREN . RPAREN

    RPAREN          shift and go to state 417


state 336

    (242) aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .

    $end            reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    RBRACE          reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    SEMI            reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    BREAK           reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    RPAREN          reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    COMMA           reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    VARIABLE        reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    LPAREN          reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    CADENA          reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    BOOLEANO        reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    ENTERO          reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    DECIMAL         reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    AND             reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    OR              reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    XOR             reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_EQUAL        reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_NOT_EQUAL    reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_IDENTICAL    reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_NOT_IDENTICAL reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)


state 337

    (238) aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .

    $end            reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RBRACE          reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    SEMI            reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BREAK           reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RPAREN          reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    COMMA           reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    VARIABLE        reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    LPAREN          reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    CADENA          reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BOOLEANO        reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    ENTERO          reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    DECIMAL         reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    AND             reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    OR              reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    XOR             reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_EQUAL        reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_NOT_EQUAL    reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_IDENTICAL    reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_NOT_IDENTICAL reduce using rule 238 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)


state 338

    (241) aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana . valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 100
    valor                          shift and go to state 418
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 339

    (137) condicion_booleana -> AND .

    CADENA          reduce using rule 137 (condicion_booleana -> AND .)
    BOOLEANO        reduce using rule 137 (condicion_booleana -> AND .)
    VARIABLE        reduce using rule 137 (condicion_booleana -> AND .)
    ENTERO          reduce using rule 137 (condicion_booleana -> AND .)
    DECIMAL         reduce using rule 137 (condicion_booleana -> AND .)
    LPAREN          reduce using rule 137 (condicion_booleana -> AND .)
    NOMBRE          reduce using rule 137 (condicion_booleana -> AND .)


state 340

    (138) condicion_booleana -> OR .

    CADENA          reduce using rule 138 (condicion_booleana -> OR .)
    BOOLEANO        reduce using rule 138 (condicion_booleana -> OR .)
    VARIABLE        reduce using rule 138 (condicion_booleana -> OR .)
    ENTERO          reduce using rule 138 (condicion_booleana -> OR .)
    DECIMAL         reduce using rule 138 (condicion_booleana -> OR .)
    LPAREN          reduce using rule 138 (condicion_booleana -> OR .)
    NOMBRE          reduce using rule 138 (condicion_booleana -> OR .)


state 341

    (139) condicion_booleana -> XOR .

    CADENA          reduce using rule 139 (condicion_booleana -> XOR .)
    BOOLEANO        reduce using rule 139 (condicion_booleana -> XOR .)
    VARIABLE        reduce using rule 139 (condicion_booleana -> XOR .)
    ENTERO          reduce using rule 139 (condicion_booleana -> XOR .)
    DECIMAL         reduce using rule 139 (condicion_booleana -> XOR .)
    LPAREN          reduce using rule 139 (condicion_booleana -> XOR .)
    NOMBRE          reduce using rule 139 (condicion_booleana -> XOR .)


state 342

    (140) condicion_booleana -> IS_EQUAL .

    CADENA          reduce using rule 140 (condicion_booleana -> IS_EQUAL .)
    BOOLEANO        reduce using rule 140 (condicion_booleana -> IS_EQUAL .)
    VARIABLE        reduce using rule 140 (condicion_booleana -> IS_EQUAL .)
    ENTERO          reduce using rule 140 (condicion_booleana -> IS_EQUAL .)
    DECIMAL         reduce using rule 140 (condicion_booleana -> IS_EQUAL .)
    LPAREN          reduce using rule 140 (condicion_booleana -> IS_EQUAL .)
    NOMBRE          reduce using rule 140 (condicion_booleana -> IS_EQUAL .)


state 343

    (141) condicion_booleana -> IS_NOT_EQUAL .

    CADENA          reduce using rule 141 (condicion_booleana -> IS_NOT_EQUAL .)
    BOOLEANO        reduce using rule 141 (condicion_booleana -> IS_NOT_EQUAL .)
    VARIABLE        reduce using rule 141 (condicion_booleana -> IS_NOT_EQUAL .)
    ENTERO          reduce using rule 141 (condicion_booleana -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 141 (condicion_booleana -> IS_NOT_EQUAL .)
    LPAREN          reduce using rule 141 (condicion_booleana -> IS_NOT_EQUAL .)
    NOMBRE          reduce using rule 141 (condicion_booleana -> IS_NOT_EQUAL .)


state 344

    (142) condicion_booleana -> IS_IDENTICAL .

    CADENA          reduce using rule 142 (condicion_booleana -> IS_IDENTICAL .)
    BOOLEANO        reduce using rule 142 (condicion_booleana -> IS_IDENTICAL .)
    VARIABLE        reduce using rule 142 (condicion_booleana -> IS_IDENTICAL .)
    ENTERO          reduce using rule 142 (condicion_booleana -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 142 (condicion_booleana -> IS_IDENTICAL .)
    LPAREN          reduce using rule 142 (condicion_booleana -> IS_IDENTICAL .)
    NOMBRE          reduce using rule 142 (condicion_booleana -> IS_IDENTICAL .)


state 345

    (143) condicion_booleana -> IS_NOT_IDENTICAL .

    CADENA          reduce using rule 143 (condicion_booleana -> IS_NOT_IDENTICAL .)
    BOOLEANO        reduce using rule 143 (condicion_booleana -> IS_NOT_IDENTICAL .)
    VARIABLE        reduce using rule 143 (condicion_booleana -> IS_NOT_IDENTICAL .)
    ENTERO          reduce using rule 143 (condicion_booleana -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 143 (condicion_booleana -> IS_NOT_IDENTICAL .)
    LPAREN          reduce using rule 143 (condicion_booleana -> IS_NOT_IDENTICAL .)
    NOMBRE          reduce using rule 143 (condicion_booleana -> IS_NOT_IDENTICAL .)


state 346

    (72) imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN . SEMI

    SEMI            shift and go to state 419


state 347

    (73) imprimir -> PRINT_R LPAREN VARIABLE RPAREN . SEMI

    SEMI            shift and go to state 420


state 348

    (74) imprimir -> PRINT_R LPAREN arrayvalues RPAREN . SEMI

    SEMI            shift and go to state 421


state 349

    (161) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (166) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (167) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (162) params_list -> . params_list COMMA param
    (163) params_list -> . param
    (164) params_list -> . empty
    (159) param -> . VARIABLE
    (160) param -> . asignacion
    (184) empty -> .
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 422
    VARIABLE        shift and go to state 223
    COMMA           reduce using rule 184 (empty -> .)
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

  ! RPAREN          [ reduce using rule 184 (empty -> .) ]

    params_list                    shift and go to state 384
    empty                          shift and go to state 222
    param                          shift and go to state 221
    asignacion                     shift and go to state 224
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 350

    (255) constante -> DEFINE LPAREN CADENA COMMA . valor RPAREN SEMI
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 423
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 351

    (256) constante -> DEFINE LPAREN NOMBRE COMMA . ARRAY RPAREN SEMI

    ARRAY           shift and go to state 424


state 352

    (221) bconcat -> CADENA CONCAT CADENA SEMI .

    $end            reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    SEMI            reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BREAK           reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    COMMA           reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    LPAREN          reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    CADENA          reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 221 (bconcat -> CADENA CONCAT CADENA SEMI .)


state 353

    (224) bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BREAK           reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    LPAREN          reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 224 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)


state 354

    (186) lectura -> READLINE LPAREN CADENA RPAREN . SEMI

    SEMI            shift and go to state 425


state 355

    (187) lectura -> READLINE LPAREN RPAREN SEMI .

    $end            reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 187 (lectura -> READLINE LPAREN RPAREN SEMI .)


state 356

    (78) condicion_else -> ELSE LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 426


state 357

    (77) condicion_elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE
    (91) condicion -> condicion . condicion_booleana condicion
    (92) condicion -> condicion . condicion_booleana comprobacion
    (137) condicion_booleana -> . AND
    (138) condicion_booleana -> . OR
    (139) condicion_booleana -> . XOR
    (140) condicion_booleana -> . IS_EQUAL
    (141) condicion_booleana -> . IS_NOT_EQUAL
    (142) condicion_booleana -> . IS_IDENTICAL
    (143) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 427
    AND             shift and go to state 339
    OR              shift and go to state 340
    XOR             shift and go to state 341
    IS_EQUAL        shift and go to state 342
    IS_NOT_EQUAL    shift and go to state 343
    IS_IDENTICAL    shift and go to state 344
    IS_NOT_IDENTICAL shift and go to state 345

    condicion_booleana             shift and go to state 360

state 358

    (89) condicion -> LPAREN VARIABLE . operadores valor RPAREN operador_logico valor
    (90) condicion -> LPAREN VARIABLE . operadores valor RPAREN condicion_booleana valor
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 428

state 359

    (110) bwhile -> WHILE LPAREN condicion RPAREN . LBRACE stc_bloque RBRACE
    (111) bwhile -> WHILE LPAREN condicion RPAREN . COLON stc_bloque
    (112) bwhile -> WHILE LPAREN condicion RPAREN . SEMI

    LBRACE          shift and go to state 429
    COLON           shift and go to state 430
    SEMI            shift and go to state 431


state 360

    (91) condicion -> condicion condicion_booleana . condicion
    (92) condicion -> condicion condicion_booleana . comprobacion
    (83) condicion -> . VARIABLE operador_logico VARIABLE
    (84) condicion -> . valor operador_logico valor
    (85) condicion -> . VARIABLE operador_logico valor
    (86) condicion -> . VARIABLE condicion_booleana VARIABLE
    (87) condicion -> . valor condicion_booleana valor
    (88) condicion -> . VARIABLE condicion_booleana valor
    (89) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (90) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (91) condicion -> . condicion condicion_booleana condicion
    (92) condicion -> . condicion condicion_booleana comprobacion
    (93) condicion -> . aumentoCasting
    (94) condicion -> . VARIABLE
    (95) condicion -> . funcionesCP
    (200) comprobacion -> . NOMBRE LPAREN valor RPAREN
    (201) comprobacion -> . NOMBRE LPAREN VARIABLE RPAREN
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 274
    LPAREN          shift and go to state 272
    NOMBRE          shift and go to state 434
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    condicion                      shift and go to state 432
    comprobacion                   shift and go to state 433
    valor                          shift and go to state 275
    aumentoCasting                 shift and go to state 276
    funcionesCP                    shift and go to state 277
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 361

    (83) condicion -> VARIABLE operador_logico . VARIABLE
    (85) condicion -> VARIABLE operador_logico . valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 435
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 436
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 362

    (86) condicion -> VARIABLE condicion_booleana . VARIABLE
    (88) condicion -> VARIABLE condicion_booleana . valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 437
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 438
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 363

    (239) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (185) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI

    VARIABLE        shift and go to state 439
    NEW             shift and go to state 235


state 364

    (128) operador_logico -> SMALLER .

    VARIABLE        reduce using rule 128 (operador_logico -> SMALLER .)
    CADENA          reduce using rule 128 (operador_logico -> SMALLER .)
    BOOLEANO        reduce using rule 128 (operador_logico -> SMALLER .)
    ENTERO          reduce using rule 128 (operador_logico -> SMALLER .)
    DECIMAL         reduce using rule 128 (operador_logico -> SMALLER .)


state 365

    (129) operador_logico -> GREATER .

    VARIABLE        reduce using rule 129 (operador_logico -> GREATER .)
    CADENA          reduce using rule 129 (operador_logico -> GREATER .)
    BOOLEANO        reduce using rule 129 (operador_logico -> GREATER .)
    ENTERO          reduce using rule 129 (operador_logico -> GREATER .)
    DECIMAL         reduce using rule 129 (operador_logico -> GREATER .)


state 366

    (130) operador_logico -> IS_SMALLER_OR_EQUAL .

    VARIABLE        reduce using rule 130 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    CADENA          reduce using rule 130 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    BOOLEANO        reduce using rule 130 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    ENTERO          reduce using rule 130 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 130 (operador_logico -> IS_SMALLER_OR_EQUAL .)


state 367

    (131) operador_logico -> IS_GREATER_OR_EQUAL .

    VARIABLE        reduce using rule 131 (operador_logico -> IS_GREATER_OR_EQUAL .)
    CADENA          reduce using rule 131 (operador_logico -> IS_GREATER_OR_EQUAL .)
    BOOLEANO        reduce using rule 131 (operador_logico -> IS_GREATER_OR_EQUAL .)
    ENTERO          reduce using rule 131 (operador_logico -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 131 (operador_logico -> IS_GREATER_OR_EQUAL .)


state 368

    (84) condicion -> valor operador_logico . valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 440
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 369

    (87) condicion -> valor condicion_booleana . valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 441
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 370

    (114) bdo -> DO LBRACE cuerpo RBRACE . bwhile
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .

    WHILE           shift and go to state 58
    RBRACE          reduce using rule 113 (bwhile -> .)
    SEMI            reduce using rule 113 (bwhile -> .)
    $end            reduce using rule 113 (bwhile -> .)
    BREAK           reduce using rule 113 (bwhile -> .)

    bwhile                         shift and go to state 442

state 371

    (96) bfor -> FOR LPAREN asignacion condicion . SEMI for_incr RPAREN stc_bloque_def
    (91) condicion -> condicion . condicion_booleana condicion
    (92) condicion -> condicion . condicion_booleana comprobacion
    (137) condicion_booleana -> . AND
    (138) condicion_booleana -> . OR
    (139) condicion_booleana -> . XOR
    (140) condicion_booleana -> . IS_EQUAL
    (141) condicion_booleana -> . IS_NOT_EQUAL
    (142) condicion_booleana -> . IS_IDENTICAL
    (143) condicion_booleana -> . IS_NOT_IDENTICAL

    SEMI            shift and go to state 443
    AND             shift and go to state 339
    OR              shift and go to state 340
    XOR             shift and go to state 341
    IS_EQUAL        shift and go to state 342
    IS_NOT_EQUAL    shift and go to state 343
    IS_IDENTICAL    shift and go to state 344
    IS_NOT_IDENTICAL shift and go to state 345

    condicion_booleana             shift and go to state 360

state 372

    (109) bforeach -> FOREACH LPAREN VARIABLE AS . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 444


state 373

    (99) stc_bloque_def -> LBRACE stc_bloque . RBRACE
    (97) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 445
    SEMI            shift and go to state 446


state 374

    (100) stc_bloque_def -> LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 447


state 375

    (98) stc_bloque -> breturn .
    (24) cuerpo -> breturn .
    (179) breturn -> breturn . RBRACE

  ! reduce/reduce conflict for RBRACE resolved using rule 24 (cuerpo -> breturn .)
  ! shift/reduce conflict for RBRACE resolved as shift
    SEMI            reduce using rule 98 (stc_bloque -> breturn .)
    RBRACE          shift and go to state 91

  ! RBRACE          [ reduce using rule 98 (stc_bloque -> breturn .) ]
  ! RBRACE          [ reduce using rule 24 (cuerpo -> breturn .) ]


state 376

    (120) btry -> TRY LBRACE stc_bloque_def RBRACE . catches
    (121) catches -> . catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
    (122) catches -> . empty
    (184) empty -> .

    CATCH           reduce using rule 184 (empty -> .)
    $end            reduce using rule 184 (empty -> .)
    RBRACE          reduce using rule 184 (empty -> .)
    SEMI            reduce using rule 184 (empty -> .)
    BREAK           reduce using rule 184 (empty -> .)

    catches                        shift and go to state 448
    empty                          shift and go to state 449

state 377

    (115) bswitch -> SWITCH LPAREN VARIABLE RPAREN . LBRACE innerSwitch RBRACE

    LBRACE          shift and go to state 450


state 378

    (169) brand -> RAND LPAREN ENTERO COMMA . ENTERO RPAREN SEMI

    ENTERO          shift and go to state 451


state 379

    (188) escribir -> FWRITE LPAREN NOMBRE COMMA . CADENA RPAREN SEMI

    CADENA          shift and go to state 452


state 380

    (189) btrim -> TRIM LPAREN NOMBRE LPAREN . NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 453


state 381

    (198) otros -> SMALLER DIVISION NOMBRE GREATER .

    $end            reduce using rule 198 (otros -> SMALLER DIVISION NOMBRE GREATER .)
    RBRACE          reduce using rule 198 (otros -> SMALLER DIVISION NOMBRE GREATER .)
    SEMI            reduce using rule 198 (otros -> SMALLER DIVISION NOMBRE GREATER .)
    BREAK           reduce using rule 198 (otros -> SMALLER DIVISION NOMBRE GREATER .)


state 382

    (257) arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN . SEMI

    SEMI            shift and go to state 454


state 383

    (258) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA . valor RPAREN SEMI
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 455
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 384

    (161) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list . RPAREN stc_bloque_def
    (162) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 456
    COMMA           shift and go to state 310


state 385

    (166) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (167) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (165) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN . COLON VOID LBRACE empty RBRACE
    (99) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (100) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 458
    COLON           shift and go to state 459

    stc_bloque_def                 shift and go to state 457

state 386

    (75) condicion_if -> IF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE
    (76) condicion_if -> IF LPAREN condicion RPAREN . llamada_funcion
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI

    LBRACE          shift and go to state 460
    NOMBRE          shift and go to state 238

    llamada_funcion                shift and go to state 461

state 387

    (62) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET . SEMI

    SEMI            shift and go to state 462


state 388

    (70) imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI .

    $end            reduce using rule 70 (imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI .)
    RBRACE          reduce using rule 70 (imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI .)
    SEMI            reduce using rule 70 (imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI .)
    BREAK           reduce using rule 70 (imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI .)


state 389

    (148) operaciones_mat_par -> LPAREN valor operadores valor . RPAREN

    RPAREN          shift and go to state 463


state 390

    (149) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par . RPAREN

    RPAREN          shift and go to state 464


state 391

    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    EQUALS          shift and go to state 209


state 392

    (150) operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE . RPAREN
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 465
    EQUALS          shift and go to state 209


state 393

    (151) operaciones_mat_par -> LPAREN VARIABLE operadores valor . RPAREN operadores valor

    RPAREN          shift and go to state 466


state 394

    (152) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato . RPAREN
    (153) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato . RPAREN operadores tipoDato
    (50) valor -> tipoDato .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 467

  ! RPAREN          [ reduce using rule 50 (valor -> tipoDato .) ]


state 395

    (60) imprimir -> PRINT LPAREN valor RPAREN SEMI .

    $end            reduce using rule 60 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 60 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 60 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    BREAK           reduce using rule 60 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)


state 396

    (237) casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 237 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 237 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 237 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    BREAK           reduce using rule 237 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 397

    (168) llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .

    $end            reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    RBRACE          reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    SEMI            reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    BREAK           reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    RPAREN          reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    COMMA           reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    VARIABLE        reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    LPAREN          reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    CADENA          reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    BOOLEANO        reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    ENTERO          reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    DECIMAL         reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    ELSE            reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    ELSEIF          reduce using rule 168 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)


state 398

    (162) params_list -> params_list COMMA param .

    RPAREN          reduce using rule 162 (params_list -> params_list COMMA param .)
    COMMA           reduce using rule 162 (params_list -> params_list COMMA param .)


state 399

    (240) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE . operadores operaciones_mat_par SEMI
    (146) operaciones_mat -> VARIABLE operadores VARIABLE .
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SEMI            reduce using rule 146 (operaciones_mat -> VARIABLE operadores VARIABLE .)
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 468

state 400

    (239) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato . SEMI

    SEMI            shift and go to state 469


state 401

    (185) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 470


state 402

    (243) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 471


state 403

    (236) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 472


state 404

    (259) arrayvalues -> ARRAY_VALUES LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 473


state 405

    (180) array_def -> ARRAY LPAREN RPAREN .

    SEMI            reduce using rule 180 (array_def -> ARRAY LPAREN RPAREN .)


state 406

    (181) array_def -> ARRAY LPAREN array_elmnt . RPAREN
    (182) array_elmnt -> array_elmnt . COMMA valor

    RPAREN          shift and go to state 474
    COMMA           shift and go to state 475


state 407

    (183) array_elmnt -> valor .

    RPAREN          reduce using rule 183 (array_elmnt -> valor .)
    COMMA           reduce using rule 183 (array_elmnt -> valor .)


state 408

    (226) bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE . SEMI

    SEMI            shift and go to state 476


state 409

    (244) addpila -> VARIABLE FLECHA PUSH LPAREN valor . RPAREN SEMI

    RPAREN          shift and go to state 477


state 410

    (253) addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor . RPAREN SEMI

    RPAREN          shift and go to state 478


state 411

    (254) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor . RPAREN SEMI

    RPAREN          shift and go to state 479


state 412

    (245) poppila -> VARIABLE FLECHA POP LPAREN RPAREN . SEMI

    SEMI            shift and go to state 480


state 413

    (246) funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .

    SEMI            reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    $end            reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    COMMA           reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    RBRACE          reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    BREAK           reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    RPAREN          reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    AND             reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    OR              reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    XOR             reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    IS_EQUAL        reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 246 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)


state 414

    (247) funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .

    SEMI            reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    $end            reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    COMMA           reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    RBRACE          reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    BREAK           reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    RPAREN          reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    AND             reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    OR              reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    XOR             reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    IS_EQUAL        reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 247 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)


state 415

    (248) funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .

    SEMI            reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    $end            reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    COMMA           reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    RBRACE          reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    BREAK           reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    RPAREN          reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    AND             reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    OR              reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    XOR             reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    IS_EQUAL        reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 248 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)


state 416

    (249) funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .

    SEMI            reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    $end            reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    COMMA           reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    RBRACE          reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    BREAK           reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    RPAREN          reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    AND             reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    OR              reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    XOR             reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    IS_EQUAL        reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 249 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)


state 417

    (250) funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .

    SEMI            reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    $end            reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    COMMA           reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    RBRACE          reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    BREAK           reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    RPAREN          reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    AND             reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    OR              reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    XOR             reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    IS_EQUAL        reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 250 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)


state 418

    (241) aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .

    $end            reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    RBRACE          reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    SEMI            reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    BREAK           reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    RPAREN          reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    COMMA           reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    VARIABLE        reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    LPAREN          reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    CADENA          reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    BOOLEANO        reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    ENTERO          reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    DECIMAL         reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    AND             reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    OR              reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    XOR             reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_EQUAL        reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 241 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)


state 419

    (72) imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI .

    $end            reduce using rule 72 (imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI .)
    RBRACE          reduce using rule 72 (imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI .)
    SEMI            reduce using rule 72 (imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI .)
    BREAK           reduce using rule 72 (imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI .)


state 420

    (73) imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI .

    $end            reduce using rule 73 (imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI .)
    RBRACE          reduce using rule 73 (imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI .)
    SEMI            reduce using rule 73 (imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI .)
    BREAK           reduce using rule 73 (imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI .)


state 421

    (74) imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI .

    $end            reduce using rule 74 (imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI .)
    RBRACE          reduce using rule 74 (imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI .)
    SEMI            reduce using rule 74 (imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI .)
    BREAK           reduce using rule 74 (imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI .)


state 422

    (166) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (167) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (99) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (100) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 458

    stc_bloque_def                 shift and go to state 457

state 423

    (255) constante -> DEFINE LPAREN CADENA COMMA valor . RPAREN SEMI

    RPAREN          shift and go to state 481


state 424

    (256) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY . RPAREN SEMI

    RPAREN          shift and go to state 482


state 425

    (186) lectura -> READLINE LPAREN CADENA RPAREN SEMI .

    $end            reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    SEMI            reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BREAK           reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    COMMA           reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    CADENA          reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 186 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)


state 426

    (78) condicion_else -> ELSE LBRACE cuerpo RBRACE .

    $end            reduce using rule 78 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 78 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 78 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 78 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)


state 427

    (77) condicion_elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 483


state 428

    (89) condicion -> LPAREN VARIABLE operadores . valor RPAREN operador_logico valor
    (90) condicion -> LPAREN VARIABLE operadores . valor RPAREN condicion_booleana valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 484
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 429

    (110) bwhile -> WHILE LPAREN condicion RPAREN LBRACE . stc_bloque RBRACE
    (97) stc_bloque -> . stc_bloque SEMI cuerpo
    (98) stc_bloque -> . breturn
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (184) empty -> .

    RETURN          shift and go to state 77
    RBRACE          reduce using rule 184 (empty -> .)
    SEMI            reduce using rule 184 (empty -> .)

    stc_bloque                     shift and go to state 485
    breturn                        shift and go to state 486
    empty                          shift and go to state 76

state 430

    (111) bwhile -> WHILE LPAREN condicion RPAREN COLON . stc_bloque
    (97) stc_bloque -> . stc_bloque SEMI cuerpo
    (98) stc_bloque -> . breturn
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (184) empty -> .

    RETURN          shift and go to state 77
    RBRACE          reduce using rule 184 (empty -> .)
    SEMI            reduce using rule 184 (empty -> .)
    $end            reduce using rule 184 (empty -> .)
    BREAK           reduce using rule 184 (empty -> .)

    stc_bloque                     shift and go to state 487
    breturn                        shift and go to state 486
    empty                          shift and go to state 76

state 431

    (112) bwhile -> WHILE LPAREN condicion RPAREN SEMI .

    $end            reduce using rule 112 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)
    RBRACE          reduce using rule 112 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)
    SEMI            reduce using rule 112 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)
    BREAK           reduce using rule 112 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)


state 432

    (91) condicion -> condicion condicion_booleana condicion .
    (91) condicion -> condicion . condicion_booleana condicion
    (92) condicion -> condicion . condicion_booleana comprobacion
    (137) condicion_booleana -> . AND
    (138) condicion_booleana -> . OR
    (139) condicion_booleana -> . XOR
    (140) condicion_booleana -> . IS_EQUAL
    (141) condicion_booleana -> . IS_NOT_EQUAL
    (142) condicion_booleana -> . IS_IDENTICAL
    (143) condicion_booleana -> . IS_NOT_IDENTICAL

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IS_EQUAL resolved as shift
  ! shift/reduce conflict for IS_NOT_EQUAL resolved as shift
  ! shift/reduce conflict for IS_IDENTICAL resolved as shift
  ! shift/reduce conflict for IS_NOT_IDENTICAL resolved as shift
    RPAREN          reduce using rule 91 (condicion -> condicion condicion_booleana condicion .)
    SEMI            reduce using rule 91 (condicion -> condicion condicion_booleana condicion .)
    AND             shift and go to state 339
    OR              shift and go to state 340
    XOR             shift and go to state 341
    IS_EQUAL        shift and go to state 342
    IS_NOT_EQUAL    shift and go to state 343
    IS_IDENTICAL    shift and go to state 344
    IS_NOT_IDENTICAL shift and go to state 345

  ! AND             [ reduce using rule 91 (condicion -> condicion condicion_booleana condicion .) ]
  ! OR              [ reduce using rule 91 (condicion -> condicion condicion_booleana condicion .) ]
  ! XOR             [ reduce using rule 91 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_EQUAL        [ reduce using rule 91 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 91 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_IDENTICAL    [ reduce using rule 91 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 91 (condicion -> condicion condicion_booleana condicion .) ]

    condicion_booleana             shift and go to state 360

state 433

    (92) condicion -> condicion condicion_booleana comprobacion .

    RPAREN          reduce using rule 92 (condicion -> condicion condicion_booleana comprobacion .)
    AND             reduce using rule 92 (condicion -> condicion condicion_booleana comprobacion .)
    OR              reduce using rule 92 (condicion -> condicion condicion_booleana comprobacion .)
    XOR             reduce using rule 92 (condicion -> condicion condicion_booleana comprobacion .)
    IS_EQUAL        reduce using rule 92 (condicion -> condicion condicion_booleana comprobacion .)
    IS_NOT_EQUAL    reduce using rule 92 (condicion -> condicion condicion_booleana comprobacion .)
    IS_IDENTICAL    reduce using rule 92 (condicion -> condicion condicion_booleana comprobacion .)
    IS_NOT_IDENTICAL reduce using rule 92 (condicion -> condicion condicion_booleana comprobacion .)
    SEMI            reduce using rule 92 (condicion -> condicion condicion_booleana comprobacion .)


state 434

    (200) comprobacion -> NOMBRE . LPAREN valor RPAREN
    (201) comprobacion -> NOMBRE . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 488


state 435

    (83) condicion -> VARIABLE operador_logico VARIABLE .
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 83 (condicion -> VARIABLE operador_logico VARIABLE .)
    AND             reduce using rule 83 (condicion -> VARIABLE operador_logico VARIABLE .)
    OR              reduce using rule 83 (condicion -> VARIABLE operador_logico VARIABLE .)
    XOR             reduce using rule 83 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_EQUAL        reduce using rule 83 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 83 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_IDENTICAL    reduce using rule 83 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 83 (condicion -> VARIABLE operador_logico VARIABLE .)
    SEMI            reduce using rule 83 (condicion -> VARIABLE operador_logico VARIABLE .)
    EQUALS          shift and go to state 209


state 436

    (85) condicion -> VARIABLE operador_logico valor .

    RPAREN          reduce using rule 85 (condicion -> VARIABLE operador_logico valor .)
    AND             reduce using rule 85 (condicion -> VARIABLE operador_logico valor .)
    OR              reduce using rule 85 (condicion -> VARIABLE operador_logico valor .)
    XOR             reduce using rule 85 (condicion -> VARIABLE operador_logico valor .)
    IS_EQUAL        reduce using rule 85 (condicion -> VARIABLE operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 85 (condicion -> VARIABLE operador_logico valor .)
    IS_IDENTICAL    reduce using rule 85 (condicion -> VARIABLE operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 85 (condicion -> VARIABLE operador_logico valor .)
    SEMI            reduce using rule 85 (condicion -> VARIABLE operador_logico valor .)


state 437

    (86) condicion -> VARIABLE condicion_booleana VARIABLE .
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 86 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    AND             reduce using rule 86 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    OR              reduce using rule 86 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    XOR             reduce using rule 86 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_EQUAL        reduce using rule 86 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 86 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_IDENTICAL    reduce using rule 86 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 86 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    SEMI            reduce using rule 86 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    EQUALS          shift and go to state 209


state 438

    (88) condicion -> VARIABLE condicion_booleana valor .

    RPAREN          reduce using rule 88 (condicion -> VARIABLE condicion_booleana valor .)
    AND             reduce using rule 88 (condicion -> VARIABLE condicion_booleana valor .)
    OR              reduce using rule 88 (condicion -> VARIABLE condicion_booleana valor .)
    XOR             reduce using rule 88 (condicion -> VARIABLE condicion_booleana valor .)
    IS_EQUAL        reduce using rule 88 (condicion -> VARIABLE condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 88 (condicion -> VARIABLE condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 88 (condicion -> VARIABLE condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 88 (condicion -> VARIABLE condicion_booleana valor .)
    SEMI            reduce using rule 88 (condicion -> VARIABLE condicion_booleana valor .)


state 439

    (239) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores tipoDato SEMI
    (240) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores VARIABLE operadores operaciones_mat_par SEMI
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 489

state 440

    (84) condicion -> valor operador_logico valor .

    RPAREN          reduce using rule 84 (condicion -> valor operador_logico valor .)
    AND             reduce using rule 84 (condicion -> valor operador_logico valor .)
    OR              reduce using rule 84 (condicion -> valor operador_logico valor .)
    XOR             reduce using rule 84 (condicion -> valor operador_logico valor .)
    IS_EQUAL        reduce using rule 84 (condicion -> valor operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 84 (condicion -> valor operador_logico valor .)
    IS_IDENTICAL    reduce using rule 84 (condicion -> valor operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 84 (condicion -> valor operador_logico valor .)
    SEMI            reduce using rule 84 (condicion -> valor operador_logico valor .)


state 441

    (87) condicion -> valor condicion_booleana valor .

    RPAREN          reduce using rule 87 (condicion -> valor condicion_booleana valor .)
    AND             reduce using rule 87 (condicion -> valor condicion_booleana valor .)
    OR              reduce using rule 87 (condicion -> valor condicion_booleana valor .)
    XOR             reduce using rule 87 (condicion -> valor condicion_booleana valor .)
    IS_EQUAL        reduce using rule 87 (condicion -> valor condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 87 (condicion -> valor condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 87 (condicion -> valor condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 87 (condicion -> valor condicion_booleana valor .)
    SEMI            reduce using rule 87 (condicion -> valor condicion_booleana valor .)


state 442

    (114) bdo -> DO LBRACE cuerpo RBRACE bwhile .

    $end            reduce using rule 114 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    RBRACE          reduce using rule 114 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    SEMI            reduce using rule 114 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    BREAK           reduce using rule 114 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)


state 443

    (96) bfor -> FOR LPAREN asignacion condicion SEMI . for_incr RPAREN stc_bloque_def
    (101) for_incr -> . VARIABLE SUMA SUMA
    (102) for_incr -> . SUMA SUMA VARIABLE
    (103) for_incr -> . VARIABLE RESTA RESTA
    (104) for_incr -> . RESTA RESTA VARIABLE
    (105) for_incr -> . VARIABLE SUMA EQUALS numero
    (106) for_incr -> . VARIABLE RESTA EQUALS numero

    VARIABLE        shift and go to state 491
    SUMA            shift and go to state 492
    RESTA           shift and go to state 493

    for_incr                       shift and go to state 490

state 444

    (109) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 494


state 445

    (99) stc_bloque_def -> LBRACE stc_bloque RBRACE .

    RBRACE          reduce using rule 99 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    $end            reduce using rule 99 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 99 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    BREAK           reduce using rule 99 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    CATCH           reduce using rule 99 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)


state 446

    (97) stc_bloque -> stc_bloque SEMI . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (58) imprimir -> . ECHO valor SEMI
    (59) imprimir -> . PRINT valor SEMI
    (60) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (61) imprimir -> . PRINT bconcat
    (62) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (63) imprimir -> . ECHO bconcat
    (64) imprimir -> . ECHO operaciones_mat SEMI
    (65) imprimir -> . PRINT operaciones_mat SEMI
    (66) imprimir -> . ECHO VARIABLE SEMI
    (67) imprimir -> . PRINT VARIABLE SEMI
    (68) imprimir -> . ECHO funcionesCP_semi
    (69) imprimir -> . PRINT funcionesCP_semi
    (70) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (71) imprimir -> . ECHO poppila
    (72) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (73) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (154) funciones -> . funcion_nparams
    (155) funciones -> . proteccion funcion_nparams
    (156) funciones -> . funcion_blank
    (157) funciones -> . proteccion funcion_blank
    (158) funciones -> . funcion_void
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (255) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (256) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (79) condicion_ifelse -> . condicion_if
    (80) condicion_ifelse -> . condicion_if condicion_else
    (81) condicion_ifelse -> . condicion_if condicion_elseif
    (82) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .
    (114) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (96) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (107) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (108) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (109) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (120) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (115) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON
    (192) bgoto -> . GOTO NOMBRE SEMI
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (193) bcortes -> . EXIT SEMI
    (194) bcortes -> . BREAK SEMI
    (195) bcortes -> . DEFAULT SEMI
    (196) bcortes -> . CONTINUE SEMI
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (197) otros -> . SMALLER NOMBRE GREATER
    (198) otros -> . SMALLER DIVISION NOMBRE GREATER
    (199) otros -> . NOMBRE COLON
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (190) comment -> . COMENTARIOS
    (191) comment -> . DOC_COMENTARIOS
    (236) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (237) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (202) simbolos -> . LPAREN RPAREN
    (203) simbolos -> . LPAREN
    (204) simbolos -> . RPAREN
    (205) simbolos -> . LBRACKET RBRACKET
    (206) simbolos -> . LBRACKET
    (207) simbolos -> . RBRACKET
    (208) simbolos -> . LBRACE RBRACE
    (209) simbolos -> . LBRACE
    (210) simbolos -> . RBRACE instrucciones
    (211) simbolos -> . OPEN_TAG CLOSE_TAG
    (212) simbolos -> . OPEN_TAG
    (213) simbolos -> . CLOSE_TAG
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (244) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (257) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (258) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (245) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (75) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (184) empty -> .
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
  ! reduce/reduce conflict for SEMI resolved using rule 113 (bwhile -> .)
  ! reduce/reduce conflict for $end resolved using rule 113 (bwhile -> .)
  ! shift/reduce conflict for BREAK resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    SEMI            reduce using rule 113 (bwhile -> .)
    $end            reduce using rule 113 (bwhile -> .)
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 113 (bwhile -> .) ]
  ! BREAK           [ reduce using rule 113 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 184 (empty -> .) ]
  ! SEMI            [ reduce using rule 184 (empty -> .) ]
  ! $end            [ reduce using rule 184 (empty -> .) ]
  ! BREAK           [ reduce using rule 184 (empty -> .) ]

    cuerpo                         shift and go to state 495
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 447

    (100) stc_bloque_def -> LBRACE cuerpo RBRACE .

    RBRACE          reduce using rule 100 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    $end            reduce using rule 100 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 100 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 100 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    CATCH           reduce using rule 100 (stc_bloque_def -> LBRACE cuerpo RBRACE .)


state 448

    (120) btry -> TRY LBRACE stc_bloque_def RBRACE catches .
    (121) catches -> catches . CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    $end            reduce using rule 120 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    RBRACE          reduce using rule 120 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    SEMI            reduce using rule 120 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    BREAK           reduce using rule 120 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    CATCH           shift and go to state 496


state 449

    (122) catches -> empty .

    CATCH           reduce using rule 122 (catches -> empty .)
    $end            reduce using rule 122 (catches -> empty .)
    RBRACE          reduce using rule 122 (catches -> empty .)
    SEMI            reduce using rule 122 (catches -> empty .)
    BREAK           reduce using rule 122 (catches -> empty .)


state 450

    (115) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE . innerSwitch RBRACE
    (118) innerSwitch -> . bcase cuerpo BREAK SEMI
    (119) innerSwitch -> . bcase cuerpo BREAK SEMI innerSwitch
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON

    CASE            shift and go to state 66

    innerSwitch                    shift and go to state 497
    bcase                          shift and go to state 498

state 451

    (169) brand -> RAND LPAREN ENTERO COMMA ENTERO . RPAREN SEMI

    RPAREN          shift and go to state 499


state 452

    (188) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA . RPAREN SEMI

    RPAREN          shift and go to state 500


state 453

    (189) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE . RPAREN RPAREN SEMI

    RPAREN          shift and go to state 501


state 454

    (257) arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI .

    $end            reduce using rule 257 (arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI .)
    RBRACE          reduce using rule 257 (arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI .)
    SEMI            reduce using rule 257 (arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI .)
    BREAK           reduce using rule 257 (arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI .)


state 455

    (258) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor . RPAREN SEMI

    RPAREN          shift and go to state 502


state 456

    (161) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN . stc_bloque_def
    (99) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (100) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 281

    stc_bloque_def                 shift and go to state 503

state 457

    (166) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .

    $end            reduce using rule 166 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 166 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    SEMI            reduce using rule 166 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    BREAK           reduce using rule 166 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)


state 458

    (167) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE . empty RBRACE
    (99) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (100) stc_bloque_def -> LBRACE . cuerpo RBRACE
    (184) empty -> .
    (97) stc_bloque -> . stc_bloque SEMI cuerpo
    (98) stc_bloque -> . breturn
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (58) imprimir -> . ECHO valor SEMI
    (59) imprimir -> . PRINT valor SEMI
    (60) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (61) imprimir -> . PRINT bconcat
    (62) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (63) imprimir -> . ECHO bconcat
    (64) imprimir -> . ECHO operaciones_mat SEMI
    (65) imprimir -> . PRINT operaciones_mat SEMI
    (66) imprimir -> . ECHO VARIABLE SEMI
    (67) imprimir -> . PRINT VARIABLE SEMI
    (68) imprimir -> . ECHO funcionesCP_semi
    (69) imprimir -> . PRINT funcionesCP_semi
    (70) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (71) imprimir -> . ECHO poppila
    (72) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (73) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (154) funciones -> . funcion_nparams
    (155) funciones -> . proteccion funcion_nparams
    (156) funciones -> . funcion_blank
    (157) funciones -> . proteccion funcion_blank
    (158) funciones -> . funcion_void
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (255) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (256) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (79) condicion_ifelse -> . condicion_if
    (80) condicion_ifelse -> . condicion_if condicion_else
    (81) condicion_ifelse -> . condicion_if condicion_elseif
    (82) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .
    (114) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (96) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (107) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (108) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (109) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (120) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (115) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON
    (192) bgoto -> . GOTO NOMBRE SEMI
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (193) bcortes -> . EXIT SEMI
    (194) bcortes -> . BREAK SEMI
    (195) bcortes -> . DEFAULT SEMI
    (196) bcortes -> . CONTINUE SEMI
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (197) otros -> . SMALLER NOMBRE GREATER
    (198) otros -> . SMALLER DIVISION NOMBRE GREATER
    (199) otros -> . NOMBRE COLON
    (190) comment -> . COMENTARIOS
    (191) comment -> . DOC_COMENTARIOS
    (236) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (237) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (202) simbolos -> . LPAREN RPAREN
    (203) simbolos -> . LPAREN
    (204) simbolos -> . RPAREN
    (205) simbolos -> . LBRACKET RBRACKET
    (206) simbolos -> . LBRACKET
    (207) simbolos -> . RBRACKET
    (208) simbolos -> . LBRACE RBRACE
    (209) simbolos -> . LBRACE
    (210) simbolos -> . RBRACE instrucciones
    (211) simbolos -> . OPEN_TAG CLOSE_TAG
    (212) simbolos -> . OPEN_TAG
    (213) simbolos -> . CLOSE_TAG
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (244) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (257) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (258) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (245) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (75) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! reduce/reduce conflict for RBRACE resolved using rule 113 (bwhile -> .)
  ! shift/reduce conflict for RBRACE resolved as shift
    SEMI            reduce using rule 184 (empty -> .)
    RETURN          shift and go to state 77
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 184 (empty -> .) ]
  ! RBRACE          [ reduce using rule 113 (bwhile -> .) ]

    empty                          shift and go to state 504
    stc_bloque                     shift and go to state 373
    cuerpo                         shift and go to state 374
    breturn                        shift and go to state 375
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    funcionesCP                    shift and go to state 82

state 459

    (165) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON . VOID LBRACE empty RBRACE

    VOID            shift and go to state 505


state 460

    (75) condicion_if -> IF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (58) imprimir -> . ECHO valor SEMI
    (59) imprimir -> . PRINT valor SEMI
    (60) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (61) imprimir -> . PRINT bconcat
    (62) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (63) imprimir -> . ECHO bconcat
    (64) imprimir -> . ECHO operaciones_mat SEMI
    (65) imprimir -> . PRINT operaciones_mat SEMI
    (66) imprimir -> . ECHO VARIABLE SEMI
    (67) imprimir -> . PRINT VARIABLE SEMI
    (68) imprimir -> . ECHO funcionesCP_semi
    (69) imprimir -> . PRINT funcionesCP_semi
    (70) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (71) imprimir -> . ECHO poppila
    (72) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (73) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (154) funciones -> . funcion_nparams
    (155) funciones -> . proteccion funcion_nparams
    (156) funciones -> . funcion_blank
    (157) funciones -> . proteccion funcion_blank
    (158) funciones -> . funcion_void
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (255) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (256) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (79) condicion_ifelse -> . condicion_if
    (80) condicion_ifelse -> . condicion_if condicion_else
    (81) condicion_ifelse -> . condicion_if condicion_elseif
    (82) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .
    (114) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (96) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (107) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (108) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (109) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (120) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (115) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON
    (192) bgoto -> . GOTO NOMBRE SEMI
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (193) bcortes -> . EXIT SEMI
    (194) bcortes -> . BREAK SEMI
    (195) bcortes -> . DEFAULT SEMI
    (196) bcortes -> . CONTINUE SEMI
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (197) otros -> . SMALLER NOMBRE GREATER
    (198) otros -> . SMALLER DIVISION NOMBRE GREATER
    (199) otros -> . NOMBRE COLON
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (190) comment -> . COMENTARIOS
    (191) comment -> . DOC_COMENTARIOS
    (236) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (237) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (202) simbolos -> . LPAREN RPAREN
    (203) simbolos -> . LPAREN
    (204) simbolos -> . RPAREN
    (205) simbolos -> . LBRACKET RBRACKET
    (206) simbolos -> . LBRACKET
    (207) simbolos -> . RBRACKET
    (208) simbolos -> . LBRACE RBRACE
    (209) simbolos -> . LBRACE
    (210) simbolos -> . RBRACE instrucciones
    (211) simbolos -> . OPEN_TAG CLOSE_TAG
    (212) simbolos -> . OPEN_TAG
    (213) simbolos -> . CLOSE_TAG
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (244) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (257) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (258) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (245) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (75) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (184) empty -> .
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 113 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 184 (empty -> .) ]

    cuerpo                         shift and go to state 506
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 461

    (76) condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .

    ELSE            reduce using rule 76 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    ELSEIF          reduce using rule 76 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    $end            reduce using rule 76 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    RBRACE          reduce using rule 76 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    SEMI            reduce using rule 76 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    BREAK           reduce using rule 76 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)


state 462

    (62) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .

    $end            reduce using rule 62 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    RBRACE          reduce using rule 62 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    SEMI            reduce using rule 62 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    BREAK           reduce using rule 62 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)


state 463

    (148) operaciones_mat_par -> LPAREN valor operadores valor RPAREN .

    SEMI            reduce using rule 148 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)
    RPAREN          reduce using rule 148 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)


state 464

    (149) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .

    SEMI            reduce using rule 149 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)
    RPAREN          reduce using rule 149 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)


state 465

    (150) operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .

    SEMI            reduce using rule 150 (operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .)
    RPAREN          reduce using rule 150 (operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .)


state 466

    (151) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN . operadores valor
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 507

state 467

    (152) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN .
    (153) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN . operadores tipoDato
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SEMI            reduce using rule 152 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN .)
    RPAREN          reduce using rule 152 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN .)
    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 508

state 468

    (240) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores . operaciones_mat_par SEMI
    (148) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (149) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (150) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (151) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (152) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato

    LPAREN          shift and go to state 105

    operaciones_mat_par            shift and go to state 509

state 469

    (239) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .

    $end            reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RBRACE          reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    SEMI            reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BREAK           reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RPAREN          reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    COMMA           reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    VARIABLE        reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    LPAREN          reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    CADENA          reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BOOLEANO        reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    ENTERO          reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    DECIMAL         reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    AND             reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    OR              reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    XOR             reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_EQUAL        reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_NOT_EQUAL    reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_IDENTICAL    reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_NOT_IDENTICAL reduce using rule 239 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)


state 470

    (185) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 510


state 471

    (243) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN . SEMI

    SEMI            shift and go to state 511


state 472

    (236) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 512


state 473

    (259) arrayvalues -> ARRAY_VALUES LPAREN VARIABLE RPAREN .

    SEMI            reduce using rule 259 (arrayvalues -> ARRAY_VALUES LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 259 (arrayvalues -> ARRAY_VALUES LPAREN VARIABLE RPAREN .)


state 474

    (181) array_def -> ARRAY LPAREN array_elmnt RPAREN .

    SEMI            reduce using rule 181 (array_def -> ARRAY LPAREN array_elmnt RPAREN .)


state 475

    (182) array_elmnt -> array_elmnt COMMA . valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 513
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 476

    (226) bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .

    $end            reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    RBRACE          reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    SEMI            reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    BREAK           reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    RPAREN          reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    COMMA           reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    VARIABLE        reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    LPAREN          reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    CADENA          reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    BOOLEANO        reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    ENTERO          reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    DECIMAL         reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)


state 477

    (244) addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 514


state 478

    (253) addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 515


state 479

    (254) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 516


state 480

    (245) poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI .

    $end            reduce using rule 245 (poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 245 (poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 245 (poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 245 (poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI .)


state 481

    (255) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN . SEMI

    SEMI            shift and go to state 517


state 482

    (256) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN . SEMI

    SEMI            shift and go to state 518


state 483

    (77) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (58) imprimir -> . ECHO valor SEMI
    (59) imprimir -> . PRINT valor SEMI
    (60) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (61) imprimir -> . PRINT bconcat
    (62) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (63) imprimir -> . ECHO bconcat
    (64) imprimir -> . ECHO operaciones_mat SEMI
    (65) imprimir -> . PRINT operaciones_mat SEMI
    (66) imprimir -> . ECHO VARIABLE SEMI
    (67) imprimir -> . PRINT VARIABLE SEMI
    (68) imprimir -> . ECHO funcionesCP_semi
    (69) imprimir -> . PRINT funcionesCP_semi
    (70) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (71) imprimir -> . ECHO poppila
    (72) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (73) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (154) funciones -> . funcion_nparams
    (155) funciones -> . proteccion funcion_nparams
    (156) funciones -> . funcion_blank
    (157) funciones -> . proteccion funcion_blank
    (158) funciones -> . funcion_void
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (255) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (256) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (79) condicion_ifelse -> . condicion_if
    (80) condicion_ifelse -> . condicion_if condicion_else
    (81) condicion_ifelse -> . condicion_if condicion_elseif
    (82) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .
    (114) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (96) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (107) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (108) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (109) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (120) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (115) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON
    (192) bgoto -> . GOTO NOMBRE SEMI
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (193) bcortes -> . EXIT SEMI
    (194) bcortes -> . BREAK SEMI
    (195) bcortes -> . DEFAULT SEMI
    (196) bcortes -> . CONTINUE SEMI
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (197) otros -> . SMALLER NOMBRE GREATER
    (198) otros -> . SMALLER DIVISION NOMBRE GREATER
    (199) otros -> . NOMBRE COLON
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (190) comment -> . COMENTARIOS
    (191) comment -> . DOC_COMENTARIOS
    (236) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (237) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (202) simbolos -> . LPAREN RPAREN
    (203) simbolos -> . LPAREN
    (204) simbolos -> . RPAREN
    (205) simbolos -> . LBRACKET RBRACKET
    (206) simbolos -> . LBRACKET
    (207) simbolos -> . RBRACKET
    (208) simbolos -> . LBRACE RBRACE
    (209) simbolos -> . LBRACE
    (210) simbolos -> . RBRACE instrucciones
    (211) simbolos -> . OPEN_TAG CLOSE_TAG
    (212) simbolos -> . OPEN_TAG
    (213) simbolos -> . CLOSE_TAG
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (244) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (257) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (258) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (245) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (75) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (184) empty -> .
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 113 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 184 (empty -> .) ]

    cuerpo                         shift and go to state 519
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 484

    (89) condicion -> LPAREN VARIABLE operadores valor . RPAREN operador_logico valor
    (90) condicion -> LPAREN VARIABLE operadores valor . RPAREN condicion_booleana valor

    RPAREN          shift and go to state 520


state 485

    (110) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque . RBRACE
    (97) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 521
    SEMI            shift and go to state 446


state 486

    (98) stc_bloque -> breturn .
    (179) breturn -> breturn . RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    SEMI            reduce using rule 98 (stc_bloque -> breturn .)
    $end            reduce using rule 98 (stc_bloque -> breturn .)
    BREAK           reduce using rule 98 (stc_bloque -> breturn .)
    RBRACE          shift and go to state 91

  ! RBRACE          [ reduce using rule 98 (stc_bloque -> breturn .) ]


state 487

    (111) bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .
    (97) stc_bloque -> stc_bloque . SEMI cuerpo

  ! shift/reduce conflict for SEMI resolved as shift
    $end            reduce using rule 111 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    RBRACE          reduce using rule 111 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    BREAK           reduce using rule 111 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    SEMI            shift and go to state 446

  ! SEMI            [ reduce using rule 111 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .) ]


state 488

    (200) comprobacion -> NOMBRE LPAREN . valor RPAREN
    (201) comprobacion -> NOMBRE LPAREN . VARIABLE RPAREN
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 523
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 522
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 489

    (239) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . tipoDato SEMI
    (240) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . VARIABLE operadores operaciones_mat_par SEMI
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    VARIABLE        shift and go to state 524
    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 400
    numero                         shift and go to state 106

state 490

    (96) bfor -> FOR LPAREN asignacion condicion SEMI for_incr . RPAREN stc_bloque_def

    RPAREN          shift and go to state 525


state 491

    (101) for_incr -> VARIABLE . SUMA SUMA
    (103) for_incr -> VARIABLE . RESTA RESTA
    (105) for_incr -> VARIABLE . SUMA EQUALS numero
    (106) for_incr -> VARIABLE . RESTA EQUALS numero

    SUMA            shift and go to state 526
    RESTA           shift and go to state 527


state 492

    (102) for_incr -> SUMA . SUMA VARIABLE

    SUMA            shift and go to state 528


state 493

    (104) for_incr -> RESTA . RESTA VARIABLE

    RESTA           shift and go to state 529


state 494

    (109) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN . stc_bloque_def
    (99) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (100) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 281

    stc_bloque_def                 shift and go to state 530

state 495

    (97) stc_bloque -> stc_bloque SEMI cuerpo .

    RBRACE          reduce using rule 97 (stc_bloque -> stc_bloque SEMI cuerpo .)
    SEMI            reduce using rule 97 (stc_bloque -> stc_bloque SEMI cuerpo .)
    $end            reduce using rule 97 (stc_bloque -> stc_bloque SEMI cuerpo .)
    BREAK           reduce using rule 97 (stc_bloque -> stc_bloque SEMI cuerpo .)


state 496

    (121) catches -> catches CATCH . LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 531


state 497

    (115) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch . RBRACE

    RBRACE          shift and go to state 532


state 498

    (118) innerSwitch -> bcase . cuerpo BREAK SEMI
    (119) innerSwitch -> bcase . cuerpo BREAK SEMI innerSwitch
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (58) imprimir -> . ECHO valor SEMI
    (59) imprimir -> . PRINT valor SEMI
    (60) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (61) imprimir -> . PRINT bconcat
    (62) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (63) imprimir -> . ECHO bconcat
    (64) imprimir -> . ECHO operaciones_mat SEMI
    (65) imprimir -> . PRINT operaciones_mat SEMI
    (66) imprimir -> . ECHO VARIABLE SEMI
    (67) imprimir -> . PRINT VARIABLE SEMI
    (68) imprimir -> . ECHO funcionesCP_semi
    (69) imprimir -> . PRINT funcionesCP_semi
    (70) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (71) imprimir -> . ECHO poppila
    (72) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (73) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (154) funciones -> . funcion_nparams
    (155) funciones -> . proteccion funcion_nparams
    (156) funciones -> . funcion_blank
    (157) funciones -> . proteccion funcion_blank
    (158) funciones -> . funcion_void
    (168) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (255) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (256) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (186) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (187) lectura -> . READLINE LPAREN RPAREN SEMI
    (79) condicion_ifelse -> . condicion_if
    (80) condicion_ifelse -> . condicion_if condicion_else
    (81) condicion_ifelse -> . condicion_if condicion_elseif
    (82) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (110) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (111) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (112) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (113) bwhile -> .
    (114) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (96) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (107) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (108) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (109) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (120) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (115) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON
    (192) bgoto -> . GOTO NOMBRE SEMI
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (193) bcortes -> . EXIT SEMI
    (194) bcortes -> . BREAK SEMI
    (195) bcortes -> . DEFAULT SEMI
    (196) bcortes -> . CONTINUE SEMI
    (169) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (188) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (189) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (197) otros -> . SMALLER NOMBRE GREATER
    (198) otros -> . SMALLER DIVISION NOMBRE GREATER
    (199) otros -> . NOMBRE COLON
    (174) breturn -> . empty
    (175) breturn -> . RETURN SEMI
    (176) breturn -> . RETURN NULL SEMI
    (177) breturn -> . RETURN VARIABLE SEMI
    (178) breturn -> . RETURN BOOLEANO SEMI
    (179) breturn -> . breturn RBRACE
    (190) comment -> . COMENTARIOS
    (191) comment -> . DOC_COMENTARIOS
    (236) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (237) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (221) bconcat -> . CADENA CONCAT CADENA SEMI
    (222) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (223) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (224) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (225) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (202) simbolos -> . LPAREN RPAREN
    (203) simbolos -> . LPAREN
    (204) simbolos -> . RPAREN
    (205) simbolos -> . LBRACKET RBRACKET
    (206) simbolos -> . LBRACKET
    (207) simbolos -> . RBRACKET
    (208) simbolos -> . LBRACE RBRACE
    (209) simbolos -> . LBRACE
    (210) simbolos -> . RBRACE instrucciones
    (211) simbolos -> . OPEN_TAG CLOSE_TAG
    (212) simbolos -> . OPEN_TAG
    (213) simbolos -> . CLOSE_TAG
    (251) funcionesCP_semi -> . funcionesCP
    (252) funcionesCP_semi -> . funcionesCP SEMI
    (244) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (253) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (254) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (257) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (258) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (245) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (170) proteccion -> . PUBLIC
    (171) proteccion -> . PRIVATE
    (172) proteccion -> . PROTECTED
    (173) proteccion -> . STATIC
    (49) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (238) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (239) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (240) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (241) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (242) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (161) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (166) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (167) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (165) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (75) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (76) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (184) empty -> .
    (246) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (247) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (248) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (249) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (250) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! BREAK           [ reduce using rule 113 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 184 (empty -> .) ]
  ! BREAK           [ reduce using rule 184 (empty -> .) ]

    bcase                          shift and go to state 16
    cuerpo                         shift and go to state 533
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 499

    (169) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN . SEMI

    SEMI            shift and go to state 534


state 500

    (188) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN . SEMI

    SEMI            shift and go to state 535


state 501

    (189) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN . RPAREN SEMI

    RPAREN          shift and go to state 536


state 502

    (258) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN . SEMI

    SEMI            shift and go to state 537


state 503

    (161) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .

    $end            reduce using rule 161 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 161 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    SEMI            reduce using rule 161 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    BREAK           reduce using rule 161 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)


state 504

    (167) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty . RBRACE
    (174) breturn -> empty .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 538
    SEMI            reduce using rule 174 (breturn -> empty .)

  ! RBRACE          [ reduce using rule 174 (breturn -> empty .) ]


state 505

    (165) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID . LBRACE empty RBRACE

    LBRACE          shift and go to state 539


state 506

    (75) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 540


state 507

    (151) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores . valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 541
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 508

    (153) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores . tipoDato
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 542
    numero                         shift and go to state 106

state 509

    (240) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par . SEMI

    SEMI            shift and go to state 543


state 510

    (185) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .

    $end            reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    AND             reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    OR              reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    XOR             reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 185 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)


state 511

    (243) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .

    $end            reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    AND             reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    OR              reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    XOR             reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 243 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)


state 512

    (236) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 236 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 236 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 236 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    BREAK           reduce using rule 236 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 513

    (182) array_elmnt -> array_elmnt COMMA valor .

    RPAREN          reduce using rule 182 (array_elmnt -> array_elmnt COMMA valor .)
    COMMA           reduce using rule 182 (array_elmnt -> array_elmnt COMMA valor .)


state 514

    (244) addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI .

    $end            reduce using rule 244 (addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 244 (addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 244 (addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI .)
    BREAK           reduce using rule 244 (addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI .)


state 515

    (253) addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI .

    $end            reduce using rule 253 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 253 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 253 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI .)
    BREAK           reduce using rule 253 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI .)


state 516

    (254) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI .

    $end            reduce using rule 254 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 254 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 254 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI .)
    BREAK           reduce using rule 254 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI .)


state 517

    (255) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .

    $end            reduce using rule 255 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    RBRACE          reduce using rule 255 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    SEMI            reduce using rule 255 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    BREAK           reduce using rule 255 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)


state 518

    (256) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .

    $end            reduce using rule 256 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    RBRACE          reduce using rule 256 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    SEMI            reduce using rule 256 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    BREAK           reduce using rule 256 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)


state 519

    (77) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 544


state 520

    (89) condicion -> LPAREN VARIABLE operadores valor RPAREN . operador_logico valor
    (90) condicion -> LPAREN VARIABLE operadores valor RPAREN . condicion_booleana valor
    (128) operador_logico -> . SMALLER
    (129) operador_logico -> . GREATER
    (130) operador_logico -> . IS_SMALLER_OR_EQUAL
    (131) operador_logico -> . IS_GREATER_OR_EQUAL
    (137) condicion_booleana -> . AND
    (138) condicion_booleana -> . OR
    (139) condicion_booleana -> . XOR
    (140) condicion_booleana -> . IS_EQUAL
    (141) condicion_booleana -> . IS_NOT_EQUAL
    (142) condicion_booleana -> . IS_IDENTICAL
    (143) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 364
    GREATER         shift and go to state 365
    IS_SMALLER_OR_EQUAL shift and go to state 366
    IS_GREATER_OR_EQUAL shift and go to state 367
    AND             shift and go to state 339
    OR              shift and go to state 340
    XOR             shift and go to state 341
    IS_EQUAL        shift and go to state 342
    IS_NOT_EQUAL    shift and go to state 343
    IS_IDENTICAL    shift and go to state 344
    IS_NOT_IDENTICAL shift and go to state 345

    operador_logico                shift and go to state 545
    condicion_booleana             shift and go to state 546

state 521

    (110) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .

    $end            reduce using rule 110 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    RBRACE          reduce using rule 110 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 110 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    BREAK           reduce using rule 110 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)


state 522

    (200) comprobacion -> NOMBRE LPAREN valor . RPAREN

    RPAREN          shift and go to state 547


state 523

    (201) comprobacion -> NOMBRE LPAREN VARIABLE . RPAREN
    (185) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 548
    EQUALS          shift and go to state 209


state 524

    (240) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE . operadores operaciones_mat_par SEMI
    (123) operadores -> . SUMA
    (124) operadores -> . RESTA
    (125) operadores -> . MULTIPLICACION
    (126) operadores -> . DIVISION
    (127) operadores -> . MODULO

    SUMA            shift and go to state 202
    RESTA           shift and go to state 203
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 468

state 525

    (96) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN . stc_bloque_def
    (99) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (100) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 281

    stc_bloque_def                 shift and go to state 549

state 526

    (101) for_incr -> VARIABLE SUMA . SUMA
    (105) for_incr -> VARIABLE SUMA . EQUALS numero

    SUMA            shift and go to state 550
    EQUALS          shift and go to state 551


state 527

    (103) for_incr -> VARIABLE RESTA . RESTA
    (106) for_incr -> VARIABLE RESTA . EQUALS numero

    RESTA           shift and go to state 552
    EQUALS          shift and go to state 553


state 528

    (102) for_incr -> SUMA SUMA . VARIABLE

    VARIABLE        shift and go to state 554


state 529

    (104) for_incr -> RESTA RESTA . VARIABLE

    VARIABLE        shift and go to state 555


state 530

    (109) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .

    $end            reduce using rule 109 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 109 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 109 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    BREAK           reduce using rule 109 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)


state 531

    (121) catches -> catches CATCH LPAREN . NOMBRE VARIABLE RPAREN stc_bloque_def

    NOMBRE          shift and go to state 556


state 532

    (115) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .

    $end            reduce using rule 115 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    RBRACE          reduce using rule 115 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    SEMI            reduce using rule 115 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    BREAK           reduce using rule 115 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)


state 533

    (118) innerSwitch -> bcase cuerpo . BREAK SEMI
    (119) innerSwitch -> bcase cuerpo . BREAK SEMI innerSwitch

    BREAK           shift and go to state 557


state 534

    (169) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .

    $end            reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RBRACE          reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    SEMI            reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BREAK           reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RPAREN          reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    COMMA           reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    VARIABLE        reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    LPAREN          reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    CADENA          reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BOOLEANO        reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    ENTERO          reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    DECIMAL         reduce using rule 169 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)


state 535

    (188) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .

    $end            reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    SEMI            reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BREAK           reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    COMMA           reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    CADENA          reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 188 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)


state 536

    (189) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN . SEMI

    SEMI            shift and go to state 558


state 537

    (258) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI .

    $end            reduce using rule 258 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI .)
    RBRACE          reduce using rule 258 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI .)
    SEMI            reduce using rule 258 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI .)
    BREAK           reduce using rule 258 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI .)


state 538

    (167) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .

    $end            reduce using rule 167 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    RBRACE          reduce using rule 167 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    SEMI            reduce using rule 167 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    BREAK           reduce using rule 167 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)


state 539

    (165) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE . empty RBRACE
    (184) empty -> .

    RBRACE          reduce using rule 184 (empty -> .)

    empty                          shift and go to state 559

state 540

    (75) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 75 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    ELSEIF          reduce using rule 75 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 75 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 75 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 75 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 75 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 541

    (151) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .

    SEMI            reduce using rule 151 (operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .)
    RPAREN          reduce using rule 151 (operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .)


state 542

    (153) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato .

    SEMI            reduce using rule 153 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato .)
    RPAREN          reduce using rule 153 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato .)


state 543

    (240) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .

    $end            reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    RBRACE          reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    SEMI            reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    BREAK           reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    RPAREN          reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    COMMA           reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    VARIABLE        reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    LPAREN          reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    CADENA          reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    BOOLEANO        reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    ENTERO          reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    DECIMAL         reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    AND             reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    OR              reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    XOR             reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_EQUAL        reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_NOT_EQUAL    reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_IDENTICAL    reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_NOT_IDENTICAL reduce using rule 240 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)


state 544

    (77) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 77 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 77 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 77 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 77 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 77 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 545

    (89) condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico . valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 560
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 546

    (90) condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana . valor
    (50) valor -> . tipoDato
    (51) valor -> . bcolas
    (52) valor -> . bpila
    (53) tipoDato -> . numero
    (54) tipoDato -> . CADENA
    (55) tipoDato -> . BOOLEANO
    (185) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (243) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    CADENA          shift and go to state 213
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 391
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 561
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 547

    (200) comprobacion -> NOMBRE LPAREN valor RPAREN .

    RPAREN          reduce using rule 200 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    AND             reduce using rule 200 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    OR              reduce using rule 200 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    XOR             reduce using rule 200 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_EQUAL        reduce using rule 200 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_NOT_EQUAL    reduce using rule 200 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_IDENTICAL    reduce using rule 200 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 200 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    SEMI            reduce using rule 200 (comprobacion -> NOMBRE LPAREN valor RPAREN .)


state 548

    (201) comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .

    RPAREN          reduce using rule 201 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 201 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 201 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    XOR             reduce using rule 201 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_EQUAL        reduce using rule 201 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_NOT_EQUAL    reduce using rule 201 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_IDENTICAL    reduce using rule 201 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 201 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    SEMI            reduce using rule 201 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)


state 549

    (96) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .

    $end            reduce using rule 96 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 96 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    SEMI            reduce using rule 96 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    BREAK           reduce using rule 96 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)


state 550

    (101) for_incr -> VARIABLE SUMA SUMA .

    RPAREN          reduce using rule 101 (for_incr -> VARIABLE SUMA SUMA .)


state 551

    (105) for_incr -> VARIABLE SUMA EQUALS . numero
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    numero                         shift and go to state 562

state 552

    (103) for_incr -> VARIABLE RESTA RESTA .

    RPAREN          reduce using rule 103 (for_incr -> VARIABLE RESTA RESTA .)


state 553

    (106) for_incr -> VARIABLE RESTA EQUALS . numero
    (56) numero -> . ENTERO
    (57) numero -> . DECIMAL

    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    numero                         shift and go to state 563

state 554

    (102) for_incr -> SUMA SUMA VARIABLE .

    RPAREN          reduce using rule 102 (for_incr -> SUMA SUMA VARIABLE .)


state 555

    (104) for_incr -> RESTA RESTA VARIABLE .

    RPAREN          reduce using rule 104 (for_incr -> RESTA RESTA VARIABLE .)


state 556

    (121) catches -> catches CATCH LPAREN NOMBRE . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 564


state 557

    (118) innerSwitch -> bcase cuerpo BREAK . SEMI
    (119) innerSwitch -> bcase cuerpo BREAK . SEMI innerSwitch

    SEMI            shift and go to state 565


state 558

    (189) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .

    $end            reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    SEMI            reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BREAK           reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    COMMA           reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    CADENA          reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 189 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)


state 559

    (165) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty . RBRACE

    RBRACE          shift and go to state 566


state 560

    (89) condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .

    RPAREN          reduce using rule 89 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    AND             reduce using rule 89 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    OR              reduce using rule 89 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    XOR             reduce using rule 89 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_EQUAL        reduce using rule 89 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 89 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_IDENTICAL    reduce using rule 89 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 89 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    SEMI            reduce using rule 89 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)


state 561

    (90) condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .

    RPAREN          reduce using rule 90 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    AND             reduce using rule 90 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    OR              reduce using rule 90 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    XOR             reduce using rule 90 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_EQUAL        reduce using rule 90 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 90 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 90 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 90 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    SEMI            reduce using rule 90 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)


state 562

    (105) for_incr -> VARIABLE SUMA EQUALS numero .

    RPAREN          reduce using rule 105 (for_incr -> VARIABLE SUMA EQUALS numero .)


state 563

    (106) for_incr -> VARIABLE RESTA EQUALS numero .

    RPAREN          reduce using rule 106 (for_incr -> VARIABLE RESTA EQUALS numero .)


state 564

    (121) catches -> catches CATCH LPAREN NOMBRE VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 567


state 565

    (118) innerSwitch -> bcase cuerpo BREAK SEMI .
    (119) innerSwitch -> bcase cuerpo BREAK SEMI . innerSwitch
    (118) innerSwitch -> . bcase cuerpo BREAK SEMI
    (119) innerSwitch -> . bcase cuerpo BREAK SEMI innerSwitch
    (116) bcase -> . CASE ENTERO COLON
    (117) bcase -> . CASE CADENA COLON

    RBRACE          reduce using rule 118 (innerSwitch -> bcase cuerpo BREAK SEMI .)
    CASE            shift and go to state 66

    bcase                          shift and go to state 498
    innerSwitch                    shift and go to state 568

state 566

    (165) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .

    $end            reduce using rule 165 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    RBRACE          reduce using rule 165 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    SEMI            reduce using rule 165 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    BREAK           reduce using rule 165 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)


state 567

    (121) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN . stc_bloque_def
    (99) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (100) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 281

    stc_bloque_def                 shift and go to state 569

state 568

    (119) innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch .

    RBRACE          reduce using rule 119 (innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch .)


state 569

    (121) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .

    CATCH           reduce using rule 121 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    $end            reduce using rule 121 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 121 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 121 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    BREAK           reduce using rule 121 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACE in state 0 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 25 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 59 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 82 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 173 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 173 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 270 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 270 resolved as shift
WARNING: shift/reduce conflict for AND in state 274 resolved as shift
WARNING: shift/reduce conflict for OR in state 274 resolved as shift
WARNING: shift/reduce conflict for XOR in state 274 resolved as shift
WARNING: shift/reduce conflict for IS_EQUAL in state 274 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_EQUAL in state 274 resolved as shift
WARNING: shift/reduce conflict for IS_IDENTICAL in state 274 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_IDENTICAL in state 274 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 281 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 281 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 297 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 349 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 375 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 394 resolved as shift
WARNING: shift/reduce conflict for AND in state 432 resolved as shift
WARNING: shift/reduce conflict for OR in state 432 resolved as shift
WARNING: shift/reduce conflict for XOR in state 432 resolved as shift
WARNING: shift/reduce conflict for IS_EQUAL in state 432 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_EQUAL in state 432 resolved as shift
WARNING: shift/reduce conflict for IS_IDENTICAL in state 432 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_IDENTICAL in state 432 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 446 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 446 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 446 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 446 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 458 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 460 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 460 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 483 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 483 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 486 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 487 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 498 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 498 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 498 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 504 resolved as shift
WARNING: reduce/reduce conflict in state 0 resolved using rule (bwhile -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 375 resolved using rule (cuerpo -> breturn)
WARNING: rejected rule (stc_bloque -> breturn) in state 375
WARNING: reduce/reduce conflict in state 446 resolved using rule (bwhile -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 446
WARNING: reduce/reduce conflict in state 458 resolved using rule (bwhile -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 458
