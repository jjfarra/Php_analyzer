Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CLOSE_TAG
    OPEN_TAG

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> imprimir
Rule 2     cuerpo -> asignacion
Rule 3     cuerpo -> funciones
Rule 4     cuerpo -> constante
Rule 5     cuerpo -> lectura
Rule 6     cuerpo -> bwhile
Rule 7     cuerpo -> bdo
Rule 8     cuerpo -> bfor
Rule 9     cuerpo -> bforeach
Rule 10    cuerpo -> btry
Rule 11    cuerpo -> repiteCondicional
Rule 12    cuerpo -> bswitch
Rule 13    cuerpo -> bcase
Rule 14    cuerpo -> bgoto
Rule 15    cuerpo -> bcolas
Rule 16    cuerpo -> bpila
Rule 17    cuerpo -> bcortes
Rule 18    cuerpo -> brand
Rule 19    cuerpo -> escribir
Rule 20    cuerpo -> btrim
Rule 21    cuerpo -> otros
Rule 22    cuerpo -> breturn
Rule 23    cuerpo -> comment
Rule 24    cuerpo -> casting
Rule 25    cuerpo -> bconcat
Rule 26    asignacion -> VARIABLE EQUALS valor SEMI
Rule 27    asignacion -> VAR asignacion
Rule 28    asignacion -> proteccion asignacion
Rule 29    asignacion -> VARIABLE EQUALS brand
Rule 30    asignacion -> VARIABLE EQUALS escribir
Rule 31    asignacion -> VARIABLE EQUALS btrim
Rule 32    asignacion -> VARIABLE EQUALS lectura
Rule 33    asignacion -> VARIABLE EQUALS bconcat
Rule 34    asignacion -> asignacion_array
Rule 35    asignacion -> VARIABLE EQUALS operaciones_mat SEMI
Rule 36    asignacion -> aumentoCasting
Rule 37    asignacion_array -> VARIABLE EQUALS array_def SEMI
Rule 38    constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
Rule 39    constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
Rule 40    valor -> tipoDato
Rule 41    valor -> bcolas
Rule 42    valor -> bpila
Rule 43    tipoDato -> numero
Rule 44    tipoDato -> CADENA
Rule 45    tipoDato -> BOOLEANO
Rule 46    numero -> ENTERO
Rule 47    numero -> DECIMAL
Rule 48    imprimir -> ECHO valor SEMI
Rule 49    imprimir -> PRINT valor SEMI
Rule 50    imprimir -> PRINT LPAREN valor RPAREN SEMI
Rule 51    imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
Rule 52    imprimir -> ECHO bconcat
Rule 53    imprimir -> ECHO operaciones_mat SEMI
Rule 54    imprimir -> PRINT operaciones_mat SEMI
Rule 55    condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 56    condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 57    condicion_else -> ELSE LBRACE cuerpo RBRACE
Rule 58    condicion_ifelse -> condicion_if
Rule 59    condicion_ifelse -> condicion_if condicion_else
Rule 60    condicion_ifelse -> condicion_if condicion_elseif
Rule 61    condicion_ifelse -> condicion_if condicion_elseif condicion_else
Rule 62    repiteCondicional -> condicion_ifelse
Rule 63    repiteCondicional -> condicion_ifelse repiteCondicional
Rule 64    condicion -> VARIABLE operador_logico VARIABLE
Rule 65    condicion -> valor operador_logico valor
Rule 66    condicion -> VARIABLE operador_logico valor
Rule 67    condicion -> VARIABLE condicion_booleana VARIABLE
Rule 68    condicion -> valor condicion_booleana valor
Rule 69    condicion -> VARIABLE condicion_booleana valor
Rule 70    bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
Rule 71    stc_bloque -> stc_bloque SEMI cuerpo
Rule 72    stc_bloque -> breturn
Rule 73    stc_bloque_def -> LBRACE stc_bloque RBRACE
Rule 74    for_incr -> VARIABLE SUMA SUMA
Rule 75    for_incr -> SUMA SUMA VARIABLE
Rule 76    for_incr -> VARIABLE RESTA RESTA
Rule 77    for_incr -> RESTA RESTA VARIABLE
Rule 78    for_incr -> VARIABLE SUMA EQUALS numero
Rule 79    for_incr -> VARIABLE RESTA EQUALS numero
Rule 80    bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
Rule 81    bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
Rule 82    bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque
Rule 83    bdo -> DO LBRACE cuerpo RBRACE bwhile
Rule 84    bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
Rule 85    bcase -> CASE ENTERO COLON
Rule 86    innerSwitch -> bcase cuerpo BREAK SEMI
Rule 87    innerSwitch -> CASE ENTERO COLON cuerpo BREAK SEMI innerSwitch
Rule 88    btry -> TRY LBRACE stc_bloque_def RBRACE catches
Rule 89    catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
Rule 90    catches -> empty
Rule 91    operadores -> SUMA
Rule 92    operadores -> RESTA
Rule 93    operadores -> MULTIPLICACION
Rule 94    operadores -> DIVISION
Rule 95    operadores -> MODULO
Rule 96    operador_logico -> SMALLER
Rule 97    operador_logico -> GREATER
Rule 98    operador_logico -> IS_SMALLER_OR_EQUAL
Rule 99    operador_logico -> IS_GREATER_OR_EQUAL
Rule 100   incrementos_mat -> MINUS_EQUAL
Rule 101   incrementos_mat -> MOD_EQUAL
Rule 102   incrementos_mat -> MUL_EQUAL
Rule 103   incrementos_mat -> PLUS_EQUAL
Rule 104   incrementos_mat -> DIV_EQUAL
Rule 105   condicion_booleana -> AND
Rule 106   condicion_booleana -> OR
Rule 107   condicion_booleana -> XOR
Rule 108   condicion_booleana -> IS_EQUAL
Rule 109   condicion_booleana -> IS_NOT_EQUAL
Rule 110   condicion_booleana -> IS_IDENTICAL
Rule 111   condicion_booleana -> IS_NOT_IDENTICAL
Rule 112   operaciones_mat -> valor operadores valor
Rule 113   operaciones_mat -> valor operadores operaciones_mat
Rule 114   operaciones_mat -> VARIABLE operadores VARIABLE
Rule 115   operaciones_mat -> operaciones_mat_par
Rule 116   operaciones_mat_par -> LPAREN valor operadores valor RPAREN
Rule 117   operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN
Rule 118   funciones -> funcion_nparams
Rule 119   funciones -> proteccion funcion_nparams
Rule 120   funciones -> funcion_blank
Rule 121   funciones -> proteccion funcion_blank
Rule 122   funciones -> funcion_void
Rule 123   param -> VARIABLE
Rule 124   param -> asignacion
Rule 125   funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
Rule 126   params_list -> params_list COMMA param
Rule 127   params_list -> param
Rule 128   funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
Rule 129   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
Rule 130   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
Rule 131   brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
Rule 132   proteccion -> PUBLIC
Rule 133   proteccion -> PRIVATE
Rule 134   proteccion -> PROTECTED
Rule 135   proteccion -> STATIC
Rule 136   breturn -> empty
Rule 137   breturn -> RETURN SEMI
Rule 138   breturn -> RETURN NULL SEMI
Rule 139   breturn -> RETURN VARIABLE SEMI
Rule 140   breturn -> RETURN BOOLEANO SEMI
Rule 141   array_def -> ARRAY LPAREN RPAREN
Rule 142   array_def -> ARRAY LPAREN array_elmnt RPAREN
Rule 143   array_elmnt -> array_elmnt COMMA valor
Rule 144   array_elmnt -> valor
Rule 145   empty -> <empty>
Rule 146   bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
Rule 147   bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
Rule 148   lectura -> READLINE LPAREN CADENA RPAREN SEMI
Rule 149   lectura -> READLINE LPAREN RPAREN SEMI
Rule 150   escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
Rule 151   btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
Rule 152   comment -> COMENTARIOS
Rule 153   comment -> DOC_COMENTARIOS
Rule 154   bgoto -> GOTO NOMBRE SEMI
Rule 155   bcortes -> EXIT SEMI
Rule 156   bcortes -> BREAK SEMI
Rule 157   bcortes -> DEFAULT SEMI
Rule 158   bcortes -> CONTINUE SEMI
Rule 159   otros -> SMALLER NOMBRE GREATER
Rule 160   bconcat -> CADENA CONCAT CADENA SEMI
Rule 161   bconcat -> VARIABLE CONCAT VARIABLE SEMI
Rule 162   bconcat -> VARIABLE CONCAT CADENA SEMI
Rule 163   bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI
Rule 164   bconcat -> CADENA CONCAT_EQUAL CADENA SEMI
Rule 165   tiposCast -> STRING
Rule 166   tiposCast -> BOOL
Rule 167   tiposCast -> BOOLEAN
Rule 168   tiposCast -> DOUBLE
Rule 169   tiposCast -> FLOAT
Rule 170   tiposCast -> ARRAY
Rule 171   tiposCast -> OBJECT
Rule 172   tiposCast -> INTEGER
Rule 173   tiposCast -> INT
Rule 174   casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 175   casting -> LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 176   aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI
Rule 177   aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

Terminals, with rules where they appear

AND                  : 105
ARRAY                : 39 141 142 170
AS                   : 80
BOOL                 : 166
BOOLEAN              : 167
BOOLEANO             : 45 140
BREAK                : 86 87 156
CADENA               : 38 44 148 150 160 160 162 163 164 164
CASE                 : 85 87
CATCH                : 89
CLOSE_TAG            : 
COLON                : 82 85 87 128
COMENTARIOS          : 152
COMMA                : 38 39 126 131 143 150
CONCAT               : 160 161 162
CONCAT_EQUAL         : 163 164
CONTINUE             : 158
DECIMAL              : 47
DEFAULT              : 157
DEFINE               : 38 39
DIVISION             : 94
DIV_EQUAL            : 104
DO                   : 83
DOC_COMENTARIOS      : 153
DOUBLE               : 168
ECHO                 : 48 51 52 53
ELSE                 : 57
ELSEIF               : 56
ENTERO               : 46 51 85 87 131 131
EQUALS               : 26 29 30 31 32 33 35 37 78 79 146 147 174 177
EXIT                 : 155
FLOAT                : 169
FOR                  : 70
FOREACH              : 80
FUNCTION             : 125 128 129 130
FWRITE               : 150
GOTO                 : 154
GREATER              : 97 159
IF                   : 55
INT                  : 173
INTEGER              : 172
IS_EQUAL             : 108
IS_GREATER_OR_EQUAL  : 99
IS_IDENTICAL         : 110
IS_NOT_EQUAL         : 109
IS_NOT_IDENTICAL     : 111
IS_SMALLER_OR_EQUAL  : 98
LBRACE               : 55 56 57 73 81 83 84 88 128 130
LBRACKET             : 51
LPAREN               : 38 39 50 55 56 70 80 81 82 84 89 116 117 125 128 129 130 131 141 142 146 147 148 149 150 151 151 174 175
MINUS_EQUAL          : 100
MODULO               : 95
MOD_EQUAL            : 101
MULTIPLICACION       : 93
MUL_EQUAL            : 102
NEW                  : 146 147
NOMBRE               : 39 51 89 125 128 129 130 150 151 151 154 159
NULL                 : 138
OBJECT               : 171
OPEN_TAG             : 
OR                   : 106
PLUS_EQUAL           : 103
PRINT                : 49 50 54
PRIVATE              : 133
PROTECTED            : 134
PUBLIC               : 132
RAND                 : 131
RBRACE               : 55 56 57 73 81 83 84 88 128 130
RBRACKET             : 51
READLINE             : 148 149
RESTA                : 76 76 77 77 79 92
RETURN               : 137 138 139 140
RPAREN               : 38 39 50 55 56 70 80 81 82 84 89 116 117 125 128 129 130 131 141 142 146 147 148 149 150 151 151 174 175
SEMI                 : 26 35 37 38 39 48 49 50 51 53 54 70 71 84 86 87 131 137 138 139 140 146 147 148 149 150 151 154 155 156 157 158 160 161 162 163 164 174 175 176 177
SMALLER              : 96 159
SPLQUEUE             : 146
SPLSTACK             : 147
STATIC               : 135
STRING               : 165
SUMA                 : 74 74 75 75 78 91
SWITCH               : 84
TRIM                 : 151
TRY                  : 88
VAR                  : 27
VARIABLE             : 26 29 30 31 32 33 35 37 64 64 66 67 67 69 74 75 76 77 78 79 80 80 84 89 114 114 123 139 146 147 161 161 162 163 174 174 175 176 177 177
VOID                 : 128
WHILE                : 81 82
XOR                  : 107
error                : 

Nonterminals, with rules where they appear

array_def            : 37
array_elmnt          : 142 143
asignacion           : 2 27 28 70 124
asignacion_array     : 34
aumentoCasting       : 36
bcase                : 13 86
bcolas               : 15 41
bconcat              : 25 33 52
bcortes              : 17
bdo                  : 7
bfor                 : 8
bforeach             : 9
bgoto                : 14
bpila                : 16 42
brand                : 18 29
breturn              : 22 72
bswitch              : 12
btrim                : 20 31
btry                 : 10
bwhile               : 6 83
casting              : 24
catches              : 88 89
comment              : 23
condicion            : 55 56 70 81 82
condicion_booleana   : 67 68 69
condicion_else       : 59 61
condicion_elseif     : 60 61
condicion_if         : 58 59 60 61
condicion_ifelse     : 62 63
constante            : 4
cuerpo               : 55 56 57 71 83 84 86 87 0
empty                : 90 128 130 136
escribir             : 19 30
for_incr             : 70
funcion_blank        : 120 121
funcion_nparams      : 118 119
funcion_void         : 122
funciones            : 3
imprimir             : 1
incrementos_mat      : 176
innerSwitch          : 87
lectura              : 5 32
numero               : 43 78 79
operaciones_mat      : 35 53 54 113
operaciones_mat_par  : 115 117
operador_logico      : 64 65 66
operadores           : 112 113 114 116 117 177
otros                : 21
param                : 126 127
params_list          : 125 126
proteccion           : 28 119 121
repiteCondicional    : 11 63
stc_bloque           : 71 73 81 82
stc_bloque_def       : 70 80 88 89 125 129
tipoDato             : 40 176 177
tiposCast            : 174 175
valor                : 26 38 48 49 50 65 65 66 68 68 69 112 112 113 116 116 117 143 144

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (48) imprimir -> . ECHO valor SEMI
    (49) imprimir -> . PRINT valor SEMI
    (50) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (51) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (52) imprimir -> . ECHO bconcat
    (53) imprimir -> . ECHO operaciones_mat SEMI
    (54) imprimir -> . PRINT operaciones_mat SEMI
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (118) funciones -> . funcion_nparams
    (119) funciones -> . proteccion funcion_nparams
    (120) funciones -> . funcion_blank
    (121) funciones -> . proteccion funcion_blank
    (122) funciones -> . funcion_void
    (38) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (39) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (148) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (149) lectura -> . READLINE LPAREN RPAREN SEMI
    (81) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (83) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (70) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (80) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (88) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (62) repiteCondicional -> . condicion_ifelse
    (63) repiteCondicional -> . condicion_ifelse repiteCondicional
    (84) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (85) bcase -> . CASE ENTERO COLON
    (154) bgoto -> . GOTO NOMBRE SEMI
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (155) bcortes -> . EXIT SEMI
    (156) bcortes -> . BREAK SEMI
    (157) bcortes -> . DEFAULT SEMI
    (158) bcortes -> . CONTINUE SEMI
    (131) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (150) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (151) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (159) otros -> . SMALLER NOMBRE GREATER
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI
    (152) comment -> . COMENTARIOS
    (153) comment -> . DOC_COMENTARIOS
    (174) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (160) bconcat -> . CADENA CONCAT CADENA SEMI
    (161) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (162) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (163) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (164) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (125) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (128) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (58) condicion_ifelse -> . condicion_if
    (59) condicion_ifelse -> . condicion_if condicion_else
    (60) condicion_ifelse -> . condicion_if condicion_elseif
    (61) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (145) empty -> .
    (55) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VARIABLE        shift and go to state 30
    VAR             shift and go to state 31
    DEFINE          shift and go to state 38
    READLINE        shift and go to state 40
    WHILE           shift and go to state 41
    DO              shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    TRY             shift and go to state 45
    SWITCH          shift and go to state 47
    CASE            shift and go to state 48
    GOTO            shift and go to state 49
    EXIT            shift and go to state 50
    BREAK           shift and go to state 51
    DEFAULT         shift and go to state 52
    CONTINUE        shift and go to state 53
    RAND            shift and go to state 54
    FWRITE          shift and go to state 55
    TRIM            shift and go to state 56
    SMALLER         shift and go to state 57
    RETURN          shift and go to state 59
    COMENTARIOS     shift and go to state 60
    DOC_COMENTARIOS shift and go to state 61
    LPAREN          shift and go to state 29
    CADENA          shift and go to state 39
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65
    FUNCTION        shift and go to state 66
    $end            reduce using rule 145 (empty -> .)
    IF              shift and go to state 68

    cuerpo                         shift and go to state 1
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    proteccion                     shift and go to state 32
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34
    funcion_nparams                shift and go to state 35
    funcion_blank                  shift and go to state 36
    funcion_void                   shift and go to state 37
    condicion_ifelse               shift and go to state 46
    empty                          shift and go to state 58
    condicion_if                   shift and go to state 67

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> imprimir .

    $end            reduce using rule 1 (cuerpo -> imprimir .)
    RBRACE          reduce using rule 1 (cuerpo -> imprimir .)
    SEMI            reduce using rule 1 (cuerpo -> imprimir .)


state 3

    (2) cuerpo -> asignacion .

    $end            reduce using rule 2 (cuerpo -> asignacion .)
    RBRACE          reduce using rule 2 (cuerpo -> asignacion .)
    SEMI            reduce using rule 2 (cuerpo -> asignacion .)


state 4

    (3) cuerpo -> funciones .

    $end            reduce using rule 3 (cuerpo -> funciones .)
    RBRACE          reduce using rule 3 (cuerpo -> funciones .)
    SEMI            reduce using rule 3 (cuerpo -> funciones .)


state 5

    (4) cuerpo -> constante .

    $end            reduce using rule 4 (cuerpo -> constante .)
    RBRACE          reduce using rule 4 (cuerpo -> constante .)
    SEMI            reduce using rule 4 (cuerpo -> constante .)


state 6

    (5) cuerpo -> lectura .

    $end            reduce using rule 5 (cuerpo -> lectura .)
    RBRACE          reduce using rule 5 (cuerpo -> lectura .)
    SEMI            reduce using rule 5 (cuerpo -> lectura .)


state 7

    (6) cuerpo -> bwhile .

    $end            reduce using rule 6 (cuerpo -> bwhile .)
    RBRACE          reduce using rule 6 (cuerpo -> bwhile .)
    SEMI            reduce using rule 6 (cuerpo -> bwhile .)


state 8

    (7) cuerpo -> bdo .

    $end            reduce using rule 7 (cuerpo -> bdo .)
    RBRACE          reduce using rule 7 (cuerpo -> bdo .)
    SEMI            reduce using rule 7 (cuerpo -> bdo .)


state 9

    (8) cuerpo -> bfor .

    $end            reduce using rule 8 (cuerpo -> bfor .)
    RBRACE          reduce using rule 8 (cuerpo -> bfor .)
    SEMI            reduce using rule 8 (cuerpo -> bfor .)


state 10

    (9) cuerpo -> bforeach .

    $end            reduce using rule 9 (cuerpo -> bforeach .)
    RBRACE          reduce using rule 9 (cuerpo -> bforeach .)
    SEMI            reduce using rule 9 (cuerpo -> bforeach .)


state 11

    (10) cuerpo -> btry .

    $end            reduce using rule 10 (cuerpo -> btry .)
    RBRACE          reduce using rule 10 (cuerpo -> btry .)
    SEMI            reduce using rule 10 (cuerpo -> btry .)


state 12

    (11) cuerpo -> repiteCondicional .

    $end            reduce using rule 11 (cuerpo -> repiteCondicional .)
    RBRACE          reduce using rule 11 (cuerpo -> repiteCondicional .)
    SEMI            reduce using rule 11 (cuerpo -> repiteCondicional .)


state 13

    (12) cuerpo -> bswitch .

    $end            reduce using rule 12 (cuerpo -> bswitch .)
    RBRACE          reduce using rule 12 (cuerpo -> bswitch .)
    SEMI            reduce using rule 12 (cuerpo -> bswitch .)


state 14

    (13) cuerpo -> bcase .

    $end            reduce using rule 13 (cuerpo -> bcase .)
    RBRACE          reduce using rule 13 (cuerpo -> bcase .)
    SEMI            reduce using rule 13 (cuerpo -> bcase .)


state 15

    (14) cuerpo -> bgoto .

    $end            reduce using rule 14 (cuerpo -> bgoto .)
    RBRACE          reduce using rule 14 (cuerpo -> bgoto .)
    SEMI            reduce using rule 14 (cuerpo -> bgoto .)


state 16

    (15) cuerpo -> bcolas .

    $end            reduce using rule 15 (cuerpo -> bcolas .)
    RBRACE          reduce using rule 15 (cuerpo -> bcolas .)
    SEMI            reduce using rule 15 (cuerpo -> bcolas .)


state 17

    (16) cuerpo -> bpila .

    $end            reduce using rule 16 (cuerpo -> bpila .)
    RBRACE          reduce using rule 16 (cuerpo -> bpila .)
    SEMI            reduce using rule 16 (cuerpo -> bpila .)


state 18

    (17) cuerpo -> bcortes .

    $end            reduce using rule 17 (cuerpo -> bcortes .)
    RBRACE          reduce using rule 17 (cuerpo -> bcortes .)
    SEMI            reduce using rule 17 (cuerpo -> bcortes .)


state 19

    (18) cuerpo -> brand .

    $end            reduce using rule 18 (cuerpo -> brand .)
    RBRACE          reduce using rule 18 (cuerpo -> brand .)
    SEMI            reduce using rule 18 (cuerpo -> brand .)


state 20

    (19) cuerpo -> escribir .

    $end            reduce using rule 19 (cuerpo -> escribir .)
    RBRACE          reduce using rule 19 (cuerpo -> escribir .)
    SEMI            reduce using rule 19 (cuerpo -> escribir .)


state 21

    (20) cuerpo -> btrim .

    $end            reduce using rule 20 (cuerpo -> btrim .)
    RBRACE          reduce using rule 20 (cuerpo -> btrim .)
    SEMI            reduce using rule 20 (cuerpo -> btrim .)


state 22

    (21) cuerpo -> otros .

    $end            reduce using rule 21 (cuerpo -> otros .)
    RBRACE          reduce using rule 21 (cuerpo -> otros .)
    SEMI            reduce using rule 21 (cuerpo -> otros .)


state 23

    (22) cuerpo -> breturn .

    $end            reduce using rule 22 (cuerpo -> breturn .)
    RBRACE          reduce using rule 22 (cuerpo -> breturn .)
    SEMI            reduce using rule 22 (cuerpo -> breturn .)


state 24

    (23) cuerpo -> comment .

    $end            reduce using rule 23 (cuerpo -> comment .)
    RBRACE          reduce using rule 23 (cuerpo -> comment .)
    SEMI            reduce using rule 23 (cuerpo -> comment .)


state 25

    (24) cuerpo -> casting .

    $end            reduce using rule 24 (cuerpo -> casting .)
    RBRACE          reduce using rule 24 (cuerpo -> casting .)
    SEMI            reduce using rule 24 (cuerpo -> casting .)


state 26

    (25) cuerpo -> bconcat .

    $end            reduce using rule 25 (cuerpo -> bconcat .)
    RBRACE          reduce using rule 25 (cuerpo -> bconcat .)
    SEMI            reduce using rule 25 (cuerpo -> bconcat .)


state 27

    (48) imprimir -> ECHO . valor SEMI
    (51) imprimir -> ECHO . NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (52) imprimir -> ECHO . bconcat
    (53) imprimir -> ECHO . operaciones_mat SEMI
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (160) bconcat -> . CADENA CONCAT CADENA SEMI
    (161) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (162) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (163) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (164) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (112) operaciones_mat -> . valor operadores valor
    (113) operaciones_mat -> . valor operadores operaciones_mat
    (114) operaciones_mat -> . VARIABLE operadores VARIABLE
    (115) operaciones_mat -> . operaciones_mat_par
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (116) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (117) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    NOMBRE          shift and go to state 70
    CADENA          shift and go to state 77
    VARIABLE        shift and go to state 78
    BOOLEANO        shift and go to state 81
    LPAREN          shift and go to state 82
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 69
    bconcat                        shift and go to state 72
    operaciones_mat                shift and go to state 73
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    operaciones_mat_par            shift and go to state 79
    numero                         shift and go to state 80

state 28

    (49) imprimir -> PRINT . valor SEMI
    (50) imprimir -> PRINT . LPAREN valor RPAREN SEMI
    (54) imprimir -> PRINT . operaciones_mat SEMI
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (112) operaciones_mat -> . valor operadores valor
    (113) operaciones_mat -> . valor operadores operaciones_mat
    (114) operaciones_mat -> . VARIABLE operadores VARIABLE
    (115) operaciones_mat -> . operaciones_mat_par
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (116) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (117) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    LPAREN          shift and go to state 85
    VARIABLE        shift and go to state 87
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 84
    operaciones_mat                shift and go to state 86
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    operaciones_mat_par            shift and go to state 79
    numero                         shift and go to state 80

state 29

    (175) casting -> LPAREN . tiposCast RPAREN VARIABLE SEMI
    (165) tiposCast -> . STRING
    (166) tiposCast -> . BOOL
    (167) tiposCast -> . BOOLEAN
    (168) tiposCast -> . DOUBLE
    (169) tiposCast -> . FLOAT
    (170) tiposCast -> . ARRAY
    (171) tiposCast -> . OBJECT
    (172) tiposCast -> . INTEGER
    (173) tiposCast -> . INT

    STRING          shift and go to state 90
    BOOL            shift and go to state 91
    BOOLEAN         shift and go to state 92
    DOUBLE          shift and go to state 93
    FLOAT           shift and go to state 94
    ARRAY           shift and go to state 95
    OBJECT          shift and go to state 96
    INTEGER         shift and go to state 97
    INT             shift and go to state 98

    tiposCast                      shift and go to state 89

state 30

    (26) asignacion -> VARIABLE . EQUALS valor SEMI
    (29) asignacion -> VARIABLE . EQUALS brand
    (30) asignacion -> VARIABLE . EQUALS escribir
    (31) asignacion -> VARIABLE . EQUALS btrim
    (32) asignacion -> VARIABLE . EQUALS lectura
    (33) asignacion -> VARIABLE . EQUALS bconcat
    (35) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (146) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (174) casting -> VARIABLE . EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (161) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (162) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (163) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (37) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (176) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (100) incrementos_mat -> . MINUS_EQUAL
    (101) incrementos_mat -> . MOD_EQUAL
    (102) incrementos_mat -> . MUL_EQUAL
    (103) incrementos_mat -> . PLUS_EQUAL
    (104) incrementos_mat -> . DIV_EQUAL

    EQUALS          shift and go to state 99
    CONCAT          shift and go to state 100
    CONCAT_EQUAL    shift and go to state 101
    MINUS_EQUAL     shift and go to state 103
    MOD_EQUAL       shift and go to state 104
    MUL_EQUAL       shift and go to state 105
    PLUS_EQUAL      shift and go to state 106
    DIV_EQUAL       shift and go to state 107

    incrementos_mat                shift and go to state 102

state 31

    (27) asignacion -> VAR . asignacion
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 109
    VAR             shift and go to state 31
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65

    asignacion                     shift and go to state 108
    proteccion                     shift and go to state 110
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34

state 32

    (28) asignacion -> proteccion . asignacion
    (119) funciones -> proteccion . funcion_nparams
    (121) funciones -> proteccion . funcion_blank
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (125) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 109
    VAR             shift and go to state 31
    FUNCTION        shift and go to state 114
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65

    proteccion                     shift and go to state 110
    asignacion                     shift and go to state 111
    funcion_nparams                shift and go to state 112
    funcion_blank                  shift and go to state 113
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34

state 33

    (34) asignacion -> asignacion_array .

    $end            reduce using rule 34 (asignacion -> asignacion_array .)
    RBRACE          reduce using rule 34 (asignacion -> asignacion_array .)
    SEMI            reduce using rule 34 (asignacion -> asignacion_array .)
    VARIABLE        reduce using rule 34 (asignacion -> asignacion_array .)
    CADENA          reduce using rule 34 (asignacion -> asignacion_array .)
    BOOLEANO        reduce using rule 34 (asignacion -> asignacion_array .)
    ENTERO          reduce using rule 34 (asignacion -> asignacion_array .)
    DECIMAL         reduce using rule 34 (asignacion -> asignacion_array .)
    RPAREN          reduce using rule 34 (asignacion -> asignacion_array .)
    COMMA           reduce using rule 34 (asignacion -> asignacion_array .)


state 34

    (36) asignacion -> aumentoCasting .

    $end            reduce using rule 36 (asignacion -> aumentoCasting .)
    RBRACE          reduce using rule 36 (asignacion -> aumentoCasting .)
    SEMI            reduce using rule 36 (asignacion -> aumentoCasting .)
    VARIABLE        reduce using rule 36 (asignacion -> aumentoCasting .)
    CADENA          reduce using rule 36 (asignacion -> aumentoCasting .)
    BOOLEANO        reduce using rule 36 (asignacion -> aumentoCasting .)
    ENTERO          reduce using rule 36 (asignacion -> aumentoCasting .)
    DECIMAL         reduce using rule 36 (asignacion -> aumentoCasting .)
    RPAREN          reduce using rule 36 (asignacion -> aumentoCasting .)
    COMMA           reduce using rule 36 (asignacion -> aumentoCasting .)


state 35

    (118) funciones -> funcion_nparams .

    $end            reduce using rule 118 (funciones -> funcion_nparams .)
    RBRACE          reduce using rule 118 (funciones -> funcion_nparams .)
    SEMI            reduce using rule 118 (funciones -> funcion_nparams .)


state 36

    (120) funciones -> funcion_blank .

    $end            reduce using rule 120 (funciones -> funcion_blank .)
    RBRACE          reduce using rule 120 (funciones -> funcion_blank .)
    SEMI            reduce using rule 120 (funciones -> funcion_blank .)


state 37

    (122) funciones -> funcion_void .

    $end            reduce using rule 122 (funciones -> funcion_void .)
    RBRACE          reduce using rule 122 (funciones -> funcion_void .)
    SEMI            reduce using rule 122 (funciones -> funcion_void .)


state 38

    (38) constante -> DEFINE . LPAREN CADENA COMMA valor RPAREN SEMI
    (39) constante -> DEFINE . LPAREN NOMBRE COMMA ARRAY RPAREN SEMI

    LPAREN          shift and go to state 115


state 39

    (160) bconcat -> CADENA . CONCAT CADENA SEMI
    (164) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI

    CONCAT          shift and go to state 116
    CONCAT_EQUAL    shift and go to state 117


state 40

    (148) lectura -> READLINE . LPAREN CADENA RPAREN SEMI
    (149) lectura -> READLINE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 118


state 41

    (81) bwhile -> WHILE . LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> WHILE . LPAREN condicion RPAREN COLON stc_bloque

    LPAREN          shift and go to state 119


state 42

    (83) bdo -> DO . LBRACE cuerpo RBRACE bwhile

    LBRACE          shift and go to state 120


state 43

    (70) bfor -> FOR . LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def

    LPAREN          shift and go to state 121


state 44

    (80) bforeach -> FOREACH . LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 122


state 45

    (88) btry -> TRY . LBRACE stc_bloque_def RBRACE catches

    LBRACE          shift and go to state 123


state 46

    (62) repiteCondicional -> condicion_ifelse .
    (63) repiteCondicional -> condicion_ifelse . repiteCondicional
    (62) repiteCondicional -> . condicion_ifelse
    (63) repiteCondicional -> . condicion_ifelse repiteCondicional
    (58) condicion_ifelse -> . condicion_if
    (59) condicion_ifelse -> . condicion_if condicion_else
    (60) condicion_ifelse -> . condicion_if condicion_elseif
    (61) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (55) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    $end            reduce using rule 62 (repiteCondicional -> condicion_ifelse .)
    RBRACE          reduce using rule 62 (repiteCondicional -> condicion_ifelse .)
    SEMI            reduce using rule 62 (repiteCondicional -> condicion_ifelse .)
    IF              shift and go to state 68

    condicion_ifelse               shift and go to state 46
    repiteCondicional              shift and go to state 124
    condicion_if                   shift and go to state 67

state 47

    (84) bswitch -> SWITCH . LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE

    LPAREN          shift and go to state 125


state 48

    (85) bcase -> CASE . ENTERO COLON

    ENTERO          shift and go to state 126


state 49

    (154) bgoto -> GOTO . NOMBRE SEMI

    NOMBRE          shift and go to state 127


state 50

    (155) bcortes -> EXIT . SEMI

    SEMI            shift and go to state 128


state 51

    (156) bcortes -> BREAK . SEMI

    SEMI            shift and go to state 129


state 52

    (157) bcortes -> DEFAULT . SEMI

    SEMI            shift and go to state 130


state 53

    (158) bcortes -> CONTINUE . SEMI

    SEMI            shift and go to state 131


state 54

    (131) brand -> RAND . LPAREN ENTERO COMMA ENTERO RPAREN SEMI

    LPAREN          shift and go to state 132


state 55

    (150) escribir -> FWRITE . LPAREN NOMBRE COMMA CADENA RPAREN SEMI

    LPAREN          shift and go to state 133


state 56

    (151) btrim -> TRIM . LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 134


state 57

    (159) otros -> SMALLER . NOMBRE GREATER

    NOMBRE          shift and go to state 135


state 58

    (136) breturn -> empty .

    $end            reduce using rule 136 (breturn -> empty .)
    RBRACE          reduce using rule 136 (breturn -> empty .)
    SEMI            reduce using rule 136 (breturn -> empty .)


state 59

    (137) breturn -> RETURN . SEMI
    (138) breturn -> RETURN . NULL SEMI
    (139) breturn -> RETURN . VARIABLE SEMI
    (140) breturn -> RETURN . BOOLEANO SEMI

    SEMI            shift and go to state 136
    NULL            shift and go to state 137
    VARIABLE        shift and go to state 138
    BOOLEANO        shift and go to state 139


state 60

    (152) comment -> COMENTARIOS .

    $end            reduce using rule 152 (comment -> COMENTARIOS .)
    RBRACE          reduce using rule 152 (comment -> COMENTARIOS .)
    SEMI            reduce using rule 152 (comment -> COMENTARIOS .)


state 61

    (153) comment -> DOC_COMENTARIOS .

    $end            reduce using rule 153 (comment -> DOC_COMENTARIOS .)
    RBRACE          reduce using rule 153 (comment -> DOC_COMENTARIOS .)
    SEMI            reduce using rule 153 (comment -> DOC_COMENTARIOS .)


state 62

    (132) proteccion -> PUBLIC .

    VARIABLE        reduce using rule 132 (proteccion -> PUBLIC .)
    VAR             reduce using rule 132 (proteccion -> PUBLIC .)
    FUNCTION        reduce using rule 132 (proteccion -> PUBLIC .)
    PUBLIC          reduce using rule 132 (proteccion -> PUBLIC .)
    PRIVATE         reduce using rule 132 (proteccion -> PUBLIC .)
    PROTECTED       reduce using rule 132 (proteccion -> PUBLIC .)
    STATIC          reduce using rule 132 (proteccion -> PUBLIC .)


state 63

    (133) proteccion -> PRIVATE .

    VARIABLE        reduce using rule 133 (proteccion -> PRIVATE .)
    VAR             reduce using rule 133 (proteccion -> PRIVATE .)
    FUNCTION        reduce using rule 133 (proteccion -> PRIVATE .)
    PUBLIC          reduce using rule 133 (proteccion -> PRIVATE .)
    PRIVATE         reduce using rule 133 (proteccion -> PRIVATE .)
    PROTECTED       reduce using rule 133 (proteccion -> PRIVATE .)
    STATIC          reduce using rule 133 (proteccion -> PRIVATE .)


state 64

    (134) proteccion -> PROTECTED .

    VARIABLE        reduce using rule 134 (proteccion -> PROTECTED .)
    VAR             reduce using rule 134 (proteccion -> PROTECTED .)
    FUNCTION        reduce using rule 134 (proteccion -> PROTECTED .)
    PUBLIC          reduce using rule 134 (proteccion -> PROTECTED .)
    PRIVATE         reduce using rule 134 (proteccion -> PROTECTED .)
    PROTECTED       reduce using rule 134 (proteccion -> PROTECTED .)
    STATIC          reduce using rule 134 (proteccion -> PROTECTED .)


state 65

    (135) proteccion -> STATIC .

    VARIABLE        reduce using rule 135 (proteccion -> STATIC .)
    VAR             reduce using rule 135 (proteccion -> STATIC .)
    FUNCTION        reduce using rule 135 (proteccion -> STATIC .)
    PUBLIC          reduce using rule 135 (proteccion -> STATIC .)
    PRIVATE         reduce using rule 135 (proteccion -> STATIC .)
    PROTECTED       reduce using rule 135 (proteccion -> STATIC .)
    STATIC          reduce using rule 135 (proteccion -> STATIC .)


state 66

    (125) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (128) funcion_void -> FUNCTION . NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    NOMBRE          shift and go to state 140


state 67

    (58) condicion_ifelse -> condicion_if .
    (59) condicion_ifelse -> condicion_if . condicion_else
    (60) condicion_ifelse -> condicion_if . condicion_elseif
    (61) condicion_ifelse -> condicion_if . condicion_elseif condicion_else
    (57) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (56) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    IF              reduce using rule 58 (condicion_ifelse -> condicion_if .)
    $end            reduce using rule 58 (condicion_ifelse -> condicion_if .)
    RBRACE          reduce using rule 58 (condicion_ifelse -> condicion_if .)
    SEMI            reduce using rule 58 (condicion_ifelse -> condicion_if .)
    ELSE            shift and go to state 143
    ELSEIF          shift and go to state 144

    condicion_else                 shift and go to state 141
    condicion_elseif               shift and go to state 142

state 68

    (55) condicion_if -> IF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 145


state 69

    (48) imprimir -> ECHO valor . SEMI
    (112) operaciones_mat -> valor . operadores valor
    (113) operaciones_mat -> valor . operadores operaciones_mat
    (91) operadores -> . SUMA
    (92) operadores -> . RESTA
    (93) operadores -> . MULTIPLICACION
    (94) operadores -> . DIVISION
    (95) operadores -> . MODULO

    SEMI            shift and go to state 146
    SUMA            shift and go to state 148
    RESTA           shift and go to state 149
    MULTIPLICACION  shift and go to state 150
    DIVISION        shift and go to state 151
    MODULO          shift and go to state 152

    operadores                     shift and go to state 147

state 70

    (51) imprimir -> ECHO NOMBRE . LBRACKET ENTERO RBRACKET SEMI

    LBRACKET        shift and go to state 153


state 71

    (46) numero -> ENTERO .

    SEMI            reduce using rule 46 (numero -> ENTERO .)
    SUMA            reduce using rule 46 (numero -> ENTERO .)
    RESTA           reduce using rule 46 (numero -> ENTERO .)
    MULTIPLICACION  reduce using rule 46 (numero -> ENTERO .)
    DIVISION        reduce using rule 46 (numero -> ENTERO .)
    MODULO          reduce using rule 46 (numero -> ENTERO .)
    RPAREN          reduce using rule 46 (numero -> ENTERO .)
    SMALLER         reduce using rule 46 (numero -> ENTERO .)
    GREATER         reduce using rule 46 (numero -> ENTERO .)
    IS_SMALLER_OR_EQUAL reduce using rule 46 (numero -> ENTERO .)
    IS_GREATER_OR_EQUAL reduce using rule 46 (numero -> ENTERO .)
    AND             reduce using rule 46 (numero -> ENTERO .)
    OR              reduce using rule 46 (numero -> ENTERO .)
    XOR             reduce using rule 46 (numero -> ENTERO .)
    IS_EQUAL        reduce using rule 46 (numero -> ENTERO .)
    IS_NOT_EQUAL    reduce using rule 46 (numero -> ENTERO .)
    IS_IDENTICAL    reduce using rule 46 (numero -> ENTERO .)
    IS_NOT_IDENTICAL reduce using rule 46 (numero -> ENTERO .)
    COMMA           reduce using rule 46 (numero -> ENTERO .)


state 72

    (52) imprimir -> ECHO bconcat .

    $end            reduce using rule 52 (imprimir -> ECHO bconcat .)
    RBRACE          reduce using rule 52 (imprimir -> ECHO bconcat .)
    SEMI            reduce using rule 52 (imprimir -> ECHO bconcat .)


state 73

    (53) imprimir -> ECHO operaciones_mat . SEMI

    SEMI            shift and go to state 154


state 74

    (40) valor -> tipoDato .

    SEMI            reduce using rule 40 (valor -> tipoDato .)
    SUMA            reduce using rule 40 (valor -> tipoDato .)
    RESTA           reduce using rule 40 (valor -> tipoDato .)
    MULTIPLICACION  reduce using rule 40 (valor -> tipoDato .)
    DIVISION        reduce using rule 40 (valor -> tipoDato .)
    MODULO          reduce using rule 40 (valor -> tipoDato .)
    RPAREN          reduce using rule 40 (valor -> tipoDato .)
    SMALLER         reduce using rule 40 (valor -> tipoDato .)
    GREATER         reduce using rule 40 (valor -> tipoDato .)
    IS_SMALLER_OR_EQUAL reduce using rule 40 (valor -> tipoDato .)
    IS_GREATER_OR_EQUAL reduce using rule 40 (valor -> tipoDato .)
    AND             reduce using rule 40 (valor -> tipoDato .)
    OR              reduce using rule 40 (valor -> tipoDato .)
    XOR             reduce using rule 40 (valor -> tipoDato .)
    IS_EQUAL        reduce using rule 40 (valor -> tipoDato .)
    IS_NOT_EQUAL    reduce using rule 40 (valor -> tipoDato .)
    IS_IDENTICAL    reduce using rule 40 (valor -> tipoDato .)
    IS_NOT_IDENTICAL reduce using rule 40 (valor -> tipoDato .)
    COMMA           reduce using rule 40 (valor -> tipoDato .)


state 75

    (41) valor -> bcolas .

    SEMI            reduce using rule 41 (valor -> bcolas .)
    SUMA            reduce using rule 41 (valor -> bcolas .)
    RESTA           reduce using rule 41 (valor -> bcolas .)
    MULTIPLICACION  reduce using rule 41 (valor -> bcolas .)
    DIVISION        reduce using rule 41 (valor -> bcolas .)
    MODULO          reduce using rule 41 (valor -> bcolas .)
    RPAREN          reduce using rule 41 (valor -> bcolas .)
    SMALLER         reduce using rule 41 (valor -> bcolas .)
    GREATER         reduce using rule 41 (valor -> bcolas .)
    IS_SMALLER_OR_EQUAL reduce using rule 41 (valor -> bcolas .)
    IS_GREATER_OR_EQUAL reduce using rule 41 (valor -> bcolas .)
    AND             reduce using rule 41 (valor -> bcolas .)
    OR              reduce using rule 41 (valor -> bcolas .)
    XOR             reduce using rule 41 (valor -> bcolas .)
    IS_EQUAL        reduce using rule 41 (valor -> bcolas .)
    IS_NOT_EQUAL    reduce using rule 41 (valor -> bcolas .)
    IS_IDENTICAL    reduce using rule 41 (valor -> bcolas .)
    IS_NOT_IDENTICAL reduce using rule 41 (valor -> bcolas .)
    COMMA           reduce using rule 41 (valor -> bcolas .)


state 76

    (42) valor -> bpila .

    SEMI            reduce using rule 42 (valor -> bpila .)
    SUMA            reduce using rule 42 (valor -> bpila .)
    RESTA           reduce using rule 42 (valor -> bpila .)
    MULTIPLICACION  reduce using rule 42 (valor -> bpila .)
    DIVISION        reduce using rule 42 (valor -> bpila .)
    MODULO          reduce using rule 42 (valor -> bpila .)
    RPAREN          reduce using rule 42 (valor -> bpila .)
    SMALLER         reduce using rule 42 (valor -> bpila .)
    GREATER         reduce using rule 42 (valor -> bpila .)
    IS_SMALLER_OR_EQUAL reduce using rule 42 (valor -> bpila .)
    IS_GREATER_OR_EQUAL reduce using rule 42 (valor -> bpila .)
    AND             reduce using rule 42 (valor -> bpila .)
    OR              reduce using rule 42 (valor -> bpila .)
    XOR             reduce using rule 42 (valor -> bpila .)
    IS_EQUAL        reduce using rule 42 (valor -> bpila .)
    IS_NOT_EQUAL    reduce using rule 42 (valor -> bpila .)
    IS_IDENTICAL    reduce using rule 42 (valor -> bpila .)
    IS_NOT_IDENTICAL reduce using rule 42 (valor -> bpila .)
    COMMA           reduce using rule 42 (valor -> bpila .)


state 77

    (160) bconcat -> CADENA . CONCAT CADENA SEMI
    (164) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI
    (44) tipoDato -> CADENA .

    CONCAT          shift and go to state 116
    CONCAT_EQUAL    shift and go to state 117
    SEMI            reduce using rule 44 (tipoDato -> CADENA .)
    SUMA            reduce using rule 44 (tipoDato -> CADENA .)
    RESTA           reduce using rule 44 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 44 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 44 (tipoDato -> CADENA .)
    MODULO          reduce using rule 44 (tipoDato -> CADENA .)


state 78

    (161) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (162) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (163) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (114) operaciones_mat -> VARIABLE . operadores VARIABLE
    (146) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (91) operadores -> . SUMA
    (92) operadores -> . RESTA
    (93) operadores -> . MULTIPLICACION
    (94) operadores -> . DIVISION
    (95) operadores -> . MODULO

    CONCAT          shift and go to state 100
    CONCAT_EQUAL    shift and go to state 101
    EQUALS          shift and go to state 156
    SUMA            shift and go to state 148
    RESTA           shift and go to state 149
    MULTIPLICACION  shift and go to state 150
    DIVISION        shift and go to state 151
    MODULO          shift and go to state 152

    operadores                     shift and go to state 155

state 79

    (115) operaciones_mat -> operaciones_mat_par .

    SEMI            reduce using rule 115 (operaciones_mat -> operaciones_mat_par .)


state 80

    (43) tipoDato -> numero .

    SEMI            reduce using rule 43 (tipoDato -> numero .)
    SUMA            reduce using rule 43 (tipoDato -> numero .)
    RESTA           reduce using rule 43 (tipoDato -> numero .)
    MULTIPLICACION  reduce using rule 43 (tipoDato -> numero .)
    DIVISION        reduce using rule 43 (tipoDato -> numero .)
    MODULO          reduce using rule 43 (tipoDato -> numero .)
    RPAREN          reduce using rule 43 (tipoDato -> numero .)
    SMALLER         reduce using rule 43 (tipoDato -> numero .)
    GREATER         reduce using rule 43 (tipoDato -> numero .)
    IS_SMALLER_OR_EQUAL reduce using rule 43 (tipoDato -> numero .)
    IS_GREATER_OR_EQUAL reduce using rule 43 (tipoDato -> numero .)
    AND             reduce using rule 43 (tipoDato -> numero .)
    OR              reduce using rule 43 (tipoDato -> numero .)
    XOR             reduce using rule 43 (tipoDato -> numero .)
    IS_EQUAL        reduce using rule 43 (tipoDato -> numero .)
    IS_NOT_EQUAL    reduce using rule 43 (tipoDato -> numero .)
    IS_IDENTICAL    reduce using rule 43 (tipoDato -> numero .)
    IS_NOT_IDENTICAL reduce using rule 43 (tipoDato -> numero .)
    COMMA           reduce using rule 43 (tipoDato -> numero .)


state 81

    (45) tipoDato -> BOOLEANO .

    SEMI            reduce using rule 45 (tipoDato -> BOOLEANO .)
    SUMA            reduce using rule 45 (tipoDato -> BOOLEANO .)
    RESTA           reduce using rule 45 (tipoDato -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 45 (tipoDato -> BOOLEANO .)
    DIVISION        reduce using rule 45 (tipoDato -> BOOLEANO .)
    MODULO          reduce using rule 45 (tipoDato -> BOOLEANO .)
    RPAREN          reduce using rule 45 (tipoDato -> BOOLEANO .)
    SMALLER         reduce using rule 45 (tipoDato -> BOOLEANO .)
    GREATER         reduce using rule 45 (tipoDato -> BOOLEANO .)
    IS_SMALLER_OR_EQUAL reduce using rule 45 (tipoDato -> BOOLEANO .)
    IS_GREATER_OR_EQUAL reduce using rule 45 (tipoDato -> BOOLEANO .)
    AND             reduce using rule 45 (tipoDato -> BOOLEANO .)
    OR              reduce using rule 45 (tipoDato -> BOOLEANO .)
    XOR             reduce using rule 45 (tipoDato -> BOOLEANO .)
    IS_EQUAL        reduce using rule 45 (tipoDato -> BOOLEANO .)
    IS_NOT_EQUAL    reduce using rule 45 (tipoDato -> BOOLEANO .)
    IS_IDENTICAL    reduce using rule 45 (tipoDato -> BOOLEANO .)
    IS_NOT_IDENTICAL reduce using rule 45 (tipoDato -> BOOLEANO .)
    COMMA           reduce using rule 45 (tipoDato -> BOOLEANO .)


state 82

    (116) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (117) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 157
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 83

    (47) numero -> DECIMAL .

    SEMI            reduce using rule 47 (numero -> DECIMAL .)
    SUMA            reduce using rule 47 (numero -> DECIMAL .)
    RESTA           reduce using rule 47 (numero -> DECIMAL .)
    MULTIPLICACION  reduce using rule 47 (numero -> DECIMAL .)
    DIVISION        reduce using rule 47 (numero -> DECIMAL .)
    MODULO          reduce using rule 47 (numero -> DECIMAL .)
    RPAREN          reduce using rule 47 (numero -> DECIMAL .)
    SMALLER         reduce using rule 47 (numero -> DECIMAL .)
    GREATER         reduce using rule 47 (numero -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 47 (numero -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 47 (numero -> DECIMAL .)
    AND             reduce using rule 47 (numero -> DECIMAL .)
    OR              reduce using rule 47 (numero -> DECIMAL .)
    XOR             reduce using rule 47 (numero -> DECIMAL .)
    IS_EQUAL        reduce using rule 47 (numero -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 47 (numero -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 47 (numero -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 47 (numero -> DECIMAL .)
    COMMA           reduce using rule 47 (numero -> DECIMAL .)


state 84

    (49) imprimir -> PRINT valor . SEMI
    (112) operaciones_mat -> valor . operadores valor
    (113) operaciones_mat -> valor . operadores operaciones_mat
    (91) operadores -> . SUMA
    (92) operadores -> . RESTA
    (93) operadores -> . MULTIPLICACION
    (94) operadores -> . DIVISION
    (95) operadores -> . MODULO

    SEMI            shift and go to state 159
    SUMA            shift and go to state 148
    RESTA           shift and go to state 149
    MULTIPLICACION  shift and go to state 150
    DIVISION        shift and go to state 151
    MODULO          shift and go to state 152

    operadores                     shift and go to state 147

state 85

    (50) imprimir -> PRINT LPAREN . valor RPAREN SEMI
    (116) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (117) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 160
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 86

    (54) imprimir -> PRINT operaciones_mat . SEMI

    SEMI            shift and go to state 161


state 87

    (114) operaciones_mat -> VARIABLE . operadores VARIABLE
    (146) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (91) operadores -> . SUMA
    (92) operadores -> . RESTA
    (93) operadores -> . MULTIPLICACION
    (94) operadores -> . DIVISION
    (95) operadores -> . MODULO

    EQUALS          shift and go to state 156
    SUMA            shift and go to state 148
    RESTA           shift and go to state 149
    MULTIPLICACION  shift and go to state 150
    DIVISION        shift and go to state 151
    MODULO          shift and go to state 152

    operadores                     shift and go to state 155

state 88

    (44) tipoDato -> CADENA .

    SEMI            reduce using rule 44 (tipoDato -> CADENA .)
    SUMA            reduce using rule 44 (tipoDato -> CADENA .)
    RESTA           reduce using rule 44 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 44 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 44 (tipoDato -> CADENA .)
    MODULO          reduce using rule 44 (tipoDato -> CADENA .)
    RPAREN          reduce using rule 44 (tipoDato -> CADENA .)
    SMALLER         reduce using rule 44 (tipoDato -> CADENA .)
    GREATER         reduce using rule 44 (tipoDato -> CADENA .)
    IS_SMALLER_OR_EQUAL reduce using rule 44 (tipoDato -> CADENA .)
    IS_GREATER_OR_EQUAL reduce using rule 44 (tipoDato -> CADENA .)
    AND             reduce using rule 44 (tipoDato -> CADENA .)
    OR              reduce using rule 44 (tipoDato -> CADENA .)
    XOR             reduce using rule 44 (tipoDato -> CADENA .)
    IS_EQUAL        reduce using rule 44 (tipoDato -> CADENA .)
    IS_NOT_EQUAL    reduce using rule 44 (tipoDato -> CADENA .)
    IS_IDENTICAL    reduce using rule 44 (tipoDato -> CADENA .)
    IS_NOT_IDENTICAL reduce using rule 44 (tipoDato -> CADENA .)
    COMMA           reduce using rule 44 (tipoDato -> CADENA .)


state 89

    (175) casting -> LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 162


state 90

    (165) tiposCast -> STRING .

    RPAREN          reduce using rule 165 (tiposCast -> STRING .)


state 91

    (166) tiposCast -> BOOL .

    RPAREN          reduce using rule 166 (tiposCast -> BOOL .)


state 92

    (167) tiposCast -> BOOLEAN .

    RPAREN          reduce using rule 167 (tiposCast -> BOOLEAN .)


state 93

    (168) tiposCast -> DOUBLE .

    RPAREN          reduce using rule 168 (tiposCast -> DOUBLE .)


state 94

    (169) tiposCast -> FLOAT .

    RPAREN          reduce using rule 169 (tiposCast -> FLOAT .)


state 95

    (170) tiposCast -> ARRAY .

    RPAREN          reduce using rule 170 (tiposCast -> ARRAY .)


state 96

    (171) tiposCast -> OBJECT .

    RPAREN          reduce using rule 171 (tiposCast -> OBJECT .)


state 97

    (172) tiposCast -> INTEGER .

    RPAREN          reduce using rule 172 (tiposCast -> INTEGER .)


state 98

    (173) tiposCast -> INT .

    RPAREN          reduce using rule 173 (tiposCast -> INT .)


state 99

    (26) asignacion -> VARIABLE EQUALS . valor SEMI
    (29) asignacion -> VARIABLE EQUALS . brand
    (30) asignacion -> VARIABLE EQUALS . escribir
    (31) asignacion -> VARIABLE EQUALS . btrim
    (32) asignacion -> VARIABLE EQUALS . lectura
    (33) asignacion -> VARIABLE EQUALS . bconcat
    (35) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (146) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI
    (174) casting -> VARIABLE EQUALS . LPAREN tiposCast RPAREN VARIABLE SEMI
    (37) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (177) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (131) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (150) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (151) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (148) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (149) lectura -> . READLINE LPAREN RPAREN SEMI
    (160) bconcat -> . CADENA CONCAT CADENA SEMI
    (161) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (162) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (163) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (164) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (112) operaciones_mat -> . valor operadores valor
    (113) operaciones_mat -> . valor operadores operaciones_mat
    (114) operaciones_mat -> . VARIABLE operadores VARIABLE
    (115) operaciones_mat -> . operaciones_mat_par
    (141) array_def -> . ARRAY LPAREN RPAREN
    (142) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (116) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (117) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    NEW             shift and go to state 171
    LPAREN          shift and go to state 172
    VARIABLE        shift and go to state 163
    RAND            shift and go to state 54
    FWRITE          shift and go to state 55
    TRIM            shift and go to state 56
    READLINE        shift and go to state 40
    CADENA          shift and go to state 77
    ARRAY           shift and go to state 174
    BOOLEANO        shift and go to state 81
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 164
    brand                          shift and go to state 165
    escribir                       shift and go to state 166
    btrim                          shift and go to state 167
    lectura                        shift and go to state 168
    bconcat                        shift and go to state 169
    operaciones_mat                shift and go to state 170
    array_def                      shift and go to state 173
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    operaciones_mat_par            shift and go to state 79
    numero                         shift and go to state 80

state 100

    (161) bconcat -> VARIABLE CONCAT . VARIABLE SEMI
    (162) bconcat -> VARIABLE CONCAT . CADENA SEMI

    VARIABLE        shift and go to state 175
    CADENA          shift and go to state 176


state 101

    (163) bconcat -> VARIABLE CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 177


state 102

    (176) aumentoCasting -> VARIABLE incrementos_mat . tipoDato SEMI
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    tipoDato                       shift and go to state 178
    numero                         shift and go to state 80

state 103

    (100) incrementos_mat -> MINUS_EQUAL .

    CADENA          reduce using rule 100 (incrementos_mat -> MINUS_EQUAL .)
    BOOLEANO        reduce using rule 100 (incrementos_mat -> MINUS_EQUAL .)
    ENTERO          reduce using rule 100 (incrementos_mat -> MINUS_EQUAL .)
    DECIMAL         reduce using rule 100 (incrementos_mat -> MINUS_EQUAL .)


state 104

    (101) incrementos_mat -> MOD_EQUAL .

    CADENA          reduce using rule 101 (incrementos_mat -> MOD_EQUAL .)
    BOOLEANO        reduce using rule 101 (incrementos_mat -> MOD_EQUAL .)
    ENTERO          reduce using rule 101 (incrementos_mat -> MOD_EQUAL .)
    DECIMAL         reduce using rule 101 (incrementos_mat -> MOD_EQUAL .)


state 105

    (102) incrementos_mat -> MUL_EQUAL .

    CADENA          reduce using rule 102 (incrementos_mat -> MUL_EQUAL .)
    BOOLEANO        reduce using rule 102 (incrementos_mat -> MUL_EQUAL .)
    ENTERO          reduce using rule 102 (incrementos_mat -> MUL_EQUAL .)
    DECIMAL         reduce using rule 102 (incrementos_mat -> MUL_EQUAL .)


state 106

    (103) incrementos_mat -> PLUS_EQUAL .

    CADENA          reduce using rule 103 (incrementos_mat -> PLUS_EQUAL .)
    BOOLEANO        reduce using rule 103 (incrementos_mat -> PLUS_EQUAL .)
    ENTERO          reduce using rule 103 (incrementos_mat -> PLUS_EQUAL .)
    DECIMAL         reduce using rule 103 (incrementos_mat -> PLUS_EQUAL .)


state 107

    (104) incrementos_mat -> DIV_EQUAL .

    CADENA          reduce using rule 104 (incrementos_mat -> DIV_EQUAL .)
    BOOLEANO        reduce using rule 104 (incrementos_mat -> DIV_EQUAL .)
    ENTERO          reduce using rule 104 (incrementos_mat -> DIV_EQUAL .)
    DECIMAL         reduce using rule 104 (incrementos_mat -> DIV_EQUAL .)


state 108

    (27) asignacion -> VAR asignacion .

    $end            reduce using rule 27 (asignacion -> VAR asignacion .)
    RBRACE          reduce using rule 27 (asignacion -> VAR asignacion .)
    SEMI            reduce using rule 27 (asignacion -> VAR asignacion .)
    VARIABLE        reduce using rule 27 (asignacion -> VAR asignacion .)
    CADENA          reduce using rule 27 (asignacion -> VAR asignacion .)
    BOOLEANO        reduce using rule 27 (asignacion -> VAR asignacion .)
    ENTERO          reduce using rule 27 (asignacion -> VAR asignacion .)
    DECIMAL         reduce using rule 27 (asignacion -> VAR asignacion .)
    RPAREN          reduce using rule 27 (asignacion -> VAR asignacion .)
    COMMA           reduce using rule 27 (asignacion -> VAR asignacion .)


state 109

    (26) asignacion -> VARIABLE . EQUALS valor SEMI
    (29) asignacion -> VARIABLE . EQUALS brand
    (30) asignacion -> VARIABLE . EQUALS escribir
    (31) asignacion -> VARIABLE . EQUALS btrim
    (32) asignacion -> VARIABLE . EQUALS lectura
    (33) asignacion -> VARIABLE . EQUALS bconcat
    (35) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (37) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (176) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (100) incrementos_mat -> . MINUS_EQUAL
    (101) incrementos_mat -> . MOD_EQUAL
    (102) incrementos_mat -> . MUL_EQUAL
    (103) incrementos_mat -> . PLUS_EQUAL
    (104) incrementos_mat -> . DIV_EQUAL

    EQUALS          shift and go to state 179
    MINUS_EQUAL     shift and go to state 103
    MOD_EQUAL       shift and go to state 104
    MUL_EQUAL       shift and go to state 105
    PLUS_EQUAL      shift and go to state 106
    DIV_EQUAL       shift and go to state 107

    incrementos_mat                shift and go to state 102

state 110

    (28) asignacion -> proteccion . asignacion
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 109
    VAR             shift and go to state 31
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65

    proteccion                     shift and go to state 110
    asignacion                     shift and go to state 111
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34

state 111

    (28) asignacion -> proteccion asignacion .

    $end            reduce using rule 28 (asignacion -> proteccion asignacion .)
    RBRACE          reduce using rule 28 (asignacion -> proteccion asignacion .)
    SEMI            reduce using rule 28 (asignacion -> proteccion asignacion .)
    VARIABLE        reduce using rule 28 (asignacion -> proteccion asignacion .)
    CADENA          reduce using rule 28 (asignacion -> proteccion asignacion .)
    BOOLEANO        reduce using rule 28 (asignacion -> proteccion asignacion .)
    ENTERO          reduce using rule 28 (asignacion -> proteccion asignacion .)
    DECIMAL         reduce using rule 28 (asignacion -> proteccion asignacion .)
    RPAREN          reduce using rule 28 (asignacion -> proteccion asignacion .)
    COMMA           reduce using rule 28 (asignacion -> proteccion asignacion .)


state 112

    (119) funciones -> proteccion funcion_nparams .

    $end            reduce using rule 119 (funciones -> proteccion funcion_nparams .)
    RBRACE          reduce using rule 119 (funciones -> proteccion funcion_nparams .)
    SEMI            reduce using rule 119 (funciones -> proteccion funcion_nparams .)


state 113

    (121) funciones -> proteccion funcion_blank .

    $end            reduce using rule 121 (funciones -> proteccion funcion_blank .)
    RBRACE          reduce using rule 121 (funciones -> proteccion funcion_blank .)
    SEMI            reduce using rule 121 (funciones -> proteccion funcion_blank .)


state 114

    (125) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE

    NOMBRE          shift and go to state 180


state 115

    (38) constante -> DEFINE LPAREN . CADENA COMMA valor RPAREN SEMI
    (39) constante -> DEFINE LPAREN . NOMBRE COMMA ARRAY RPAREN SEMI

    CADENA          shift and go to state 181
    NOMBRE          shift and go to state 182


state 116

    (160) bconcat -> CADENA CONCAT . CADENA SEMI

    CADENA          shift and go to state 183


state 117

    (164) bconcat -> CADENA CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 184


state 118

    (148) lectura -> READLINE LPAREN . CADENA RPAREN SEMI
    (149) lectura -> READLINE LPAREN . RPAREN SEMI

    CADENA          shift and go to state 185
    RPAREN          shift and go to state 186


state 119

    (81) bwhile -> WHILE LPAREN . condicion RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> WHILE LPAREN . condicion RPAREN COLON stc_bloque
    (64) condicion -> . VARIABLE operador_logico VARIABLE
    (65) condicion -> . valor operador_logico valor
    (66) condicion -> . VARIABLE operador_logico valor
    (67) condicion -> . VARIABLE condicion_booleana VARIABLE
    (68) condicion -> . valor condicion_booleana valor
    (69) condicion -> . VARIABLE condicion_booleana valor
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    VARIABLE        shift and go to state 188
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    condicion                      shift and go to state 187
    valor                          shift and go to state 189
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 120

    (83) bdo -> DO LBRACE . cuerpo RBRACE bwhile
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (48) imprimir -> . ECHO valor SEMI
    (49) imprimir -> . PRINT valor SEMI
    (50) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (51) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (52) imprimir -> . ECHO bconcat
    (53) imprimir -> . ECHO operaciones_mat SEMI
    (54) imprimir -> . PRINT operaciones_mat SEMI
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (118) funciones -> . funcion_nparams
    (119) funciones -> . proteccion funcion_nparams
    (120) funciones -> . funcion_blank
    (121) funciones -> . proteccion funcion_blank
    (122) funciones -> . funcion_void
    (38) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (39) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (148) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (149) lectura -> . READLINE LPAREN RPAREN SEMI
    (81) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (83) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (70) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (80) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (88) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (62) repiteCondicional -> . condicion_ifelse
    (63) repiteCondicional -> . condicion_ifelse repiteCondicional
    (84) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (85) bcase -> . CASE ENTERO COLON
    (154) bgoto -> . GOTO NOMBRE SEMI
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (155) bcortes -> . EXIT SEMI
    (156) bcortes -> . BREAK SEMI
    (157) bcortes -> . DEFAULT SEMI
    (158) bcortes -> . CONTINUE SEMI
    (131) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (150) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (151) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (159) otros -> . SMALLER NOMBRE GREATER
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI
    (152) comment -> . COMENTARIOS
    (153) comment -> . DOC_COMENTARIOS
    (174) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (160) bconcat -> . CADENA CONCAT CADENA SEMI
    (161) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (162) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (163) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (164) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (125) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (128) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (58) condicion_ifelse -> . condicion_if
    (59) condicion_ifelse -> . condicion_if condicion_else
    (60) condicion_ifelse -> . condicion_if condicion_elseif
    (61) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (145) empty -> .
    (55) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VARIABLE        shift and go to state 30
    VAR             shift and go to state 31
    DEFINE          shift and go to state 38
    READLINE        shift and go to state 40
    WHILE           shift and go to state 41
    DO              shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    TRY             shift and go to state 45
    SWITCH          shift and go to state 47
    CASE            shift and go to state 48
    GOTO            shift and go to state 49
    EXIT            shift and go to state 50
    BREAK           shift and go to state 51
    DEFAULT         shift and go to state 52
    CONTINUE        shift and go to state 53
    RAND            shift and go to state 54
    FWRITE          shift and go to state 55
    TRIM            shift and go to state 56
    SMALLER         shift and go to state 57
    RETURN          shift and go to state 59
    COMENTARIOS     shift and go to state 60
    DOC_COMENTARIOS shift and go to state 61
    LPAREN          shift and go to state 29
    CADENA          shift and go to state 39
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65
    FUNCTION        shift and go to state 66
    RBRACE          reduce using rule 145 (empty -> .)
    IF              shift and go to state 68

    cuerpo                         shift and go to state 190
    bwhile                         shift and go to state 7
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    proteccion                     shift and go to state 32
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34
    funcion_nparams                shift and go to state 35
    funcion_blank                  shift and go to state 36
    funcion_void                   shift and go to state 37
    condicion_ifelse               shift and go to state 46
    empty                          shift and go to state 58
    condicion_if                   shift and go to state 67

state 121

    (70) bfor -> FOR LPAREN . asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 109
    VAR             shift and go to state 31
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65

    asignacion                     shift and go to state 191
    proteccion                     shift and go to state 110
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34

state 122

    (80) bforeach -> FOREACH LPAREN . VARIABLE AS VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 192


state 123

    (88) btry -> TRY LBRACE . stc_bloque_def RBRACE catches
    (73) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 193

    stc_bloque_def                 shift and go to state 194

state 124

    (63) repiteCondicional -> condicion_ifelse repiteCondicional .

    $end            reduce using rule 63 (repiteCondicional -> condicion_ifelse repiteCondicional .)
    RBRACE          reduce using rule 63 (repiteCondicional -> condicion_ifelse repiteCondicional .)
    SEMI            reduce using rule 63 (repiteCondicional -> condicion_ifelse repiteCondicional .)


state 125

    (84) bswitch -> SWITCH LPAREN . VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE

    VARIABLE        shift and go to state 195


state 126

    (85) bcase -> CASE ENTERO . COLON

    COLON           shift and go to state 196


state 127

    (154) bgoto -> GOTO NOMBRE . SEMI

    SEMI            shift and go to state 197


state 128

    (155) bcortes -> EXIT SEMI .

    $end            reduce using rule 155 (bcortes -> EXIT SEMI .)
    RBRACE          reduce using rule 155 (bcortes -> EXIT SEMI .)
    SEMI            reduce using rule 155 (bcortes -> EXIT SEMI .)


state 129

    (156) bcortes -> BREAK SEMI .

    $end            reduce using rule 156 (bcortes -> BREAK SEMI .)
    RBRACE          reduce using rule 156 (bcortes -> BREAK SEMI .)
    SEMI            reduce using rule 156 (bcortes -> BREAK SEMI .)


state 130

    (157) bcortes -> DEFAULT SEMI .

    $end            reduce using rule 157 (bcortes -> DEFAULT SEMI .)
    RBRACE          reduce using rule 157 (bcortes -> DEFAULT SEMI .)
    SEMI            reduce using rule 157 (bcortes -> DEFAULT SEMI .)


state 131

    (158) bcortes -> CONTINUE SEMI .

    $end            reduce using rule 158 (bcortes -> CONTINUE SEMI .)
    RBRACE          reduce using rule 158 (bcortes -> CONTINUE SEMI .)
    SEMI            reduce using rule 158 (bcortes -> CONTINUE SEMI .)


state 132

    (131) brand -> RAND LPAREN . ENTERO COMMA ENTERO RPAREN SEMI

    ENTERO          shift and go to state 198


state 133

    (150) escribir -> FWRITE LPAREN . NOMBRE COMMA CADENA RPAREN SEMI

    NOMBRE          shift and go to state 199


state 134

    (151) btrim -> TRIM LPAREN . NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 200


state 135

    (159) otros -> SMALLER NOMBRE . GREATER

    GREATER         shift and go to state 201


state 136

    (137) breturn -> RETURN SEMI .

    $end            reduce using rule 137 (breturn -> RETURN SEMI .)
    RBRACE          reduce using rule 137 (breturn -> RETURN SEMI .)
    SEMI            reduce using rule 137 (breturn -> RETURN SEMI .)


state 137

    (138) breturn -> RETURN NULL . SEMI

    SEMI            shift and go to state 202


state 138

    (139) breturn -> RETURN VARIABLE . SEMI

    SEMI            shift and go to state 203


state 139

    (140) breturn -> RETURN BOOLEANO . SEMI

    SEMI            shift and go to state 204


state 140

    (125) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE
    (128) funcion_void -> FUNCTION NOMBRE . LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    LPAREN          shift and go to state 205


state 141

    (59) condicion_ifelse -> condicion_if condicion_else .

    IF              reduce using rule 59 (condicion_ifelse -> condicion_if condicion_else .)
    $end            reduce using rule 59 (condicion_ifelse -> condicion_if condicion_else .)
    RBRACE          reduce using rule 59 (condicion_ifelse -> condicion_if condicion_else .)
    SEMI            reduce using rule 59 (condicion_ifelse -> condicion_if condicion_else .)


state 142

    (60) condicion_ifelse -> condicion_if condicion_elseif .
    (61) condicion_ifelse -> condicion_if condicion_elseif . condicion_else
    (57) condicion_else -> . ELSE LBRACE cuerpo RBRACE

    IF              reduce using rule 60 (condicion_ifelse -> condicion_if condicion_elseif .)
    $end            reduce using rule 60 (condicion_ifelse -> condicion_if condicion_elseif .)
    RBRACE          reduce using rule 60 (condicion_ifelse -> condicion_if condicion_elseif .)
    SEMI            reduce using rule 60 (condicion_ifelse -> condicion_if condicion_elseif .)
    ELSE            shift and go to state 143

    condicion_else                 shift and go to state 206

state 143

    (57) condicion_else -> ELSE . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 207


state 144

    (56) condicion_elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 208


state 145

    (55) condicion_if -> IF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (64) condicion -> . VARIABLE operador_logico VARIABLE
    (65) condicion -> . valor operador_logico valor
    (66) condicion -> . VARIABLE operador_logico valor
    (67) condicion -> . VARIABLE condicion_booleana VARIABLE
    (68) condicion -> . valor condicion_booleana valor
    (69) condicion -> . VARIABLE condicion_booleana valor
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    VARIABLE        shift and go to state 188
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    condicion                      shift and go to state 209
    valor                          shift and go to state 189
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 146

    (48) imprimir -> ECHO valor SEMI .

    $end            reduce using rule 48 (imprimir -> ECHO valor SEMI .)
    RBRACE          reduce using rule 48 (imprimir -> ECHO valor SEMI .)
    SEMI            reduce using rule 48 (imprimir -> ECHO valor SEMI .)


state 147

    (112) operaciones_mat -> valor operadores . valor
    (113) operaciones_mat -> valor operadores . operaciones_mat
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (112) operaciones_mat -> . valor operadores valor
    (113) operaciones_mat -> . valor operadores operaciones_mat
    (114) operaciones_mat -> . VARIABLE operadores VARIABLE
    (115) operaciones_mat -> . operaciones_mat_par
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (116) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (117) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    VARIABLE        shift and go to state 87
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    LPAREN          shift and go to state 82
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 210
    operaciones_mat                shift and go to state 211
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    operaciones_mat_par            shift and go to state 79
    numero                         shift and go to state 80

state 148

    (91) operadores -> SUMA .

    VARIABLE        reduce using rule 91 (operadores -> SUMA .)
    CADENA          reduce using rule 91 (operadores -> SUMA .)
    BOOLEANO        reduce using rule 91 (operadores -> SUMA .)
    LPAREN          reduce using rule 91 (operadores -> SUMA .)
    ENTERO          reduce using rule 91 (operadores -> SUMA .)
    DECIMAL         reduce using rule 91 (operadores -> SUMA .)


state 149

    (92) operadores -> RESTA .

    VARIABLE        reduce using rule 92 (operadores -> RESTA .)
    CADENA          reduce using rule 92 (operadores -> RESTA .)
    BOOLEANO        reduce using rule 92 (operadores -> RESTA .)
    LPAREN          reduce using rule 92 (operadores -> RESTA .)
    ENTERO          reduce using rule 92 (operadores -> RESTA .)
    DECIMAL         reduce using rule 92 (operadores -> RESTA .)


state 150

    (93) operadores -> MULTIPLICACION .

    VARIABLE        reduce using rule 93 (operadores -> MULTIPLICACION .)
    CADENA          reduce using rule 93 (operadores -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 93 (operadores -> MULTIPLICACION .)
    LPAREN          reduce using rule 93 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 93 (operadores -> MULTIPLICACION .)
    DECIMAL         reduce using rule 93 (operadores -> MULTIPLICACION .)


state 151

    (94) operadores -> DIVISION .

    VARIABLE        reduce using rule 94 (operadores -> DIVISION .)
    CADENA          reduce using rule 94 (operadores -> DIVISION .)
    BOOLEANO        reduce using rule 94 (operadores -> DIVISION .)
    LPAREN          reduce using rule 94 (operadores -> DIVISION .)
    ENTERO          reduce using rule 94 (operadores -> DIVISION .)
    DECIMAL         reduce using rule 94 (operadores -> DIVISION .)


state 152

    (95) operadores -> MODULO .

    VARIABLE        reduce using rule 95 (operadores -> MODULO .)
    CADENA          reduce using rule 95 (operadores -> MODULO .)
    BOOLEANO        reduce using rule 95 (operadores -> MODULO .)
    LPAREN          reduce using rule 95 (operadores -> MODULO .)
    ENTERO          reduce using rule 95 (operadores -> MODULO .)
    DECIMAL         reduce using rule 95 (operadores -> MODULO .)


state 153

    (51) imprimir -> ECHO NOMBRE LBRACKET . ENTERO RBRACKET SEMI

    ENTERO          shift and go to state 212


state 154

    (53) imprimir -> ECHO operaciones_mat SEMI .

    $end            reduce using rule 53 (imprimir -> ECHO operaciones_mat SEMI .)
    RBRACE          reduce using rule 53 (imprimir -> ECHO operaciones_mat SEMI .)
    SEMI            reduce using rule 53 (imprimir -> ECHO operaciones_mat SEMI .)


state 155

    (114) operaciones_mat -> VARIABLE operadores . VARIABLE

    VARIABLE        shift and go to state 213


state 156

    (146) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI

    NEW             shift and go to state 171


state 157

    (116) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (117) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (91) operadores -> . SUMA
    (92) operadores -> . RESTA
    (93) operadores -> . MULTIPLICACION
    (94) operadores -> . DIVISION
    (95) operadores -> . MODULO

    SUMA            shift and go to state 148
    RESTA           shift and go to state 149
    MULTIPLICACION  shift and go to state 150
    DIVISION        shift and go to state 151
    MODULO          shift and go to state 152

    operadores                     shift and go to state 214

state 158

    (146) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    EQUALS          shift and go to state 156


state 159

    (49) imprimir -> PRINT valor SEMI .

    $end            reduce using rule 49 (imprimir -> PRINT valor SEMI .)
    RBRACE          reduce using rule 49 (imprimir -> PRINT valor SEMI .)
    SEMI            reduce using rule 49 (imprimir -> PRINT valor SEMI .)


state 160

    (50) imprimir -> PRINT LPAREN valor . RPAREN SEMI
    (116) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (117) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (91) operadores -> . SUMA
    (92) operadores -> . RESTA
    (93) operadores -> . MULTIPLICACION
    (94) operadores -> . DIVISION
    (95) operadores -> . MODULO

    RPAREN          shift and go to state 215
    SUMA            shift and go to state 148
    RESTA           shift and go to state 149
    MULTIPLICACION  shift and go to state 150
    DIVISION        shift and go to state 151
    MODULO          shift and go to state 152

    operadores                     shift and go to state 214

state 161

    (54) imprimir -> PRINT operaciones_mat SEMI .

    $end            reduce using rule 54 (imprimir -> PRINT operaciones_mat SEMI .)
    RBRACE          reduce using rule 54 (imprimir -> PRINT operaciones_mat SEMI .)
    SEMI            reduce using rule 54 (imprimir -> PRINT operaciones_mat SEMI .)


state 162

    (175) casting -> LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 216


state 163

    (177) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores tipoDato SEMI
    (161) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (162) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (163) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (114) operaciones_mat -> VARIABLE . operadores VARIABLE
    (146) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (91) operadores -> . SUMA
    (92) operadores -> . RESTA
    (93) operadores -> . MULTIPLICACION
    (94) operadores -> . DIVISION
    (95) operadores -> . MODULO

    CONCAT          shift and go to state 100
    CONCAT_EQUAL    shift and go to state 101
    EQUALS          shift and go to state 156
    SUMA            shift and go to state 148
    RESTA           shift and go to state 149
    MULTIPLICACION  shift and go to state 150
    DIVISION        shift and go to state 151
    MODULO          shift and go to state 152

    operadores                     shift and go to state 217

state 164

    (26) asignacion -> VARIABLE EQUALS valor . SEMI
    (112) operaciones_mat -> valor . operadores valor
    (113) operaciones_mat -> valor . operadores operaciones_mat
    (91) operadores -> . SUMA
    (92) operadores -> . RESTA
    (93) operadores -> . MULTIPLICACION
    (94) operadores -> . DIVISION
    (95) operadores -> . MODULO

    SEMI            shift and go to state 218
    SUMA            shift and go to state 148
    RESTA           shift and go to state 149
    MULTIPLICACION  shift and go to state 150
    DIVISION        shift and go to state 151
    MODULO          shift and go to state 152

    operadores                     shift and go to state 147

state 165

    (29) asignacion -> VARIABLE EQUALS brand .

    $end            reduce using rule 29 (asignacion -> VARIABLE EQUALS brand .)
    RBRACE          reduce using rule 29 (asignacion -> VARIABLE EQUALS brand .)
    SEMI            reduce using rule 29 (asignacion -> VARIABLE EQUALS brand .)
    VARIABLE        reduce using rule 29 (asignacion -> VARIABLE EQUALS brand .)
    CADENA          reduce using rule 29 (asignacion -> VARIABLE EQUALS brand .)
    BOOLEANO        reduce using rule 29 (asignacion -> VARIABLE EQUALS brand .)
    ENTERO          reduce using rule 29 (asignacion -> VARIABLE EQUALS brand .)
    DECIMAL         reduce using rule 29 (asignacion -> VARIABLE EQUALS brand .)
    RPAREN          reduce using rule 29 (asignacion -> VARIABLE EQUALS brand .)
    COMMA           reduce using rule 29 (asignacion -> VARIABLE EQUALS brand .)


state 166

    (30) asignacion -> VARIABLE EQUALS escribir .

    $end            reduce using rule 30 (asignacion -> VARIABLE EQUALS escribir .)
    RBRACE          reduce using rule 30 (asignacion -> VARIABLE EQUALS escribir .)
    SEMI            reduce using rule 30 (asignacion -> VARIABLE EQUALS escribir .)
    VARIABLE        reduce using rule 30 (asignacion -> VARIABLE EQUALS escribir .)
    CADENA          reduce using rule 30 (asignacion -> VARIABLE EQUALS escribir .)
    BOOLEANO        reduce using rule 30 (asignacion -> VARIABLE EQUALS escribir .)
    ENTERO          reduce using rule 30 (asignacion -> VARIABLE EQUALS escribir .)
    DECIMAL         reduce using rule 30 (asignacion -> VARIABLE EQUALS escribir .)
    RPAREN          reduce using rule 30 (asignacion -> VARIABLE EQUALS escribir .)
    COMMA           reduce using rule 30 (asignacion -> VARIABLE EQUALS escribir .)


state 167

    (31) asignacion -> VARIABLE EQUALS btrim .

    $end            reduce using rule 31 (asignacion -> VARIABLE EQUALS btrim .)
    RBRACE          reduce using rule 31 (asignacion -> VARIABLE EQUALS btrim .)
    SEMI            reduce using rule 31 (asignacion -> VARIABLE EQUALS btrim .)
    VARIABLE        reduce using rule 31 (asignacion -> VARIABLE EQUALS btrim .)
    CADENA          reduce using rule 31 (asignacion -> VARIABLE EQUALS btrim .)
    BOOLEANO        reduce using rule 31 (asignacion -> VARIABLE EQUALS btrim .)
    ENTERO          reduce using rule 31 (asignacion -> VARIABLE EQUALS btrim .)
    DECIMAL         reduce using rule 31 (asignacion -> VARIABLE EQUALS btrim .)
    RPAREN          reduce using rule 31 (asignacion -> VARIABLE EQUALS btrim .)
    COMMA           reduce using rule 31 (asignacion -> VARIABLE EQUALS btrim .)


state 168

    (32) asignacion -> VARIABLE EQUALS lectura .

    $end            reduce using rule 32 (asignacion -> VARIABLE EQUALS lectura .)
    RBRACE          reduce using rule 32 (asignacion -> VARIABLE EQUALS lectura .)
    SEMI            reduce using rule 32 (asignacion -> VARIABLE EQUALS lectura .)
    VARIABLE        reduce using rule 32 (asignacion -> VARIABLE EQUALS lectura .)
    CADENA          reduce using rule 32 (asignacion -> VARIABLE EQUALS lectura .)
    BOOLEANO        reduce using rule 32 (asignacion -> VARIABLE EQUALS lectura .)
    ENTERO          reduce using rule 32 (asignacion -> VARIABLE EQUALS lectura .)
    DECIMAL         reduce using rule 32 (asignacion -> VARIABLE EQUALS lectura .)
    RPAREN          reduce using rule 32 (asignacion -> VARIABLE EQUALS lectura .)
    COMMA           reduce using rule 32 (asignacion -> VARIABLE EQUALS lectura .)


state 169

    (33) asignacion -> VARIABLE EQUALS bconcat .

    $end            reduce using rule 33 (asignacion -> VARIABLE EQUALS bconcat .)
    RBRACE          reduce using rule 33 (asignacion -> VARIABLE EQUALS bconcat .)
    SEMI            reduce using rule 33 (asignacion -> VARIABLE EQUALS bconcat .)
    VARIABLE        reduce using rule 33 (asignacion -> VARIABLE EQUALS bconcat .)
    CADENA          reduce using rule 33 (asignacion -> VARIABLE EQUALS bconcat .)
    BOOLEANO        reduce using rule 33 (asignacion -> VARIABLE EQUALS bconcat .)
    ENTERO          reduce using rule 33 (asignacion -> VARIABLE EQUALS bconcat .)
    DECIMAL         reduce using rule 33 (asignacion -> VARIABLE EQUALS bconcat .)
    RPAREN          reduce using rule 33 (asignacion -> VARIABLE EQUALS bconcat .)
    COMMA           reduce using rule 33 (asignacion -> VARIABLE EQUALS bconcat .)


state 170

    (35) asignacion -> VARIABLE EQUALS operaciones_mat . SEMI

    SEMI            shift and go to state 219


state 171

    (146) bcolas -> VARIABLE EQUALS NEW . SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE EQUALS NEW . SPLSTACK LPAREN RPAREN SEMI

    SPLQUEUE        shift and go to state 220
    SPLSTACK        shift and go to state 221


state 172

    (174) casting -> VARIABLE EQUALS LPAREN . tiposCast RPAREN VARIABLE SEMI
    (116) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (117) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (165) tiposCast -> . STRING
    (166) tiposCast -> . BOOL
    (167) tiposCast -> . BOOLEAN
    (168) tiposCast -> . DOUBLE
    (169) tiposCast -> . FLOAT
    (170) tiposCast -> . ARRAY
    (171) tiposCast -> . OBJECT
    (172) tiposCast -> . INTEGER
    (173) tiposCast -> . INT
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    STRING          shift and go to state 90
    BOOL            shift and go to state 91
    BOOLEAN         shift and go to state 92
    DOUBLE          shift and go to state 93
    FLOAT           shift and go to state 94
    ARRAY           shift and go to state 95
    OBJECT          shift and go to state 96
    INTEGER         shift and go to state 97
    INT             shift and go to state 98
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    tiposCast                      shift and go to state 222
    valor                          shift and go to state 157
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 173

    (37) asignacion_array -> VARIABLE EQUALS array_def . SEMI

    SEMI            shift and go to state 223


state 174

    (141) array_def -> ARRAY . LPAREN RPAREN
    (142) array_def -> ARRAY . LPAREN array_elmnt RPAREN

    LPAREN          shift and go to state 224


state 175

    (161) bconcat -> VARIABLE CONCAT VARIABLE . SEMI

    SEMI            shift and go to state 225


state 176

    (162) bconcat -> VARIABLE CONCAT CADENA . SEMI

    SEMI            shift and go to state 226


state 177

    (163) bconcat -> VARIABLE CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 227


state 178

    (176) aumentoCasting -> VARIABLE incrementos_mat tipoDato . SEMI

    SEMI            shift and go to state 228


state 179

    (26) asignacion -> VARIABLE EQUALS . valor SEMI
    (29) asignacion -> VARIABLE EQUALS . brand
    (30) asignacion -> VARIABLE EQUALS . escribir
    (31) asignacion -> VARIABLE EQUALS . btrim
    (32) asignacion -> VARIABLE EQUALS . lectura
    (33) asignacion -> VARIABLE EQUALS . bconcat
    (35) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (37) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (177) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (131) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (150) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (151) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (148) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (149) lectura -> . READLINE LPAREN RPAREN SEMI
    (160) bconcat -> . CADENA CONCAT CADENA SEMI
    (161) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (162) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (163) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (164) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (112) operaciones_mat -> . valor operadores valor
    (113) operaciones_mat -> . valor operadores operaciones_mat
    (114) operaciones_mat -> . VARIABLE operadores VARIABLE
    (115) operaciones_mat -> . operaciones_mat_par
    (141) array_def -> . ARRAY LPAREN RPAREN
    (142) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (116) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (117) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    VARIABLE        shift and go to state 163
    RAND            shift and go to state 54
    FWRITE          shift and go to state 55
    TRIM            shift and go to state 56
    READLINE        shift and go to state 40
    CADENA          shift and go to state 77
    ARRAY           shift and go to state 174
    BOOLEANO        shift and go to state 81
    LPAREN          shift and go to state 82
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 164
    brand                          shift and go to state 165
    escribir                       shift and go to state 166
    btrim                          shift and go to state 167
    lectura                        shift and go to state 168
    bconcat                        shift and go to state 169
    operaciones_mat                shift and go to state 170
    array_def                      shift and go to state 173
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    operaciones_mat_par            shift and go to state 79
    numero                         shift and go to state 80

state 180

    (125) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE

    LPAREN          shift and go to state 229


state 181

    (38) constante -> DEFINE LPAREN CADENA . COMMA valor RPAREN SEMI

    COMMA           shift and go to state 230


state 182

    (39) constante -> DEFINE LPAREN NOMBRE . COMMA ARRAY RPAREN SEMI

    COMMA           shift and go to state 231


state 183

    (160) bconcat -> CADENA CONCAT CADENA . SEMI

    SEMI            shift and go to state 232


state 184

    (164) bconcat -> CADENA CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 233


state 185

    (148) lectura -> READLINE LPAREN CADENA . RPAREN SEMI

    RPAREN          shift and go to state 234


state 186

    (149) lectura -> READLINE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 235


state 187

    (81) bwhile -> WHILE LPAREN condicion . RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> WHILE LPAREN condicion . RPAREN COLON stc_bloque

    RPAREN          shift and go to state 236


state 188

    (64) condicion -> VARIABLE . operador_logico VARIABLE
    (66) condicion -> VARIABLE . operador_logico valor
    (67) condicion -> VARIABLE . condicion_booleana VARIABLE
    (69) condicion -> VARIABLE . condicion_booleana valor
    (146) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (96) operador_logico -> . SMALLER
    (97) operador_logico -> . GREATER
    (98) operador_logico -> . IS_SMALLER_OR_EQUAL
    (99) operador_logico -> . IS_GREATER_OR_EQUAL
    (105) condicion_booleana -> . AND
    (106) condicion_booleana -> . OR
    (107) condicion_booleana -> . XOR
    (108) condicion_booleana -> . IS_EQUAL
    (109) condicion_booleana -> . IS_NOT_EQUAL
    (110) condicion_booleana -> . IS_IDENTICAL
    (111) condicion_booleana -> . IS_NOT_IDENTICAL

    EQUALS          shift and go to state 156
    SMALLER         shift and go to state 239
    GREATER         shift and go to state 240
    IS_SMALLER_OR_EQUAL shift and go to state 241
    IS_GREATER_OR_EQUAL shift and go to state 242
    AND             shift and go to state 243
    OR              shift and go to state 244
    XOR             shift and go to state 245
    IS_EQUAL        shift and go to state 246
    IS_NOT_EQUAL    shift and go to state 247
    IS_IDENTICAL    shift and go to state 248
    IS_NOT_IDENTICAL shift and go to state 249

    operador_logico                shift and go to state 237
    condicion_booleana             shift and go to state 238

state 189

    (65) condicion -> valor . operador_logico valor
    (68) condicion -> valor . condicion_booleana valor
    (96) operador_logico -> . SMALLER
    (97) operador_logico -> . GREATER
    (98) operador_logico -> . IS_SMALLER_OR_EQUAL
    (99) operador_logico -> . IS_GREATER_OR_EQUAL
    (105) condicion_booleana -> . AND
    (106) condicion_booleana -> . OR
    (107) condicion_booleana -> . XOR
    (108) condicion_booleana -> . IS_EQUAL
    (109) condicion_booleana -> . IS_NOT_EQUAL
    (110) condicion_booleana -> . IS_IDENTICAL
    (111) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 239
    GREATER         shift and go to state 240
    IS_SMALLER_OR_EQUAL shift and go to state 241
    IS_GREATER_OR_EQUAL shift and go to state 242
    AND             shift and go to state 243
    OR              shift and go to state 244
    XOR             shift and go to state 245
    IS_EQUAL        shift and go to state 246
    IS_NOT_EQUAL    shift and go to state 247
    IS_IDENTICAL    shift and go to state 248
    IS_NOT_IDENTICAL shift and go to state 249

    operador_logico                shift and go to state 250
    condicion_booleana             shift and go to state 251

state 190

    (83) bdo -> DO LBRACE cuerpo . RBRACE bwhile

    RBRACE          shift and go to state 252


state 191

    (70) bfor -> FOR LPAREN asignacion . condicion SEMI for_incr RPAREN stc_bloque_def
    (64) condicion -> . VARIABLE operador_logico VARIABLE
    (65) condicion -> . valor operador_logico valor
    (66) condicion -> . VARIABLE operador_logico valor
    (67) condicion -> . VARIABLE condicion_booleana VARIABLE
    (68) condicion -> . valor condicion_booleana valor
    (69) condicion -> . VARIABLE condicion_booleana valor
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    VARIABLE        shift and go to state 188
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    condicion                      shift and go to state 253
    valor                          shift and go to state 189
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 192

    (80) bforeach -> FOREACH LPAREN VARIABLE . AS VARIABLE RPAREN stc_bloque_def

    AS              shift and go to state 254


state 193

    (73) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (71) stc_bloque -> . stc_bloque SEMI cuerpo
    (72) stc_bloque -> . breturn
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI
    (145) empty -> .

    RETURN          shift and go to state 59
    RBRACE          reduce using rule 145 (empty -> .)
    SEMI            reduce using rule 145 (empty -> .)

    stc_bloque                     shift and go to state 255
    breturn                        shift and go to state 256
    empty                          shift and go to state 58

state 194

    (88) btry -> TRY LBRACE stc_bloque_def . RBRACE catches

    RBRACE          shift and go to state 257


state 195

    (84) bswitch -> SWITCH LPAREN VARIABLE . RPAREN LBRACE cuerpo SEMI RBRACE

    RPAREN          shift and go to state 258


state 196

    (85) bcase -> CASE ENTERO COLON .

    $end            reduce using rule 85 (bcase -> CASE ENTERO COLON .)
    RBRACE          reduce using rule 85 (bcase -> CASE ENTERO COLON .)
    SEMI            reduce using rule 85 (bcase -> CASE ENTERO COLON .)


state 197

    (154) bgoto -> GOTO NOMBRE SEMI .

    $end            reduce using rule 154 (bgoto -> GOTO NOMBRE SEMI .)
    RBRACE          reduce using rule 154 (bgoto -> GOTO NOMBRE SEMI .)
    SEMI            reduce using rule 154 (bgoto -> GOTO NOMBRE SEMI .)


state 198

    (131) brand -> RAND LPAREN ENTERO . COMMA ENTERO RPAREN SEMI

    COMMA           shift and go to state 259


state 199

    (150) escribir -> FWRITE LPAREN NOMBRE . COMMA CADENA RPAREN SEMI

    COMMA           shift and go to state 260


state 200

    (151) btrim -> TRIM LPAREN NOMBRE . LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 261


state 201

    (159) otros -> SMALLER NOMBRE GREATER .

    $end            reduce using rule 159 (otros -> SMALLER NOMBRE GREATER .)
    RBRACE          reduce using rule 159 (otros -> SMALLER NOMBRE GREATER .)
    SEMI            reduce using rule 159 (otros -> SMALLER NOMBRE GREATER .)


state 202

    (138) breturn -> RETURN NULL SEMI .

    $end            reduce using rule 138 (breturn -> RETURN NULL SEMI .)
    RBRACE          reduce using rule 138 (breturn -> RETURN NULL SEMI .)
    SEMI            reduce using rule 138 (breturn -> RETURN NULL SEMI .)


state 203

    (139) breturn -> RETURN VARIABLE SEMI .

    $end            reduce using rule 139 (breturn -> RETURN VARIABLE SEMI .)
    RBRACE          reduce using rule 139 (breturn -> RETURN VARIABLE SEMI .)
    SEMI            reduce using rule 139 (breturn -> RETURN VARIABLE SEMI .)


state 204

    (140) breturn -> RETURN BOOLEANO SEMI .

    $end            reduce using rule 140 (breturn -> RETURN BOOLEANO SEMI .)
    RBRACE          reduce using rule 140 (breturn -> RETURN BOOLEANO SEMI .)
    SEMI            reduce using rule 140 (breturn -> RETURN BOOLEANO SEMI .)


state 205

    (125) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (129) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (128) funcion_void -> FUNCTION NOMBRE LPAREN . RPAREN COLON VOID LBRACE empty RBRACE
    (126) params_list -> . params_list COMMA param
    (127) params_list -> . param
    (123) param -> . VARIABLE
    (124) param -> . asignacion
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    RPAREN          shift and go to state 263
    VARIABLE        shift and go to state 265
    VAR             shift and go to state 31
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65

    params_list                    shift and go to state 262
    param                          shift and go to state 264
    asignacion                     shift and go to state 266
    proteccion                     shift and go to state 110
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34

state 206

    (61) condicion_ifelse -> condicion_if condicion_elseif condicion_else .

    IF              reduce using rule 61 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    $end            reduce using rule 61 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    RBRACE          reduce using rule 61 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    SEMI            reduce using rule 61 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)


state 207

    (57) condicion_else -> ELSE LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (48) imprimir -> . ECHO valor SEMI
    (49) imprimir -> . PRINT valor SEMI
    (50) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (51) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (52) imprimir -> . ECHO bconcat
    (53) imprimir -> . ECHO operaciones_mat SEMI
    (54) imprimir -> . PRINT operaciones_mat SEMI
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (118) funciones -> . funcion_nparams
    (119) funciones -> . proteccion funcion_nparams
    (120) funciones -> . funcion_blank
    (121) funciones -> . proteccion funcion_blank
    (122) funciones -> . funcion_void
    (38) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (39) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (148) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (149) lectura -> . READLINE LPAREN RPAREN SEMI
    (81) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (83) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (70) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (80) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (88) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (62) repiteCondicional -> . condicion_ifelse
    (63) repiteCondicional -> . condicion_ifelse repiteCondicional
    (84) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (85) bcase -> . CASE ENTERO COLON
    (154) bgoto -> . GOTO NOMBRE SEMI
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (155) bcortes -> . EXIT SEMI
    (156) bcortes -> . BREAK SEMI
    (157) bcortes -> . DEFAULT SEMI
    (158) bcortes -> . CONTINUE SEMI
    (131) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (150) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (151) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (159) otros -> . SMALLER NOMBRE GREATER
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI
    (152) comment -> . COMENTARIOS
    (153) comment -> . DOC_COMENTARIOS
    (174) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (160) bconcat -> . CADENA CONCAT CADENA SEMI
    (161) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (162) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (163) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (164) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (125) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (128) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (58) condicion_ifelse -> . condicion_if
    (59) condicion_ifelse -> . condicion_if condicion_else
    (60) condicion_ifelse -> . condicion_if condicion_elseif
    (61) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (145) empty -> .
    (55) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VARIABLE        shift and go to state 30
    VAR             shift and go to state 31
    DEFINE          shift and go to state 38
    READLINE        shift and go to state 40
    WHILE           shift and go to state 41
    DO              shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    TRY             shift and go to state 45
    SWITCH          shift and go to state 47
    CASE            shift and go to state 48
    GOTO            shift and go to state 49
    EXIT            shift and go to state 50
    BREAK           shift and go to state 51
    DEFAULT         shift and go to state 52
    CONTINUE        shift and go to state 53
    RAND            shift and go to state 54
    FWRITE          shift and go to state 55
    TRIM            shift and go to state 56
    SMALLER         shift and go to state 57
    RETURN          shift and go to state 59
    COMENTARIOS     shift and go to state 60
    DOC_COMENTARIOS shift and go to state 61
    LPAREN          shift and go to state 29
    CADENA          shift and go to state 39
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65
    FUNCTION        shift and go to state 66
    RBRACE          reduce using rule 145 (empty -> .)
    IF              shift and go to state 68

    cuerpo                         shift and go to state 267
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    proteccion                     shift and go to state 32
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34
    funcion_nparams                shift and go to state 35
    funcion_blank                  shift and go to state 36
    funcion_void                   shift and go to state 37
    condicion_ifelse               shift and go to state 46
    empty                          shift and go to state 58
    condicion_if                   shift and go to state 67

state 208

    (56) condicion_elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (64) condicion -> . VARIABLE operador_logico VARIABLE
    (65) condicion -> . valor operador_logico valor
    (66) condicion -> . VARIABLE operador_logico valor
    (67) condicion -> . VARIABLE condicion_booleana VARIABLE
    (68) condicion -> . valor condicion_booleana valor
    (69) condicion -> . VARIABLE condicion_booleana valor
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    VARIABLE        shift and go to state 188
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    condicion                      shift and go to state 268
    valor                          shift and go to state 189
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 209

    (55) condicion_if -> IF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 269


state 210

    (112) operaciones_mat -> valor operadores valor .
    (112) operaciones_mat -> valor . operadores valor
    (113) operaciones_mat -> valor . operadores operaciones_mat
    (91) operadores -> . SUMA
    (92) operadores -> . RESTA
    (93) operadores -> . MULTIPLICACION
    (94) operadores -> . DIVISION
    (95) operadores -> . MODULO

    SEMI            reduce using rule 112 (operaciones_mat -> valor operadores valor .)
    SUMA            shift and go to state 148
    RESTA           shift and go to state 149
    MULTIPLICACION  shift and go to state 150
    DIVISION        shift and go to state 151
    MODULO          shift and go to state 152

    operadores                     shift and go to state 147

state 211

    (113) operaciones_mat -> valor operadores operaciones_mat .

    SEMI            reduce using rule 113 (operaciones_mat -> valor operadores operaciones_mat .)


state 212

    (51) imprimir -> ECHO NOMBRE LBRACKET ENTERO . RBRACKET SEMI

    RBRACKET        shift and go to state 270


state 213

    (114) operaciones_mat -> VARIABLE operadores VARIABLE .

    SEMI            reduce using rule 114 (operaciones_mat -> VARIABLE operadores VARIABLE .)


state 214

    (116) operaciones_mat_par -> LPAREN valor operadores . valor RPAREN
    (117) operaciones_mat_par -> LPAREN valor operadores . operaciones_mat_par RPAREN
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (116) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (117) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    LPAREN          shift and go to state 82
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 271
    operaciones_mat_par            shift and go to state 272
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 215

    (50) imprimir -> PRINT LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 273


state 216

    (175) casting -> LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 274


state 217

    (177) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . tipoDato SEMI
    (114) operaciones_mat -> VARIABLE operadores . VARIABLE
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    VARIABLE        shift and go to state 213
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    tipoDato                       shift and go to state 275
    numero                         shift and go to state 80

state 218

    (26) asignacion -> VARIABLE EQUALS valor SEMI .

    $end            reduce using rule 26 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RBRACE          reduce using rule 26 (asignacion -> VARIABLE EQUALS valor SEMI .)
    SEMI            reduce using rule 26 (asignacion -> VARIABLE EQUALS valor SEMI .)
    VARIABLE        reduce using rule 26 (asignacion -> VARIABLE EQUALS valor SEMI .)
    CADENA          reduce using rule 26 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BOOLEANO        reduce using rule 26 (asignacion -> VARIABLE EQUALS valor SEMI .)
    ENTERO          reduce using rule 26 (asignacion -> VARIABLE EQUALS valor SEMI .)
    DECIMAL         reduce using rule 26 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RPAREN          reduce using rule 26 (asignacion -> VARIABLE EQUALS valor SEMI .)
    COMMA           reduce using rule 26 (asignacion -> VARIABLE EQUALS valor SEMI .)


state 219

    (35) asignacion -> VARIABLE EQUALS operaciones_mat SEMI .

    $end            reduce using rule 35 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RBRACE          reduce using rule 35 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    SEMI            reduce using rule 35 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    VARIABLE        reduce using rule 35 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    CADENA          reduce using rule 35 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BOOLEANO        reduce using rule 35 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    ENTERO          reduce using rule 35 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    DECIMAL         reduce using rule 35 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RPAREN          reduce using rule 35 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    COMMA           reduce using rule 35 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)


state 220

    (146) bcolas -> VARIABLE EQUALS NEW SPLQUEUE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 276


state 221

    (147) bpila -> VARIABLE EQUALS NEW SPLSTACK . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 277


state 222

    (174) casting -> VARIABLE EQUALS LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 278


state 223

    (37) asignacion_array -> VARIABLE EQUALS array_def SEMI .

    $end            reduce using rule 37 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RBRACE          reduce using rule 37 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    SEMI            reduce using rule 37 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    VARIABLE        reduce using rule 37 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    CADENA          reduce using rule 37 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BOOLEANO        reduce using rule 37 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    ENTERO          reduce using rule 37 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    DECIMAL         reduce using rule 37 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RPAREN          reduce using rule 37 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    COMMA           reduce using rule 37 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)


state 224

    (141) array_def -> ARRAY LPAREN . RPAREN
    (142) array_def -> ARRAY LPAREN . array_elmnt RPAREN
    (143) array_elmnt -> . array_elmnt COMMA valor
    (144) array_elmnt -> . valor
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    RPAREN          shift and go to state 279
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    array_elmnt                    shift and go to state 280
    valor                          shift and go to state 281
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 225

    (161) bconcat -> VARIABLE CONCAT VARIABLE SEMI .

    $end            reduce using rule 161 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RBRACE          reduce using rule 161 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    SEMI            reduce using rule 161 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    VARIABLE        reduce using rule 161 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    CADENA          reduce using rule 161 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BOOLEANO        reduce using rule 161 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    ENTERO          reduce using rule 161 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    DECIMAL         reduce using rule 161 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RPAREN          reduce using rule 161 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    COMMA           reduce using rule 161 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)


state 226

    (162) bconcat -> VARIABLE CONCAT CADENA SEMI .

    $end            reduce using rule 162 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 162 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    SEMI            reduce using rule 162 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 162 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    CADENA          reduce using rule 162 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 162 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 162 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 162 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 162 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    COMMA           reduce using rule 162 (bconcat -> VARIABLE CONCAT CADENA SEMI .)


state 227

    (163) bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 163 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 163 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 163 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 163 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 163 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 163 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 163 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 163 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 163 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 163 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)


state 228

    (176) aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .

    $end            reduce using rule 176 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RBRACE          reduce using rule 176 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    SEMI            reduce using rule 176 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    VARIABLE        reduce using rule 176 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    CADENA          reduce using rule 176 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BOOLEANO        reduce using rule 176 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    ENTERO          reduce using rule 176 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    DECIMAL         reduce using rule 176 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RPAREN          reduce using rule 176 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    COMMA           reduce using rule 176 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)


state 229

    (125) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (129) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (126) params_list -> . params_list COMMA param
    (127) params_list -> . param
    (123) param -> . VARIABLE
    (124) param -> . asignacion
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    RPAREN          shift and go to state 282
    VARIABLE        shift and go to state 265
    VAR             shift and go to state 31
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65

    params_list                    shift and go to state 262
    param                          shift and go to state 264
    asignacion                     shift and go to state 266
    proteccion                     shift and go to state 110
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34

state 230

    (38) constante -> DEFINE LPAREN CADENA COMMA . valor RPAREN SEMI
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 283
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 231

    (39) constante -> DEFINE LPAREN NOMBRE COMMA . ARRAY RPAREN SEMI

    ARRAY           shift and go to state 284


state 232

    (160) bconcat -> CADENA CONCAT CADENA SEMI .

    $end            reduce using rule 160 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 160 (bconcat -> CADENA CONCAT CADENA SEMI .)
    SEMI            reduce using rule 160 (bconcat -> CADENA CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 160 (bconcat -> CADENA CONCAT CADENA SEMI .)
    CADENA          reduce using rule 160 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 160 (bconcat -> CADENA CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 160 (bconcat -> CADENA CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 160 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 160 (bconcat -> CADENA CONCAT CADENA SEMI .)
    COMMA           reduce using rule 160 (bconcat -> CADENA CONCAT CADENA SEMI .)


state 233

    (164) bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 164 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 164 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 164 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 164 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 164 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 164 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 164 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 164 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 164 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 164 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)


state 234

    (148) lectura -> READLINE LPAREN CADENA RPAREN . SEMI

    SEMI            shift and go to state 285


state 235

    (149) lectura -> READLINE LPAREN RPAREN SEMI .

    $end            reduce using rule 149 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 149 (lectura -> READLINE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 149 (lectura -> READLINE LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 149 (lectura -> READLINE LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 149 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 149 (lectura -> READLINE LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 149 (lectura -> READLINE LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 149 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 149 (lectura -> READLINE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 149 (lectura -> READLINE LPAREN RPAREN SEMI .)


state 236

    (81) bwhile -> WHILE LPAREN condicion RPAREN . LBRACE stc_bloque RBRACE
    (82) bwhile -> WHILE LPAREN condicion RPAREN . COLON stc_bloque

    LBRACE          shift and go to state 286
    COLON           shift and go to state 287


state 237

    (64) condicion -> VARIABLE operador_logico . VARIABLE
    (66) condicion -> VARIABLE operador_logico . valor
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    VARIABLE        shift and go to state 288
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 289
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 238

    (67) condicion -> VARIABLE condicion_booleana . VARIABLE
    (69) condicion -> VARIABLE condicion_booleana . valor
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    VARIABLE        shift and go to state 290
    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 291
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 239

    (96) operador_logico -> SMALLER .

    VARIABLE        reduce using rule 96 (operador_logico -> SMALLER .)
    CADENA          reduce using rule 96 (operador_logico -> SMALLER .)
    BOOLEANO        reduce using rule 96 (operador_logico -> SMALLER .)
    ENTERO          reduce using rule 96 (operador_logico -> SMALLER .)
    DECIMAL         reduce using rule 96 (operador_logico -> SMALLER .)


state 240

    (97) operador_logico -> GREATER .

    VARIABLE        reduce using rule 97 (operador_logico -> GREATER .)
    CADENA          reduce using rule 97 (operador_logico -> GREATER .)
    BOOLEANO        reduce using rule 97 (operador_logico -> GREATER .)
    ENTERO          reduce using rule 97 (operador_logico -> GREATER .)
    DECIMAL         reduce using rule 97 (operador_logico -> GREATER .)


state 241

    (98) operador_logico -> IS_SMALLER_OR_EQUAL .

    VARIABLE        reduce using rule 98 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    CADENA          reduce using rule 98 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    BOOLEANO        reduce using rule 98 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    ENTERO          reduce using rule 98 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 98 (operador_logico -> IS_SMALLER_OR_EQUAL .)


state 242

    (99) operador_logico -> IS_GREATER_OR_EQUAL .

    VARIABLE        reduce using rule 99 (operador_logico -> IS_GREATER_OR_EQUAL .)
    CADENA          reduce using rule 99 (operador_logico -> IS_GREATER_OR_EQUAL .)
    BOOLEANO        reduce using rule 99 (operador_logico -> IS_GREATER_OR_EQUAL .)
    ENTERO          reduce using rule 99 (operador_logico -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 99 (operador_logico -> IS_GREATER_OR_EQUAL .)


state 243

    (105) condicion_booleana -> AND .

    VARIABLE        reduce using rule 105 (condicion_booleana -> AND .)
    CADENA          reduce using rule 105 (condicion_booleana -> AND .)
    BOOLEANO        reduce using rule 105 (condicion_booleana -> AND .)
    ENTERO          reduce using rule 105 (condicion_booleana -> AND .)
    DECIMAL         reduce using rule 105 (condicion_booleana -> AND .)


state 244

    (106) condicion_booleana -> OR .

    VARIABLE        reduce using rule 106 (condicion_booleana -> OR .)
    CADENA          reduce using rule 106 (condicion_booleana -> OR .)
    BOOLEANO        reduce using rule 106 (condicion_booleana -> OR .)
    ENTERO          reduce using rule 106 (condicion_booleana -> OR .)
    DECIMAL         reduce using rule 106 (condicion_booleana -> OR .)


state 245

    (107) condicion_booleana -> XOR .

    VARIABLE        reduce using rule 107 (condicion_booleana -> XOR .)
    CADENA          reduce using rule 107 (condicion_booleana -> XOR .)
    BOOLEANO        reduce using rule 107 (condicion_booleana -> XOR .)
    ENTERO          reduce using rule 107 (condicion_booleana -> XOR .)
    DECIMAL         reduce using rule 107 (condicion_booleana -> XOR .)


state 246

    (108) condicion_booleana -> IS_EQUAL .

    VARIABLE        reduce using rule 108 (condicion_booleana -> IS_EQUAL .)
    CADENA          reduce using rule 108 (condicion_booleana -> IS_EQUAL .)
    BOOLEANO        reduce using rule 108 (condicion_booleana -> IS_EQUAL .)
    ENTERO          reduce using rule 108 (condicion_booleana -> IS_EQUAL .)
    DECIMAL         reduce using rule 108 (condicion_booleana -> IS_EQUAL .)


state 247

    (109) condicion_booleana -> IS_NOT_EQUAL .

    VARIABLE        reduce using rule 109 (condicion_booleana -> IS_NOT_EQUAL .)
    CADENA          reduce using rule 109 (condicion_booleana -> IS_NOT_EQUAL .)
    BOOLEANO        reduce using rule 109 (condicion_booleana -> IS_NOT_EQUAL .)
    ENTERO          reduce using rule 109 (condicion_booleana -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 109 (condicion_booleana -> IS_NOT_EQUAL .)


state 248

    (110) condicion_booleana -> IS_IDENTICAL .

    VARIABLE        reduce using rule 110 (condicion_booleana -> IS_IDENTICAL .)
    CADENA          reduce using rule 110 (condicion_booleana -> IS_IDENTICAL .)
    BOOLEANO        reduce using rule 110 (condicion_booleana -> IS_IDENTICAL .)
    ENTERO          reduce using rule 110 (condicion_booleana -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 110 (condicion_booleana -> IS_IDENTICAL .)


state 249

    (111) condicion_booleana -> IS_NOT_IDENTICAL .

    VARIABLE        reduce using rule 111 (condicion_booleana -> IS_NOT_IDENTICAL .)
    CADENA          reduce using rule 111 (condicion_booleana -> IS_NOT_IDENTICAL .)
    BOOLEANO        reduce using rule 111 (condicion_booleana -> IS_NOT_IDENTICAL .)
    ENTERO          reduce using rule 111 (condicion_booleana -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 111 (condicion_booleana -> IS_NOT_IDENTICAL .)


state 250

    (65) condicion -> valor operador_logico . valor
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 292
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 251

    (68) condicion -> valor condicion_booleana . valor
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 293
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 252

    (83) bdo -> DO LBRACE cuerpo RBRACE . bwhile
    (81) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque

    WHILE           shift and go to state 41

    bwhile                         shift and go to state 294

state 253

    (70) bfor -> FOR LPAREN asignacion condicion . SEMI for_incr RPAREN stc_bloque_def

    SEMI            shift and go to state 295


state 254

    (80) bforeach -> FOREACH LPAREN VARIABLE AS . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 296


state 255

    (73) stc_bloque_def -> LBRACE stc_bloque . RBRACE
    (71) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 297
    SEMI            shift and go to state 298


state 256

    (72) stc_bloque -> breturn .

    RBRACE          reduce using rule 72 (stc_bloque -> breturn .)
    SEMI            reduce using rule 72 (stc_bloque -> breturn .)
    $end            reduce using rule 72 (stc_bloque -> breturn .)


state 257

    (88) btry -> TRY LBRACE stc_bloque_def RBRACE . catches
    (89) catches -> . catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
    (90) catches -> . empty
    (145) empty -> .

    CATCH           reduce using rule 145 (empty -> .)
    $end            reduce using rule 145 (empty -> .)
    RBRACE          reduce using rule 145 (empty -> .)
    SEMI            reduce using rule 145 (empty -> .)

    catches                        shift and go to state 299
    empty                          shift and go to state 300

state 258

    (84) bswitch -> SWITCH LPAREN VARIABLE RPAREN . LBRACE cuerpo SEMI RBRACE

    LBRACE          shift and go to state 301


state 259

    (131) brand -> RAND LPAREN ENTERO COMMA . ENTERO RPAREN SEMI

    ENTERO          shift and go to state 302


state 260

    (150) escribir -> FWRITE LPAREN NOMBRE COMMA . CADENA RPAREN SEMI

    CADENA          shift and go to state 303


state 261

    (151) btrim -> TRIM LPAREN NOMBRE LPAREN . NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 304


state 262

    (125) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list . RPAREN stc_bloque_def
    (126) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 305
    COMMA           shift and go to state 306


state 263

    (129) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (130) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (128) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN . COLON VOID LBRACE empty RBRACE
    (73) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 308
    COLON           shift and go to state 309

    stc_bloque_def                 shift and go to state 307

state 264

    (127) params_list -> param .

    RPAREN          reduce using rule 127 (params_list -> param .)
    COMMA           reduce using rule 127 (params_list -> param .)


state 265

    (123) param -> VARIABLE .
    (26) asignacion -> VARIABLE . EQUALS valor SEMI
    (29) asignacion -> VARIABLE . EQUALS brand
    (30) asignacion -> VARIABLE . EQUALS escribir
    (31) asignacion -> VARIABLE . EQUALS btrim
    (32) asignacion -> VARIABLE . EQUALS lectura
    (33) asignacion -> VARIABLE . EQUALS bconcat
    (35) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (37) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (176) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (100) incrementos_mat -> . MINUS_EQUAL
    (101) incrementos_mat -> . MOD_EQUAL
    (102) incrementos_mat -> . MUL_EQUAL
    (103) incrementos_mat -> . PLUS_EQUAL
    (104) incrementos_mat -> . DIV_EQUAL

    RPAREN          reduce using rule 123 (param -> VARIABLE .)
    COMMA           reduce using rule 123 (param -> VARIABLE .)
    EQUALS          shift and go to state 179
    MINUS_EQUAL     shift and go to state 103
    MOD_EQUAL       shift and go to state 104
    MUL_EQUAL       shift and go to state 105
    PLUS_EQUAL      shift and go to state 106
    DIV_EQUAL       shift and go to state 107

    incrementos_mat                shift and go to state 102

state 266

    (124) param -> asignacion .

    RPAREN          reduce using rule 124 (param -> asignacion .)
    COMMA           reduce using rule 124 (param -> asignacion .)


state 267

    (57) condicion_else -> ELSE LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 310


state 268

    (56) condicion_elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 311


state 269

    (55) condicion_if -> IF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 312


state 270

    (51) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET . SEMI

    SEMI            shift and go to state 313


state 271

    (116) operaciones_mat_par -> LPAREN valor operadores valor . RPAREN

    RPAREN          shift and go to state 314


state 272

    (117) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par . RPAREN

    RPAREN          shift and go to state 315


state 273

    (50) imprimir -> PRINT LPAREN valor RPAREN SEMI .

    $end            reduce using rule 50 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 50 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 50 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)


state 274

    (175) casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 175 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 175 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 175 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 275

    (177) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato . SEMI

    SEMI            shift and go to state 316


state 276

    (146) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 317


state 277

    (147) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 318


state 278

    (174) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 319


state 279

    (141) array_def -> ARRAY LPAREN RPAREN .

    SEMI            reduce using rule 141 (array_def -> ARRAY LPAREN RPAREN .)


state 280

    (142) array_def -> ARRAY LPAREN array_elmnt . RPAREN
    (143) array_elmnt -> array_elmnt . COMMA valor

    RPAREN          shift and go to state 320
    COMMA           shift and go to state 321


state 281

    (144) array_elmnt -> valor .

    RPAREN          reduce using rule 144 (array_elmnt -> valor .)
    COMMA           reduce using rule 144 (array_elmnt -> valor .)


state 282

    (129) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (130) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (73) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 308

    stc_bloque_def                 shift and go to state 307

state 283

    (38) constante -> DEFINE LPAREN CADENA COMMA valor . RPAREN SEMI

    RPAREN          shift and go to state 322


state 284

    (39) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY . RPAREN SEMI

    RPAREN          shift and go to state 323


state 285

    (148) lectura -> READLINE LPAREN CADENA RPAREN SEMI .

    $end            reduce using rule 148 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 148 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    SEMI            reduce using rule 148 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 148 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    CADENA          reduce using rule 148 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 148 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 148 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 148 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 148 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    COMMA           reduce using rule 148 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)


state 286

    (81) bwhile -> WHILE LPAREN condicion RPAREN LBRACE . stc_bloque RBRACE
    (71) stc_bloque -> . stc_bloque SEMI cuerpo
    (72) stc_bloque -> . breturn
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI
    (145) empty -> .

    RETURN          shift and go to state 59
    RBRACE          reduce using rule 145 (empty -> .)
    SEMI            reduce using rule 145 (empty -> .)

    stc_bloque                     shift and go to state 324
    breturn                        shift and go to state 256
    empty                          shift and go to state 58

state 287

    (82) bwhile -> WHILE LPAREN condicion RPAREN COLON . stc_bloque
    (71) stc_bloque -> . stc_bloque SEMI cuerpo
    (72) stc_bloque -> . breturn
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI
    (145) empty -> .

    RETURN          shift and go to state 59
    RBRACE          reduce using rule 145 (empty -> .)
    SEMI            reduce using rule 145 (empty -> .)
    $end            reduce using rule 145 (empty -> .)

    stc_bloque                     shift and go to state 325
    breturn                        shift and go to state 256
    empty                          shift and go to state 58

state 288

    (64) condicion -> VARIABLE operador_logico VARIABLE .
    (146) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 64 (condicion -> VARIABLE operador_logico VARIABLE .)
    SEMI            reduce using rule 64 (condicion -> VARIABLE operador_logico VARIABLE .)
    EQUALS          shift and go to state 156


state 289

    (66) condicion -> VARIABLE operador_logico valor .

    RPAREN          reduce using rule 66 (condicion -> VARIABLE operador_logico valor .)
    SEMI            reduce using rule 66 (condicion -> VARIABLE operador_logico valor .)


state 290

    (67) condicion -> VARIABLE condicion_booleana VARIABLE .
    (146) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 67 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    SEMI            reduce using rule 67 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    EQUALS          shift and go to state 156


state 291

    (69) condicion -> VARIABLE condicion_booleana valor .

    RPAREN          reduce using rule 69 (condicion -> VARIABLE condicion_booleana valor .)
    SEMI            reduce using rule 69 (condicion -> VARIABLE condicion_booleana valor .)


state 292

    (65) condicion -> valor operador_logico valor .

    RPAREN          reduce using rule 65 (condicion -> valor operador_logico valor .)
    SEMI            reduce using rule 65 (condicion -> valor operador_logico valor .)


state 293

    (68) condicion -> valor condicion_booleana valor .

    RPAREN          reduce using rule 68 (condicion -> valor condicion_booleana valor .)
    SEMI            reduce using rule 68 (condicion -> valor condicion_booleana valor .)


state 294

    (83) bdo -> DO LBRACE cuerpo RBRACE bwhile .

    $end            reduce using rule 83 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    RBRACE          reduce using rule 83 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    SEMI            reduce using rule 83 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)


state 295

    (70) bfor -> FOR LPAREN asignacion condicion SEMI . for_incr RPAREN stc_bloque_def
    (74) for_incr -> . VARIABLE SUMA SUMA
    (75) for_incr -> . SUMA SUMA VARIABLE
    (76) for_incr -> . VARIABLE RESTA RESTA
    (77) for_incr -> . RESTA RESTA VARIABLE
    (78) for_incr -> . VARIABLE SUMA EQUALS numero
    (79) for_incr -> . VARIABLE RESTA EQUALS numero

    VARIABLE        shift and go to state 327
    SUMA            shift and go to state 328
    RESTA           shift and go to state 329

    for_incr                       shift and go to state 326

state 296

    (80) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 330


state 297

    (73) stc_bloque_def -> LBRACE stc_bloque RBRACE .

    RBRACE          reduce using rule 73 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    $end            reduce using rule 73 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 73 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    CATCH           reduce using rule 73 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)


state 298

    (71) stc_bloque -> stc_bloque SEMI . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (48) imprimir -> . ECHO valor SEMI
    (49) imprimir -> . PRINT valor SEMI
    (50) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (51) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (52) imprimir -> . ECHO bconcat
    (53) imprimir -> . ECHO operaciones_mat SEMI
    (54) imprimir -> . PRINT operaciones_mat SEMI
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (118) funciones -> . funcion_nparams
    (119) funciones -> . proteccion funcion_nparams
    (120) funciones -> . funcion_blank
    (121) funciones -> . proteccion funcion_blank
    (122) funciones -> . funcion_void
    (38) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (39) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (148) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (149) lectura -> . READLINE LPAREN RPAREN SEMI
    (81) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (83) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (70) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (80) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (88) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (62) repiteCondicional -> . condicion_ifelse
    (63) repiteCondicional -> . condicion_ifelse repiteCondicional
    (84) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (85) bcase -> . CASE ENTERO COLON
    (154) bgoto -> . GOTO NOMBRE SEMI
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (155) bcortes -> . EXIT SEMI
    (156) bcortes -> . BREAK SEMI
    (157) bcortes -> . DEFAULT SEMI
    (158) bcortes -> . CONTINUE SEMI
    (131) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (150) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (151) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (159) otros -> . SMALLER NOMBRE GREATER
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI
    (152) comment -> . COMENTARIOS
    (153) comment -> . DOC_COMENTARIOS
    (174) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (160) bconcat -> . CADENA CONCAT CADENA SEMI
    (161) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (162) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (163) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (164) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (125) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (128) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (58) condicion_ifelse -> . condicion_if
    (59) condicion_ifelse -> . condicion_if condicion_else
    (60) condicion_ifelse -> . condicion_if condicion_elseif
    (61) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (145) empty -> .
    (55) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VARIABLE        shift and go to state 30
    VAR             shift and go to state 31
    DEFINE          shift and go to state 38
    READLINE        shift and go to state 40
    WHILE           shift and go to state 41
    DO              shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    TRY             shift and go to state 45
    SWITCH          shift and go to state 47
    CASE            shift and go to state 48
    GOTO            shift and go to state 49
    EXIT            shift and go to state 50
    BREAK           shift and go to state 51
    DEFAULT         shift and go to state 52
    CONTINUE        shift and go to state 53
    RAND            shift and go to state 54
    FWRITE          shift and go to state 55
    TRIM            shift and go to state 56
    SMALLER         shift and go to state 57
    RETURN          shift and go to state 59
    COMENTARIOS     shift and go to state 60
    DOC_COMENTARIOS shift and go to state 61
    LPAREN          shift and go to state 29
    CADENA          shift and go to state 39
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65
    FUNCTION        shift and go to state 66
    RBRACE          reduce using rule 145 (empty -> .)
    SEMI            reduce using rule 145 (empty -> .)
    $end            reduce using rule 145 (empty -> .)
    IF              shift and go to state 68

    cuerpo                         shift and go to state 331
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    proteccion                     shift and go to state 32
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34
    funcion_nparams                shift and go to state 35
    funcion_blank                  shift and go to state 36
    funcion_void                   shift and go to state 37
    condicion_ifelse               shift and go to state 46
    empty                          shift and go to state 58
    condicion_if                   shift and go to state 67

state 299

    (88) btry -> TRY LBRACE stc_bloque_def RBRACE catches .
    (89) catches -> catches . CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    $end            reduce using rule 88 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    RBRACE          reduce using rule 88 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    SEMI            reduce using rule 88 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    CATCH           shift and go to state 332


state 300

    (90) catches -> empty .

    CATCH           reduce using rule 90 (catches -> empty .)
    $end            reduce using rule 90 (catches -> empty .)
    RBRACE          reduce using rule 90 (catches -> empty .)
    SEMI            reduce using rule 90 (catches -> empty .)


state 301

    (84) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE . cuerpo SEMI RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (48) imprimir -> . ECHO valor SEMI
    (49) imprimir -> . PRINT valor SEMI
    (50) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (51) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (52) imprimir -> . ECHO bconcat
    (53) imprimir -> . ECHO operaciones_mat SEMI
    (54) imprimir -> . PRINT operaciones_mat SEMI
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (118) funciones -> . funcion_nparams
    (119) funciones -> . proteccion funcion_nparams
    (120) funciones -> . funcion_blank
    (121) funciones -> . proteccion funcion_blank
    (122) funciones -> . funcion_void
    (38) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (39) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (148) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (149) lectura -> . READLINE LPAREN RPAREN SEMI
    (81) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (83) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (70) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (80) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (88) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (62) repiteCondicional -> . condicion_ifelse
    (63) repiteCondicional -> . condicion_ifelse repiteCondicional
    (84) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (85) bcase -> . CASE ENTERO COLON
    (154) bgoto -> . GOTO NOMBRE SEMI
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (155) bcortes -> . EXIT SEMI
    (156) bcortes -> . BREAK SEMI
    (157) bcortes -> . DEFAULT SEMI
    (158) bcortes -> . CONTINUE SEMI
    (131) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (150) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (151) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (159) otros -> . SMALLER NOMBRE GREATER
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI
    (152) comment -> . COMENTARIOS
    (153) comment -> . DOC_COMENTARIOS
    (174) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (160) bconcat -> . CADENA CONCAT CADENA SEMI
    (161) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (162) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (163) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (164) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (125) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (128) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (58) condicion_ifelse -> . condicion_if
    (59) condicion_ifelse -> . condicion_if condicion_else
    (60) condicion_ifelse -> . condicion_if condicion_elseif
    (61) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (145) empty -> .
    (55) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VARIABLE        shift and go to state 30
    VAR             shift and go to state 31
    DEFINE          shift and go to state 38
    READLINE        shift and go to state 40
    WHILE           shift and go to state 41
    DO              shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    TRY             shift and go to state 45
    SWITCH          shift and go to state 47
    CASE            shift and go to state 48
    GOTO            shift and go to state 49
    EXIT            shift and go to state 50
    BREAK           shift and go to state 51
    DEFAULT         shift and go to state 52
    CONTINUE        shift and go to state 53
    RAND            shift and go to state 54
    FWRITE          shift and go to state 55
    TRIM            shift and go to state 56
    SMALLER         shift and go to state 57
    RETURN          shift and go to state 59
    COMENTARIOS     shift and go to state 60
    DOC_COMENTARIOS shift and go to state 61
    LPAREN          shift and go to state 29
    CADENA          shift and go to state 39
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65
    FUNCTION        shift and go to state 66
    SEMI            reduce using rule 145 (empty -> .)
    IF              shift and go to state 68

    cuerpo                         shift and go to state 333
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    proteccion                     shift and go to state 32
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34
    funcion_nparams                shift and go to state 35
    funcion_blank                  shift and go to state 36
    funcion_void                   shift and go to state 37
    condicion_ifelse               shift and go to state 46
    empty                          shift and go to state 58
    condicion_if                   shift and go to state 67

state 302

    (131) brand -> RAND LPAREN ENTERO COMMA ENTERO . RPAREN SEMI

    RPAREN          shift and go to state 334


state 303

    (150) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA . RPAREN SEMI

    RPAREN          shift and go to state 335


state 304

    (151) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE . RPAREN RPAREN SEMI

    RPAREN          shift and go to state 336


state 305

    (125) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN . stc_bloque_def
    (73) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 193

    stc_bloque_def                 shift and go to state 337

state 306

    (126) params_list -> params_list COMMA . param
    (123) param -> . VARIABLE
    (124) param -> . asignacion
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 265
    VAR             shift and go to state 31
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65

    param                          shift and go to state 338
    asignacion                     shift and go to state 266
    proteccion                     shift and go to state 110
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34

state 307

    (129) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .

    $end            reduce using rule 129 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 129 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    SEMI            reduce using rule 129 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)


state 308

    (130) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE . empty RBRACE
    (73) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (145) empty -> .
    (71) stc_bloque -> . stc_bloque SEMI cuerpo
    (72) stc_bloque -> . breturn
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI

    RBRACE          reduce using rule 145 (empty -> .)
    SEMI            reduce using rule 145 (empty -> .)
    RETURN          shift and go to state 59

    empty                          shift and go to state 339
    stc_bloque                     shift and go to state 255
    breturn                        shift and go to state 256

state 309

    (128) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON . VOID LBRACE empty RBRACE

    VOID            shift and go to state 340


state 310

    (57) condicion_else -> ELSE LBRACE cuerpo RBRACE .

    IF              reduce using rule 57 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    $end            reduce using rule 57 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 57 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 57 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)


state 311

    (56) condicion_elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 341


state 312

    (55) condicion_if -> IF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (48) imprimir -> . ECHO valor SEMI
    (49) imprimir -> . PRINT valor SEMI
    (50) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (51) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (52) imprimir -> . ECHO bconcat
    (53) imprimir -> . ECHO operaciones_mat SEMI
    (54) imprimir -> . PRINT operaciones_mat SEMI
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (118) funciones -> . funcion_nparams
    (119) funciones -> . proteccion funcion_nparams
    (120) funciones -> . funcion_blank
    (121) funciones -> . proteccion funcion_blank
    (122) funciones -> . funcion_void
    (38) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (39) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (148) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (149) lectura -> . READLINE LPAREN RPAREN SEMI
    (81) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (83) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (70) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (80) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (88) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (62) repiteCondicional -> . condicion_ifelse
    (63) repiteCondicional -> . condicion_ifelse repiteCondicional
    (84) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (85) bcase -> . CASE ENTERO COLON
    (154) bgoto -> . GOTO NOMBRE SEMI
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (155) bcortes -> . EXIT SEMI
    (156) bcortes -> . BREAK SEMI
    (157) bcortes -> . DEFAULT SEMI
    (158) bcortes -> . CONTINUE SEMI
    (131) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (150) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (151) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (159) otros -> . SMALLER NOMBRE GREATER
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI
    (152) comment -> . COMENTARIOS
    (153) comment -> . DOC_COMENTARIOS
    (174) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (160) bconcat -> . CADENA CONCAT CADENA SEMI
    (161) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (162) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (163) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (164) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (125) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (128) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (58) condicion_ifelse -> . condicion_if
    (59) condicion_ifelse -> . condicion_if condicion_else
    (60) condicion_ifelse -> . condicion_if condicion_elseif
    (61) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (145) empty -> .
    (55) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VARIABLE        shift and go to state 30
    VAR             shift and go to state 31
    DEFINE          shift and go to state 38
    READLINE        shift and go to state 40
    WHILE           shift and go to state 41
    DO              shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    TRY             shift and go to state 45
    SWITCH          shift and go to state 47
    CASE            shift and go to state 48
    GOTO            shift and go to state 49
    EXIT            shift and go to state 50
    BREAK           shift and go to state 51
    DEFAULT         shift and go to state 52
    CONTINUE        shift and go to state 53
    RAND            shift and go to state 54
    FWRITE          shift and go to state 55
    TRIM            shift and go to state 56
    SMALLER         shift and go to state 57
    RETURN          shift and go to state 59
    COMENTARIOS     shift and go to state 60
    DOC_COMENTARIOS shift and go to state 61
    LPAREN          shift and go to state 29
    CADENA          shift and go to state 39
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65
    FUNCTION        shift and go to state 66
    RBRACE          reduce using rule 145 (empty -> .)
    IF              shift and go to state 68

    cuerpo                         shift and go to state 342
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    proteccion                     shift and go to state 32
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34
    funcion_nparams                shift and go to state 35
    funcion_blank                  shift and go to state 36
    funcion_void                   shift and go to state 37
    condicion_ifelse               shift and go to state 46
    empty                          shift and go to state 58
    condicion_if                   shift and go to state 67

state 313

    (51) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .

    $end            reduce using rule 51 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    RBRACE          reduce using rule 51 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    SEMI            reduce using rule 51 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)


state 314

    (116) operaciones_mat_par -> LPAREN valor operadores valor RPAREN .

    SEMI            reduce using rule 116 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)
    RPAREN          reduce using rule 116 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)


state 315

    (117) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .

    SEMI            reduce using rule 117 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)
    RPAREN          reduce using rule 117 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)


state 316

    (177) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .

    $end            reduce using rule 177 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RBRACE          reduce using rule 177 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    SEMI            reduce using rule 177 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    VARIABLE        reduce using rule 177 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    CADENA          reduce using rule 177 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BOOLEANO        reduce using rule 177 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    ENTERO          reduce using rule 177 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    DECIMAL         reduce using rule 177 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RPAREN          reduce using rule 177 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    COMMA           reduce using rule 177 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)


state 317

    (146) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 343


state 318

    (147) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN . SEMI

    SEMI            shift and go to state 344


state 319

    (174) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 345


state 320

    (142) array_def -> ARRAY LPAREN array_elmnt RPAREN .

    SEMI            reduce using rule 142 (array_def -> ARRAY LPAREN array_elmnt RPAREN .)


state 321

    (143) array_elmnt -> array_elmnt COMMA . valor
    (40) valor -> . tipoDato
    (41) valor -> . bcolas
    (42) valor -> . bpila
    (43) tipoDato -> . numero
    (44) tipoDato -> . CADENA
    (45) tipoDato -> . BOOLEANO
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    CADENA          shift and go to state 88
    BOOLEANO        shift and go to state 81
    VARIABLE        shift and go to state 158
    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    valor                          shift and go to state 346
    tipoDato                       shift and go to state 74
    bcolas                         shift and go to state 75
    bpila                          shift and go to state 76
    numero                         shift and go to state 80

state 322

    (38) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN . SEMI

    SEMI            shift and go to state 347


state 323

    (39) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN . SEMI

    SEMI            shift and go to state 348


state 324

    (81) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque . RBRACE
    (71) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 349
    SEMI            shift and go to state 298


state 325

    (82) bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .
    (71) stc_bloque -> stc_bloque . SEMI cuerpo

  ! shift/reduce conflict for SEMI resolved as shift
    $end            reduce using rule 82 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    RBRACE          reduce using rule 82 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    SEMI            shift and go to state 298

  ! SEMI            [ reduce using rule 82 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .) ]


state 326

    (70) bfor -> FOR LPAREN asignacion condicion SEMI for_incr . RPAREN stc_bloque_def

    RPAREN          shift and go to state 350


state 327

    (74) for_incr -> VARIABLE . SUMA SUMA
    (76) for_incr -> VARIABLE . RESTA RESTA
    (78) for_incr -> VARIABLE . SUMA EQUALS numero
    (79) for_incr -> VARIABLE . RESTA EQUALS numero

    SUMA            shift and go to state 351
    RESTA           shift and go to state 352


state 328

    (75) for_incr -> SUMA . SUMA VARIABLE

    SUMA            shift and go to state 353


state 329

    (77) for_incr -> RESTA . RESTA VARIABLE

    RESTA           shift and go to state 354


state 330

    (80) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN . stc_bloque_def
    (73) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 193

    stc_bloque_def                 shift and go to state 355

state 331

    (71) stc_bloque -> stc_bloque SEMI cuerpo .

    RBRACE          reduce using rule 71 (stc_bloque -> stc_bloque SEMI cuerpo .)
    SEMI            reduce using rule 71 (stc_bloque -> stc_bloque SEMI cuerpo .)
    $end            reduce using rule 71 (stc_bloque -> stc_bloque SEMI cuerpo .)


state 332

    (89) catches -> catches CATCH . LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 356


state 333

    (84) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo . SEMI RBRACE

    SEMI            shift and go to state 357


state 334

    (131) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN . SEMI

    SEMI            shift and go to state 358


state 335

    (150) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN . SEMI

    SEMI            shift and go to state 359


state 336

    (151) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN . RPAREN SEMI

    RPAREN          shift and go to state 360


state 337

    (125) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .

    $end            reduce using rule 125 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 125 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    SEMI            reduce using rule 125 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)


state 338

    (126) params_list -> params_list COMMA param .

    RPAREN          reduce using rule 126 (params_list -> params_list COMMA param .)
    COMMA           reduce using rule 126 (params_list -> params_list COMMA param .)


state 339

    (130) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty . RBRACE
    (136) breturn -> empty .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 361
    SEMI            reduce using rule 136 (breturn -> empty .)

  ! RBRACE          [ reduce using rule 136 (breturn -> empty .) ]


state 340

    (128) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID . LBRACE empty RBRACE

    LBRACE          shift and go to state 362


state 341

    (56) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (48) imprimir -> . ECHO valor SEMI
    (49) imprimir -> . PRINT valor SEMI
    (50) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (51) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (52) imprimir -> . ECHO bconcat
    (53) imprimir -> . ECHO operaciones_mat SEMI
    (54) imprimir -> . PRINT operaciones_mat SEMI
    (26) asignacion -> . VARIABLE EQUALS valor SEMI
    (27) asignacion -> . VAR asignacion
    (28) asignacion -> . proteccion asignacion
    (29) asignacion -> . VARIABLE EQUALS brand
    (30) asignacion -> . VARIABLE EQUALS escribir
    (31) asignacion -> . VARIABLE EQUALS btrim
    (32) asignacion -> . VARIABLE EQUALS lectura
    (33) asignacion -> . VARIABLE EQUALS bconcat
    (34) asignacion -> . asignacion_array
    (35) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (36) asignacion -> . aumentoCasting
    (118) funciones -> . funcion_nparams
    (119) funciones -> . proteccion funcion_nparams
    (120) funciones -> . funcion_blank
    (121) funciones -> . proteccion funcion_blank
    (122) funciones -> . funcion_void
    (38) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (39) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (148) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (149) lectura -> . READLINE LPAREN RPAREN SEMI
    (81) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (82) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (83) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (70) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (80) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (88) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (62) repiteCondicional -> . condicion_ifelse
    (63) repiteCondicional -> . condicion_ifelse repiteCondicional
    (84) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (85) bcase -> . CASE ENTERO COLON
    (154) bgoto -> . GOTO NOMBRE SEMI
    (146) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (147) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (155) bcortes -> . EXIT SEMI
    (156) bcortes -> . BREAK SEMI
    (157) bcortes -> . DEFAULT SEMI
    (158) bcortes -> . CONTINUE SEMI
    (131) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (150) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (151) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (159) otros -> . SMALLER NOMBRE GREATER
    (136) breturn -> . empty
    (137) breturn -> . RETURN SEMI
    (138) breturn -> . RETURN NULL SEMI
    (139) breturn -> . RETURN VARIABLE SEMI
    (140) breturn -> . RETURN BOOLEANO SEMI
    (152) comment -> . COMENTARIOS
    (153) comment -> . DOC_COMENTARIOS
    (174) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (160) bconcat -> . CADENA CONCAT CADENA SEMI
    (161) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (162) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (163) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (164) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (132) proteccion -> . PUBLIC
    (133) proteccion -> . PRIVATE
    (134) proteccion -> . PROTECTED
    (135) proteccion -> . STATIC
    (37) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (176) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (177) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (125) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (129) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (128) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (58) condicion_ifelse -> . condicion_if
    (59) condicion_ifelse -> . condicion_if condicion_else
    (60) condicion_ifelse -> . condicion_if condicion_elseif
    (61) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (145) empty -> .
    (55) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    ECHO            shift and go to state 27
    PRINT           shift and go to state 28
    VARIABLE        shift and go to state 30
    VAR             shift and go to state 31
    DEFINE          shift and go to state 38
    READLINE        shift and go to state 40
    WHILE           shift and go to state 41
    DO              shift and go to state 42
    FOR             shift and go to state 43
    FOREACH         shift and go to state 44
    TRY             shift and go to state 45
    SWITCH          shift and go to state 47
    CASE            shift and go to state 48
    GOTO            shift and go to state 49
    EXIT            shift and go to state 50
    BREAK           shift and go to state 51
    DEFAULT         shift and go to state 52
    CONTINUE        shift and go to state 53
    RAND            shift and go to state 54
    FWRITE          shift and go to state 55
    TRIM            shift and go to state 56
    SMALLER         shift and go to state 57
    RETURN          shift and go to state 59
    COMENTARIOS     shift and go to state 60
    DOC_COMENTARIOS shift and go to state 61
    LPAREN          shift and go to state 29
    CADENA          shift and go to state 39
    PUBLIC          shift and go to state 62
    PRIVATE         shift and go to state 63
    PROTECTED       shift and go to state 64
    STATIC          shift and go to state 65
    FUNCTION        shift and go to state 66
    RBRACE          reduce using rule 145 (empty -> .)
    IF              shift and go to state 68

    cuerpo                         shift and go to state 363
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    proteccion                     shift and go to state 32
    asignacion_array               shift and go to state 33
    aumentoCasting                 shift and go to state 34
    funcion_nparams                shift and go to state 35
    funcion_blank                  shift and go to state 36
    funcion_void                   shift and go to state 37
    condicion_ifelse               shift and go to state 46
    empty                          shift and go to state 58
    condicion_if                   shift and go to state 67

state 342

    (55) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 364


state 343

    (146) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .

    $end            reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    AND             reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    OR              reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    XOR             reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 146 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)


state 344

    (147) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .

    $end            reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    AND             reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    OR              reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    XOR             reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 147 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)


state 345

    (174) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 174 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 174 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 174 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 346

    (143) array_elmnt -> array_elmnt COMMA valor .

    RPAREN          reduce using rule 143 (array_elmnt -> array_elmnt COMMA valor .)
    COMMA           reduce using rule 143 (array_elmnt -> array_elmnt COMMA valor .)


state 347

    (38) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .

    $end            reduce using rule 38 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    RBRACE          reduce using rule 38 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    SEMI            reduce using rule 38 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)


state 348

    (39) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .

    $end            reduce using rule 39 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    RBRACE          reduce using rule 39 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    SEMI            reduce using rule 39 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)


state 349

    (81) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .

    $end            reduce using rule 81 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    RBRACE          reduce using rule 81 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 81 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)


state 350

    (70) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN . stc_bloque_def
    (73) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 193

    stc_bloque_def                 shift and go to state 365

state 351

    (74) for_incr -> VARIABLE SUMA . SUMA
    (78) for_incr -> VARIABLE SUMA . EQUALS numero

    SUMA            shift and go to state 366
    EQUALS          shift and go to state 367


state 352

    (76) for_incr -> VARIABLE RESTA . RESTA
    (79) for_incr -> VARIABLE RESTA . EQUALS numero

    RESTA           shift and go to state 368
    EQUALS          shift and go to state 369


state 353

    (75) for_incr -> SUMA SUMA . VARIABLE

    VARIABLE        shift and go to state 370


state 354

    (77) for_incr -> RESTA RESTA . VARIABLE

    VARIABLE        shift and go to state 371


state 355

    (80) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .

    $end            reduce using rule 80 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 80 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 80 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)


state 356

    (89) catches -> catches CATCH LPAREN . NOMBRE VARIABLE RPAREN stc_bloque_def

    NOMBRE          shift and go to state 372


state 357

    (84) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI . RBRACE

    RBRACE          shift and go to state 373


state 358

    (131) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .

    $end            reduce using rule 131 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RBRACE          reduce using rule 131 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    SEMI            reduce using rule 131 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    VARIABLE        reduce using rule 131 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    CADENA          reduce using rule 131 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BOOLEANO        reduce using rule 131 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    ENTERO          reduce using rule 131 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    DECIMAL         reduce using rule 131 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RPAREN          reduce using rule 131 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    COMMA           reduce using rule 131 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)


state 359

    (150) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .

    $end            reduce using rule 150 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 150 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    SEMI            reduce using rule 150 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 150 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    CADENA          reduce using rule 150 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 150 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 150 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 150 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 150 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    COMMA           reduce using rule 150 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)


state 360

    (151) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN . SEMI

    SEMI            shift and go to state 374


state 361

    (130) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .

    $end            reduce using rule 130 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    RBRACE          reduce using rule 130 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    SEMI            reduce using rule 130 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)


state 362

    (128) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE . empty RBRACE
    (145) empty -> .

    RBRACE          reduce using rule 145 (empty -> .)

    empty                          shift and go to state 375

state 363

    (56) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 376


state 364

    (55) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 55 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    ELSEIF          reduce using rule 55 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    IF              reduce using rule 55 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 55 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 55 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 55 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 365

    (70) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .

    $end            reduce using rule 70 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 70 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    SEMI            reduce using rule 70 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)


state 366

    (74) for_incr -> VARIABLE SUMA SUMA .

    RPAREN          reduce using rule 74 (for_incr -> VARIABLE SUMA SUMA .)


state 367

    (78) for_incr -> VARIABLE SUMA EQUALS . numero
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    numero                         shift and go to state 377

state 368

    (76) for_incr -> VARIABLE RESTA RESTA .

    RPAREN          reduce using rule 76 (for_incr -> VARIABLE RESTA RESTA .)


state 369

    (79) for_incr -> VARIABLE RESTA EQUALS . numero
    (46) numero -> . ENTERO
    (47) numero -> . DECIMAL

    ENTERO          shift and go to state 71
    DECIMAL         shift and go to state 83

    numero                         shift and go to state 378

state 370

    (75) for_incr -> SUMA SUMA VARIABLE .

    RPAREN          reduce using rule 75 (for_incr -> SUMA SUMA VARIABLE .)


state 371

    (77) for_incr -> RESTA RESTA VARIABLE .

    RPAREN          reduce using rule 77 (for_incr -> RESTA RESTA VARIABLE .)


state 372

    (89) catches -> catches CATCH LPAREN NOMBRE . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 379


state 373

    (84) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .

    $end            reduce using rule 84 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .)
    RBRACE          reduce using rule 84 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .)
    SEMI            reduce using rule 84 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .)


state 374

    (151) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .

    $end            reduce using rule 151 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 151 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    SEMI            reduce using rule 151 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 151 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    CADENA          reduce using rule 151 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 151 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 151 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 151 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 151 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    COMMA           reduce using rule 151 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)


state 375

    (128) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty . RBRACE

    RBRACE          shift and go to state 380


state 376

    (56) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 56 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    IF              reduce using rule 56 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 56 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 56 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 56 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 377

    (78) for_incr -> VARIABLE SUMA EQUALS numero .

    RPAREN          reduce using rule 78 (for_incr -> VARIABLE SUMA EQUALS numero .)


state 378

    (79) for_incr -> VARIABLE RESTA EQUALS numero .

    RPAREN          reduce using rule 79 (for_incr -> VARIABLE RESTA EQUALS numero .)


state 379

    (89) catches -> catches CATCH LPAREN NOMBRE VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 381


state 380

    (128) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .

    $end            reduce using rule 128 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    RBRACE          reduce using rule 128 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    SEMI            reduce using rule 128 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)


state 381

    (89) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN . stc_bloque_def
    (73) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 193

    stc_bloque_def                 shift and go to state 382

state 382

    (89) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .

    CATCH           reduce using rule 89 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    $end            reduce using rule 89 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 89 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 89 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMI in state 325 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 339 resolved as shift
