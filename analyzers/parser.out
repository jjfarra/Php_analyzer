Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> imprimir
Rule 2     cuerpo -> asignacion
Rule 3     cuerpo -> funciones
Rule 4     cuerpo -> constante
Rule 5     cuerpo -> lectura
Rule 6     cuerpo -> bwhile
Rule 7     cuerpo -> bdo
Rule 8     cuerpo -> bfor
Rule 9     cuerpo -> bforeach
Rule 10    cuerpo -> btry
Rule 11    cuerpo -> repiteCondicional
Rule 12    cuerpo -> bswitch
Rule 13    cuerpo -> bcase
Rule 14    cuerpo -> bgoto
Rule 15    cuerpo -> bcolas
Rule 16    cuerpo -> bpila
Rule 17    cuerpo -> bcortes
Rule 18    cuerpo -> brand
Rule 19    cuerpo -> escribir
Rule 20    cuerpo -> btrim
Rule 21    cuerpo -> otros
Rule 22    cuerpo -> breturn
Rule 23    cuerpo -> comment
Rule 24    cuerpo -> casting
Rule 25    cuerpo -> bconcat
Rule 26    cuerpo -> simbolos
Rule 27    asignacion -> VARIABLE EQUALS valor SEMI
Rule 28    asignacion -> VAR asignacion
Rule 29    asignacion -> proteccion asignacion
Rule 30    asignacion -> VARIABLE EQUALS brand
Rule 31    asignacion -> VARIABLE EQUALS escribir
Rule 32    asignacion -> VARIABLE EQUALS btrim
Rule 33    asignacion -> VARIABLE EQUALS lectura
Rule 34    asignacion -> VARIABLE EQUALS bconcat
Rule 35    asignacion -> asignacion_array
Rule 36    asignacion -> VARIABLE EQUALS operaciones_mat SEMI
Rule 37    asignacion -> aumentoCasting
Rule 38    asignacion_array -> VARIABLE EQUALS array_def SEMI
Rule 39    constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
Rule 40    constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
Rule 41    valor -> tipoDato
Rule 42    valor -> bcolas
Rule 43    valor -> bpila
Rule 44    tipoDato -> numero
Rule 45    tipoDato -> CADENA
Rule 46    tipoDato -> BOOLEANO
Rule 47    numero -> ENTERO
Rule 48    numero -> DECIMAL
Rule 49    imprimir -> ECHO valor SEMI
Rule 50    imprimir -> PRINT valor SEMI
Rule 51    imprimir -> PRINT LPAREN valor RPAREN SEMI
Rule 52    imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
Rule 53    imprimir -> ECHO bconcat
Rule 54    imprimir -> ECHO operaciones_mat SEMI
Rule 55    imprimir -> PRINT operaciones_mat SEMI
Rule 56    condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 57    condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 58    condicion_else -> ELSE LBRACE cuerpo RBRACE
Rule 59    condicion_ifelse -> condicion_if
Rule 60    condicion_ifelse -> condicion_if condicion_else
Rule 61    condicion_ifelse -> condicion_if condicion_elseif
Rule 62    condicion_ifelse -> condicion_if condicion_elseif condicion_else
Rule 63    repiteCondicional -> condicion_ifelse
Rule 64    repiteCondicional -> condicion_ifelse repiteCondicional
Rule 65    condicion -> VARIABLE operador_logico VARIABLE
Rule 66    condicion -> valor operador_logico valor
Rule 67    condicion -> VARIABLE operador_logico valor
Rule 68    condicion -> VARIABLE condicion_booleana VARIABLE
Rule 69    condicion -> valor condicion_booleana valor
Rule 70    condicion -> VARIABLE condicion_booleana valor
Rule 71    bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
Rule 72    stc_bloque -> stc_bloque SEMI cuerpo
Rule 73    stc_bloque -> breturn
Rule 74    stc_bloque_def -> LBRACE stc_bloque RBRACE
Rule 75    for_incr -> VARIABLE SUMA SUMA
Rule 76    for_incr -> SUMA SUMA VARIABLE
Rule 77    for_incr -> VARIABLE RESTA RESTA
Rule 78    for_incr -> RESTA RESTA VARIABLE
Rule 79    for_incr -> VARIABLE SUMA EQUALS numero
Rule 80    for_incr -> VARIABLE RESTA EQUALS numero
Rule 81    bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
Rule 82    bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
Rule 83    bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque
Rule 84    bdo -> DO LBRACE cuerpo RBRACE bwhile
Rule 85    bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
Rule 86    bcase -> CASE ENTERO COLON
Rule 87    innerSwitch -> bcase cuerpo BREAK SEMI
Rule 88    innerSwitch -> CASE ENTERO COLON cuerpo BREAK SEMI innerSwitch
Rule 89    btry -> TRY LBRACE stc_bloque_def RBRACE catches
Rule 90    catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
Rule 91    catches -> empty
Rule 92    operadores -> SUMA
Rule 93    operadores -> RESTA
Rule 94    operadores -> MULTIPLICACION
Rule 95    operadores -> DIVISION
Rule 96    operadores -> MODULO
Rule 97    operador_logico -> SMALLER
Rule 98    operador_logico -> GREATER
Rule 99    operador_logico -> IS_SMALLER_OR_EQUAL
Rule 100   operador_logico -> IS_GREATER_OR_EQUAL
Rule 101   incrementos_mat -> MINUS_EQUAL
Rule 102   incrementos_mat -> MOD_EQUAL
Rule 103   incrementos_mat -> MUL_EQUAL
Rule 104   incrementos_mat -> PLUS_EQUAL
Rule 105   incrementos_mat -> DIV_EQUAL
Rule 106   condicion_booleana -> AND
Rule 107   condicion_booleana -> OR
Rule 108   condicion_booleana -> XOR
Rule 109   condicion_booleana -> IS_EQUAL
Rule 110   condicion_booleana -> IS_NOT_EQUAL
Rule 111   condicion_booleana -> IS_IDENTICAL
Rule 112   condicion_booleana -> IS_NOT_IDENTICAL
Rule 113   operaciones_mat -> valor operadores valor
Rule 114   operaciones_mat -> valor operadores operaciones_mat
Rule 115   operaciones_mat -> VARIABLE operadores VARIABLE
Rule 116   operaciones_mat -> operaciones_mat_par
Rule 117   operaciones_mat_par -> LPAREN valor operadores valor RPAREN
Rule 118   operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN
Rule 119   funciones -> funcion_nparams
Rule 120   funciones -> proteccion funcion_nparams
Rule 121   funciones -> funcion_blank
Rule 122   funciones -> proteccion funcion_blank
Rule 123   funciones -> funcion_void
Rule 124   param -> VARIABLE
Rule 125   param -> asignacion
Rule 126   funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
Rule 127   params_list -> params_list COMMA param
Rule 128   params_list -> param
Rule 129   funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
Rule 130   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
Rule 131   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
Rule 132   brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
Rule 133   proteccion -> PUBLIC
Rule 134   proteccion -> PRIVATE
Rule 135   proteccion -> PROTECTED
Rule 136   proteccion -> STATIC
Rule 137   breturn -> empty
Rule 138   breturn -> RETURN SEMI
Rule 139   breturn -> RETURN NULL SEMI
Rule 140   breturn -> RETURN VARIABLE SEMI
Rule 141   breturn -> RETURN BOOLEANO SEMI
Rule 142   array_def -> ARRAY LPAREN RPAREN
Rule 143   array_def -> ARRAY LPAREN array_elmnt RPAREN
Rule 144   array_elmnt -> array_elmnt COMMA valor
Rule 145   array_elmnt -> valor
Rule 146   empty -> <empty>
Rule 147   bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
Rule 148   bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
Rule 149   lectura -> READLINE LPAREN CADENA RPAREN SEMI
Rule 150   lectura -> READLINE LPAREN RPAREN SEMI
Rule 151   escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
Rule 152   btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
Rule 153   comment -> COMENTARIOS
Rule 154   comment -> DOC_COMENTARIOS
Rule 155   bgoto -> GOTO NOMBRE SEMI
Rule 156   bcortes -> EXIT SEMI
Rule 157   bcortes -> BREAK SEMI
Rule 158   bcortes -> DEFAULT SEMI
Rule 159   bcortes -> CONTINUE SEMI
Rule 160   otros -> SMALLER NOMBRE GREATER
Rule 161   simbolos -> LPAREN RPAREN
Rule 162   simbolos -> LPAREN
Rule 163   simbolos -> RPAREN
Rule 164   simbolos -> LBRACKET RBRACKET
Rule 165   simbolos -> LBRACKET
Rule 166   simbolos -> RBRACKET
Rule 167   simbolos -> LBRACE RBRACE
Rule 168   simbolos -> LBRACE
Rule 169   simbolos -> RBRACE instrucciones
Rule 170   simbolos -> OPEN_TAG CLOSE_TAG
Rule 171   simbolos -> OPEN_TAG
Rule 172   simbolos -> CLOSE_TAG
Rule 173   instrucciones -> condicion_else
Rule 174   instrucciones -> condicion_elseif
Rule 175   bconcat -> CADENA CONCAT CADENA SEMI
Rule 176   bconcat -> VARIABLE CONCAT VARIABLE SEMI
Rule 177   bconcat -> VARIABLE CONCAT CADENA SEMI
Rule 178   bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI
Rule 179   bconcat -> CADENA CONCAT_EQUAL CADENA SEMI
Rule 180   tiposCast -> STRING
Rule 181   tiposCast -> BOOL
Rule 182   tiposCast -> BOOLEAN
Rule 183   tiposCast -> DOUBLE
Rule 184   tiposCast -> FLOAT
Rule 185   tiposCast -> ARRAY
Rule 186   tiposCast -> OBJECT
Rule 187   tiposCast -> INTEGER
Rule 188   tiposCast -> INT
Rule 189   casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 190   casting -> LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 191   aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI
Rule 192   aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

Terminals, with rules where they appear

AND                  : 106
ARRAY                : 40 142 143 185
AS                   : 81
BOOL                 : 181
BOOLEAN              : 182
BOOLEANO             : 46 141
BREAK                : 87 88 157
CADENA               : 39 45 149 151 175 175 177 178 179 179
CASE                 : 86 88
CATCH                : 90
CLOSE_TAG            : 170 172
COLON                : 83 86 88 129
COMENTARIOS          : 153
COMMA                : 39 40 127 132 144 151
CONCAT               : 175 176 177
CONCAT_EQUAL         : 178 179
CONTINUE             : 159
DECIMAL              : 48
DEFAULT              : 158
DEFINE               : 39 40
DIVISION             : 95
DIV_EQUAL            : 105
DO                   : 84
DOC_COMENTARIOS      : 154
DOUBLE               : 183
ECHO                 : 49 52 53 54
ELSE                 : 58
ELSEIF               : 57
ENTERO               : 47 52 86 88 132 132
EQUALS               : 27 30 31 32 33 34 36 38 79 80 147 148 189 192
EXIT                 : 156
FLOAT                : 184
FOR                  : 71
FOREACH              : 81
FUNCTION             : 126 129 130 131
FWRITE               : 151
GOTO                 : 155
GREATER              : 98 160
IF                   : 56
INT                  : 188
INTEGER              : 187
IS_EQUAL             : 109
IS_GREATER_OR_EQUAL  : 100
IS_IDENTICAL         : 111
IS_NOT_EQUAL         : 110
IS_NOT_IDENTICAL     : 112
IS_SMALLER_OR_EQUAL  : 99
LBRACE               : 56 57 58 74 82 84 85 89 129 131 167 168
LBRACKET             : 52 164 165
LPAREN               : 39 40 51 56 57 71 81 82 83 85 90 117 118 126 129 130 131 132 142 143 147 148 149 150 151 152 152 161 162 189 190
MINUS_EQUAL          : 101
MODULO               : 96
MOD_EQUAL            : 102
MULTIPLICACION       : 94
MUL_EQUAL            : 103
NEW                  : 147 148
NOMBRE               : 40 52 90 126 129 130 131 151 152 152 155 160
NULL                 : 139
OBJECT               : 186
OPEN_TAG             : 170 171
OR                   : 107
PLUS_EQUAL           : 104
PRINT                : 50 51 55
PRIVATE              : 134
PROTECTED            : 135
PUBLIC               : 133
RAND                 : 132
RBRACE               : 56 57 58 74 82 84 85 89 129 131 167 169
RBRACKET             : 52 164 166
READLINE             : 149 150
RESTA                : 77 77 78 78 80 93
RETURN               : 138 139 140 141
RPAREN               : 39 40 51 56 57 71 81 82 83 85 90 117 118 126 129 130 131 132 142 143 147 148 149 150 151 152 152 161 163 189 190
SEMI                 : 27 36 38 39 40 49 50 51 52 54 55 71 72 85 87 88 132 138 139 140 141 147 148 149 150 151 152 155 156 157 158 159 175 176 177 178 179 189 190 191 192
SMALLER              : 97 160
SPLQUEUE             : 147
SPLSTACK             : 148
STATIC               : 136
STRING               : 180
SUMA                 : 75 75 76 76 79 92
SWITCH               : 85
TRIM                 : 152
TRY                  : 89
VAR                  : 28
VARIABLE             : 27 30 31 32 33 34 36 38 65 65 67 68 68 70 75 76 77 78 79 80 81 81 85 90 115 115 124 140 147 148 176 176 177 178 189 189 190 191 192 192
VOID                 : 129
WHILE                : 82 83
XOR                  : 108
error                : 

Nonterminals, with rules where they appear

array_def            : 38
array_elmnt          : 143 144
asignacion           : 2 28 29 71 125
asignacion_array     : 35
aumentoCasting       : 37
bcase                : 13 87
bcolas               : 15 42
bconcat              : 25 34 53
bcortes              : 17
bdo                  : 7
bfor                 : 8
bforeach             : 9
bgoto                : 14
bpila                : 16 43
brand                : 18 30
breturn              : 22 73
bswitch              : 12
btrim                : 20 32
btry                 : 10
bwhile               : 6 84
casting              : 24
catches              : 89 90
comment              : 23
condicion            : 56 57 71 82 83
condicion_booleana   : 68 69 70
condicion_else       : 60 62 173
condicion_elseif     : 61 62 174
condicion_if         : 59 60 61 62
condicion_ifelse     : 63 64
constante            : 4
cuerpo               : 56 57 58 72 84 85 87 88 0
empty                : 91 129 131 137
escribir             : 19 31
for_incr             : 71
funcion_blank        : 121 122
funcion_nparams      : 119 120
funcion_void         : 123
funciones            : 3
imprimir             : 1
incrementos_mat      : 191
innerSwitch          : 88
instrucciones        : 169
lectura              : 5 33
numero               : 44 79 80
operaciones_mat      : 36 54 55 114
operaciones_mat_par  : 116 118
operador_logico      : 65 66 67
operadores           : 113 114 115 117 118 192
otros                : 21
param                : 127 128
params_list          : 126 127
proteccion           : 29 120 122
repiteCondicional    : 11 64
simbolos             : 26
stc_bloque           : 72 74 82 83
stc_bloque_def       : 71 81 89 90 126 130
tipoDato             : 41 191 192
tiposCast            : 189 190
valor                : 27 39 49 50 51 66 66 67 69 69 70 113 113 114 117 117 118 144 145

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (26) cuerpo -> . simbolos
    (49) imprimir -> . ECHO valor SEMI
    (50) imprimir -> . PRINT valor SEMI
    (51) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (52) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (53) imprimir -> . ECHO bconcat
    (54) imprimir -> . ECHO operaciones_mat SEMI
    (55) imprimir -> . PRINT operaciones_mat SEMI
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (119) funciones -> . funcion_nparams
    (120) funciones -> . proteccion funcion_nparams
    (121) funciones -> . funcion_blank
    (122) funciones -> . proteccion funcion_blank
    (123) funciones -> . funcion_void
    (39) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (40) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (149) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (150) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (84) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (71) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (81) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (89) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) repiteCondicional -> . condicion_ifelse
    (64) repiteCondicional -> . condicion_ifelse repiteCondicional
    (85) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (86) bcase -> . CASE ENTERO COLON
    (155) bgoto -> . GOTO NOMBRE SEMI
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (156) bcortes -> . EXIT SEMI
    (157) bcortes -> . BREAK SEMI
    (158) bcortes -> . DEFAULT SEMI
    (159) bcortes -> . CONTINUE SEMI
    (132) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (151) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (152) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (160) otros -> . SMALLER NOMBRE GREATER
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI
    (153) comment -> . COMENTARIOS
    (154) comment -> . DOC_COMENTARIOS
    (189) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (190) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) bconcat -> . CADENA CONCAT CADENA SEMI
    (176) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (177) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (178) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (179) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (161) simbolos -> . LPAREN RPAREN
    (162) simbolos -> . LPAREN
    (163) simbolos -> . RPAREN
    (164) simbolos -> . LBRACKET RBRACKET
    (165) simbolos -> . LBRACKET
    (166) simbolos -> . RBRACKET
    (167) simbolos -> . LBRACE RBRACE
    (168) simbolos -> . LBRACE
    (169) simbolos -> . RBRACE instrucciones
    (170) simbolos -> . OPEN_TAG CLOSE_TAG
    (171) simbolos -> . OPEN_TAG
    (172) simbolos -> . CLOSE_TAG
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (126) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (129) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (59) condicion_ifelse -> . condicion_if
    (60) condicion_ifelse -> . condicion_if condicion_else
    (61) condicion_ifelse -> . condicion_if condicion_elseif
    (62) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (146) empty -> .
    (56) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    VARIABLE        shift and go to state 34
    VAR             shift and go to state 35
    DEFINE          shift and go to state 42
    READLINE        shift and go to state 44
    WHILE           shift and go to state 45
    DO              shift and go to state 48
    FOR             shift and go to state 49
    FOREACH         shift and go to state 50
    TRY             shift and go to state 51
    SWITCH          shift and go to state 53
    CASE            shift and go to state 54
    GOTO            shift and go to state 55
    EXIT            shift and go to state 56
    BREAK           shift and go to state 57
    DEFAULT         shift and go to state 58
    CONTINUE        shift and go to state 59
    RAND            shift and go to state 60
    FWRITE          shift and go to state 61
    TRIM            shift and go to state 62
    SMALLER         shift and go to state 63
    RETURN          shift and go to state 65
    COMENTARIOS     shift and go to state 66
    DOC_COMENTARIOS shift and go to state 67
    LPAREN          shift and go to state 30
    CADENA          shift and go to state 43
    RPAREN          shift and go to state 31
    LBRACKET        shift and go to state 32
    RBRACKET        shift and go to state 33
    LBRACE          shift and go to state 46
    RBRACE          shift and go to state 47
    OPEN_TAG        shift and go to state 68
    CLOSE_TAG       shift and go to state 69
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73
    FUNCTION        shift and go to state 74
    $end            reduce using rule 146 (empty -> .)
    IF              shift and go to state 76

    cuerpo                         shift and go to state 1
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    simbolos                       shift and go to state 27
    proteccion                     shift and go to state 36
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38
    funcion_nparams                shift and go to state 39
    funcion_blank                  shift and go to state 40
    funcion_void                   shift and go to state 41
    condicion_ifelse               shift and go to state 52
    empty                          shift and go to state 64
    condicion_if                   shift and go to state 75

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> imprimir .

    $end            reduce using rule 1 (cuerpo -> imprimir .)
    RBRACE          reduce using rule 1 (cuerpo -> imprimir .)
    SEMI            reduce using rule 1 (cuerpo -> imprimir .)


state 3

    (2) cuerpo -> asignacion .

    $end            reduce using rule 2 (cuerpo -> asignacion .)
    RBRACE          reduce using rule 2 (cuerpo -> asignacion .)
    SEMI            reduce using rule 2 (cuerpo -> asignacion .)


state 4

    (3) cuerpo -> funciones .

    $end            reduce using rule 3 (cuerpo -> funciones .)
    RBRACE          reduce using rule 3 (cuerpo -> funciones .)
    SEMI            reduce using rule 3 (cuerpo -> funciones .)


state 5

    (4) cuerpo -> constante .

    $end            reduce using rule 4 (cuerpo -> constante .)
    RBRACE          reduce using rule 4 (cuerpo -> constante .)
    SEMI            reduce using rule 4 (cuerpo -> constante .)


state 6

    (5) cuerpo -> lectura .

    $end            reduce using rule 5 (cuerpo -> lectura .)
    RBRACE          reduce using rule 5 (cuerpo -> lectura .)
    SEMI            reduce using rule 5 (cuerpo -> lectura .)


state 7

    (6) cuerpo -> bwhile .

    $end            reduce using rule 6 (cuerpo -> bwhile .)
    RBRACE          reduce using rule 6 (cuerpo -> bwhile .)
    SEMI            reduce using rule 6 (cuerpo -> bwhile .)


state 8

    (7) cuerpo -> bdo .

    $end            reduce using rule 7 (cuerpo -> bdo .)
    RBRACE          reduce using rule 7 (cuerpo -> bdo .)
    SEMI            reduce using rule 7 (cuerpo -> bdo .)


state 9

    (8) cuerpo -> bfor .

    $end            reduce using rule 8 (cuerpo -> bfor .)
    RBRACE          reduce using rule 8 (cuerpo -> bfor .)
    SEMI            reduce using rule 8 (cuerpo -> bfor .)


state 10

    (9) cuerpo -> bforeach .

    $end            reduce using rule 9 (cuerpo -> bforeach .)
    RBRACE          reduce using rule 9 (cuerpo -> bforeach .)
    SEMI            reduce using rule 9 (cuerpo -> bforeach .)


state 11

    (10) cuerpo -> btry .

    $end            reduce using rule 10 (cuerpo -> btry .)
    RBRACE          reduce using rule 10 (cuerpo -> btry .)
    SEMI            reduce using rule 10 (cuerpo -> btry .)


state 12

    (11) cuerpo -> repiteCondicional .

    $end            reduce using rule 11 (cuerpo -> repiteCondicional .)
    RBRACE          reduce using rule 11 (cuerpo -> repiteCondicional .)
    SEMI            reduce using rule 11 (cuerpo -> repiteCondicional .)


state 13

    (12) cuerpo -> bswitch .

    $end            reduce using rule 12 (cuerpo -> bswitch .)
    RBRACE          reduce using rule 12 (cuerpo -> bswitch .)
    SEMI            reduce using rule 12 (cuerpo -> bswitch .)


state 14

    (13) cuerpo -> bcase .

    $end            reduce using rule 13 (cuerpo -> bcase .)
    RBRACE          reduce using rule 13 (cuerpo -> bcase .)
    SEMI            reduce using rule 13 (cuerpo -> bcase .)


state 15

    (14) cuerpo -> bgoto .

    $end            reduce using rule 14 (cuerpo -> bgoto .)
    RBRACE          reduce using rule 14 (cuerpo -> bgoto .)
    SEMI            reduce using rule 14 (cuerpo -> bgoto .)


state 16

    (15) cuerpo -> bcolas .

    $end            reduce using rule 15 (cuerpo -> bcolas .)
    RBRACE          reduce using rule 15 (cuerpo -> bcolas .)
    SEMI            reduce using rule 15 (cuerpo -> bcolas .)


state 17

    (16) cuerpo -> bpila .

    $end            reduce using rule 16 (cuerpo -> bpila .)
    RBRACE          reduce using rule 16 (cuerpo -> bpila .)
    SEMI            reduce using rule 16 (cuerpo -> bpila .)


state 18

    (17) cuerpo -> bcortes .

    $end            reduce using rule 17 (cuerpo -> bcortes .)
    RBRACE          reduce using rule 17 (cuerpo -> bcortes .)
    SEMI            reduce using rule 17 (cuerpo -> bcortes .)


state 19

    (18) cuerpo -> brand .

    $end            reduce using rule 18 (cuerpo -> brand .)
    RBRACE          reduce using rule 18 (cuerpo -> brand .)
    SEMI            reduce using rule 18 (cuerpo -> brand .)


state 20

    (19) cuerpo -> escribir .

    $end            reduce using rule 19 (cuerpo -> escribir .)
    RBRACE          reduce using rule 19 (cuerpo -> escribir .)
    SEMI            reduce using rule 19 (cuerpo -> escribir .)


state 21

    (20) cuerpo -> btrim .

    $end            reduce using rule 20 (cuerpo -> btrim .)
    RBRACE          reduce using rule 20 (cuerpo -> btrim .)
    SEMI            reduce using rule 20 (cuerpo -> btrim .)


state 22

    (21) cuerpo -> otros .

    $end            reduce using rule 21 (cuerpo -> otros .)
    RBRACE          reduce using rule 21 (cuerpo -> otros .)
    SEMI            reduce using rule 21 (cuerpo -> otros .)


state 23

    (22) cuerpo -> breturn .

    $end            reduce using rule 22 (cuerpo -> breturn .)
    RBRACE          reduce using rule 22 (cuerpo -> breturn .)
    SEMI            reduce using rule 22 (cuerpo -> breturn .)


state 24

    (23) cuerpo -> comment .

    $end            reduce using rule 23 (cuerpo -> comment .)
    RBRACE          reduce using rule 23 (cuerpo -> comment .)
    SEMI            reduce using rule 23 (cuerpo -> comment .)


state 25

    (24) cuerpo -> casting .

    $end            reduce using rule 24 (cuerpo -> casting .)
    RBRACE          reduce using rule 24 (cuerpo -> casting .)
    SEMI            reduce using rule 24 (cuerpo -> casting .)


state 26

    (25) cuerpo -> bconcat .

    $end            reduce using rule 25 (cuerpo -> bconcat .)
    RBRACE          reduce using rule 25 (cuerpo -> bconcat .)
    SEMI            reduce using rule 25 (cuerpo -> bconcat .)


state 27

    (26) cuerpo -> simbolos .

    $end            reduce using rule 26 (cuerpo -> simbolos .)
    RBRACE          reduce using rule 26 (cuerpo -> simbolos .)
    SEMI            reduce using rule 26 (cuerpo -> simbolos .)


state 28

    (49) imprimir -> ECHO . valor SEMI
    (52) imprimir -> ECHO . NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (53) imprimir -> ECHO . bconcat
    (54) imprimir -> ECHO . operaciones_mat SEMI
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (175) bconcat -> . CADENA CONCAT CADENA SEMI
    (176) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (177) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (178) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (179) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (113) operaciones_mat -> . valor operadores valor
    (114) operaciones_mat -> . valor operadores operaciones_mat
    (115) operaciones_mat -> . VARIABLE operadores VARIABLE
    (116) operaciones_mat -> . operaciones_mat_par
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (117) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (118) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    NOMBRE          shift and go to state 78
    CADENA          shift and go to state 85
    VARIABLE        shift and go to state 86
    BOOLEANO        shift and go to state 89
    LPAREN          shift and go to state 90
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 77
    bconcat                        shift and go to state 80
    operaciones_mat                shift and go to state 81
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    operaciones_mat_par            shift and go to state 87
    numero                         shift and go to state 88

state 29

    (50) imprimir -> PRINT . valor SEMI
    (51) imprimir -> PRINT . LPAREN valor RPAREN SEMI
    (55) imprimir -> PRINT . operaciones_mat SEMI
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (113) operaciones_mat -> . valor operadores valor
    (114) operaciones_mat -> . valor operadores operaciones_mat
    (115) operaciones_mat -> . VARIABLE operadores VARIABLE
    (116) operaciones_mat -> . operaciones_mat_par
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (117) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (118) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    LPAREN          shift and go to state 93
    VARIABLE        shift and go to state 95
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 92
    operaciones_mat                shift and go to state 94
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    operaciones_mat_par            shift and go to state 87
    numero                         shift and go to state 88

state 30

    (190) casting -> LPAREN . tiposCast RPAREN VARIABLE SEMI
    (161) simbolos -> LPAREN . RPAREN
    (162) simbolos -> LPAREN .
    (180) tiposCast -> . STRING
    (181) tiposCast -> . BOOL
    (182) tiposCast -> . BOOLEAN
    (183) tiposCast -> . DOUBLE
    (184) tiposCast -> . FLOAT
    (185) tiposCast -> . ARRAY
    (186) tiposCast -> . OBJECT
    (187) tiposCast -> . INTEGER
    (188) tiposCast -> . INT

    RPAREN          shift and go to state 98
    $end            reduce using rule 162 (simbolos -> LPAREN .)
    RBRACE          reduce using rule 162 (simbolos -> LPAREN .)
    SEMI            reduce using rule 162 (simbolos -> LPAREN .)
    STRING          shift and go to state 99
    BOOL            shift and go to state 100
    BOOLEAN         shift and go to state 101
    DOUBLE          shift and go to state 102
    FLOAT           shift and go to state 103
    ARRAY           shift and go to state 104
    OBJECT          shift and go to state 105
    INTEGER         shift and go to state 106
    INT             shift and go to state 107

    tiposCast                      shift and go to state 97

state 31

    (163) simbolos -> RPAREN .

    $end            reduce using rule 163 (simbolos -> RPAREN .)
    RBRACE          reduce using rule 163 (simbolos -> RPAREN .)
    SEMI            reduce using rule 163 (simbolos -> RPAREN .)


state 32

    (164) simbolos -> LBRACKET . RBRACKET
    (165) simbolos -> LBRACKET .

    RBRACKET        shift and go to state 108
    $end            reduce using rule 165 (simbolos -> LBRACKET .)
    RBRACE          reduce using rule 165 (simbolos -> LBRACKET .)
    SEMI            reduce using rule 165 (simbolos -> LBRACKET .)


state 33

    (166) simbolos -> RBRACKET .

    $end            reduce using rule 166 (simbolos -> RBRACKET .)
    RBRACE          reduce using rule 166 (simbolos -> RBRACKET .)
    SEMI            reduce using rule 166 (simbolos -> RBRACKET .)


state 34

    (27) asignacion -> VARIABLE . EQUALS valor SEMI
    (30) asignacion -> VARIABLE . EQUALS brand
    (31) asignacion -> VARIABLE . EQUALS escribir
    (32) asignacion -> VARIABLE . EQUALS btrim
    (33) asignacion -> VARIABLE . EQUALS lectura
    (34) asignacion -> VARIABLE . EQUALS bconcat
    (36) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (147) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (189) casting -> VARIABLE . EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (176) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (177) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (178) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (38) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (191) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (101) incrementos_mat -> . MINUS_EQUAL
    (102) incrementos_mat -> . MOD_EQUAL
    (103) incrementos_mat -> . MUL_EQUAL
    (104) incrementos_mat -> . PLUS_EQUAL
    (105) incrementos_mat -> . DIV_EQUAL

    EQUALS          shift and go to state 109
    CONCAT          shift and go to state 110
    CONCAT_EQUAL    shift and go to state 111
    MINUS_EQUAL     shift and go to state 113
    MOD_EQUAL       shift and go to state 114
    MUL_EQUAL       shift and go to state 115
    PLUS_EQUAL      shift and go to state 116
    DIV_EQUAL       shift and go to state 117

    incrementos_mat                shift and go to state 112

state 35

    (28) asignacion -> VAR . asignacion
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 119
    VAR             shift and go to state 35
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73

    asignacion                     shift and go to state 118
    proteccion                     shift and go to state 120
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38

state 36

    (29) asignacion -> proteccion . asignacion
    (120) funciones -> proteccion . funcion_nparams
    (122) funciones -> proteccion . funcion_blank
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (126) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 119
    VAR             shift and go to state 35
    FUNCTION        shift and go to state 124
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73

    proteccion                     shift and go to state 120
    asignacion                     shift and go to state 121
    funcion_nparams                shift and go to state 122
    funcion_blank                  shift and go to state 123
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38

state 37

    (35) asignacion -> asignacion_array .

    $end            reduce using rule 35 (asignacion -> asignacion_array .)
    RBRACE          reduce using rule 35 (asignacion -> asignacion_array .)
    SEMI            reduce using rule 35 (asignacion -> asignacion_array .)
    VARIABLE        reduce using rule 35 (asignacion -> asignacion_array .)
    CADENA          reduce using rule 35 (asignacion -> asignacion_array .)
    BOOLEANO        reduce using rule 35 (asignacion -> asignacion_array .)
    ENTERO          reduce using rule 35 (asignacion -> asignacion_array .)
    DECIMAL         reduce using rule 35 (asignacion -> asignacion_array .)
    RPAREN          reduce using rule 35 (asignacion -> asignacion_array .)
    COMMA           reduce using rule 35 (asignacion -> asignacion_array .)


state 38

    (37) asignacion -> aumentoCasting .

    $end            reduce using rule 37 (asignacion -> aumentoCasting .)
    RBRACE          reduce using rule 37 (asignacion -> aumentoCasting .)
    SEMI            reduce using rule 37 (asignacion -> aumentoCasting .)
    VARIABLE        reduce using rule 37 (asignacion -> aumentoCasting .)
    CADENA          reduce using rule 37 (asignacion -> aumentoCasting .)
    BOOLEANO        reduce using rule 37 (asignacion -> aumentoCasting .)
    ENTERO          reduce using rule 37 (asignacion -> aumentoCasting .)
    DECIMAL         reduce using rule 37 (asignacion -> aumentoCasting .)
    RPAREN          reduce using rule 37 (asignacion -> aumentoCasting .)
    COMMA           reduce using rule 37 (asignacion -> aumentoCasting .)


state 39

    (119) funciones -> funcion_nparams .

    $end            reduce using rule 119 (funciones -> funcion_nparams .)
    RBRACE          reduce using rule 119 (funciones -> funcion_nparams .)
    SEMI            reduce using rule 119 (funciones -> funcion_nparams .)


state 40

    (121) funciones -> funcion_blank .

    $end            reduce using rule 121 (funciones -> funcion_blank .)
    RBRACE          reduce using rule 121 (funciones -> funcion_blank .)
    SEMI            reduce using rule 121 (funciones -> funcion_blank .)


state 41

    (123) funciones -> funcion_void .

    $end            reduce using rule 123 (funciones -> funcion_void .)
    RBRACE          reduce using rule 123 (funciones -> funcion_void .)
    SEMI            reduce using rule 123 (funciones -> funcion_void .)


state 42

    (39) constante -> DEFINE . LPAREN CADENA COMMA valor RPAREN SEMI
    (40) constante -> DEFINE . LPAREN NOMBRE COMMA ARRAY RPAREN SEMI

    LPAREN          shift and go to state 125


state 43

    (175) bconcat -> CADENA . CONCAT CADENA SEMI
    (179) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI

    CONCAT          shift and go to state 126
    CONCAT_EQUAL    shift and go to state 127


state 44

    (149) lectura -> READLINE . LPAREN CADENA RPAREN SEMI
    (150) lectura -> READLINE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 128


state 45

    (82) bwhile -> WHILE . LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> WHILE . LPAREN condicion RPAREN COLON stc_bloque

    LPAREN          shift and go to state 129


state 46

    (167) simbolos -> LBRACE . RBRACE
    (168) simbolos -> LBRACE .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 130
    $end            reduce using rule 168 (simbolos -> LBRACE .)
    SEMI            reduce using rule 168 (simbolos -> LBRACE .)

  ! RBRACE          [ reduce using rule 168 (simbolos -> LBRACE .) ]


state 47

    (169) simbolos -> RBRACE . instrucciones
    (173) instrucciones -> . condicion_else
    (174) instrucciones -> . condicion_elseif
    (58) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (57) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    ELSE            shift and go to state 134
    ELSEIF          shift and go to state 135

    instrucciones                  shift and go to state 131
    condicion_else                 shift and go to state 132
    condicion_elseif               shift and go to state 133

state 48

    (84) bdo -> DO . LBRACE cuerpo RBRACE bwhile

    LBRACE          shift and go to state 136


state 49

    (71) bfor -> FOR . LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def

    LPAREN          shift and go to state 137


state 50

    (81) bforeach -> FOREACH . LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 138


state 51

    (89) btry -> TRY . LBRACE stc_bloque_def RBRACE catches

    LBRACE          shift and go to state 139


state 52

    (63) repiteCondicional -> condicion_ifelse .
    (64) repiteCondicional -> condicion_ifelse . repiteCondicional
    (63) repiteCondicional -> . condicion_ifelse
    (64) repiteCondicional -> . condicion_ifelse repiteCondicional
    (59) condicion_ifelse -> . condicion_if
    (60) condicion_ifelse -> . condicion_if condicion_else
    (61) condicion_ifelse -> . condicion_if condicion_elseif
    (62) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (56) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    $end            reduce using rule 63 (repiteCondicional -> condicion_ifelse .)
    RBRACE          reduce using rule 63 (repiteCondicional -> condicion_ifelse .)
    SEMI            reduce using rule 63 (repiteCondicional -> condicion_ifelse .)
    IF              shift and go to state 76

    condicion_ifelse               shift and go to state 52
    repiteCondicional              shift and go to state 140
    condicion_if                   shift and go to state 75

state 53

    (85) bswitch -> SWITCH . LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE

    LPAREN          shift and go to state 141


state 54

    (86) bcase -> CASE . ENTERO COLON

    ENTERO          shift and go to state 142


state 55

    (155) bgoto -> GOTO . NOMBRE SEMI

    NOMBRE          shift and go to state 143


state 56

    (156) bcortes -> EXIT . SEMI

    SEMI            shift and go to state 144


state 57

    (157) bcortes -> BREAK . SEMI

    SEMI            shift and go to state 145


state 58

    (158) bcortes -> DEFAULT . SEMI

    SEMI            shift and go to state 146


state 59

    (159) bcortes -> CONTINUE . SEMI

    SEMI            shift and go to state 147


state 60

    (132) brand -> RAND . LPAREN ENTERO COMMA ENTERO RPAREN SEMI

    LPAREN          shift and go to state 148


state 61

    (151) escribir -> FWRITE . LPAREN NOMBRE COMMA CADENA RPAREN SEMI

    LPAREN          shift and go to state 149


state 62

    (152) btrim -> TRIM . LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 150


state 63

    (160) otros -> SMALLER . NOMBRE GREATER

    NOMBRE          shift and go to state 151


state 64

    (137) breturn -> empty .

    $end            reduce using rule 137 (breturn -> empty .)
    RBRACE          reduce using rule 137 (breturn -> empty .)
    SEMI            reduce using rule 137 (breturn -> empty .)


state 65

    (138) breturn -> RETURN . SEMI
    (139) breturn -> RETURN . NULL SEMI
    (140) breturn -> RETURN . VARIABLE SEMI
    (141) breturn -> RETURN . BOOLEANO SEMI

    SEMI            shift and go to state 152
    NULL            shift and go to state 153
    VARIABLE        shift and go to state 154
    BOOLEANO        shift and go to state 155


state 66

    (153) comment -> COMENTARIOS .

    $end            reduce using rule 153 (comment -> COMENTARIOS .)
    RBRACE          reduce using rule 153 (comment -> COMENTARIOS .)
    SEMI            reduce using rule 153 (comment -> COMENTARIOS .)


state 67

    (154) comment -> DOC_COMENTARIOS .

    $end            reduce using rule 154 (comment -> DOC_COMENTARIOS .)
    RBRACE          reduce using rule 154 (comment -> DOC_COMENTARIOS .)
    SEMI            reduce using rule 154 (comment -> DOC_COMENTARIOS .)


state 68

    (170) simbolos -> OPEN_TAG . CLOSE_TAG
    (171) simbolos -> OPEN_TAG .

    CLOSE_TAG       shift and go to state 156
    $end            reduce using rule 171 (simbolos -> OPEN_TAG .)
    RBRACE          reduce using rule 171 (simbolos -> OPEN_TAG .)
    SEMI            reduce using rule 171 (simbolos -> OPEN_TAG .)


state 69

    (172) simbolos -> CLOSE_TAG .

    $end            reduce using rule 172 (simbolos -> CLOSE_TAG .)
    RBRACE          reduce using rule 172 (simbolos -> CLOSE_TAG .)
    SEMI            reduce using rule 172 (simbolos -> CLOSE_TAG .)


state 70

    (133) proteccion -> PUBLIC .

    VARIABLE        reduce using rule 133 (proteccion -> PUBLIC .)
    VAR             reduce using rule 133 (proteccion -> PUBLIC .)
    FUNCTION        reduce using rule 133 (proteccion -> PUBLIC .)
    PUBLIC          reduce using rule 133 (proteccion -> PUBLIC .)
    PRIVATE         reduce using rule 133 (proteccion -> PUBLIC .)
    PROTECTED       reduce using rule 133 (proteccion -> PUBLIC .)
    STATIC          reduce using rule 133 (proteccion -> PUBLIC .)


state 71

    (134) proteccion -> PRIVATE .

    VARIABLE        reduce using rule 134 (proteccion -> PRIVATE .)
    VAR             reduce using rule 134 (proteccion -> PRIVATE .)
    FUNCTION        reduce using rule 134 (proteccion -> PRIVATE .)
    PUBLIC          reduce using rule 134 (proteccion -> PRIVATE .)
    PRIVATE         reduce using rule 134 (proteccion -> PRIVATE .)
    PROTECTED       reduce using rule 134 (proteccion -> PRIVATE .)
    STATIC          reduce using rule 134 (proteccion -> PRIVATE .)


state 72

    (135) proteccion -> PROTECTED .

    VARIABLE        reduce using rule 135 (proteccion -> PROTECTED .)
    VAR             reduce using rule 135 (proteccion -> PROTECTED .)
    FUNCTION        reduce using rule 135 (proteccion -> PROTECTED .)
    PUBLIC          reduce using rule 135 (proteccion -> PROTECTED .)
    PRIVATE         reduce using rule 135 (proteccion -> PROTECTED .)
    PROTECTED       reduce using rule 135 (proteccion -> PROTECTED .)
    STATIC          reduce using rule 135 (proteccion -> PROTECTED .)


state 73

    (136) proteccion -> STATIC .

    VARIABLE        reduce using rule 136 (proteccion -> STATIC .)
    VAR             reduce using rule 136 (proteccion -> STATIC .)
    FUNCTION        reduce using rule 136 (proteccion -> STATIC .)
    PUBLIC          reduce using rule 136 (proteccion -> STATIC .)
    PRIVATE         reduce using rule 136 (proteccion -> STATIC .)
    PROTECTED       reduce using rule 136 (proteccion -> STATIC .)
    STATIC          reduce using rule 136 (proteccion -> STATIC .)


state 74

    (126) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (129) funcion_void -> FUNCTION . NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    NOMBRE          shift and go to state 157


state 75

    (59) condicion_ifelse -> condicion_if .
    (60) condicion_ifelse -> condicion_if . condicion_else
    (61) condicion_ifelse -> condicion_if . condicion_elseif
    (62) condicion_ifelse -> condicion_if . condicion_elseif condicion_else
    (58) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (57) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    IF              reduce using rule 59 (condicion_ifelse -> condicion_if .)
    $end            reduce using rule 59 (condicion_ifelse -> condicion_if .)
    RBRACE          reduce using rule 59 (condicion_ifelse -> condicion_if .)
    SEMI            reduce using rule 59 (condicion_ifelse -> condicion_if .)
    ELSE            shift and go to state 134
    ELSEIF          shift and go to state 135

    condicion_else                 shift and go to state 158
    condicion_elseif               shift and go to state 159

state 76

    (56) condicion_if -> IF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 160


state 77

    (49) imprimir -> ECHO valor . SEMI
    (113) operaciones_mat -> valor . operadores valor
    (114) operaciones_mat -> valor . operadores operaciones_mat
    (92) operadores -> . SUMA
    (93) operadores -> . RESTA
    (94) operadores -> . MULTIPLICACION
    (95) operadores -> . DIVISION
    (96) operadores -> . MODULO

    SEMI            shift and go to state 161
    SUMA            shift and go to state 163
    RESTA           shift and go to state 164
    MULTIPLICACION  shift and go to state 165
    DIVISION        shift and go to state 166
    MODULO          shift and go to state 167

    operadores                     shift and go to state 162

state 78

    (52) imprimir -> ECHO NOMBRE . LBRACKET ENTERO RBRACKET SEMI

    LBRACKET        shift and go to state 168


state 79

    (47) numero -> ENTERO .

    SEMI            reduce using rule 47 (numero -> ENTERO .)
    SUMA            reduce using rule 47 (numero -> ENTERO .)
    RESTA           reduce using rule 47 (numero -> ENTERO .)
    MULTIPLICACION  reduce using rule 47 (numero -> ENTERO .)
    DIVISION        reduce using rule 47 (numero -> ENTERO .)
    MODULO          reduce using rule 47 (numero -> ENTERO .)
    RPAREN          reduce using rule 47 (numero -> ENTERO .)
    SMALLER         reduce using rule 47 (numero -> ENTERO .)
    GREATER         reduce using rule 47 (numero -> ENTERO .)
    IS_SMALLER_OR_EQUAL reduce using rule 47 (numero -> ENTERO .)
    IS_GREATER_OR_EQUAL reduce using rule 47 (numero -> ENTERO .)
    AND             reduce using rule 47 (numero -> ENTERO .)
    OR              reduce using rule 47 (numero -> ENTERO .)
    XOR             reduce using rule 47 (numero -> ENTERO .)
    IS_EQUAL        reduce using rule 47 (numero -> ENTERO .)
    IS_NOT_EQUAL    reduce using rule 47 (numero -> ENTERO .)
    IS_IDENTICAL    reduce using rule 47 (numero -> ENTERO .)
    IS_NOT_IDENTICAL reduce using rule 47 (numero -> ENTERO .)
    COMMA           reduce using rule 47 (numero -> ENTERO .)


state 80

    (53) imprimir -> ECHO bconcat .

    $end            reduce using rule 53 (imprimir -> ECHO bconcat .)
    RBRACE          reduce using rule 53 (imprimir -> ECHO bconcat .)
    SEMI            reduce using rule 53 (imprimir -> ECHO bconcat .)


state 81

    (54) imprimir -> ECHO operaciones_mat . SEMI

    SEMI            shift and go to state 169


state 82

    (41) valor -> tipoDato .

    SEMI            reduce using rule 41 (valor -> tipoDato .)
    SUMA            reduce using rule 41 (valor -> tipoDato .)
    RESTA           reduce using rule 41 (valor -> tipoDato .)
    MULTIPLICACION  reduce using rule 41 (valor -> tipoDato .)
    DIVISION        reduce using rule 41 (valor -> tipoDato .)
    MODULO          reduce using rule 41 (valor -> tipoDato .)
    RPAREN          reduce using rule 41 (valor -> tipoDato .)
    SMALLER         reduce using rule 41 (valor -> tipoDato .)
    GREATER         reduce using rule 41 (valor -> tipoDato .)
    IS_SMALLER_OR_EQUAL reduce using rule 41 (valor -> tipoDato .)
    IS_GREATER_OR_EQUAL reduce using rule 41 (valor -> tipoDato .)
    AND             reduce using rule 41 (valor -> tipoDato .)
    OR              reduce using rule 41 (valor -> tipoDato .)
    XOR             reduce using rule 41 (valor -> tipoDato .)
    IS_EQUAL        reduce using rule 41 (valor -> tipoDato .)
    IS_NOT_EQUAL    reduce using rule 41 (valor -> tipoDato .)
    IS_IDENTICAL    reduce using rule 41 (valor -> tipoDato .)
    IS_NOT_IDENTICAL reduce using rule 41 (valor -> tipoDato .)
    COMMA           reduce using rule 41 (valor -> tipoDato .)


state 83

    (42) valor -> bcolas .

    SEMI            reduce using rule 42 (valor -> bcolas .)
    SUMA            reduce using rule 42 (valor -> bcolas .)
    RESTA           reduce using rule 42 (valor -> bcolas .)
    MULTIPLICACION  reduce using rule 42 (valor -> bcolas .)
    DIVISION        reduce using rule 42 (valor -> bcolas .)
    MODULO          reduce using rule 42 (valor -> bcolas .)
    RPAREN          reduce using rule 42 (valor -> bcolas .)
    SMALLER         reduce using rule 42 (valor -> bcolas .)
    GREATER         reduce using rule 42 (valor -> bcolas .)
    IS_SMALLER_OR_EQUAL reduce using rule 42 (valor -> bcolas .)
    IS_GREATER_OR_EQUAL reduce using rule 42 (valor -> bcolas .)
    AND             reduce using rule 42 (valor -> bcolas .)
    OR              reduce using rule 42 (valor -> bcolas .)
    XOR             reduce using rule 42 (valor -> bcolas .)
    IS_EQUAL        reduce using rule 42 (valor -> bcolas .)
    IS_NOT_EQUAL    reduce using rule 42 (valor -> bcolas .)
    IS_IDENTICAL    reduce using rule 42 (valor -> bcolas .)
    IS_NOT_IDENTICAL reduce using rule 42 (valor -> bcolas .)
    COMMA           reduce using rule 42 (valor -> bcolas .)


state 84

    (43) valor -> bpila .

    SEMI            reduce using rule 43 (valor -> bpila .)
    SUMA            reduce using rule 43 (valor -> bpila .)
    RESTA           reduce using rule 43 (valor -> bpila .)
    MULTIPLICACION  reduce using rule 43 (valor -> bpila .)
    DIVISION        reduce using rule 43 (valor -> bpila .)
    MODULO          reduce using rule 43 (valor -> bpila .)
    RPAREN          reduce using rule 43 (valor -> bpila .)
    SMALLER         reduce using rule 43 (valor -> bpila .)
    GREATER         reduce using rule 43 (valor -> bpila .)
    IS_SMALLER_OR_EQUAL reduce using rule 43 (valor -> bpila .)
    IS_GREATER_OR_EQUAL reduce using rule 43 (valor -> bpila .)
    AND             reduce using rule 43 (valor -> bpila .)
    OR              reduce using rule 43 (valor -> bpila .)
    XOR             reduce using rule 43 (valor -> bpila .)
    IS_EQUAL        reduce using rule 43 (valor -> bpila .)
    IS_NOT_EQUAL    reduce using rule 43 (valor -> bpila .)
    IS_IDENTICAL    reduce using rule 43 (valor -> bpila .)
    IS_NOT_IDENTICAL reduce using rule 43 (valor -> bpila .)
    COMMA           reduce using rule 43 (valor -> bpila .)


state 85

    (175) bconcat -> CADENA . CONCAT CADENA SEMI
    (179) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI
    (45) tipoDato -> CADENA .

    CONCAT          shift and go to state 126
    CONCAT_EQUAL    shift and go to state 127
    SEMI            reduce using rule 45 (tipoDato -> CADENA .)
    SUMA            reduce using rule 45 (tipoDato -> CADENA .)
    RESTA           reduce using rule 45 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 45 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 45 (tipoDato -> CADENA .)
    MODULO          reduce using rule 45 (tipoDato -> CADENA .)


state 86

    (176) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (177) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (178) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (115) operaciones_mat -> VARIABLE . operadores VARIABLE
    (147) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (92) operadores -> . SUMA
    (93) operadores -> . RESTA
    (94) operadores -> . MULTIPLICACION
    (95) operadores -> . DIVISION
    (96) operadores -> . MODULO

    CONCAT          shift and go to state 110
    CONCAT_EQUAL    shift and go to state 111
    EQUALS          shift and go to state 171
    SUMA            shift and go to state 163
    RESTA           shift and go to state 164
    MULTIPLICACION  shift and go to state 165
    DIVISION        shift and go to state 166
    MODULO          shift and go to state 167

    operadores                     shift and go to state 170

state 87

    (116) operaciones_mat -> operaciones_mat_par .

    SEMI            reduce using rule 116 (operaciones_mat -> operaciones_mat_par .)


state 88

    (44) tipoDato -> numero .

    SEMI            reduce using rule 44 (tipoDato -> numero .)
    SUMA            reduce using rule 44 (tipoDato -> numero .)
    RESTA           reduce using rule 44 (tipoDato -> numero .)
    MULTIPLICACION  reduce using rule 44 (tipoDato -> numero .)
    DIVISION        reduce using rule 44 (tipoDato -> numero .)
    MODULO          reduce using rule 44 (tipoDato -> numero .)
    RPAREN          reduce using rule 44 (tipoDato -> numero .)
    SMALLER         reduce using rule 44 (tipoDato -> numero .)
    GREATER         reduce using rule 44 (tipoDato -> numero .)
    IS_SMALLER_OR_EQUAL reduce using rule 44 (tipoDato -> numero .)
    IS_GREATER_OR_EQUAL reduce using rule 44 (tipoDato -> numero .)
    AND             reduce using rule 44 (tipoDato -> numero .)
    OR              reduce using rule 44 (tipoDato -> numero .)
    XOR             reduce using rule 44 (tipoDato -> numero .)
    IS_EQUAL        reduce using rule 44 (tipoDato -> numero .)
    IS_NOT_EQUAL    reduce using rule 44 (tipoDato -> numero .)
    IS_IDENTICAL    reduce using rule 44 (tipoDato -> numero .)
    IS_NOT_IDENTICAL reduce using rule 44 (tipoDato -> numero .)
    COMMA           reduce using rule 44 (tipoDato -> numero .)


state 89

    (46) tipoDato -> BOOLEANO .

    SEMI            reduce using rule 46 (tipoDato -> BOOLEANO .)
    SUMA            reduce using rule 46 (tipoDato -> BOOLEANO .)
    RESTA           reduce using rule 46 (tipoDato -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 46 (tipoDato -> BOOLEANO .)
    DIVISION        reduce using rule 46 (tipoDato -> BOOLEANO .)
    MODULO          reduce using rule 46 (tipoDato -> BOOLEANO .)
    RPAREN          reduce using rule 46 (tipoDato -> BOOLEANO .)
    SMALLER         reduce using rule 46 (tipoDato -> BOOLEANO .)
    GREATER         reduce using rule 46 (tipoDato -> BOOLEANO .)
    IS_SMALLER_OR_EQUAL reduce using rule 46 (tipoDato -> BOOLEANO .)
    IS_GREATER_OR_EQUAL reduce using rule 46 (tipoDato -> BOOLEANO .)
    AND             reduce using rule 46 (tipoDato -> BOOLEANO .)
    OR              reduce using rule 46 (tipoDato -> BOOLEANO .)
    XOR             reduce using rule 46 (tipoDato -> BOOLEANO .)
    IS_EQUAL        reduce using rule 46 (tipoDato -> BOOLEANO .)
    IS_NOT_EQUAL    reduce using rule 46 (tipoDato -> BOOLEANO .)
    IS_IDENTICAL    reduce using rule 46 (tipoDato -> BOOLEANO .)
    IS_NOT_IDENTICAL reduce using rule 46 (tipoDato -> BOOLEANO .)
    COMMA           reduce using rule 46 (tipoDato -> BOOLEANO .)


state 90

    (117) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (118) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    VARIABLE        shift and go to state 173
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 172
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 91

    (48) numero -> DECIMAL .

    SEMI            reduce using rule 48 (numero -> DECIMAL .)
    SUMA            reduce using rule 48 (numero -> DECIMAL .)
    RESTA           reduce using rule 48 (numero -> DECIMAL .)
    MULTIPLICACION  reduce using rule 48 (numero -> DECIMAL .)
    DIVISION        reduce using rule 48 (numero -> DECIMAL .)
    MODULO          reduce using rule 48 (numero -> DECIMAL .)
    RPAREN          reduce using rule 48 (numero -> DECIMAL .)
    SMALLER         reduce using rule 48 (numero -> DECIMAL .)
    GREATER         reduce using rule 48 (numero -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 48 (numero -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 48 (numero -> DECIMAL .)
    AND             reduce using rule 48 (numero -> DECIMAL .)
    OR              reduce using rule 48 (numero -> DECIMAL .)
    XOR             reduce using rule 48 (numero -> DECIMAL .)
    IS_EQUAL        reduce using rule 48 (numero -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 48 (numero -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 48 (numero -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 48 (numero -> DECIMAL .)
    COMMA           reduce using rule 48 (numero -> DECIMAL .)


state 92

    (50) imprimir -> PRINT valor . SEMI
    (113) operaciones_mat -> valor . operadores valor
    (114) operaciones_mat -> valor . operadores operaciones_mat
    (92) operadores -> . SUMA
    (93) operadores -> . RESTA
    (94) operadores -> . MULTIPLICACION
    (95) operadores -> . DIVISION
    (96) operadores -> . MODULO

    SEMI            shift and go to state 174
    SUMA            shift and go to state 163
    RESTA           shift and go to state 164
    MULTIPLICACION  shift and go to state 165
    DIVISION        shift and go to state 166
    MODULO          shift and go to state 167

    operadores                     shift and go to state 162

state 93

    (51) imprimir -> PRINT LPAREN . valor RPAREN SEMI
    (117) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (118) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    VARIABLE        shift and go to state 173
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 175
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 94

    (55) imprimir -> PRINT operaciones_mat . SEMI

    SEMI            shift and go to state 176


state 95

    (115) operaciones_mat -> VARIABLE . operadores VARIABLE
    (147) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (92) operadores -> . SUMA
    (93) operadores -> . RESTA
    (94) operadores -> . MULTIPLICACION
    (95) operadores -> . DIVISION
    (96) operadores -> . MODULO

    EQUALS          shift and go to state 171
    SUMA            shift and go to state 163
    RESTA           shift and go to state 164
    MULTIPLICACION  shift and go to state 165
    DIVISION        shift and go to state 166
    MODULO          shift and go to state 167

    operadores                     shift and go to state 170

state 96

    (45) tipoDato -> CADENA .

    SEMI            reduce using rule 45 (tipoDato -> CADENA .)
    SUMA            reduce using rule 45 (tipoDato -> CADENA .)
    RESTA           reduce using rule 45 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 45 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 45 (tipoDato -> CADENA .)
    MODULO          reduce using rule 45 (tipoDato -> CADENA .)
    RPAREN          reduce using rule 45 (tipoDato -> CADENA .)
    SMALLER         reduce using rule 45 (tipoDato -> CADENA .)
    GREATER         reduce using rule 45 (tipoDato -> CADENA .)
    IS_SMALLER_OR_EQUAL reduce using rule 45 (tipoDato -> CADENA .)
    IS_GREATER_OR_EQUAL reduce using rule 45 (tipoDato -> CADENA .)
    AND             reduce using rule 45 (tipoDato -> CADENA .)
    OR              reduce using rule 45 (tipoDato -> CADENA .)
    XOR             reduce using rule 45 (tipoDato -> CADENA .)
    IS_EQUAL        reduce using rule 45 (tipoDato -> CADENA .)
    IS_NOT_EQUAL    reduce using rule 45 (tipoDato -> CADENA .)
    IS_IDENTICAL    reduce using rule 45 (tipoDato -> CADENA .)
    IS_NOT_IDENTICAL reduce using rule 45 (tipoDato -> CADENA .)
    COMMA           reduce using rule 45 (tipoDato -> CADENA .)


state 97

    (190) casting -> LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 177


state 98

    (161) simbolos -> LPAREN RPAREN .

    $end            reduce using rule 161 (simbolos -> LPAREN RPAREN .)
    RBRACE          reduce using rule 161 (simbolos -> LPAREN RPAREN .)
    SEMI            reduce using rule 161 (simbolos -> LPAREN RPAREN .)


state 99

    (180) tiposCast -> STRING .

    RPAREN          reduce using rule 180 (tiposCast -> STRING .)


state 100

    (181) tiposCast -> BOOL .

    RPAREN          reduce using rule 181 (tiposCast -> BOOL .)


state 101

    (182) tiposCast -> BOOLEAN .

    RPAREN          reduce using rule 182 (tiposCast -> BOOLEAN .)


state 102

    (183) tiposCast -> DOUBLE .

    RPAREN          reduce using rule 183 (tiposCast -> DOUBLE .)


state 103

    (184) tiposCast -> FLOAT .

    RPAREN          reduce using rule 184 (tiposCast -> FLOAT .)


state 104

    (185) tiposCast -> ARRAY .

    RPAREN          reduce using rule 185 (tiposCast -> ARRAY .)


state 105

    (186) tiposCast -> OBJECT .

    RPAREN          reduce using rule 186 (tiposCast -> OBJECT .)


state 106

    (187) tiposCast -> INTEGER .

    RPAREN          reduce using rule 187 (tiposCast -> INTEGER .)


state 107

    (188) tiposCast -> INT .

    RPAREN          reduce using rule 188 (tiposCast -> INT .)


state 108

    (164) simbolos -> LBRACKET RBRACKET .

    $end            reduce using rule 164 (simbolos -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 164 (simbolos -> LBRACKET RBRACKET .)
    SEMI            reduce using rule 164 (simbolos -> LBRACKET RBRACKET .)


state 109

    (27) asignacion -> VARIABLE EQUALS . valor SEMI
    (30) asignacion -> VARIABLE EQUALS . brand
    (31) asignacion -> VARIABLE EQUALS . escribir
    (32) asignacion -> VARIABLE EQUALS . btrim
    (33) asignacion -> VARIABLE EQUALS . lectura
    (34) asignacion -> VARIABLE EQUALS . bconcat
    (36) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (147) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI
    (189) casting -> VARIABLE EQUALS . LPAREN tiposCast RPAREN VARIABLE SEMI
    (38) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (192) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (132) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (151) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (152) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (149) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (150) lectura -> . READLINE LPAREN RPAREN SEMI
    (175) bconcat -> . CADENA CONCAT CADENA SEMI
    (176) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (177) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (178) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (179) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (113) operaciones_mat -> . valor operadores valor
    (114) operaciones_mat -> . valor operadores operaciones_mat
    (115) operaciones_mat -> . VARIABLE operadores VARIABLE
    (116) operaciones_mat -> . operaciones_mat_par
    (142) array_def -> . ARRAY LPAREN RPAREN
    (143) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (117) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (118) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    NEW             shift and go to state 186
    LPAREN          shift and go to state 187
    VARIABLE        shift and go to state 178
    RAND            shift and go to state 60
    FWRITE          shift and go to state 61
    TRIM            shift and go to state 62
    READLINE        shift and go to state 44
    CADENA          shift and go to state 85
    ARRAY           shift and go to state 189
    BOOLEANO        shift and go to state 89
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 179
    brand                          shift and go to state 180
    escribir                       shift and go to state 181
    btrim                          shift and go to state 182
    lectura                        shift and go to state 183
    bconcat                        shift and go to state 184
    operaciones_mat                shift and go to state 185
    array_def                      shift and go to state 188
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    operaciones_mat_par            shift and go to state 87
    numero                         shift and go to state 88

state 110

    (176) bconcat -> VARIABLE CONCAT . VARIABLE SEMI
    (177) bconcat -> VARIABLE CONCAT . CADENA SEMI

    VARIABLE        shift and go to state 190
    CADENA          shift and go to state 191


state 111

    (178) bconcat -> VARIABLE CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 192


state 112

    (191) aumentoCasting -> VARIABLE incrementos_mat . tipoDato SEMI
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    tipoDato                       shift and go to state 193
    numero                         shift and go to state 88

state 113

    (101) incrementos_mat -> MINUS_EQUAL .

    CADENA          reduce using rule 101 (incrementos_mat -> MINUS_EQUAL .)
    BOOLEANO        reduce using rule 101 (incrementos_mat -> MINUS_EQUAL .)
    ENTERO          reduce using rule 101 (incrementos_mat -> MINUS_EQUAL .)
    DECIMAL         reduce using rule 101 (incrementos_mat -> MINUS_EQUAL .)


state 114

    (102) incrementos_mat -> MOD_EQUAL .

    CADENA          reduce using rule 102 (incrementos_mat -> MOD_EQUAL .)
    BOOLEANO        reduce using rule 102 (incrementos_mat -> MOD_EQUAL .)
    ENTERO          reduce using rule 102 (incrementos_mat -> MOD_EQUAL .)
    DECIMAL         reduce using rule 102 (incrementos_mat -> MOD_EQUAL .)


state 115

    (103) incrementos_mat -> MUL_EQUAL .

    CADENA          reduce using rule 103 (incrementos_mat -> MUL_EQUAL .)
    BOOLEANO        reduce using rule 103 (incrementos_mat -> MUL_EQUAL .)
    ENTERO          reduce using rule 103 (incrementos_mat -> MUL_EQUAL .)
    DECIMAL         reduce using rule 103 (incrementos_mat -> MUL_EQUAL .)


state 116

    (104) incrementos_mat -> PLUS_EQUAL .

    CADENA          reduce using rule 104 (incrementos_mat -> PLUS_EQUAL .)
    BOOLEANO        reduce using rule 104 (incrementos_mat -> PLUS_EQUAL .)
    ENTERO          reduce using rule 104 (incrementos_mat -> PLUS_EQUAL .)
    DECIMAL         reduce using rule 104 (incrementos_mat -> PLUS_EQUAL .)


state 117

    (105) incrementos_mat -> DIV_EQUAL .

    CADENA          reduce using rule 105 (incrementos_mat -> DIV_EQUAL .)
    BOOLEANO        reduce using rule 105 (incrementos_mat -> DIV_EQUAL .)
    ENTERO          reduce using rule 105 (incrementos_mat -> DIV_EQUAL .)
    DECIMAL         reduce using rule 105 (incrementos_mat -> DIV_EQUAL .)


state 118

    (28) asignacion -> VAR asignacion .

    $end            reduce using rule 28 (asignacion -> VAR asignacion .)
    RBRACE          reduce using rule 28 (asignacion -> VAR asignacion .)
    SEMI            reduce using rule 28 (asignacion -> VAR asignacion .)
    VARIABLE        reduce using rule 28 (asignacion -> VAR asignacion .)
    CADENA          reduce using rule 28 (asignacion -> VAR asignacion .)
    BOOLEANO        reduce using rule 28 (asignacion -> VAR asignacion .)
    ENTERO          reduce using rule 28 (asignacion -> VAR asignacion .)
    DECIMAL         reduce using rule 28 (asignacion -> VAR asignacion .)
    RPAREN          reduce using rule 28 (asignacion -> VAR asignacion .)
    COMMA           reduce using rule 28 (asignacion -> VAR asignacion .)


state 119

    (27) asignacion -> VARIABLE . EQUALS valor SEMI
    (30) asignacion -> VARIABLE . EQUALS brand
    (31) asignacion -> VARIABLE . EQUALS escribir
    (32) asignacion -> VARIABLE . EQUALS btrim
    (33) asignacion -> VARIABLE . EQUALS lectura
    (34) asignacion -> VARIABLE . EQUALS bconcat
    (36) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (38) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (191) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (101) incrementos_mat -> . MINUS_EQUAL
    (102) incrementos_mat -> . MOD_EQUAL
    (103) incrementos_mat -> . MUL_EQUAL
    (104) incrementos_mat -> . PLUS_EQUAL
    (105) incrementos_mat -> . DIV_EQUAL

    EQUALS          shift and go to state 194
    MINUS_EQUAL     shift and go to state 113
    MOD_EQUAL       shift and go to state 114
    MUL_EQUAL       shift and go to state 115
    PLUS_EQUAL      shift and go to state 116
    DIV_EQUAL       shift and go to state 117

    incrementos_mat                shift and go to state 112

state 120

    (29) asignacion -> proteccion . asignacion
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 119
    VAR             shift and go to state 35
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73

    proteccion                     shift and go to state 120
    asignacion                     shift and go to state 121
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38

state 121

    (29) asignacion -> proteccion asignacion .

    $end            reduce using rule 29 (asignacion -> proteccion asignacion .)
    RBRACE          reduce using rule 29 (asignacion -> proteccion asignacion .)
    SEMI            reduce using rule 29 (asignacion -> proteccion asignacion .)
    VARIABLE        reduce using rule 29 (asignacion -> proteccion asignacion .)
    CADENA          reduce using rule 29 (asignacion -> proteccion asignacion .)
    BOOLEANO        reduce using rule 29 (asignacion -> proteccion asignacion .)
    ENTERO          reduce using rule 29 (asignacion -> proteccion asignacion .)
    DECIMAL         reduce using rule 29 (asignacion -> proteccion asignacion .)
    RPAREN          reduce using rule 29 (asignacion -> proteccion asignacion .)
    COMMA           reduce using rule 29 (asignacion -> proteccion asignacion .)


state 122

    (120) funciones -> proteccion funcion_nparams .

    $end            reduce using rule 120 (funciones -> proteccion funcion_nparams .)
    RBRACE          reduce using rule 120 (funciones -> proteccion funcion_nparams .)
    SEMI            reduce using rule 120 (funciones -> proteccion funcion_nparams .)


state 123

    (122) funciones -> proteccion funcion_blank .

    $end            reduce using rule 122 (funciones -> proteccion funcion_blank .)
    RBRACE          reduce using rule 122 (funciones -> proteccion funcion_blank .)
    SEMI            reduce using rule 122 (funciones -> proteccion funcion_blank .)


state 124

    (126) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE

    NOMBRE          shift and go to state 195


state 125

    (39) constante -> DEFINE LPAREN . CADENA COMMA valor RPAREN SEMI
    (40) constante -> DEFINE LPAREN . NOMBRE COMMA ARRAY RPAREN SEMI

    CADENA          shift and go to state 196
    NOMBRE          shift and go to state 197


state 126

    (175) bconcat -> CADENA CONCAT . CADENA SEMI

    CADENA          shift and go to state 198


state 127

    (179) bconcat -> CADENA CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 199


state 128

    (149) lectura -> READLINE LPAREN . CADENA RPAREN SEMI
    (150) lectura -> READLINE LPAREN . RPAREN SEMI

    CADENA          shift and go to state 200
    RPAREN          shift and go to state 201


state 129

    (82) bwhile -> WHILE LPAREN . condicion RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> WHILE LPAREN . condicion RPAREN COLON stc_bloque
    (65) condicion -> . VARIABLE operador_logico VARIABLE
    (66) condicion -> . valor operador_logico valor
    (67) condicion -> . VARIABLE operador_logico valor
    (68) condicion -> . VARIABLE condicion_booleana VARIABLE
    (69) condicion -> . valor condicion_booleana valor
    (70) condicion -> . VARIABLE condicion_booleana valor
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    VARIABLE        shift and go to state 203
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    condicion                      shift and go to state 202
    valor                          shift and go to state 204
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 130

    (167) simbolos -> LBRACE RBRACE .

    $end            reduce using rule 167 (simbolos -> LBRACE RBRACE .)
    RBRACE          reduce using rule 167 (simbolos -> LBRACE RBRACE .)
    SEMI            reduce using rule 167 (simbolos -> LBRACE RBRACE .)


state 131

    (169) simbolos -> RBRACE instrucciones .

    $end            reduce using rule 169 (simbolos -> RBRACE instrucciones .)
    RBRACE          reduce using rule 169 (simbolos -> RBRACE instrucciones .)
    SEMI            reduce using rule 169 (simbolos -> RBRACE instrucciones .)


state 132

    (173) instrucciones -> condicion_else .

    $end            reduce using rule 173 (instrucciones -> condicion_else .)
    RBRACE          reduce using rule 173 (instrucciones -> condicion_else .)
    SEMI            reduce using rule 173 (instrucciones -> condicion_else .)


state 133

    (174) instrucciones -> condicion_elseif .

    $end            reduce using rule 174 (instrucciones -> condicion_elseif .)
    RBRACE          reduce using rule 174 (instrucciones -> condicion_elseif .)
    SEMI            reduce using rule 174 (instrucciones -> condicion_elseif .)


state 134

    (58) condicion_else -> ELSE . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 205


state 135

    (57) condicion_elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 206


state 136

    (84) bdo -> DO LBRACE . cuerpo RBRACE bwhile
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (26) cuerpo -> . simbolos
    (49) imprimir -> . ECHO valor SEMI
    (50) imprimir -> . PRINT valor SEMI
    (51) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (52) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (53) imprimir -> . ECHO bconcat
    (54) imprimir -> . ECHO operaciones_mat SEMI
    (55) imprimir -> . PRINT operaciones_mat SEMI
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (119) funciones -> . funcion_nparams
    (120) funciones -> . proteccion funcion_nparams
    (121) funciones -> . funcion_blank
    (122) funciones -> . proteccion funcion_blank
    (123) funciones -> . funcion_void
    (39) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (40) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (149) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (150) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (84) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (71) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (81) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (89) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) repiteCondicional -> . condicion_ifelse
    (64) repiteCondicional -> . condicion_ifelse repiteCondicional
    (85) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (86) bcase -> . CASE ENTERO COLON
    (155) bgoto -> . GOTO NOMBRE SEMI
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (156) bcortes -> . EXIT SEMI
    (157) bcortes -> . BREAK SEMI
    (158) bcortes -> . DEFAULT SEMI
    (159) bcortes -> . CONTINUE SEMI
    (132) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (151) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (152) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (160) otros -> . SMALLER NOMBRE GREATER
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI
    (153) comment -> . COMENTARIOS
    (154) comment -> . DOC_COMENTARIOS
    (189) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (190) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) bconcat -> . CADENA CONCAT CADENA SEMI
    (176) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (177) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (178) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (179) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (161) simbolos -> . LPAREN RPAREN
    (162) simbolos -> . LPAREN
    (163) simbolos -> . RPAREN
    (164) simbolos -> . LBRACKET RBRACKET
    (165) simbolos -> . LBRACKET
    (166) simbolos -> . RBRACKET
    (167) simbolos -> . LBRACE RBRACE
    (168) simbolos -> . LBRACE
    (169) simbolos -> . RBRACE instrucciones
    (170) simbolos -> . OPEN_TAG CLOSE_TAG
    (171) simbolos -> . OPEN_TAG
    (172) simbolos -> . CLOSE_TAG
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (126) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (129) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (59) condicion_ifelse -> . condicion_if
    (60) condicion_ifelse -> . condicion_if condicion_else
    (61) condicion_ifelse -> . condicion_if condicion_elseif
    (62) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (146) empty -> .
    (56) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    VARIABLE        shift and go to state 34
    VAR             shift and go to state 35
    DEFINE          shift and go to state 42
    READLINE        shift and go to state 44
    WHILE           shift and go to state 45
    DO              shift and go to state 48
    FOR             shift and go to state 49
    FOREACH         shift and go to state 50
    TRY             shift and go to state 51
    SWITCH          shift and go to state 53
    CASE            shift and go to state 54
    GOTO            shift and go to state 55
    EXIT            shift and go to state 56
    BREAK           shift and go to state 57
    DEFAULT         shift and go to state 58
    CONTINUE        shift and go to state 59
    RAND            shift and go to state 60
    FWRITE          shift and go to state 61
    TRIM            shift and go to state 62
    SMALLER         shift and go to state 63
    RETURN          shift and go to state 65
    COMENTARIOS     shift and go to state 66
    DOC_COMENTARIOS shift and go to state 67
    LPAREN          shift and go to state 30
    CADENA          shift and go to state 43
    RPAREN          shift and go to state 31
    LBRACKET        shift and go to state 32
    RBRACKET        shift and go to state 33
    LBRACE          shift and go to state 46
    RBRACE          shift and go to state 47
    OPEN_TAG        shift and go to state 68
    CLOSE_TAG       shift and go to state 69
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73
    FUNCTION        shift and go to state 74
    IF              shift and go to state 76

  ! RBRACE          [ reduce using rule 146 (empty -> .) ]

    cuerpo                         shift and go to state 207
    bwhile                         shift and go to state 7
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    simbolos                       shift and go to state 27
    proteccion                     shift and go to state 36
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38
    funcion_nparams                shift and go to state 39
    funcion_blank                  shift and go to state 40
    funcion_void                   shift and go to state 41
    condicion_ifelse               shift and go to state 52
    empty                          shift and go to state 64
    condicion_if                   shift and go to state 75

state 137

    (71) bfor -> FOR LPAREN . asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 119
    VAR             shift and go to state 35
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73

    asignacion                     shift and go to state 208
    proteccion                     shift and go to state 120
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38

state 138

    (81) bforeach -> FOREACH LPAREN . VARIABLE AS VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 209


state 139

    (89) btry -> TRY LBRACE . stc_bloque_def RBRACE catches
    (74) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 210

    stc_bloque_def                 shift and go to state 211

state 140

    (64) repiteCondicional -> condicion_ifelse repiteCondicional .

    $end            reduce using rule 64 (repiteCondicional -> condicion_ifelse repiteCondicional .)
    RBRACE          reduce using rule 64 (repiteCondicional -> condicion_ifelse repiteCondicional .)
    SEMI            reduce using rule 64 (repiteCondicional -> condicion_ifelse repiteCondicional .)


state 141

    (85) bswitch -> SWITCH LPAREN . VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE

    VARIABLE        shift and go to state 212


state 142

    (86) bcase -> CASE ENTERO . COLON

    COLON           shift and go to state 213


state 143

    (155) bgoto -> GOTO NOMBRE . SEMI

    SEMI            shift and go to state 214


state 144

    (156) bcortes -> EXIT SEMI .

    $end            reduce using rule 156 (bcortes -> EXIT SEMI .)
    RBRACE          reduce using rule 156 (bcortes -> EXIT SEMI .)
    SEMI            reduce using rule 156 (bcortes -> EXIT SEMI .)


state 145

    (157) bcortes -> BREAK SEMI .

    $end            reduce using rule 157 (bcortes -> BREAK SEMI .)
    RBRACE          reduce using rule 157 (bcortes -> BREAK SEMI .)
    SEMI            reduce using rule 157 (bcortes -> BREAK SEMI .)


state 146

    (158) bcortes -> DEFAULT SEMI .

    $end            reduce using rule 158 (bcortes -> DEFAULT SEMI .)
    RBRACE          reduce using rule 158 (bcortes -> DEFAULT SEMI .)
    SEMI            reduce using rule 158 (bcortes -> DEFAULT SEMI .)


state 147

    (159) bcortes -> CONTINUE SEMI .

    $end            reduce using rule 159 (bcortes -> CONTINUE SEMI .)
    RBRACE          reduce using rule 159 (bcortes -> CONTINUE SEMI .)
    SEMI            reduce using rule 159 (bcortes -> CONTINUE SEMI .)


state 148

    (132) brand -> RAND LPAREN . ENTERO COMMA ENTERO RPAREN SEMI

    ENTERO          shift and go to state 215


state 149

    (151) escribir -> FWRITE LPAREN . NOMBRE COMMA CADENA RPAREN SEMI

    NOMBRE          shift and go to state 216


state 150

    (152) btrim -> TRIM LPAREN . NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 217


state 151

    (160) otros -> SMALLER NOMBRE . GREATER

    GREATER         shift and go to state 218


state 152

    (138) breturn -> RETURN SEMI .

    $end            reduce using rule 138 (breturn -> RETURN SEMI .)
    RBRACE          reduce using rule 138 (breturn -> RETURN SEMI .)
    SEMI            reduce using rule 138 (breturn -> RETURN SEMI .)


state 153

    (139) breturn -> RETURN NULL . SEMI

    SEMI            shift and go to state 219


state 154

    (140) breturn -> RETURN VARIABLE . SEMI

    SEMI            shift and go to state 220


state 155

    (141) breturn -> RETURN BOOLEANO . SEMI

    SEMI            shift and go to state 221


state 156

    (170) simbolos -> OPEN_TAG CLOSE_TAG .

    $end            reduce using rule 170 (simbolos -> OPEN_TAG CLOSE_TAG .)
    RBRACE          reduce using rule 170 (simbolos -> OPEN_TAG CLOSE_TAG .)
    SEMI            reduce using rule 170 (simbolos -> OPEN_TAG CLOSE_TAG .)


state 157

    (126) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE
    (129) funcion_void -> FUNCTION NOMBRE . LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    LPAREN          shift and go to state 222


state 158

    (60) condicion_ifelse -> condicion_if condicion_else .

    IF              reduce using rule 60 (condicion_ifelse -> condicion_if condicion_else .)
    $end            reduce using rule 60 (condicion_ifelse -> condicion_if condicion_else .)
    RBRACE          reduce using rule 60 (condicion_ifelse -> condicion_if condicion_else .)
    SEMI            reduce using rule 60 (condicion_ifelse -> condicion_if condicion_else .)


state 159

    (61) condicion_ifelse -> condicion_if condicion_elseif .
    (62) condicion_ifelse -> condicion_if condicion_elseif . condicion_else
    (58) condicion_else -> . ELSE LBRACE cuerpo RBRACE

    IF              reduce using rule 61 (condicion_ifelse -> condicion_if condicion_elseif .)
    $end            reduce using rule 61 (condicion_ifelse -> condicion_if condicion_elseif .)
    RBRACE          reduce using rule 61 (condicion_ifelse -> condicion_if condicion_elseif .)
    SEMI            reduce using rule 61 (condicion_ifelse -> condicion_if condicion_elseif .)
    ELSE            shift and go to state 134

    condicion_else                 shift and go to state 223

state 160

    (56) condicion_if -> IF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (65) condicion -> . VARIABLE operador_logico VARIABLE
    (66) condicion -> . valor operador_logico valor
    (67) condicion -> . VARIABLE operador_logico valor
    (68) condicion -> . VARIABLE condicion_booleana VARIABLE
    (69) condicion -> . valor condicion_booleana valor
    (70) condicion -> . VARIABLE condicion_booleana valor
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    VARIABLE        shift and go to state 203
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    condicion                      shift and go to state 224
    valor                          shift and go to state 204
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 161

    (49) imprimir -> ECHO valor SEMI .

    $end            reduce using rule 49 (imprimir -> ECHO valor SEMI .)
    RBRACE          reduce using rule 49 (imprimir -> ECHO valor SEMI .)
    SEMI            reduce using rule 49 (imprimir -> ECHO valor SEMI .)


state 162

    (113) operaciones_mat -> valor operadores . valor
    (114) operaciones_mat -> valor operadores . operaciones_mat
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (113) operaciones_mat -> . valor operadores valor
    (114) operaciones_mat -> . valor operadores operaciones_mat
    (115) operaciones_mat -> . VARIABLE operadores VARIABLE
    (116) operaciones_mat -> . operaciones_mat_par
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (117) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (118) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    VARIABLE        shift and go to state 95
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    LPAREN          shift and go to state 90
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 225
    operaciones_mat                shift and go to state 226
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    operaciones_mat_par            shift and go to state 87
    numero                         shift and go to state 88

state 163

    (92) operadores -> SUMA .

    VARIABLE        reduce using rule 92 (operadores -> SUMA .)
    CADENA          reduce using rule 92 (operadores -> SUMA .)
    BOOLEANO        reduce using rule 92 (operadores -> SUMA .)
    LPAREN          reduce using rule 92 (operadores -> SUMA .)
    ENTERO          reduce using rule 92 (operadores -> SUMA .)
    DECIMAL         reduce using rule 92 (operadores -> SUMA .)


state 164

    (93) operadores -> RESTA .

    VARIABLE        reduce using rule 93 (operadores -> RESTA .)
    CADENA          reduce using rule 93 (operadores -> RESTA .)
    BOOLEANO        reduce using rule 93 (operadores -> RESTA .)
    LPAREN          reduce using rule 93 (operadores -> RESTA .)
    ENTERO          reduce using rule 93 (operadores -> RESTA .)
    DECIMAL         reduce using rule 93 (operadores -> RESTA .)


state 165

    (94) operadores -> MULTIPLICACION .

    VARIABLE        reduce using rule 94 (operadores -> MULTIPLICACION .)
    CADENA          reduce using rule 94 (operadores -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 94 (operadores -> MULTIPLICACION .)
    LPAREN          reduce using rule 94 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 94 (operadores -> MULTIPLICACION .)
    DECIMAL         reduce using rule 94 (operadores -> MULTIPLICACION .)


state 166

    (95) operadores -> DIVISION .

    VARIABLE        reduce using rule 95 (operadores -> DIVISION .)
    CADENA          reduce using rule 95 (operadores -> DIVISION .)
    BOOLEANO        reduce using rule 95 (operadores -> DIVISION .)
    LPAREN          reduce using rule 95 (operadores -> DIVISION .)
    ENTERO          reduce using rule 95 (operadores -> DIVISION .)
    DECIMAL         reduce using rule 95 (operadores -> DIVISION .)


state 167

    (96) operadores -> MODULO .

    VARIABLE        reduce using rule 96 (operadores -> MODULO .)
    CADENA          reduce using rule 96 (operadores -> MODULO .)
    BOOLEANO        reduce using rule 96 (operadores -> MODULO .)
    LPAREN          reduce using rule 96 (operadores -> MODULO .)
    ENTERO          reduce using rule 96 (operadores -> MODULO .)
    DECIMAL         reduce using rule 96 (operadores -> MODULO .)


state 168

    (52) imprimir -> ECHO NOMBRE LBRACKET . ENTERO RBRACKET SEMI

    ENTERO          shift and go to state 227


state 169

    (54) imprimir -> ECHO operaciones_mat SEMI .

    $end            reduce using rule 54 (imprimir -> ECHO operaciones_mat SEMI .)
    RBRACE          reduce using rule 54 (imprimir -> ECHO operaciones_mat SEMI .)
    SEMI            reduce using rule 54 (imprimir -> ECHO operaciones_mat SEMI .)


state 170

    (115) operaciones_mat -> VARIABLE operadores . VARIABLE

    VARIABLE        shift and go to state 228


state 171

    (147) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI

    NEW             shift and go to state 186


state 172

    (117) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (118) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (92) operadores -> . SUMA
    (93) operadores -> . RESTA
    (94) operadores -> . MULTIPLICACION
    (95) operadores -> . DIVISION
    (96) operadores -> . MODULO

    SUMA            shift and go to state 163
    RESTA           shift and go to state 164
    MULTIPLICACION  shift and go to state 165
    DIVISION        shift and go to state 166
    MODULO          shift and go to state 167

    operadores                     shift and go to state 229

state 173

    (147) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    EQUALS          shift and go to state 171


state 174

    (50) imprimir -> PRINT valor SEMI .

    $end            reduce using rule 50 (imprimir -> PRINT valor SEMI .)
    RBRACE          reduce using rule 50 (imprimir -> PRINT valor SEMI .)
    SEMI            reduce using rule 50 (imprimir -> PRINT valor SEMI .)


state 175

    (51) imprimir -> PRINT LPAREN valor . RPAREN SEMI
    (117) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (118) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (92) operadores -> . SUMA
    (93) operadores -> . RESTA
    (94) operadores -> . MULTIPLICACION
    (95) operadores -> . DIVISION
    (96) operadores -> . MODULO

    RPAREN          shift and go to state 230
    SUMA            shift and go to state 163
    RESTA           shift and go to state 164
    MULTIPLICACION  shift and go to state 165
    DIVISION        shift and go to state 166
    MODULO          shift and go to state 167

    operadores                     shift and go to state 229

state 176

    (55) imprimir -> PRINT operaciones_mat SEMI .

    $end            reduce using rule 55 (imprimir -> PRINT operaciones_mat SEMI .)
    RBRACE          reduce using rule 55 (imprimir -> PRINT operaciones_mat SEMI .)
    SEMI            reduce using rule 55 (imprimir -> PRINT operaciones_mat SEMI .)


state 177

    (190) casting -> LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 231


state 178

    (192) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores tipoDato SEMI
    (176) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (177) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (178) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (115) operaciones_mat -> VARIABLE . operadores VARIABLE
    (147) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (92) operadores -> . SUMA
    (93) operadores -> . RESTA
    (94) operadores -> . MULTIPLICACION
    (95) operadores -> . DIVISION
    (96) operadores -> . MODULO

    CONCAT          shift and go to state 110
    CONCAT_EQUAL    shift and go to state 111
    EQUALS          shift and go to state 171
    SUMA            shift and go to state 163
    RESTA           shift and go to state 164
    MULTIPLICACION  shift and go to state 165
    DIVISION        shift and go to state 166
    MODULO          shift and go to state 167

    operadores                     shift and go to state 232

state 179

    (27) asignacion -> VARIABLE EQUALS valor . SEMI
    (113) operaciones_mat -> valor . operadores valor
    (114) operaciones_mat -> valor . operadores operaciones_mat
    (92) operadores -> . SUMA
    (93) operadores -> . RESTA
    (94) operadores -> . MULTIPLICACION
    (95) operadores -> . DIVISION
    (96) operadores -> . MODULO

    SEMI            shift and go to state 233
    SUMA            shift and go to state 163
    RESTA           shift and go to state 164
    MULTIPLICACION  shift and go to state 165
    DIVISION        shift and go to state 166
    MODULO          shift and go to state 167

    operadores                     shift and go to state 162

state 180

    (30) asignacion -> VARIABLE EQUALS brand .

    $end            reduce using rule 30 (asignacion -> VARIABLE EQUALS brand .)
    RBRACE          reduce using rule 30 (asignacion -> VARIABLE EQUALS brand .)
    SEMI            reduce using rule 30 (asignacion -> VARIABLE EQUALS brand .)
    VARIABLE        reduce using rule 30 (asignacion -> VARIABLE EQUALS brand .)
    CADENA          reduce using rule 30 (asignacion -> VARIABLE EQUALS brand .)
    BOOLEANO        reduce using rule 30 (asignacion -> VARIABLE EQUALS brand .)
    ENTERO          reduce using rule 30 (asignacion -> VARIABLE EQUALS brand .)
    DECIMAL         reduce using rule 30 (asignacion -> VARIABLE EQUALS brand .)
    RPAREN          reduce using rule 30 (asignacion -> VARIABLE EQUALS brand .)
    COMMA           reduce using rule 30 (asignacion -> VARIABLE EQUALS brand .)


state 181

    (31) asignacion -> VARIABLE EQUALS escribir .

    $end            reduce using rule 31 (asignacion -> VARIABLE EQUALS escribir .)
    RBRACE          reduce using rule 31 (asignacion -> VARIABLE EQUALS escribir .)
    SEMI            reduce using rule 31 (asignacion -> VARIABLE EQUALS escribir .)
    VARIABLE        reduce using rule 31 (asignacion -> VARIABLE EQUALS escribir .)
    CADENA          reduce using rule 31 (asignacion -> VARIABLE EQUALS escribir .)
    BOOLEANO        reduce using rule 31 (asignacion -> VARIABLE EQUALS escribir .)
    ENTERO          reduce using rule 31 (asignacion -> VARIABLE EQUALS escribir .)
    DECIMAL         reduce using rule 31 (asignacion -> VARIABLE EQUALS escribir .)
    RPAREN          reduce using rule 31 (asignacion -> VARIABLE EQUALS escribir .)
    COMMA           reduce using rule 31 (asignacion -> VARIABLE EQUALS escribir .)


state 182

    (32) asignacion -> VARIABLE EQUALS btrim .

    $end            reduce using rule 32 (asignacion -> VARIABLE EQUALS btrim .)
    RBRACE          reduce using rule 32 (asignacion -> VARIABLE EQUALS btrim .)
    SEMI            reduce using rule 32 (asignacion -> VARIABLE EQUALS btrim .)
    VARIABLE        reduce using rule 32 (asignacion -> VARIABLE EQUALS btrim .)
    CADENA          reduce using rule 32 (asignacion -> VARIABLE EQUALS btrim .)
    BOOLEANO        reduce using rule 32 (asignacion -> VARIABLE EQUALS btrim .)
    ENTERO          reduce using rule 32 (asignacion -> VARIABLE EQUALS btrim .)
    DECIMAL         reduce using rule 32 (asignacion -> VARIABLE EQUALS btrim .)
    RPAREN          reduce using rule 32 (asignacion -> VARIABLE EQUALS btrim .)
    COMMA           reduce using rule 32 (asignacion -> VARIABLE EQUALS btrim .)


state 183

    (33) asignacion -> VARIABLE EQUALS lectura .

    $end            reduce using rule 33 (asignacion -> VARIABLE EQUALS lectura .)
    RBRACE          reduce using rule 33 (asignacion -> VARIABLE EQUALS lectura .)
    SEMI            reduce using rule 33 (asignacion -> VARIABLE EQUALS lectura .)
    VARIABLE        reduce using rule 33 (asignacion -> VARIABLE EQUALS lectura .)
    CADENA          reduce using rule 33 (asignacion -> VARIABLE EQUALS lectura .)
    BOOLEANO        reduce using rule 33 (asignacion -> VARIABLE EQUALS lectura .)
    ENTERO          reduce using rule 33 (asignacion -> VARIABLE EQUALS lectura .)
    DECIMAL         reduce using rule 33 (asignacion -> VARIABLE EQUALS lectura .)
    RPAREN          reduce using rule 33 (asignacion -> VARIABLE EQUALS lectura .)
    COMMA           reduce using rule 33 (asignacion -> VARIABLE EQUALS lectura .)


state 184

    (34) asignacion -> VARIABLE EQUALS bconcat .

    $end            reduce using rule 34 (asignacion -> VARIABLE EQUALS bconcat .)
    RBRACE          reduce using rule 34 (asignacion -> VARIABLE EQUALS bconcat .)
    SEMI            reduce using rule 34 (asignacion -> VARIABLE EQUALS bconcat .)
    VARIABLE        reduce using rule 34 (asignacion -> VARIABLE EQUALS bconcat .)
    CADENA          reduce using rule 34 (asignacion -> VARIABLE EQUALS bconcat .)
    BOOLEANO        reduce using rule 34 (asignacion -> VARIABLE EQUALS bconcat .)
    ENTERO          reduce using rule 34 (asignacion -> VARIABLE EQUALS bconcat .)
    DECIMAL         reduce using rule 34 (asignacion -> VARIABLE EQUALS bconcat .)
    RPAREN          reduce using rule 34 (asignacion -> VARIABLE EQUALS bconcat .)
    COMMA           reduce using rule 34 (asignacion -> VARIABLE EQUALS bconcat .)


state 185

    (36) asignacion -> VARIABLE EQUALS operaciones_mat . SEMI

    SEMI            shift and go to state 234


state 186

    (147) bcolas -> VARIABLE EQUALS NEW . SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE EQUALS NEW . SPLSTACK LPAREN RPAREN SEMI

    SPLQUEUE        shift and go to state 235
    SPLSTACK        shift and go to state 236


state 187

    (189) casting -> VARIABLE EQUALS LPAREN . tiposCast RPAREN VARIABLE SEMI
    (117) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (118) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (180) tiposCast -> . STRING
    (181) tiposCast -> . BOOL
    (182) tiposCast -> . BOOLEAN
    (183) tiposCast -> . DOUBLE
    (184) tiposCast -> . FLOAT
    (185) tiposCast -> . ARRAY
    (186) tiposCast -> . OBJECT
    (187) tiposCast -> . INTEGER
    (188) tiposCast -> . INT
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    STRING          shift and go to state 99
    BOOL            shift and go to state 100
    BOOLEAN         shift and go to state 101
    DOUBLE          shift and go to state 102
    FLOAT           shift and go to state 103
    ARRAY           shift and go to state 104
    OBJECT          shift and go to state 105
    INTEGER         shift and go to state 106
    INT             shift and go to state 107
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    VARIABLE        shift and go to state 173
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    tiposCast                      shift and go to state 237
    valor                          shift and go to state 172
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 188

    (38) asignacion_array -> VARIABLE EQUALS array_def . SEMI

    SEMI            shift and go to state 238


state 189

    (142) array_def -> ARRAY . LPAREN RPAREN
    (143) array_def -> ARRAY . LPAREN array_elmnt RPAREN

    LPAREN          shift and go to state 239


state 190

    (176) bconcat -> VARIABLE CONCAT VARIABLE . SEMI

    SEMI            shift and go to state 240


state 191

    (177) bconcat -> VARIABLE CONCAT CADENA . SEMI

    SEMI            shift and go to state 241


state 192

    (178) bconcat -> VARIABLE CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 242


state 193

    (191) aumentoCasting -> VARIABLE incrementos_mat tipoDato . SEMI

    SEMI            shift and go to state 243


state 194

    (27) asignacion -> VARIABLE EQUALS . valor SEMI
    (30) asignacion -> VARIABLE EQUALS . brand
    (31) asignacion -> VARIABLE EQUALS . escribir
    (32) asignacion -> VARIABLE EQUALS . btrim
    (33) asignacion -> VARIABLE EQUALS . lectura
    (34) asignacion -> VARIABLE EQUALS . bconcat
    (36) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (38) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (192) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (132) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (151) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (152) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (149) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (150) lectura -> . READLINE LPAREN RPAREN SEMI
    (175) bconcat -> . CADENA CONCAT CADENA SEMI
    (176) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (177) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (178) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (179) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (113) operaciones_mat -> . valor operadores valor
    (114) operaciones_mat -> . valor operadores operaciones_mat
    (115) operaciones_mat -> . VARIABLE operadores VARIABLE
    (116) operaciones_mat -> . operaciones_mat_par
    (142) array_def -> . ARRAY LPAREN RPAREN
    (143) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (117) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (118) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    VARIABLE        shift and go to state 178
    RAND            shift and go to state 60
    FWRITE          shift and go to state 61
    TRIM            shift and go to state 62
    READLINE        shift and go to state 44
    CADENA          shift and go to state 85
    ARRAY           shift and go to state 189
    BOOLEANO        shift and go to state 89
    LPAREN          shift and go to state 90
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 179
    brand                          shift and go to state 180
    escribir                       shift and go to state 181
    btrim                          shift and go to state 182
    lectura                        shift and go to state 183
    bconcat                        shift and go to state 184
    operaciones_mat                shift and go to state 185
    array_def                      shift and go to state 188
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    operaciones_mat_par            shift and go to state 87
    numero                         shift and go to state 88

state 195

    (126) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE

    LPAREN          shift and go to state 244


state 196

    (39) constante -> DEFINE LPAREN CADENA . COMMA valor RPAREN SEMI

    COMMA           shift and go to state 245


state 197

    (40) constante -> DEFINE LPAREN NOMBRE . COMMA ARRAY RPAREN SEMI

    COMMA           shift and go to state 246


state 198

    (175) bconcat -> CADENA CONCAT CADENA . SEMI

    SEMI            shift and go to state 247


state 199

    (179) bconcat -> CADENA CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 248


state 200

    (149) lectura -> READLINE LPAREN CADENA . RPAREN SEMI

    RPAREN          shift and go to state 249


state 201

    (150) lectura -> READLINE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 250


state 202

    (82) bwhile -> WHILE LPAREN condicion . RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> WHILE LPAREN condicion . RPAREN COLON stc_bloque

    RPAREN          shift and go to state 251


state 203

    (65) condicion -> VARIABLE . operador_logico VARIABLE
    (67) condicion -> VARIABLE . operador_logico valor
    (68) condicion -> VARIABLE . condicion_booleana VARIABLE
    (70) condicion -> VARIABLE . condicion_booleana valor
    (147) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (97) operador_logico -> . SMALLER
    (98) operador_logico -> . GREATER
    (99) operador_logico -> . IS_SMALLER_OR_EQUAL
    (100) operador_logico -> . IS_GREATER_OR_EQUAL
    (106) condicion_booleana -> . AND
    (107) condicion_booleana -> . OR
    (108) condicion_booleana -> . XOR
    (109) condicion_booleana -> . IS_EQUAL
    (110) condicion_booleana -> . IS_NOT_EQUAL
    (111) condicion_booleana -> . IS_IDENTICAL
    (112) condicion_booleana -> . IS_NOT_IDENTICAL

    EQUALS          shift and go to state 171
    SMALLER         shift and go to state 254
    GREATER         shift and go to state 255
    IS_SMALLER_OR_EQUAL shift and go to state 256
    IS_GREATER_OR_EQUAL shift and go to state 257
    AND             shift and go to state 258
    OR              shift and go to state 259
    XOR             shift and go to state 260
    IS_EQUAL        shift and go to state 261
    IS_NOT_EQUAL    shift and go to state 262
    IS_IDENTICAL    shift and go to state 263
    IS_NOT_IDENTICAL shift and go to state 264

    operador_logico                shift and go to state 252
    condicion_booleana             shift and go to state 253

state 204

    (66) condicion -> valor . operador_logico valor
    (69) condicion -> valor . condicion_booleana valor
    (97) operador_logico -> . SMALLER
    (98) operador_logico -> . GREATER
    (99) operador_logico -> . IS_SMALLER_OR_EQUAL
    (100) operador_logico -> . IS_GREATER_OR_EQUAL
    (106) condicion_booleana -> . AND
    (107) condicion_booleana -> . OR
    (108) condicion_booleana -> . XOR
    (109) condicion_booleana -> . IS_EQUAL
    (110) condicion_booleana -> . IS_NOT_EQUAL
    (111) condicion_booleana -> . IS_IDENTICAL
    (112) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 254
    GREATER         shift and go to state 255
    IS_SMALLER_OR_EQUAL shift and go to state 256
    IS_GREATER_OR_EQUAL shift and go to state 257
    AND             shift and go to state 258
    OR              shift and go to state 259
    XOR             shift and go to state 260
    IS_EQUAL        shift and go to state 261
    IS_NOT_EQUAL    shift and go to state 262
    IS_IDENTICAL    shift and go to state 263
    IS_NOT_IDENTICAL shift and go to state 264

    operador_logico                shift and go to state 265
    condicion_booleana             shift and go to state 266

state 205

    (58) condicion_else -> ELSE LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (26) cuerpo -> . simbolos
    (49) imprimir -> . ECHO valor SEMI
    (50) imprimir -> . PRINT valor SEMI
    (51) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (52) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (53) imprimir -> . ECHO bconcat
    (54) imprimir -> . ECHO operaciones_mat SEMI
    (55) imprimir -> . PRINT operaciones_mat SEMI
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (119) funciones -> . funcion_nparams
    (120) funciones -> . proteccion funcion_nparams
    (121) funciones -> . funcion_blank
    (122) funciones -> . proteccion funcion_blank
    (123) funciones -> . funcion_void
    (39) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (40) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (149) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (150) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (84) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (71) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (81) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (89) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) repiteCondicional -> . condicion_ifelse
    (64) repiteCondicional -> . condicion_ifelse repiteCondicional
    (85) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (86) bcase -> . CASE ENTERO COLON
    (155) bgoto -> . GOTO NOMBRE SEMI
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (156) bcortes -> . EXIT SEMI
    (157) bcortes -> . BREAK SEMI
    (158) bcortes -> . DEFAULT SEMI
    (159) bcortes -> . CONTINUE SEMI
    (132) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (151) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (152) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (160) otros -> . SMALLER NOMBRE GREATER
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI
    (153) comment -> . COMENTARIOS
    (154) comment -> . DOC_COMENTARIOS
    (189) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (190) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) bconcat -> . CADENA CONCAT CADENA SEMI
    (176) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (177) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (178) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (179) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (161) simbolos -> . LPAREN RPAREN
    (162) simbolos -> . LPAREN
    (163) simbolos -> . RPAREN
    (164) simbolos -> . LBRACKET RBRACKET
    (165) simbolos -> . LBRACKET
    (166) simbolos -> . RBRACKET
    (167) simbolos -> . LBRACE RBRACE
    (168) simbolos -> . LBRACE
    (169) simbolos -> . RBRACE instrucciones
    (170) simbolos -> . OPEN_TAG CLOSE_TAG
    (171) simbolos -> . OPEN_TAG
    (172) simbolos -> . CLOSE_TAG
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (126) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (129) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (59) condicion_ifelse -> . condicion_if
    (60) condicion_ifelse -> . condicion_if condicion_else
    (61) condicion_ifelse -> . condicion_if condicion_elseif
    (62) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (146) empty -> .
    (56) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    VARIABLE        shift and go to state 34
    VAR             shift and go to state 35
    DEFINE          shift and go to state 42
    READLINE        shift and go to state 44
    WHILE           shift and go to state 45
    DO              shift and go to state 48
    FOR             shift and go to state 49
    FOREACH         shift and go to state 50
    TRY             shift and go to state 51
    SWITCH          shift and go to state 53
    CASE            shift and go to state 54
    GOTO            shift and go to state 55
    EXIT            shift and go to state 56
    BREAK           shift and go to state 57
    DEFAULT         shift and go to state 58
    CONTINUE        shift and go to state 59
    RAND            shift and go to state 60
    FWRITE          shift and go to state 61
    TRIM            shift and go to state 62
    SMALLER         shift and go to state 63
    RETURN          shift and go to state 65
    COMENTARIOS     shift and go to state 66
    DOC_COMENTARIOS shift and go to state 67
    LPAREN          shift and go to state 30
    CADENA          shift and go to state 43
    RPAREN          shift and go to state 31
    LBRACKET        shift and go to state 32
    RBRACKET        shift and go to state 33
    LBRACE          shift and go to state 46
    RBRACE          shift and go to state 47
    OPEN_TAG        shift and go to state 68
    CLOSE_TAG       shift and go to state 69
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73
    FUNCTION        shift and go to state 74
    IF              shift and go to state 76

  ! RBRACE          [ reduce using rule 146 (empty -> .) ]

    cuerpo                         shift and go to state 267
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    simbolos                       shift and go to state 27
    proteccion                     shift and go to state 36
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38
    funcion_nparams                shift and go to state 39
    funcion_blank                  shift and go to state 40
    funcion_void                   shift and go to state 41
    condicion_ifelse               shift and go to state 52
    empty                          shift and go to state 64
    condicion_if                   shift and go to state 75

state 206

    (57) condicion_elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (65) condicion -> . VARIABLE operador_logico VARIABLE
    (66) condicion -> . valor operador_logico valor
    (67) condicion -> . VARIABLE operador_logico valor
    (68) condicion -> . VARIABLE condicion_booleana VARIABLE
    (69) condicion -> . valor condicion_booleana valor
    (70) condicion -> . VARIABLE condicion_booleana valor
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    VARIABLE        shift and go to state 203
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    condicion                      shift and go to state 268
    valor                          shift and go to state 204
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 207

    (84) bdo -> DO LBRACE cuerpo . RBRACE bwhile

    RBRACE          shift and go to state 269


state 208

    (71) bfor -> FOR LPAREN asignacion . condicion SEMI for_incr RPAREN stc_bloque_def
    (65) condicion -> . VARIABLE operador_logico VARIABLE
    (66) condicion -> . valor operador_logico valor
    (67) condicion -> . VARIABLE operador_logico valor
    (68) condicion -> . VARIABLE condicion_booleana VARIABLE
    (69) condicion -> . valor condicion_booleana valor
    (70) condicion -> . VARIABLE condicion_booleana valor
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    VARIABLE        shift and go to state 203
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    condicion                      shift and go to state 270
    valor                          shift and go to state 204
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 209

    (81) bforeach -> FOREACH LPAREN VARIABLE . AS VARIABLE RPAREN stc_bloque_def

    AS              shift and go to state 271


state 210

    (74) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (72) stc_bloque -> . stc_bloque SEMI cuerpo
    (73) stc_bloque -> . breturn
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI
    (146) empty -> .

    RETURN          shift and go to state 65
    RBRACE          reduce using rule 146 (empty -> .)
    SEMI            reduce using rule 146 (empty -> .)

    stc_bloque                     shift and go to state 272
    breturn                        shift and go to state 273
    empty                          shift and go to state 64

state 211

    (89) btry -> TRY LBRACE stc_bloque_def . RBRACE catches

    RBRACE          shift and go to state 274


state 212

    (85) bswitch -> SWITCH LPAREN VARIABLE . RPAREN LBRACE cuerpo SEMI RBRACE

    RPAREN          shift and go to state 275


state 213

    (86) bcase -> CASE ENTERO COLON .

    $end            reduce using rule 86 (bcase -> CASE ENTERO COLON .)
    RBRACE          reduce using rule 86 (bcase -> CASE ENTERO COLON .)
    SEMI            reduce using rule 86 (bcase -> CASE ENTERO COLON .)


state 214

    (155) bgoto -> GOTO NOMBRE SEMI .

    $end            reduce using rule 155 (bgoto -> GOTO NOMBRE SEMI .)
    RBRACE          reduce using rule 155 (bgoto -> GOTO NOMBRE SEMI .)
    SEMI            reduce using rule 155 (bgoto -> GOTO NOMBRE SEMI .)


state 215

    (132) brand -> RAND LPAREN ENTERO . COMMA ENTERO RPAREN SEMI

    COMMA           shift and go to state 276


state 216

    (151) escribir -> FWRITE LPAREN NOMBRE . COMMA CADENA RPAREN SEMI

    COMMA           shift and go to state 277


state 217

    (152) btrim -> TRIM LPAREN NOMBRE . LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 278


state 218

    (160) otros -> SMALLER NOMBRE GREATER .

    $end            reduce using rule 160 (otros -> SMALLER NOMBRE GREATER .)
    RBRACE          reduce using rule 160 (otros -> SMALLER NOMBRE GREATER .)
    SEMI            reduce using rule 160 (otros -> SMALLER NOMBRE GREATER .)


state 219

    (139) breturn -> RETURN NULL SEMI .

    $end            reduce using rule 139 (breturn -> RETURN NULL SEMI .)
    RBRACE          reduce using rule 139 (breturn -> RETURN NULL SEMI .)
    SEMI            reduce using rule 139 (breturn -> RETURN NULL SEMI .)


state 220

    (140) breturn -> RETURN VARIABLE SEMI .

    $end            reduce using rule 140 (breturn -> RETURN VARIABLE SEMI .)
    RBRACE          reduce using rule 140 (breturn -> RETURN VARIABLE SEMI .)
    SEMI            reduce using rule 140 (breturn -> RETURN VARIABLE SEMI .)


state 221

    (141) breturn -> RETURN BOOLEANO SEMI .

    $end            reduce using rule 141 (breturn -> RETURN BOOLEANO SEMI .)
    RBRACE          reduce using rule 141 (breturn -> RETURN BOOLEANO SEMI .)
    SEMI            reduce using rule 141 (breturn -> RETURN BOOLEANO SEMI .)


state 222

    (126) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (131) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (129) funcion_void -> FUNCTION NOMBRE LPAREN . RPAREN COLON VOID LBRACE empty RBRACE
    (127) params_list -> . params_list COMMA param
    (128) params_list -> . param
    (124) param -> . VARIABLE
    (125) param -> . asignacion
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    RPAREN          shift and go to state 280
    VARIABLE        shift and go to state 282
    VAR             shift and go to state 35
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73

    params_list                    shift and go to state 279
    param                          shift and go to state 281
    asignacion                     shift and go to state 283
    proteccion                     shift and go to state 120
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38

state 223

    (62) condicion_ifelse -> condicion_if condicion_elseif condicion_else .

    IF              reduce using rule 62 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    $end            reduce using rule 62 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    RBRACE          reduce using rule 62 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    SEMI            reduce using rule 62 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)


state 224

    (56) condicion_if -> IF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 284


state 225

    (113) operaciones_mat -> valor operadores valor .
    (113) operaciones_mat -> valor . operadores valor
    (114) operaciones_mat -> valor . operadores operaciones_mat
    (92) operadores -> . SUMA
    (93) operadores -> . RESTA
    (94) operadores -> . MULTIPLICACION
    (95) operadores -> . DIVISION
    (96) operadores -> . MODULO

    SEMI            reduce using rule 113 (operaciones_mat -> valor operadores valor .)
    SUMA            shift and go to state 163
    RESTA           shift and go to state 164
    MULTIPLICACION  shift and go to state 165
    DIVISION        shift and go to state 166
    MODULO          shift and go to state 167

    operadores                     shift and go to state 162

state 226

    (114) operaciones_mat -> valor operadores operaciones_mat .

    SEMI            reduce using rule 114 (operaciones_mat -> valor operadores operaciones_mat .)


state 227

    (52) imprimir -> ECHO NOMBRE LBRACKET ENTERO . RBRACKET SEMI

    RBRACKET        shift and go to state 285


state 228

    (115) operaciones_mat -> VARIABLE operadores VARIABLE .

    SEMI            reduce using rule 115 (operaciones_mat -> VARIABLE operadores VARIABLE .)


state 229

    (117) operaciones_mat_par -> LPAREN valor operadores . valor RPAREN
    (118) operaciones_mat_par -> LPAREN valor operadores . operaciones_mat_par RPAREN
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (117) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (118) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    LPAREN          shift and go to state 90
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    VARIABLE        shift and go to state 173
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 286
    operaciones_mat_par            shift and go to state 287
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 230

    (51) imprimir -> PRINT LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 288


state 231

    (190) casting -> LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 289


state 232

    (192) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . tipoDato SEMI
    (115) operaciones_mat -> VARIABLE operadores . VARIABLE
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    VARIABLE        shift and go to state 228
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    tipoDato                       shift and go to state 290
    numero                         shift and go to state 88

state 233

    (27) asignacion -> VARIABLE EQUALS valor SEMI .

    $end            reduce using rule 27 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RBRACE          reduce using rule 27 (asignacion -> VARIABLE EQUALS valor SEMI .)
    SEMI            reduce using rule 27 (asignacion -> VARIABLE EQUALS valor SEMI .)
    VARIABLE        reduce using rule 27 (asignacion -> VARIABLE EQUALS valor SEMI .)
    CADENA          reduce using rule 27 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BOOLEANO        reduce using rule 27 (asignacion -> VARIABLE EQUALS valor SEMI .)
    ENTERO          reduce using rule 27 (asignacion -> VARIABLE EQUALS valor SEMI .)
    DECIMAL         reduce using rule 27 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RPAREN          reduce using rule 27 (asignacion -> VARIABLE EQUALS valor SEMI .)
    COMMA           reduce using rule 27 (asignacion -> VARIABLE EQUALS valor SEMI .)


state 234

    (36) asignacion -> VARIABLE EQUALS operaciones_mat SEMI .

    $end            reduce using rule 36 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RBRACE          reduce using rule 36 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    SEMI            reduce using rule 36 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    VARIABLE        reduce using rule 36 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    CADENA          reduce using rule 36 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BOOLEANO        reduce using rule 36 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    ENTERO          reduce using rule 36 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    DECIMAL         reduce using rule 36 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    COMMA           reduce using rule 36 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)


state 235

    (147) bcolas -> VARIABLE EQUALS NEW SPLQUEUE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 291


state 236

    (148) bpila -> VARIABLE EQUALS NEW SPLSTACK . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 292


state 237

    (189) casting -> VARIABLE EQUALS LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 293


state 238

    (38) asignacion_array -> VARIABLE EQUALS array_def SEMI .

    $end            reduce using rule 38 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RBRACE          reduce using rule 38 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    SEMI            reduce using rule 38 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    VARIABLE        reduce using rule 38 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    CADENA          reduce using rule 38 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BOOLEANO        reduce using rule 38 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    ENTERO          reduce using rule 38 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    DECIMAL         reduce using rule 38 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RPAREN          reduce using rule 38 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    COMMA           reduce using rule 38 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)


state 239

    (142) array_def -> ARRAY LPAREN . RPAREN
    (143) array_def -> ARRAY LPAREN . array_elmnt RPAREN
    (144) array_elmnt -> . array_elmnt COMMA valor
    (145) array_elmnt -> . valor
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    RPAREN          shift and go to state 294
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    VARIABLE        shift and go to state 173
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    array_elmnt                    shift and go to state 295
    valor                          shift and go to state 296
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 240

    (176) bconcat -> VARIABLE CONCAT VARIABLE SEMI .

    $end            reduce using rule 176 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RBRACE          reduce using rule 176 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    SEMI            reduce using rule 176 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    VARIABLE        reduce using rule 176 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    CADENA          reduce using rule 176 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BOOLEANO        reduce using rule 176 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    ENTERO          reduce using rule 176 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    DECIMAL         reduce using rule 176 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RPAREN          reduce using rule 176 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    COMMA           reduce using rule 176 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)


state 241

    (177) bconcat -> VARIABLE CONCAT CADENA SEMI .

    $end            reduce using rule 177 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 177 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    SEMI            reduce using rule 177 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 177 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    CADENA          reduce using rule 177 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 177 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 177 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 177 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 177 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    COMMA           reduce using rule 177 (bconcat -> VARIABLE CONCAT CADENA SEMI .)


state 242

    (178) bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 178 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 178 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 178 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 178 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 178 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 178 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 178 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 178 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 178 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 178 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)


state 243

    (191) aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .

    $end            reduce using rule 191 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RBRACE          reduce using rule 191 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    SEMI            reduce using rule 191 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    VARIABLE        reduce using rule 191 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    CADENA          reduce using rule 191 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BOOLEANO        reduce using rule 191 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    ENTERO          reduce using rule 191 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    DECIMAL         reduce using rule 191 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RPAREN          reduce using rule 191 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    COMMA           reduce using rule 191 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)


state 244

    (126) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (130) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (131) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (127) params_list -> . params_list COMMA param
    (128) params_list -> . param
    (124) param -> . VARIABLE
    (125) param -> . asignacion
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    RPAREN          shift and go to state 297
    VARIABLE        shift and go to state 282
    VAR             shift and go to state 35
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73

    params_list                    shift and go to state 279
    param                          shift and go to state 281
    asignacion                     shift and go to state 283
    proteccion                     shift and go to state 120
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38

state 245

    (39) constante -> DEFINE LPAREN CADENA COMMA . valor RPAREN SEMI
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    VARIABLE        shift and go to state 173
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 298
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 246

    (40) constante -> DEFINE LPAREN NOMBRE COMMA . ARRAY RPAREN SEMI

    ARRAY           shift and go to state 299


state 247

    (175) bconcat -> CADENA CONCAT CADENA SEMI .

    $end            reduce using rule 175 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 175 (bconcat -> CADENA CONCAT CADENA SEMI .)
    SEMI            reduce using rule 175 (bconcat -> CADENA CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 175 (bconcat -> CADENA CONCAT CADENA SEMI .)
    CADENA          reduce using rule 175 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 175 (bconcat -> CADENA CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 175 (bconcat -> CADENA CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 175 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 175 (bconcat -> CADENA CONCAT CADENA SEMI .)
    COMMA           reduce using rule 175 (bconcat -> CADENA CONCAT CADENA SEMI .)


state 248

    (179) bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 179 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 179 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 179 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 179 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 179 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 179 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 179 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 179 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 179 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 179 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)


state 249

    (149) lectura -> READLINE LPAREN CADENA RPAREN . SEMI

    SEMI            shift and go to state 300


state 250

    (150) lectura -> READLINE LPAREN RPAREN SEMI .

    $end            reduce using rule 150 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 150 (lectura -> READLINE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 150 (lectura -> READLINE LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 150 (lectura -> READLINE LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 150 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 150 (lectura -> READLINE LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 150 (lectura -> READLINE LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 150 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 150 (lectura -> READLINE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 150 (lectura -> READLINE LPAREN RPAREN SEMI .)


state 251

    (82) bwhile -> WHILE LPAREN condicion RPAREN . LBRACE stc_bloque RBRACE
    (83) bwhile -> WHILE LPAREN condicion RPAREN . COLON stc_bloque

    LBRACE          shift and go to state 301
    COLON           shift and go to state 302


state 252

    (65) condicion -> VARIABLE operador_logico . VARIABLE
    (67) condicion -> VARIABLE operador_logico . valor
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    VARIABLE        shift and go to state 303
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 304
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 253

    (68) condicion -> VARIABLE condicion_booleana . VARIABLE
    (70) condicion -> VARIABLE condicion_booleana . valor
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    VARIABLE        shift and go to state 305
    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 306
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 254

    (97) operador_logico -> SMALLER .

    VARIABLE        reduce using rule 97 (operador_logico -> SMALLER .)
    CADENA          reduce using rule 97 (operador_logico -> SMALLER .)
    BOOLEANO        reduce using rule 97 (operador_logico -> SMALLER .)
    ENTERO          reduce using rule 97 (operador_logico -> SMALLER .)
    DECIMAL         reduce using rule 97 (operador_logico -> SMALLER .)


state 255

    (98) operador_logico -> GREATER .

    VARIABLE        reduce using rule 98 (operador_logico -> GREATER .)
    CADENA          reduce using rule 98 (operador_logico -> GREATER .)
    BOOLEANO        reduce using rule 98 (operador_logico -> GREATER .)
    ENTERO          reduce using rule 98 (operador_logico -> GREATER .)
    DECIMAL         reduce using rule 98 (operador_logico -> GREATER .)


state 256

    (99) operador_logico -> IS_SMALLER_OR_EQUAL .

    VARIABLE        reduce using rule 99 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    CADENA          reduce using rule 99 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    BOOLEANO        reduce using rule 99 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    ENTERO          reduce using rule 99 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 99 (operador_logico -> IS_SMALLER_OR_EQUAL .)


state 257

    (100) operador_logico -> IS_GREATER_OR_EQUAL .

    VARIABLE        reduce using rule 100 (operador_logico -> IS_GREATER_OR_EQUAL .)
    CADENA          reduce using rule 100 (operador_logico -> IS_GREATER_OR_EQUAL .)
    BOOLEANO        reduce using rule 100 (operador_logico -> IS_GREATER_OR_EQUAL .)
    ENTERO          reduce using rule 100 (operador_logico -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 100 (operador_logico -> IS_GREATER_OR_EQUAL .)


state 258

    (106) condicion_booleana -> AND .

    VARIABLE        reduce using rule 106 (condicion_booleana -> AND .)
    CADENA          reduce using rule 106 (condicion_booleana -> AND .)
    BOOLEANO        reduce using rule 106 (condicion_booleana -> AND .)
    ENTERO          reduce using rule 106 (condicion_booleana -> AND .)
    DECIMAL         reduce using rule 106 (condicion_booleana -> AND .)


state 259

    (107) condicion_booleana -> OR .

    VARIABLE        reduce using rule 107 (condicion_booleana -> OR .)
    CADENA          reduce using rule 107 (condicion_booleana -> OR .)
    BOOLEANO        reduce using rule 107 (condicion_booleana -> OR .)
    ENTERO          reduce using rule 107 (condicion_booleana -> OR .)
    DECIMAL         reduce using rule 107 (condicion_booleana -> OR .)


state 260

    (108) condicion_booleana -> XOR .

    VARIABLE        reduce using rule 108 (condicion_booleana -> XOR .)
    CADENA          reduce using rule 108 (condicion_booleana -> XOR .)
    BOOLEANO        reduce using rule 108 (condicion_booleana -> XOR .)
    ENTERO          reduce using rule 108 (condicion_booleana -> XOR .)
    DECIMAL         reduce using rule 108 (condicion_booleana -> XOR .)


state 261

    (109) condicion_booleana -> IS_EQUAL .

    VARIABLE        reduce using rule 109 (condicion_booleana -> IS_EQUAL .)
    CADENA          reduce using rule 109 (condicion_booleana -> IS_EQUAL .)
    BOOLEANO        reduce using rule 109 (condicion_booleana -> IS_EQUAL .)
    ENTERO          reduce using rule 109 (condicion_booleana -> IS_EQUAL .)
    DECIMAL         reduce using rule 109 (condicion_booleana -> IS_EQUAL .)


state 262

    (110) condicion_booleana -> IS_NOT_EQUAL .

    VARIABLE        reduce using rule 110 (condicion_booleana -> IS_NOT_EQUAL .)
    CADENA          reduce using rule 110 (condicion_booleana -> IS_NOT_EQUAL .)
    BOOLEANO        reduce using rule 110 (condicion_booleana -> IS_NOT_EQUAL .)
    ENTERO          reduce using rule 110 (condicion_booleana -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 110 (condicion_booleana -> IS_NOT_EQUAL .)


state 263

    (111) condicion_booleana -> IS_IDENTICAL .

    VARIABLE        reduce using rule 111 (condicion_booleana -> IS_IDENTICAL .)
    CADENA          reduce using rule 111 (condicion_booleana -> IS_IDENTICAL .)
    BOOLEANO        reduce using rule 111 (condicion_booleana -> IS_IDENTICAL .)
    ENTERO          reduce using rule 111 (condicion_booleana -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 111 (condicion_booleana -> IS_IDENTICAL .)


state 264

    (112) condicion_booleana -> IS_NOT_IDENTICAL .

    VARIABLE        reduce using rule 112 (condicion_booleana -> IS_NOT_IDENTICAL .)
    CADENA          reduce using rule 112 (condicion_booleana -> IS_NOT_IDENTICAL .)
    BOOLEANO        reduce using rule 112 (condicion_booleana -> IS_NOT_IDENTICAL .)
    ENTERO          reduce using rule 112 (condicion_booleana -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 112 (condicion_booleana -> IS_NOT_IDENTICAL .)


state 265

    (66) condicion -> valor operador_logico . valor
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    VARIABLE        shift and go to state 173
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 307
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 266

    (69) condicion -> valor condicion_booleana . valor
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    VARIABLE        shift and go to state 173
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 308
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 267

    (58) condicion_else -> ELSE LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 309


state 268

    (57) condicion_elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE

    RPAREN          shift and go to state 310


state 269

    (84) bdo -> DO LBRACE cuerpo RBRACE . bwhile
    (82) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque

    WHILE           shift and go to state 45

    bwhile                         shift and go to state 311

state 270

    (71) bfor -> FOR LPAREN asignacion condicion . SEMI for_incr RPAREN stc_bloque_def

    SEMI            shift and go to state 312


state 271

    (81) bforeach -> FOREACH LPAREN VARIABLE AS . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 313


state 272

    (74) stc_bloque_def -> LBRACE stc_bloque . RBRACE
    (72) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 314
    SEMI            shift and go to state 315


state 273

    (73) stc_bloque -> breturn .

    RBRACE          reduce using rule 73 (stc_bloque -> breturn .)
    SEMI            reduce using rule 73 (stc_bloque -> breturn .)
    $end            reduce using rule 73 (stc_bloque -> breturn .)


state 274

    (89) btry -> TRY LBRACE stc_bloque_def RBRACE . catches
    (90) catches -> . catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
    (91) catches -> . empty
    (146) empty -> .

    CATCH           reduce using rule 146 (empty -> .)
    $end            reduce using rule 146 (empty -> .)
    RBRACE          reduce using rule 146 (empty -> .)
    SEMI            reduce using rule 146 (empty -> .)

    catches                        shift and go to state 316
    empty                          shift and go to state 317

state 275

    (85) bswitch -> SWITCH LPAREN VARIABLE RPAREN . LBRACE cuerpo SEMI RBRACE

    LBRACE          shift and go to state 318


state 276

    (132) brand -> RAND LPAREN ENTERO COMMA . ENTERO RPAREN SEMI

    ENTERO          shift and go to state 319


state 277

    (151) escribir -> FWRITE LPAREN NOMBRE COMMA . CADENA RPAREN SEMI

    CADENA          shift and go to state 320


state 278

    (152) btrim -> TRIM LPAREN NOMBRE LPAREN . NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 321


state 279

    (126) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list . RPAREN stc_bloque_def
    (127) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 322
    COMMA           shift and go to state 323


state 280

    (130) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (131) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (129) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN . COLON VOID LBRACE empty RBRACE
    (74) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 325
    COLON           shift and go to state 326

    stc_bloque_def                 shift and go to state 324

state 281

    (128) params_list -> param .

    RPAREN          reduce using rule 128 (params_list -> param .)
    COMMA           reduce using rule 128 (params_list -> param .)


state 282

    (124) param -> VARIABLE .
    (27) asignacion -> VARIABLE . EQUALS valor SEMI
    (30) asignacion -> VARIABLE . EQUALS brand
    (31) asignacion -> VARIABLE . EQUALS escribir
    (32) asignacion -> VARIABLE . EQUALS btrim
    (33) asignacion -> VARIABLE . EQUALS lectura
    (34) asignacion -> VARIABLE . EQUALS bconcat
    (36) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (38) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (191) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (101) incrementos_mat -> . MINUS_EQUAL
    (102) incrementos_mat -> . MOD_EQUAL
    (103) incrementos_mat -> . MUL_EQUAL
    (104) incrementos_mat -> . PLUS_EQUAL
    (105) incrementos_mat -> . DIV_EQUAL

    RPAREN          reduce using rule 124 (param -> VARIABLE .)
    COMMA           reduce using rule 124 (param -> VARIABLE .)
    EQUALS          shift and go to state 194
    MINUS_EQUAL     shift and go to state 113
    MOD_EQUAL       shift and go to state 114
    MUL_EQUAL       shift and go to state 115
    PLUS_EQUAL      shift and go to state 116
    DIV_EQUAL       shift and go to state 117

    incrementos_mat                shift and go to state 112

state 283

    (125) param -> asignacion .

    RPAREN          reduce using rule 125 (param -> asignacion .)
    COMMA           reduce using rule 125 (param -> asignacion .)


state 284

    (56) condicion_if -> IF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 327


state 285

    (52) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET . SEMI

    SEMI            shift and go to state 328


state 286

    (117) operaciones_mat_par -> LPAREN valor operadores valor . RPAREN

    RPAREN          shift and go to state 329


state 287

    (118) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par . RPAREN

    RPAREN          shift and go to state 330


state 288

    (51) imprimir -> PRINT LPAREN valor RPAREN SEMI .

    $end            reduce using rule 51 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 51 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 51 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)


state 289

    (190) casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 190 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 190 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 190 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 290

    (192) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato . SEMI

    SEMI            shift and go to state 331


state 291

    (147) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 332


state 292

    (148) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 333


state 293

    (189) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 334


state 294

    (142) array_def -> ARRAY LPAREN RPAREN .

    SEMI            reduce using rule 142 (array_def -> ARRAY LPAREN RPAREN .)


state 295

    (143) array_def -> ARRAY LPAREN array_elmnt . RPAREN
    (144) array_elmnt -> array_elmnt . COMMA valor

    RPAREN          shift and go to state 335
    COMMA           shift and go to state 336


state 296

    (145) array_elmnt -> valor .

    RPAREN          reduce using rule 145 (array_elmnt -> valor .)
    COMMA           reduce using rule 145 (array_elmnt -> valor .)


state 297

    (130) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (131) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (74) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 325

    stc_bloque_def                 shift and go to state 324

state 298

    (39) constante -> DEFINE LPAREN CADENA COMMA valor . RPAREN SEMI

    RPAREN          shift and go to state 337


state 299

    (40) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY . RPAREN SEMI

    RPAREN          shift and go to state 338


state 300

    (149) lectura -> READLINE LPAREN CADENA RPAREN SEMI .

    $end            reduce using rule 149 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 149 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    SEMI            reduce using rule 149 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 149 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    CADENA          reduce using rule 149 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 149 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 149 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 149 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 149 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    COMMA           reduce using rule 149 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)


state 301

    (82) bwhile -> WHILE LPAREN condicion RPAREN LBRACE . stc_bloque RBRACE
    (72) stc_bloque -> . stc_bloque SEMI cuerpo
    (73) stc_bloque -> . breturn
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI
    (146) empty -> .

    RETURN          shift and go to state 65
    RBRACE          reduce using rule 146 (empty -> .)
    SEMI            reduce using rule 146 (empty -> .)

    stc_bloque                     shift and go to state 339
    breturn                        shift and go to state 273
    empty                          shift and go to state 64

state 302

    (83) bwhile -> WHILE LPAREN condicion RPAREN COLON . stc_bloque
    (72) stc_bloque -> . stc_bloque SEMI cuerpo
    (73) stc_bloque -> . breturn
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI
    (146) empty -> .

    RETURN          shift and go to state 65
    RBRACE          reduce using rule 146 (empty -> .)
    SEMI            reduce using rule 146 (empty -> .)
    $end            reduce using rule 146 (empty -> .)

    stc_bloque                     shift and go to state 340
    breturn                        shift and go to state 273
    empty                          shift and go to state 64

state 303

    (65) condicion -> VARIABLE operador_logico VARIABLE .
    (147) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 65 (condicion -> VARIABLE operador_logico VARIABLE .)
    SEMI            reduce using rule 65 (condicion -> VARIABLE operador_logico VARIABLE .)
    EQUALS          shift and go to state 171


state 304

    (67) condicion -> VARIABLE operador_logico valor .

    RPAREN          reduce using rule 67 (condicion -> VARIABLE operador_logico valor .)
    SEMI            reduce using rule 67 (condicion -> VARIABLE operador_logico valor .)


state 305

    (68) condicion -> VARIABLE condicion_booleana VARIABLE .
    (147) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 68 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    SEMI            reduce using rule 68 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    EQUALS          shift and go to state 171


state 306

    (70) condicion -> VARIABLE condicion_booleana valor .

    RPAREN          reduce using rule 70 (condicion -> VARIABLE condicion_booleana valor .)
    SEMI            reduce using rule 70 (condicion -> VARIABLE condicion_booleana valor .)


state 307

    (66) condicion -> valor operador_logico valor .

    RPAREN          reduce using rule 66 (condicion -> valor operador_logico valor .)
    SEMI            reduce using rule 66 (condicion -> valor operador_logico valor .)


state 308

    (69) condicion -> valor condicion_booleana valor .

    RPAREN          reduce using rule 69 (condicion -> valor condicion_booleana valor .)
    SEMI            reduce using rule 69 (condicion -> valor condicion_booleana valor .)


state 309

    (58) condicion_else -> ELSE LBRACE cuerpo RBRACE .

    $end            reduce using rule 58 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 58 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 58 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    IF              reduce using rule 58 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)


state 310

    (57) condicion_elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 341


state 311

    (84) bdo -> DO LBRACE cuerpo RBRACE bwhile .

    $end            reduce using rule 84 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    RBRACE          reduce using rule 84 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    SEMI            reduce using rule 84 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)


state 312

    (71) bfor -> FOR LPAREN asignacion condicion SEMI . for_incr RPAREN stc_bloque_def
    (75) for_incr -> . VARIABLE SUMA SUMA
    (76) for_incr -> . SUMA SUMA VARIABLE
    (77) for_incr -> . VARIABLE RESTA RESTA
    (78) for_incr -> . RESTA RESTA VARIABLE
    (79) for_incr -> . VARIABLE SUMA EQUALS numero
    (80) for_incr -> . VARIABLE RESTA EQUALS numero

    VARIABLE        shift and go to state 343
    SUMA            shift and go to state 344
    RESTA           shift and go to state 345

    for_incr                       shift and go to state 342

state 313

    (81) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 346


state 314

    (74) stc_bloque_def -> LBRACE stc_bloque RBRACE .

    RBRACE          reduce using rule 74 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    $end            reduce using rule 74 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 74 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    CATCH           reduce using rule 74 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)


state 315

    (72) stc_bloque -> stc_bloque SEMI . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (26) cuerpo -> . simbolos
    (49) imprimir -> . ECHO valor SEMI
    (50) imprimir -> . PRINT valor SEMI
    (51) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (52) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (53) imprimir -> . ECHO bconcat
    (54) imprimir -> . ECHO operaciones_mat SEMI
    (55) imprimir -> . PRINT operaciones_mat SEMI
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (119) funciones -> . funcion_nparams
    (120) funciones -> . proteccion funcion_nparams
    (121) funciones -> . funcion_blank
    (122) funciones -> . proteccion funcion_blank
    (123) funciones -> . funcion_void
    (39) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (40) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (149) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (150) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (84) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (71) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (81) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (89) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) repiteCondicional -> . condicion_ifelse
    (64) repiteCondicional -> . condicion_ifelse repiteCondicional
    (85) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (86) bcase -> . CASE ENTERO COLON
    (155) bgoto -> . GOTO NOMBRE SEMI
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (156) bcortes -> . EXIT SEMI
    (157) bcortes -> . BREAK SEMI
    (158) bcortes -> . DEFAULT SEMI
    (159) bcortes -> . CONTINUE SEMI
    (132) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (151) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (152) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (160) otros -> . SMALLER NOMBRE GREATER
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI
    (153) comment -> . COMENTARIOS
    (154) comment -> . DOC_COMENTARIOS
    (189) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (190) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) bconcat -> . CADENA CONCAT CADENA SEMI
    (176) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (177) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (178) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (179) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (161) simbolos -> . LPAREN RPAREN
    (162) simbolos -> . LPAREN
    (163) simbolos -> . RPAREN
    (164) simbolos -> . LBRACKET RBRACKET
    (165) simbolos -> . LBRACKET
    (166) simbolos -> . RBRACKET
    (167) simbolos -> . LBRACE RBRACE
    (168) simbolos -> . LBRACE
    (169) simbolos -> . RBRACE instrucciones
    (170) simbolos -> . OPEN_TAG CLOSE_TAG
    (171) simbolos -> . OPEN_TAG
    (172) simbolos -> . CLOSE_TAG
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (126) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (129) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (59) condicion_ifelse -> . condicion_if
    (60) condicion_ifelse -> . condicion_if condicion_else
    (61) condicion_ifelse -> . condicion_if condicion_elseif
    (62) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (146) empty -> .
    (56) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    VARIABLE        shift and go to state 34
    VAR             shift and go to state 35
    DEFINE          shift and go to state 42
    READLINE        shift and go to state 44
    WHILE           shift and go to state 45
    DO              shift and go to state 48
    FOR             shift and go to state 49
    FOREACH         shift and go to state 50
    TRY             shift and go to state 51
    SWITCH          shift and go to state 53
    CASE            shift and go to state 54
    GOTO            shift and go to state 55
    EXIT            shift and go to state 56
    BREAK           shift and go to state 57
    DEFAULT         shift and go to state 58
    CONTINUE        shift and go to state 59
    RAND            shift and go to state 60
    FWRITE          shift and go to state 61
    TRIM            shift and go to state 62
    SMALLER         shift and go to state 63
    RETURN          shift and go to state 65
    COMENTARIOS     shift and go to state 66
    DOC_COMENTARIOS shift and go to state 67
    LPAREN          shift and go to state 30
    CADENA          shift and go to state 43
    RPAREN          shift and go to state 31
    LBRACKET        shift and go to state 32
    RBRACKET        shift and go to state 33
    LBRACE          shift and go to state 46
    RBRACE          shift and go to state 47
    OPEN_TAG        shift and go to state 68
    CLOSE_TAG       shift and go to state 69
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73
    FUNCTION        shift and go to state 74
    SEMI            reduce using rule 146 (empty -> .)
    $end            reduce using rule 146 (empty -> .)
    IF              shift and go to state 76

  ! RBRACE          [ reduce using rule 146 (empty -> .) ]

    cuerpo                         shift and go to state 347
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    simbolos                       shift and go to state 27
    proteccion                     shift and go to state 36
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38
    funcion_nparams                shift and go to state 39
    funcion_blank                  shift and go to state 40
    funcion_void                   shift and go to state 41
    condicion_ifelse               shift and go to state 52
    empty                          shift and go to state 64
    condicion_if                   shift and go to state 75

state 316

    (89) btry -> TRY LBRACE stc_bloque_def RBRACE catches .
    (90) catches -> catches . CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    $end            reduce using rule 89 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    RBRACE          reduce using rule 89 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    SEMI            reduce using rule 89 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    CATCH           shift and go to state 348


state 317

    (91) catches -> empty .

    CATCH           reduce using rule 91 (catches -> empty .)
    $end            reduce using rule 91 (catches -> empty .)
    RBRACE          reduce using rule 91 (catches -> empty .)
    SEMI            reduce using rule 91 (catches -> empty .)


state 318

    (85) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE . cuerpo SEMI RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (26) cuerpo -> . simbolos
    (49) imprimir -> . ECHO valor SEMI
    (50) imprimir -> . PRINT valor SEMI
    (51) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (52) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (53) imprimir -> . ECHO bconcat
    (54) imprimir -> . ECHO operaciones_mat SEMI
    (55) imprimir -> . PRINT operaciones_mat SEMI
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (119) funciones -> . funcion_nparams
    (120) funciones -> . proteccion funcion_nparams
    (121) funciones -> . funcion_blank
    (122) funciones -> . proteccion funcion_blank
    (123) funciones -> . funcion_void
    (39) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (40) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (149) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (150) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (84) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (71) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (81) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (89) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) repiteCondicional -> . condicion_ifelse
    (64) repiteCondicional -> . condicion_ifelse repiteCondicional
    (85) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (86) bcase -> . CASE ENTERO COLON
    (155) bgoto -> . GOTO NOMBRE SEMI
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (156) bcortes -> . EXIT SEMI
    (157) bcortes -> . BREAK SEMI
    (158) bcortes -> . DEFAULT SEMI
    (159) bcortes -> . CONTINUE SEMI
    (132) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (151) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (152) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (160) otros -> . SMALLER NOMBRE GREATER
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI
    (153) comment -> . COMENTARIOS
    (154) comment -> . DOC_COMENTARIOS
    (189) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (190) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) bconcat -> . CADENA CONCAT CADENA SEMI
    (176) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (177) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (178) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (179) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (161) simbolos -> . LPAREN RPAREN
    (162) simbolos -> . LPAREN
    (163) simbolos -> . RPAREN
    (164) simbolos -> . LBRACKET RBRACKET
    (165) simbolos -> . LBRACKET
    (166) simbolos -> . RBRACKET
    (167) simbolos -> . LBRACE RBRACE
    (168) simbolos -> . LBRACE
    (169) simbolos -> . RBRACE instrucciones
    (170) simbolos -> . OPEN_TAG CLOSE_TAG
    (171) simbolos -> . OPEN_TAG
    (172) simbolos -> . CLOSE_TAG
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (126) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (129) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (59) condicion_ifelse -> . condicion_if
    (60) condicion_ifelse -> . condicion_if condicion_else
    (61) condicion_ifelse -> . condicion_if condicion_elseif
    (62) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (146) empty -> .
    (56) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    VARIABLE        shift and go to state 34
    VAR             shift and go to state 35
    DEFINE          shift and go to state 42
    READLINE        shift and go to state 44
    WHILE           shift and go to state 45
    DO              shift and go to state 48
    FOR             shift and go to state 49
    FOREACH         shift and go to state 50
    TRY             shift and go to state 51
    SWITCH          shift and go to state 53
    CASE            shift and go to state 54
    GOTO            shift and go to state 55
    EXIT            shift and go to state 56
    BREAK           shift and go to state 57
    DEFAULT         shift and go to state 58
    CONTINUE        shift and go to state 59
    RAND            shift and go to state 60
    FWRITE          shift and go to state 61
    TRIM            shift and go to state 62
    SMALLER         shift and go to state 63
    RETURN          shift and go to state 65
    COMENTARIOS     shift and go to state 66
    DOC_COMENTARIOS shift and go to state 67
    LPAREN          shift and go to state 30
    CADENA          shift and go to state 43
    RPAREN          shift and go to state 31
    LBRACKET        shift and go to state 32
    RBRACKET        shift and go to state 33
    LBRACE          shift and go to state 46
    RBRACE          shift and go to state 47
    OPEN_TAG        shift and go to state 68
    CLOSE_TAG       shift and go to state 69
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73
    FUNCTION        shift and go to state 74
    SEMI            reduce using rule 146 (empty -> .)
    IF              shift and go to state 76

    cuerpo                         shift and go to state 349
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    simbolos                       shift and go to state 27
    proteccion                     shift and go to state 36
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38
    funcion_nparams                shift and go to state 39
    funcion_blank                  shift and go to state 40
    funcion_void                   shift and go to state 41
    condicion_ifelse               shift and go to state 52
    empty                          shift and go to state 64
    condicion_if                   shift and go to state 75

state 319

    (132) brand -> RAND LPAREN ENTERO COMMA ENTERO . RPAREN SEMI

    RPAREN          shift and go to state 350


state 320

    (151) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA . RPAREN SEMI

    RPAREN          shift and go to state 351


state 321

    (152) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE . RPAREN RPAREN SEMI

    RPAREN          shift and go to state 352


state 322

    (126) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN . stc_bloque_def
    (74) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 210

    stc_bloque_def                 shift and go to state 353

state 323

    (127) params_list -> params_list COMMA . param
    (124) param -> . VARIABLE
    (125) param -> . asignacion
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 282
    VAR             shift and go to state 35
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73

    param                          shift and go to state 354
    asignacion                     shift and go to state 283
    proteccion                     shift and go to state 120
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38

state 324

    (130) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .

    $end            reduce using rule 130 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 130 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    SEMI            reduce using rule 130 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)


state 325

    (131) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE . empty RBRACE
    (74) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (146) empty -> .
    (72) stc_bloque -> . stc_bloque SEMI cuerpo
    (73) stc_bloque -> . breturn
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI

    RBRACE          reduce using rule 146 (empty -> .)
    SEMI            reduce using rule 146 (empty -> .)
    RETURN          shift and go to state 65

    empty                          shift and go to state 355
    stc_bloque                     shift and go to state 272
    breturn                        shift and go to state 273

state 326

    (129) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON . VOID LBRACE empty RBRACE

    VOID            shift and go to state 356


state 327

    (56) condicion_if -> IF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (26) cuerpo -> . simbolos
    (49) imprimir -> . ECHO valor SEMI
    (50) imprimir -> . PRINT valor SEMI
    (51) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (52) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (53) imprimir -> . ECHO bconcat
    (54) imprimir -> . ECHO operaciones_mat SEMI
    (55) imprimir -> . PRINT operaciones_mat SEMI
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (119) funciones -> . funcion_nparams
    (120) funciones -> . proteccion funcion_nparams
    (121) funciones -> . funcion_blank
    (122) funciones -> . proteccion funcion_blank
    (123) funciones -> . funcion_void
    (39) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (40) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (149) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (150) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (84) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (71) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (81) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (89) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) repiteCondicional -> . condicion_ifelse
    (64) repiteCondicional -> . condicion_ifelse repiteCondicional
    (85) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (86) bcase -> . CASE ENTERO COLON
    (155) bgoto -> . GOTO NOMBRE SEMI
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (156) bcortes -> . EXIT SEMI
    (157) bcortes -> . BREAK SEMI
    (158) bcortes -> . DEFAULT SEMI
    (159) bcortes -> . CONTINUE SEMI
    (132) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (151) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (152) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (160) otros -> . SMALLER NOMBRE GREATER
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI
    (153) comment -> . COMENTARIOS
    (154) comment -> . DOC_COMENTARIOS
    (189) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (190) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) bconcat -> . CADENA CONCAT CADENA SEMI
    (176) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (177) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (178) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (179) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (161) simbolos -> . LPAREN RPAREN
    (162) simbolos -> . LPAREN
    (163) simbolos -> . RPAREN
    (164) simbolos -> . LBRACKET RBRACKET
    (165) simbolos -> . LBRACKET
    (166) simbolos -> . RBRACKET
    (167) simbolos -> . LBRACE RBRACE
    (168) simbolos -> . LBRACE
    (169) simbolos -> . RBRACE instrucciones
    (170) simbolos -> . OPEN_TAG CLOSE_TAG
    (171) simbolos -> . OPEN_TAG
    (172) simbolos -> . CLOSE_TAG
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (126) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (129) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (59) condicion_ifelse -> . condicion_if
    (60) condicion_ifelse -> . condicion_if condicion_else
    (61) condicion_ifelse -> . condicion_if condicion_elseif
    (62) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (146) empty -> .
    (56) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    VARIABLE        shift and go to state 34
    VAR             shift and go to state 35
    DEFINE          shift and go to state 42
    READLINE        shift and go to state 44
    WHILE           shift and go to state 45
    DO              shift and go to state 48
    FOR             shift and go to state 49
    FOREACH         shift and go to state 50
    TRY             shift and go to state 51
    SWITCH          shift and go to state 53
    CASE            shift and go to state 54
    GOTO            shift and go to state 55
    EXIT            shift and go to state 56
    BREAK           shift and go to state 57
    DEFAULT         shift and go to state 58
    CONTINUE        shift and go to state 59
    RAND            shift and go to state 60
    FWRITE          shift and go to state 61
    TRIM            shift and go to state 62
    SMALLER         shift and go to state 63
    RETURN          shift and go to state 65
    COMENTARIOS     shift and go to state 66
    DOC_COMENTARIOS shift and go to state 67
    LPAREN          shift and go to state 30
    CADENA          shift and go to state 43
    RPAREN          shift and go to state 31
    LBRACKET        shift and go to state 32
    RBRACKET        shift and go to state 33
    LBRACE          shift and go to state 46
    RBRACE          shift and go to state 47
    OPEN_TAG        shift and go to state 68
    CLOSE_TAG       shift and go to state 69
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73
    FUNCTION        shift and go to state 74
    IF              shift and go to state 76

  ! RBRACE          [ reduce using rule 146 (empty -> .) ]

    cuerpo                         shift and go to state 357
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    simbolos                       shift and go to state 27
    proteccion                     shift and go to state 36
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38
    funcion_nparams                shift and go to state 39
    funcion_blank                  shift and go to state 40
    funcion_void                   shift and go to state 41
    condicion_ifelse               shift and go to state 52
    empty                          shift and go to state 64
    condicion_if                   shift and go to state 75

state 328

    (52) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .

    $end            reduce using rule 52 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    RBRACE          reduce using rule 52 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    SEMI            reduce using rule 52 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)


state 329

    (117) operaciones_mat_par -> LPAREN valor operadores valor RPAREN .

    SEMI            reduce using rule 117 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)
    RPAREN          reduce using rule 117 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)


state 330

    (118) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .

    SEMI            reduce using rule 118 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)
    RPAREN          reduce using rule 118 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)


state 331

    (192) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .

    $end            reduce using rule 192 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RBRACE          reduce using rule 192 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    SEMI            reduce using rule 192 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    VARIABLE        reduce using rule 192 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    CADENA          reduce using rule 192 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BOOLEANO        reduce using rule 192 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    ENTERO          reduce using rule 192 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    DECIMAL         reduce using rule 192 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RPAREN          reduce using rule 192 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    COMMA           reduce using rule 192 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)


state 332

    (147) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 358


state 333

    (148) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN . SEMI

    SEMI            shift and go to state 359


state 334

    (189) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 360


state 335

    (143) array_def -> ARRAY LPAREN array_elmnt RPAREN .

    SEMI            reduce using rule 143 (array_def -> ARRAY LPAREN array_elmnt RPAREN .)


state 336

    (144) array_elmnt -> array_elmnt COMMA . valor
    (41) valor -> . tipoDato
    (42) valor -> . bcolas
    (43) valor -> . bpila
    (44) tipoDato -> . numero
    (45) tipoDato -> . CADENA
    (46) tipoDato -> . BOOLEANO
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    CADENA          shift and go to state 96
    BOOLEANO        shift and go to state 89
    VARIABLE        shift and go to state 173
    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    valor                          shift and go to state 361
    tipoDato                       shift and go to state 82
    bcolas                         shift and go to state 83
    bpila                          shift and go to state 84
    numero                         shift and go to state 88

state 337

    (39) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN . SEMI

    SEMI            shift and go to state 362


state 338

    (40) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN . SEMI

    SEMI            shift and go to state 363


state 339

    (82) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque . RBRACE
    (72) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 364
    SEMI            shift and go to state 315


state 340

    (83) bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .
    (72) stc_bloque -> stc_bloque . SEMI cuerpo

  ! shift/reduce conflict for SEMI resolved as shift
    $end            reduce using rule 83 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    RBRACE          reduce using rule 83 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    SEMI            shift and go to state 315

  ! SEMI            [ reduce using rule 83 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .) ]


state 341

    (57) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . constante
    (5) cuerpo -> . lectura
    (6) cuerpo -> . bwhile
    (7) cuerpo -> . bdo
    (8) cuerpo -> . bfor
    (9) cuerpo -> . bforeach
    (10) cuerpo -> . btry
    (11) cuerpo -> . repiteCondicional
    (12) cuerpo -> . bswitch
    (13) cuerpo -> . bcase
    (14) cuerpo -> . bgoto
    (15) cuerpo -> . bcolas
    (16) cuerpo -> . bpila
    (17) cuerpo -> . bcortes
    (18) cuerpo -> . brand
    (19) cuerpo -> . escribir
    (20) cuerpo -> . btrim
    (21) cuerpo -> . otros
    (22) cuerpo -> . breturn
    (23) cuerpo -> . comment
    (24) cuerpo -> . casting
    (25) cuerpo -> . bconcat
    (26) cuerpo -> . simbolos
    (49) imprimir -> . ECHO valor SEMI
    (50) imprimir -> . PRINT valor SEMI
    (51) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (52) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (53) imprimir -> . ECHO bconcat
    (54) imprimir -> . ECHO operaciones_mat SEMI
    (55) imprimir -> . PRINT operaciones_mat SEMI
    (27) asignacion -> . VARIABLE EQUALS valor SEMI
    (28) asignacion -> . VAR asignacion
    (29) asignacion -> . proteccion asignacion
    (30) asignacion -> . VARIABLE EQUALS brand
    (31) asignacion -> . VARIABLE EQUALS escribir
    (32) asignacion -> . VARIABLE EQUALS btrim
    (33) asignacion -> . VARIABLE EQUALS lectura
    (34) asignacion -> . VARIABLE EQUALS bconcat
    (35) asignacion -> . asignacion_array
    (36) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (37) asignacion -> . aumentoCasting
    (119) funciones -> . funcion_nparams
    (120) funciones -> . proteccion funcion_nparams
    (121) funciones -> . funcion_blank
    (122) funciones -> . proteccion funcion_blank
    (123) funciones -> . funcion_void
    (39) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (40) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (149) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (150) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (83) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (84) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (71) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (81) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (89) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (63) repiteCondicional -> . condicion_ifelse
    (64) repiteCondicional -> . condicion_ifelse repiteCondicional
    (85) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE
    (86) bcase -> . CASE ENTERO COLON
    (155) bgoto -> . GOTO NOMBRE SEMI
    (147) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (148) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (156) bcortes -> . EXIT SEMI
    (157) bcortes -> . BREAK SEMI
    (158) bcortes -> . DEFAULT SEMI
    (159) bcortes -> . CONTINUE SEMI
    (132) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (151) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (152) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (160) otros -> . SMALLER NOMBRE GREATER
    (137) breturn -> . empty
    (138) breturn -> . RETURN SEMI
    (139) breturn -> . RETURN NULL SEMI
    (140) breturn -> . RETURN VARIABLE SEMI
    (141) breturn -> . RETURN BOOLEANO SEMI
    (153) comment -> . COMENTARIOS
    (154) comment -> . DOC_COMENTARIOS
    (189) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (190) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (175) bconcat -> . CADENA CONCAT CADENA SEMI
    (176) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (177) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (178) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (179) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (161) simbolos -> . LPAREN RPAREN
    (162) simbolos -> . LPAREN
    (163) simbolos -> . RPAREN
    (164) simbolos -> . LBRACKET RBRACKET
    (165) simbolos -> . LBRACKET
    (166) simbolos -> . RBRACKET
    (167) simbolos -> . LBRACE RBRACE
    (168) simbolos -> . LBRACE
    (169) simbolos -> . RBRACE instrucciones
    (170) simbolos -> . OPEN_TAG CLOSE_TAG
    (171) simbolos -> . OPEN_TAG
    (172) simbolos -> . CLOSE_TAG
    (133) proteccion -> . PUBLIC
    (134) proteccion -> . PRIVATE
    (135) proteccion -> . PROTECTED
    (136) proteccion -> . STATIC
    (38) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (191) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (192) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (126) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (130) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (131) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (129) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (59) condicion_ifelse -> . condicion_if
    (60) condicion_ifelse -> . condicion_if condicion_else
    (61) condicion_ifelse -> . condicion_if condicion_elseif
    (62) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (146) empty -> .
    (56) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 28
    PRINT           shift and go to state 29
    VARIABLE        shift and go to state 34
    VAR             shift and go to state 35
    DEFINE          shift and go to state 42
    READLINE        shift and go to state 44
    WHILE           shift and go to state 45
    DO              shift and go to state 48
    FOR             shift and go to state 49
    FOREACH         shift and go to state 50
    TRY             shift and go to state 51
    SWITCH          shift and go to state 53
    CASE            shift and go to state 54
    GOTO            shift and go to state 55
    EXIT            shift and go to state 56
    BREAK           shift and go to state 57
    DEFAULT         shift and go to state 58
    CONTINUE        shift and go to state 59
    RAND            shift and go to state 60
    FWRITE          shift and go to state 61
    TRIM            shift and go to state 62
    SMALLER         shift and go to state 63
    RETURN          shift and go to state 65
    COMENTARIOS     shift and go to state 66
    DOC_COMENTARIOS shift and go to state 67
    LPAREN          shift and go to state 30
    CADENA          shift and go to state 43
    RPAREN          shift and go to state 31
    LBRACKET        shift and go to state 32
    RBRACKET        shift and go to state 33
    LBRACE          shift and go to state 46
    RBRACE          shift and go to state 47
    OPEN_TAG        shift and go to state 68
    CLOSE_TAG       shift and go to state 69
    PUBLIC          shift and go to state 70
    PRIVATE         shift and go to state 71
    PROTECTED       shift and go to state 72
    STATIC          shift and go to state 73
    FUNCTION        shift and go to state 74
    IF              shift and go to state 76

  ! RBRACE          [ reduce using rule 146 (empty -> .) ]

    cuerpo                         shift and go to state 365
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    constante                      shift and go to state 5
    lectura                        shift and go to state 6
    bwhile                         shift and go to state 7
    bdo                            shift and go to state 8
    bfor                           shift and go to state 9
    bforeach                       shift and go to state 10
    btry                           shift and go to state 11
    repiteCondicional              shift and go to state 12
    bswitch                        shift and go to state 13
    bcase                          shift and go to state 14
    bgoto                          shift and go to state 15
    bcolas                         shift and go to state 16
    bpila                          shift and go to state 17
    bcortes                        shift and go to state 18
    brand                          shift and go to state 19
    escribir                       shift and go to state 20
    btrim                          shift and go to state 21
    otros                          shift and go to state 22
    breturn                        shift and go to state 23
    comment                        shift and go to state 24
    casting                        shift and go to state 25
    bconcat                        shift and go to state 26
    simbolos                       shift and go to state 27
    proteccion                     shift and go to state 36
    asignacion_array               shift and go to state 37
    aumentoCasting                 shift and go to state 38
    funcion_nparams                shift and go to state 39
    funcion_blank                  shift and go to state 40
    funcion_void                   shift and go to state 41
    condicion_ifelse               shift and go to state 52
    empty                          shift and go to state 64
    condicion_if                   shift and go to state 75

state 342

    (71) bfor -> FOR LPAREN asignacion condicion SEMI for_incr . RPAREN stc_bloque_def

    RPAREN          shift and go to state 366


state 343

    (75) for_incr -> VARIABLE . SUMA SUMA
    (77) for_incr -> VARIABLE . RESTA RESTA
    (79) for_incr -> VARIABLE . SUMA EQUALS numero
    (80) for_incr -> VARIABLE . RESTA EQUALS numero

    SUMA            shift and go to state 367
    RESTA           shift and go to state 368


state 344

    (76) for_incr -> SUMA . SUMA VARIABLE

    SUMA            shift and go to state 369


state 345

    (78) for_incr -> RESTA . RESTA VARIABLE

    RESTA           shift and go to state 370


state 346

    (81) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN . stc_bloque_def
    (74) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 210

    stc_bloque_def                 shift and go to state 371

state 347

    (72) stc_bloque -> stc_bloque SEMI cuerpo .

    RBRACE          reduce using rule 72 (stc_bloque -> stc_bloque SEMI cuerpo .)
    SEMI            reduce using rule 72 (stc_bloque -> stc_bloque SEMI cuerpo .)
    $end            reduce using rule 72 (stc_bloque -> stc_bloque SEMI cuerpo .)


state 348

    (90) catches -> catches CATCH . LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 372


state 349

    (85) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo . SEMI RBRACE

    SEMI            shift and go to state 373


state 350

    (132) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN . SEMI

    SEMI            shift and go to state 374


state 351

    (151) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN . SEMI

    SEMI            shift and go to state 375


state 352

    (152) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN . RPAREN SEMI

    RPAREN          shift and go to state 376


state 353

    (126) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .

    $end            reduce using rule 126 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 126 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    SEMI            reduce using rule 126 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)


state 354

    (127) params_list -> params_list COMMA param .

    RPAREN          reduce using rule 127 (params_list -> params_list COMMA param .)
    COMMA           reduce using rule 127 (params_list -> params_list COMMA param .)


state 355

    (131) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty . RBRACE
    (137) breturn -> empty .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 377
    SEMI            reduce using rule 137 (breturn -> empty .)

  ! RBRACE          [ reduce using rule 137 (breturn -> empty .) ]


state 356

    (129) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID . LBRACE empty RBRACE

    LBRACE          shift and go to state 378


state 357

    (56) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 379


state 358

    (147) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .

    $end            reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    AND             reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    OR              reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    XOR             reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 147 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)


state 359

    (148) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .

    $end            reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    AND             reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    OR              reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    XOR             reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 148 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)


state 360

    (189) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 189 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 189 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 189 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 361

    (144) array_elmnt -> array_elmnt COMMA valor .

    RPAREN          reduce using rule 144 (array_elmnt -> array_elmnt COMMA valor .)
    COMMA           reduce using rule 144 (array_elmnt -> array_elmnt COMMA valor .)


state 362

    (39) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .

    $end            reduce using rule 39 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    RBRACE          reduce using rule 39 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    SEMI            reduce using rule 39 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)


state 363

    (40) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .

    $end            reduce using rule 40 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    RBRACE          reduce using rule 40 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    SEMI            reduce using rule 40 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)


state 364

    (82) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .

    $end            reduce using rule 82 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    RBRACE          reduce using rule 82 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 82 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)


state 365

    (57) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 380


state 366

    (71) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN . stc_bloque_def
    (74) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 210

    stc_bloque_def                 shift and go to state 381

state 367

    (75) for_incr -> VARIABLE SUMA . SUMA
    (79) for_incr -> VARIABLE SUMA . EQUALS numero

    SUMA            shift and go to state 382
    EQUALS          shift and go to state 383


state 368

    (77) for_incr -> VARIABLE RESTA . RESTA
    (80) for_incr -> VARIABLE RESTA . EQUALS numero

    RESTA           shift and go to state 384
    EQUALS          shift and go to state 385


state 369

    (76) for_incr -> SUMA SUMA . VARIABLE

    VARIABLE        shift and go to state 386


state 370

    (78) for_incr -> RESTA RESTA . VARIABLE

    VARIABLE        shift and go to state 387


state 371

    (81) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .

    $end            reduce using rule 81 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 81 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 81 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)


state 372

    (90) catches -> catches CATCH LPAREN . NOMBRE VARIABLE RPAREN stc_bloque_def

    NOMBRE          shift and go to state 388


state 373

    (85) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI . RBRACE

    RBRACE          shift and go to state 389


state 374

    (132) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .

    $end            reduce using rule 132 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RBRACE          reduce using rule 132 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    SEMI            reduce using rule 132 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    VARIABLE        reduce using rule 132 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    CADENA          reduce using rule 132 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BOOLEANO        reduce using rule 132 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    ENTERO          reduce using rule 132 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    DECIMAL         reduce using rule 132 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RPAREN          reduce using rule 132 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    COMMA           reduce using rule 132 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)


state 375

    (151) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .

    $end            reduce using rule 151 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 151 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    SEMI            reduce using rule 151 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 151 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    CADENA          reduce using rule 151 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 151 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 151 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 151 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 151 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    COMMA           reduce using rule 151 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)


state 376

    (152) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN . SEMI

    SEMI            shift and go to state 390


state 377

    (131) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .

    $end            reduce using rule 131 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    RBRACE          reduce using rule 131 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    SEMI            reduce using rule 131 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)


state 378

    (129) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE . empty RBRACE
    (146) empty -> .

    RBRACE          reduce using rule 146 (empty -> .)

    empty                          shift and go to state 391

state 379

    (56) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 56 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    ELSEIF          reduce using rule 56 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    IF              reduce using rule 56 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 56 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 56 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 56 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 380

    (57) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    $end            reduce using rule 57 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 57 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 57 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    ELSE            reduce using rule 57 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    IF              reduce using rule 57 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 381

    (71) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .

    $end            reduce using rule 71 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 71 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    SEMI            reduce using rule 71 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)


state 382

    (75) for_incr -> VARIABLE SUMA SUMA .

    RPAREN          reduce using rule 75 (for_incr -> VARIABLE SUMA SUMA .)


state 383

    (79) for_incr -> VARIABLE SUMA EQUALS . numero
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    numero                         shift and go to state 392

state 384

    (77) for_incr -> VARIABLE RESTA RESTA .

    RPAREN          reduce using rule 77 (for_incr -> VARIABLE RESTA RESTA .)


state 385

    (80) for_incr -> VARIABLE RESTA EQUALS . numero
    (47) numero -> . ENTERO
    (48) numero -> . DECIMAL

    ENTERO          shift and go to state 79
    DECIMAL         shift and go to state 91

    numero                         shift and go to state 393

state 386

    (76) for_incr -> SUMA SUMA VARIABLE .

    RPAREN          reduce using rule 76 (for_incr -> SUMA SUMA VARIABLE .)


state 387

    (78) for_incr -> RESTA RESTA VARIABLE .

    RPAREN          reduce using rule 78 (for_incr -> RESTA RESTA VARIABLE .)


state 388

    (90) catches -> catches CATCH LPAREN NOMBRE . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 394


state 389

    (85) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .

    $end            reduce using rule 85 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .)
    RBRACE          reduce using rule 85 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .)
    SEMI            reduce using rule 85 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE cuerpo SEMI RBRACE .)


state 390

    (152) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .

    $end            reduce using rule 152 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 152 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    SEMI            reduce using rule 152 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 152 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    CADENA          reduce using rule 152 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 152 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 152 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 152 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 152 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    COMMA           reduce using rule 152 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)


state 391

    (129) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty . RBRACE

    RBRACE          shift and go to state 395


state 392

    (79) for_incr -> VARIABLE SUMA EQUALS numero .

    RPAREN          reduce using rule 79 (for_incr -> VARIABLE SUMA EQUALS numero .)


state 393

    (80) for_incr -> VARIABLE RESTA EQUALS numero .

    RPAREN          reduce using rule 80 (for_incr -> VARIABLE RESTA EQUALS numero .)


state 394

    (90) catches -> catches CATCH LPAREN NOMBRE VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 396


state 395

    (129) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .

    $end            reduce using rule 129 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    RBRACE          reduce using rule 129 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    SEMI            reduce using rule 129 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)


state 396

    (90) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN . stc_bloque_def
    (74) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 210

    stc_bloque_def                 shift and go to state 397

state 397

    (90) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .

    CATCH           reduce using rule 90 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    $end            reduce using rule 90 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 90 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 90 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACE in state 46 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 136 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 205 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 315 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 327 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 340 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 341 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 355 resolved as shift
