Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> imprimir
Rule 2     cuerpo -> asignacion
Rule 3     cuerpo -> funciones
Rule 4     cuerpo -> llamada_funcion
Rule 5     cuerpo -> constante
Rule 6     cuerpo -> lectura
Rule 7     cuerpo -> bwhile
Rule 8     cuerpo -> bdo
Rule 9     cuerpo -> bfor
Rule 10    cuerpo -> incrementOp
Rule 11    cuerpo -> bforeach
Rule 12    cuerpo -> btry
Rule 13    cuerpo -> condicion_ifelse
Rule 14    cuerpo -> condicion_else
Rule 15    cuerpo -> condicion_elseif
Rule 16    cuerpo -> bswitch
Rule 17    cuerpo -> bcase
Rule 18    cuerpo -> bgoto
Rule 19    cuerpo -> bcolas
Rule 20    cuerpo -> bpila
Rule 21    cuerpo -> bcortes
Rule 22    cuerpo -> brand
Rule 23    cuerpo -> escribir
Rule 24    cuerpo -> btrim
Rule 25    cuerpo -> otros
Rule 26    cuerpo -> breturn
Rule 27    cuerpo -> comment
Rule 28    cuerpo -> casting
Rule 29    cuerpo -> bconcat
Rule 30    cuerpo -> simbolos
Rule 31    asignacion -> VARIABLE EQUALS valor SEMI
Rule 32    asignacion -> VAR asignacion
Rule 33    asignacion -> proteccion asignacion
Rule 34    asignacion -> VARIABLE EQUALS brand
Rule 35    asignacion -> VARIABLE EQUALS escribir
Rule 36    asignacion -> VARIABLE EQUALS btrim
Rule 37    asignacion -> VARIABLE EQUALS lectura
Rule 38    asignacion -> VARIABLE EQUALS bconcat
Rule 39    asignacion -> asignacion_array
Rule 40    asignacion -> VARIABLE EQUALS operaciones_mat SEMI
Rule 41    asignacion -> aumentoCasting
Rule 42    asignacion_array -> VARIABLE EQUALS array_def SEMI
Rule 43    constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
Rule 44    constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
Rule 45    valor -> tipoDato
Rule 46    valor -> bcolas
Rule 47    valor -> bpila
Rule 48    tipoDato -> numero
Rule 49    tipoDato -> CADENA
Rule 50    tipoDato -> BOOLEANO
Rule 51    numero -> ENTERO
Rule 52    numero -> DECIMAL
Rule 53    imprimir -> ECHO valor SEMI
Rule 54    imprimir -> PRINT valor SEMI
Rule 55    imprimir -> PRINT LPAREN valor RPAREN SEMI
Rule 56    imprimir -> PRINT bconcat
Rule 57    imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
Rule 58    imprimir -> ECHO bconcat
Rule 59    imprimir -> ECHO operaciones_mat SEMI
Rule 60    imprimir -> PRINT operaciones_mat SEMI
Rule 61    condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 62    condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 63    condicion_else -> ELSE LBRACE cuerpo RBRACE
Rule 64    condicion_ifelse -> condicion_if
Rule 65    condicion_ifelse -> condicion_if condicion_else
Rule 66    condicion_ifelse -> condicion_if condicion_elseif
Rule 67    condicion_ifelse -> condicion_if condicion_elseif condicion_else
Rule 68    condicion -> VARIABLE operador_logico VARIABLE
Rule 69    condicion -> valor operador_logico valor
Rule 70    condicion -> VARIABLE operador_logico valor
Rule 71    condicion -> VARIABLE condicion_booleana VARIABLE
Rule 72    condicion -> valor condicion_booleana valor
Rule 73    condicion -> VARIABLE condicion_booleana valor
Rule 74    condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor
Rule 75    condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
Rule 76    condicion -> condicion condicion_booleana condicion
Rule 77    condicion -> condicion condicion_booleana comprobacion
Rule 78    bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
Rule 79    stc_bloque -> stc_bloque SEMI cuerpo
Rule 80    stc_bloque -> breturn
Rule 81    stc_bloque_def -> LBRACE stc_bloque RBRACE
Rule 82    for_incr -> VARIABLE SUMA SUMA
Rule 83    for_incr -> SUMA SUMA VARIABLE
Rule 84    for_incr -> VARIABLE RESTA RESTA
Rule 85    for_incr -> RESTA RESTA VARIABLE
Rule 86    for_incr -> VARIABLE SUMA EQUALS numero
Rule 87    for_incr -> VARIABLE RESTA EQUALS numero
Rule 88    incrementOp -> VARIABLE SUMA SUMA SEMI
Rule 89    incrementOp -> VARIABLE RESTA RESTA SEMI
Rule 90    bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
Rule 91    bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
Rule 92    bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque
Rule 93    bdo -> DO LBRACE cuerpo RBRACE bwhile
Rule 94    bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
Rule 95    bcase -> CASE ENTERO COLON
Rule 96    bcase -> CASE CADENA COLON
Rule 97    innerSwitch -> bcase cuerpo BREAK SEMI
Rule 98    innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch
Rule 99    btry -> TRY LBRACE stc_bloque_def RBRACE catches
Rule 100   catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
Rule 101   catches -> empty
Rule 102   operadores -> SUMA
Rule 103   operadores -> RESTA
Rule 104   operadores -> MULTIPLICACION
Rule 105   operadores -> DIVISION
Rule 106   operadores -> MODULO
Rule 107   operador_logico -> SMALLER
Rule 108   operador_logico -> GREATER
Rule 109   operador_logico -> IS_SMALLER_OR_EQUAL
Rule 110   operador_logico -> IS_GREATER_OR_EQUAL
Rule 111   incrementos_mat -> MINUS_EQUAL
Rule 112   incrementos_mat -> MOD_EQUAL
Rule 113   incrementos_mat -> MUL_EQUAL
Rule 114   incrementos_mat -> PLUS_EQUAL
Rule 115   incrementos_mat -> DIV_EQUAL
Rule 116   condicion_booleana -> AND
Rule 117   condicion_booleana -> OR
Rule 118   condicion_booleana -> XOR
Rule 119   condicion_booleana -> IS_EQUAL
Rule 120   condicion_booleana -> IS_NOT_EQUAL
Rule 121   condicion_booleana -> IS_IDENTICAL
Rule 122   condicion_booleana -> IS_NOT_IDENTICAL
Rule 123   operaciones_mat -> valor operadores valor
Rule 124   operaciones_mat -> valor operadores operaciones_mat
Rule 125   operaciones_mat -> VARIABLE operadores VARIABLE
Rule 126   operaciones_mat -> operaciones_mat_par
Rule 127   operaciones_mat_par -> LPAREN valor operadores valor RPAREN
Rule 128   operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN
Rule 129   operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN
Rule 130   operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor
Rule 131   funciones -> funcion_nparams
Rule 132   funciones -> proteccion funcion_nparams
Rule 133   funciones -> funcion_blank
Rule 134   funciones -> proteccion funcion_blank
Rule 135   funciones -> funcion_void
Rule 136   param -> VARIABLE
Rule 137   param -> asignacion
Rule 138   funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
Rule 139   params_list -> params_list COMMA param
Rule 140   params_list -> param
Rule 141   funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
Rule 142   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
Rule 143   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
Rule 144   llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI
Rule 145   brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
Rule 146   proteccion -> PUBLIC
Rule 147   proteccion -> PRIVATE
Rule 148   proteccion -> PROTECTED
Rule 149   proteccion -> STATIC
Rule 150   breturn -> empty
Rule 151   breturn -> RETURN SEMI
Rule 152   breturn -> RETURN NULL SEMI
Rule 153   breturn -> RETURN VARIABLE SEMI
Rule 154   breturn -> RETURN BOOLEANO SEMI
Rule 155   array_def -> ARRAY LPAREN RPAREN
Rule 156   array_def -> ARRAY LPAREN array_elmnt RPAREN
Rule 157   array_elmnt -> array_elmnt COMMA valor
Rule 158   array_elmnt -> valor
Rule 159   empty -> <empty>
Rule 160   bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
Rule 161   bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
Rule 162   lectura -> READLINE LPAREN CADENA RPAREN SEMI
Rule 163   lectura -> READLINE LPAREN RPAREN SEMI
Rule 164   escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
Rule 165   btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
Rule 166   comment -> COMENTARIOS
Rule 167   comment -> DOC_COMENTARIOS
Rule 168   bgoto -> GOTO NOMBRE SEMI
Rule 169   bcortes -> EXIT SEMI
Rule 170   bcortes -> BREAK SEMI
Rule 171   bcortes -> DEFAULT SEMI
Rule 172   bcortes -> CONTINUE SEMI
Rule 173   otros -> SMALLER NOMBRE GREATER
Rule 174   otros -> NOMBRE COLON
Rule 175   comprobacion -> NOMBRE LPAREN valor RPAREN
Rule 176   comprobacion -> NOMBRE LPAREN VARIABLE RPAREN
Rule 177   simbolos -> LPAREN RPAREN
Rule 178   simbolos -> LPAREN
Rule 179   simbolos -> RPAREN
Rule 180   simbolos -> LBRACKET RBRACKET
Rule 181   simbolos -> LBRACKET
Rule 182   simbolos -> RBRACKET
Rule 183   simbolos -> LBRACE RBRACE
Rule 184   simbolos -> LBRACE
Rule 185   simbolos -> RBRACE instrucciones
Rule 186   simbolos -> OPEN_TAG CLOSE_TAG
Rule 187   simbolos -> OPEN_TAG
Rule 188   simbolos -> CLOSE_TAG
Rule 189   instrucciones -> condicion_else
Rule 190   instrucciones -> condicion_elseif
Rule 191   instrucciones -> bwhile
Rule 192   instrucciones -> bfor
Rule 193   bconcat -> CADENA CONCAT CADENA SEMI
Rule 194   bconcat -> VARIABLE CONCAT VARIABLE SEMI
Rule 195   bconcat -> VARIABLE CONCAT CADENA SEMI
Rule 196   bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI
Rule 197   bconcat -> CADENA CONCAT_EQUAL CADENA SEMI
Rule 198   tiposCast -> STRING
Rule 199   tiposCast -> BOOL
Rule 200   tiposCast -> BOOLEAN
Rule 201   tiposCast -> DOUBLE
Rule 202   tiposCast -> FLOAT
Rule 203   tiposCast -> ARRAY
Rule 204   tiposCast -> OBJECT
Rule 205   tiposCast -> INTEGER
Rule 206   tiposCast -> INT
Rule 207   casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 208   casting -> LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 209   aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI
Rule 210   aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

Terminals, with rules where they appear

AND                  : 116
ARRAY                : 44 155 156 203
AS                   : 90
BOOL                 : 199
BOOLEAN              : 200
BOOLEANO             : 50 154
BREAK                : 97 98 170
CADENA               : 43 49 96 162 164 193 193 195 196 197 197
CASE                 : 95 96
CATCH                : 100
CLOSE_TAG            : 186 188
COLON                : 92 95 96 141 174
COMENTARIOS          : 166
COMMA                : 43 44 139 145 157 164
CONCAT               : 193 194 195
CONCAT_EQUAL         : 196 197
CONTINUE             : 172
DECIMAL              : 52
DEFAULT              : 171
DEFINE               : 43 44
DIVISION             : 105
DIV_EQUAL            : 115
DO                   : 93
DOC_COMENTARIOS      : 167
DOUBLE               : 201
ECHO                 : 53 57 58 59
ELSE                 : 63
ELSEIF               : 62
ENTERO               : 51 57 95 145 145
EQUALS               : 31 34 35 36 37 38 40 42 86 87 160 161 207 210
EXIT                 : 169
FLOAT                : 202
FOR                  : 78
FOREACH              : 90
FUNCTION             : 138 141 142 143
FWRITE               : 164
GOTO                 : 168
GREATER              : 108 173
IF                   : 61
INT                  : 206
INTEGER              : 205
IS_EQUAL             : 119
IS_GREATER_OR_EQUAL  : 110
IS_IDENTICAL         : 121
IS_NOT_EQUAL         : 120
IS_NOT_IDENTICAL     : 122
IS_SMALLER_OR_EQUAL  : 109
LBRACE               : 61 62 63 81 91 93 94 99 141 143 183 184
LBRACKET             : 57 180 181
LPAREN               : 43 44 55 61 62 74 75 78 90 91 92 94 100 127 128 129 130 138 141 142 143 144 145 155 156 160 161 162 163 164 165 165 175 176 177 178 207 208
MINUS_EQUAL          : 111
MODULO               : 106
MOD_EQUAL            : 112
MULTIPLICACION       : 104
MUL_EQUAL            : 113
NEW                  : 160 161
NOMBRE               : 44 57 100 138 141 142 143 144 164 165 165 168 173 174 175 176
NULL                 : 152
OBJECT               : 204
OPEN_TAG             : 186 187
OR                   : 117
PLUS_EQUAL           : 114
PRINT                : 54 55 56 60
PRIVATE              : 147
PROTECTED            : 148
PUBLIC               : 146
RAND                 : 145
RBRACE               : 61 62 63 81 91 93 94 99 141 143 183 185
RBRACKET             : 57 180 182
READLINE             : 162 163
RESTA                : 84 84 85 85 87 89 89 103
RETURN               : 151 152 153 154
RPAREN               : 43 44 55 61 62 74 75 78 90 91 92 94 100 127 128 129 130 138 141 142 143 144 145 155 156 160 161 162 163 164 165 165 175 176 177 179 207 208
SEMI                 : 31 40 42 43 44 53 54 55 57 59 60 78 79 88 89 97 98 144 145 151 152 153 154 160 161 162 163 164 165 168 169 170 171 172 193 194 195 196 197 207 208 209 210
SMALLER              : 107 173
SPLQUEUE             : 160
SPLSTACK             : 161
STATIC               : 149
STRING               : 198
SUMA                 : 82 82 83 83 86 88 88 102
SWITCH               : 94
TRIM                 : 165
TRY                  : 99
VAR                  : 32
VARIABLE             : 31 34 35 36 37 38 40 42 68 68 70 71 71 73 74 75 82 83 84 85 86 87 88 89 90 90 94 100 125 125 129 129 130 136 153 160 161 176 194 194 195 196 207 207 208 209 210 210
VOID                 : 141
WHILE                : 91 92
XOR                  : 118
error                : 

Nonterminals, with rules where they appear

array_def            : 42
array_elmnt          : 156 157
asignacion           : 2 32 33 78 137
asignacion_array     : 39
aumentoCasting       : 41
bcase                : 17 97 98
bcolas               : 19 46
bconcat              : 29 38 56 58
bcortes              : 21
bdo                  : 8
bfor                 : 9 192
bforeach             : 11
bgoto                : 18
bpila                : 20 47
brand                : 22 34
breturn              : 26 80
bswitch              : 16
btrim                : 24 36
btry                 : 12
bwhile               : 7 93 191
casting              : 28
catches              : 99 100
comment              : 27
comprobacion         : 77
condicion            : 61 62 76 76 77 78 91 92
condicion_booleana   : 71 72 73 75 76 77
condicion_else       : 14 65 67 189
condicion_elseif     : 15 66 67 190
condicion_if         : 64 65 66 67
condicion_ifelse     : 13
constante            : 5
cuerpo               : 61 62 63 79 93 97 98 0
empty                : 101 141 143 150
escribir             : 23 35
for_incr             : 78
funcion_blank        : 133 134
funcion_nparams      : 131 132
funcion_void         : 135
funciones            : 3
imprimir             : 1
incrementOp          : 10
incrementos_mat      : 209
innerSwitch          : 94 98
instrucciones        : 185
lectura              : 6 37
llamada_funcion      : 4
numero               : 48 86 87
operaciones_mat      : 40 59 60 124
operaciones_mat_par  : 126 128
operador_logico      : 68 69 70 74
operadores           : 74 75 123 124 125 127 128 129 130 130 210
otros                : 25
param                : 139 140
params_list          : 138 139 144
proteccion           : 33 132 134
simbolos             : 30
stc_bloque           : 79 81 91 92
stc_bloque_def       : 78 90 99 100 138 142
tipoDato             : 45 209 210
tiposCast            : 207 208
valor                : 31 43 53 54 55 69 69 70 72 72 73 74 74 75 75 123 123 124 127 127 128 130 130 157 158 175

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . incrementOp
    (11) cuerpo -> . bforeach
    (12) cuerpo -> . btry
    (13) cuerpo -> . condicion_ifelse
    (14) cuerpo -> . condicion_else
    (15) cuerpo -> . condicion_elseif
    (16) cuerpo -> . bswitch
    (17) cuerpo -> . bcase
    (18) cuerpo -> . bgoto
    (19) cuerpo -> . bcolas
    (20) cuerpo -> . bpila
    (21) cuerpo -> . bcortes
    (22) cuerpo -> . brand
    (23) cuerpo -> . escribir
    (24) cuerpo -> . btrim
    (25) cuerpo -> . otros
    (26) cuerpo -> . breturn
    (27) cuerpo -> . comment
    (28) cuerpo -> . casting
    (29) cuerpo -> . bconcat
    (30) cuerpo -> . simbolos
    (53) imprimir -> . ECHO valor SEMI
    (54) imprimir -> . PRINT valor SEMI
    (55) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (56) imprimir -> . PRINT bconcat
    (57) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (58) imprimir -> . ECHO bconcat
    (59) imprimir -> . ECHO operaciones_mat SEMI
    (60) imprimir -> . PRINT operaciones_mat SEMI
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (131) funciones -> . funcion_nparams
    (132) funciones -> . proteccion funcion_nparams
    (133) funciones -> . funcion_blank
    (134) funciones -> . proteccion funcion_blank
    (135) funciones -> . funcion_void
    (144) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (43) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (44) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (162) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (163) lectura -> . READLINE LPAREN RPAREN SEMI
    (91) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (93) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (78) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (88) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (89) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (90) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (99) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (64) condicion_ifelse -> . condicion_if
    (65) condicion_ifelse -> . condicion_if condicion_else
    (66) condicion_ifelse -> . condicion_if condicion_elseif
    (67) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (63) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (62) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (94) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (95) bcase -> . CASE ENTERO COLON
    (96) bcase -> . CASE CADENA COLON
    (168) bgoto -> . GOTO NOMBRE SEMI
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (169) bcortes -> . EXIT SEMI
    (170) bcortes -> . BREAK SEMI
    (171) bcortes -> . DEFAULT SEMI
    (172) bcortes -> . CONTINUE SEMI
    (145) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (164) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (165) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (173) otros -> . SMALLER NOMBRE GREATER
    (174) otros -> . NOMBRE COLON
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI
    (166) comment -> . COMENTARIOS
    (167) comment -> . DOC_COMENTARIOS
    (207) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (177) simbolos -> . LPAREN RPAREN
    (178) simbolos -> . LPAREN
    (179) simbolos -> . RPAREN
    (180) simbolos -> . LBRACKET RBRACKET
    (181) simbolos -> . LBRACKET
    (182) simbolos -> . RBRACKET
    (183) simbolos -> . LBRACE RBRACE
    (184) simbolos -> . LBRACE
    (185) simbolos -> . RBRACE instrucciones
    (186) simbolos -> . OPEN_TAG CLOSE_TAG
    (187) simbolos -> . OPEN_TAG
    (188) simbolos -> . CLOSE_TAG
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (138) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (141) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (61) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (159) empty -> .

    ECHO            shift and go to state 32
    PRINT           shift and go to state 33
    VARIABLE        shift and go to state 39
    VAR             shift and go to state 40
    NOMBRE          shift and go to state 36
    DEFINE          shift and go to state 47
    READLINE        shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 53
    FOR             shift and go to state 54
    FOREACH         shift and go to state 55
    TRY             shift and go to state 56
    ELSE            shift and go to state 58
    ELSEIF          shift and go to state 59
    SWITCH          shift and go to state 60
    CASE            shift and go to state 61
    GOTO            shift and go to state 62
    EXIT            shift and go to state 63
    BREAK           shift and go to state 64
    DEFAULT         shift and go to state 65
    CONTINUE        shift and go to state 66
    RAND            shift and go to state 67
    FWRITE          shift and go to state 68
    TRIM            shift and go to state 69
    SMALLER         shift and go to state 70
    RETURN          shift and go to state 72
    COMENTARIOS     shift and go to state 73
    DOC_COMENTARIOS shift and go to state 74
    LPAREN          shift and go to state 34
    CADENA          shift and go to state 48
    RPAREN          shift and go to state 35
    LBRACKET        shift and go to state 37
    RBRACKET        shift and go to state 38
    LBRACE          shift and go to state 51
    RBRACE          shift and go to state 52
    OPEN_TAG        shift and go to state 75
    CLOSE_TAG       shift and go to state 76
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80
    FUNCTION        shift and go to state 81
    IF              shift and go to state 82
    $end            reduce using rule 159 (empty -> .)

    cuerpo                         shift and go to state 1
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    incrementOp                    shift and go to state 11
    bforeach                       shift and go to state 12
    btry                           shift and go to state 13
    condicion_ifelse               shift and go to state 14
    condicion_else                 shift and go to state 15
    condicion_elseif               shift and go to state 16
    bswitch                        shift and go to state 17
    bcase                          shift and go to state 18
    bgoto                          shift and go to state 19
    bcolas                         shift and go to state 20
    bpila                          shift and go to state 21
    bcortes                        shift and go to state 22
    brand                          shift and go to state 23
    escribir                       shift and go to state 24
    btrim                          shift and go to state 25
    otros                          shift and go to state 26
    breturn                        shift and go to state 27
    comment                        shift and go to state 28
    casting                        shift and go to state 29
    bconcat                        shift and go to state 30
    simbolos                       shift and go to state 31
    proteccion                     shift and go to state 41
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43
    funcion_nparams                shift and go to state 44
    funcion_blank                  shift and go to state 45
    funcion_void                   shift and go to state 46
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 71

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> imprimir .

    $end            reduce using rule 1 (cuerpo -> imprimir .)
    RBRACE          reduce using rule 1 (cuerpo -> imprimir .)
    SEMI            reduce using rule 1 (cuerpo -> imprimir .)
    BREAK           reduce using rule 1 (cuerpo -> imprimir .)


state 3

    (2) cuerpo -> asignacion .

    $end            reduce using rule 2 (cuerpo -> asignacion .)
    RBRACE          reduce using rule 2 (cuerpo -> asignacion .)
    SEMI            reduce using rule 2 (cuerpo -> asignacion .)
    BREAK           reduce using rule 2 (cuerpo -> asignacion .)


state 4

    (3) cuerpo -> funciones .

    $end            reduce using rule 3 (cuerpo -> funciones .)
    RBRACE          reduce using rule 3 (cuerpo -> funciones .)
    SEMI            reduce using rule 3 (cuerpo -> funciones .)
    BREAK           reduce using rule 3 (cuerpo -> funciones .)


state 5

    (4) cuerpo -> llamada_funcion .

    $end            reduce using rule 4 (cuerpo -> llamada_funcion .)
    RBRACE          reduce using rule 4 (cuerpo -> llamada_funcion .)
    SEMI            reduce using rule 4 (cuerpo -> llamada_funcion .)
    BREAK           reduce using rule 4 (cuerpo -> llamada_funcion .)


state 6

    (5) cuerpo -> constante .

    $end            reduce using rule 5 (cuerpo -> constante .)
    RBRACE          reduce using rule 5 (cuerpo -> constante .)
    SEMI            reduce using rule 5 (cuerpo -> constante .)
    BREAK           reduce using rule 5 (cuerpo -> constante .)


state 7

    (6) cuerpo -> lectura .

    $end            reduce using rule 6 (cuerpo -> lectura .)
    RBRACE          reduce using rule 6 (cuerpo -> lectura .)
    SEMI            reduce using rule 6 (cuerpo -> lectura .)
    BREAK           reduce using rule 6 (cuerpo -> lectura .)


state 8

    (7) cuerpo -> bwhile .

    $end            reduce using rule 7 (cuerpo -> bwhile .)
    RBRACE          reduce using rule 7 (cuerpo -> bwhile .)
    SEMI            reduce using rule 7 (cuerpo -> bwhile .)
    BREAK           reduce using rule 7 (cuerpo -> bwhile .)


state 9

    (8) cuerpo -> bdo .

    $end            reduce using rule 8 (cuerpo -> bdo .)
    RBRACE          reduce using rule 8 (cuerpo -> bdo .)
    SEMI            reduce using rule 8 (cuerpo -> bdo .)
    BREAK           reduce using rule 8 (cuerpo -> bdo .)


state 10

    (9) cuerpo -> bfor .

    $end            reduce using rule 9 (cuerpo -> bfor .)
    RBRACE          reduce using rule 9 (cuerpo -> bfor .)
    SEMI            reduce using rule 9 (cuerpo -> bfor .)
    BREAK           reduce using rule 9 (cuerpo -> bfor .)


state 11

    (10) cuerpo -> incrementOp .

    $end            reduce using rule 10 (cuerpo -> incrementOp .)
    RBRACE          reduce using rule 10 (cuerpo -> incrementOp .)
    SEMI            reduce using rule 10 (cuerpo -> incrementOp .)
    BREAK           reduce using rule 10 (cuerpo -> incrementOp .)


state 12

    (11) cuerpo -> bforeach .

    $end            reduce using rule 11 (cuerpo -> bforeach .)
    RBRACE          reduce using rule 11 (cuerpo -> bforeach .)
    SEMI            reduce using rule 11 (cuerpo -> bforeach .)
    BREAK           reduce using rule 11 (cuerpo -> bforeach .)


state 13

    (12) cuerpo -> btry .

    $end            reduce using rule 12 (cuerpo -> btry .)
    RBRACE          reduce using rule 12 (cuerpo -> btry .)
    SEMI            reduce using rule 12 (cuerpo -> btry .)
    BREAK           reduce using rule 12 (cuerpo -> btry .)


state 14

    (13) cuerpo -> condicion_ifelse .

    $end            reduce using rule 13 (cuerpo -> condicion_ifelse .)
    RBRACE          reduce using rule 13 (cuerpo -> condicion_ifelse .)
    SEMI            reduce using rule 13 (cuerpo -> condicion_ifelse .)
    BREAK           reduce using rule 13 (cuerpo -> condicion_ifelse .)


state 15

    (14) cuerpo -> condicion_else .

    $end            reduce using rule 14 (cuerpo -> condicion_else .)
    RBRACE          reduce using rule 14 (cuerpo -> condicion_else .)
    SEMI            reduce using rule 14 (cuerpo -> condicion_else .)
    BREAK           reduce using rule 14 (cuerpo -> condicion_else .)


state 16

    (15) cuerpo -> condicion_elseif .

    $end            reduce using rule 15 (cuerpo -> condicion_elseif .)
    RBRACE          reduce using rule 15 (cuerpo -> condicion_elseif .)
    SEMI            reduce using rule 15 (cuerpo -> condicion_elseif .)
    BREAK           reduce using rule 15 (cuerpo -> condicion_elseif .)


state 17

    (16) cuerpo -> bswitch .

    $end            reduce using rule 16 (cuerpo -> bswitch .)
    RBRACE          reduce using rule 16 (cuerpo -> bswitch .)
    SEMI            reduce using rule 16 (cuerpo -> bswitch .)
    BREAK           reduce using rule 16 (cuerpo -> bswitch .)


state 18

    (17) cuerpo -> bcase .

    $end            reduce using rule 17 (cuerpo -> bcase .)
    RBRACE          reduce using rule 17 (cuerpo -> bcase .)
    SEMI            reduce using rule 17 (cuerpo -> bcase .)
    BREAK           reduce using rule 17 (cuerpo -> bcase .)


state 19

    (18) cuerpo -> bgoto .

    $end            reduce using rule 18 (cuerpo -> bgoto .)
    RBRACE          reduce using rule 18 (cuerpo -> bgoto .)
    SEMI            reduce using rule 18 (cuerpo -> bgoto .)
    BREAK           reduce using rule 18 (cuerpo -> bgoto .)


state 20

    (19) cuerpo -> bcolas .

    $end            reduce using rule 19 (cuerpo -> bcolas .)
    RBRACE          reduce using rule 19 (cuerpo -> bcolas .)
    SEMI            reduce using rule 19 (cuerpo -> bcolas .)
    BREAK           reduce using rule 19 (cuerpo -> bcolas .)


state 21

    (20) cuerpo -> bpila .

    $end            reduce using rule 20 (cuerpo -> bpila .)
    RBRACE          reduce using rule 20 (cuerpo -> bpila .)
    SEMI            reduce using rule 20 (cuerpo -> bpila .)
    BREAK           reduce using rule 20 (cuerpo -> bpila .)


state 22

    (21) cuerpo -> bcortes .

    $end            reduce using rule 21 (cuerpo -> bcortes .)
    RBRACE          reduce using rule 21 (cuerpo -> bcortes .)
    SEMI            reduce using rule 21 (cuerpo -> bcortes .)
    BREAK           reduce using rule 21 (cuerpo -> bcortes .)


state 23

    (22) cuerpo -> brand .

    $end            reduce using rule 22 (cuerpo -> brand .)
    RBRACE          reduce using rule 22 (cuerpo -> brand .)
    SEMI            reduce using rule 22 (cuerpo -> brand .)
    BREAK           reduce using rule 22 (cuerpo -> brand .)


state 24

    (23) cuerpo -> escribir .

    $end            reduce using rule 23 (cuerpo -> escribir .)
    RBRACE          reduce using rule 23 (cuerpo -> escribir .)
    SEMI            reduce using rule 23 (cuerpo -> escribir .)
    BREAK           reduce using rule 23 (cuerpo -> escribir .)


state 25

    (24) cuerpo -> btrim .

    $end            reduce using rule 24 (cuerpo -> btrim .)
    RBRACE          reduce using rule 24 (cuerpo -> btrim .)
    SEMI            reduce using rule 24 (cuerpo -> btrim .)
    BREAK           reduce using rule 24 (cuerpo -> btrim .)


state 26

    (25) cuerpo -> otros .

    $end            reduce using rule 25 (cuerpo -> otros .)
    RBRACE          reduce using rule 25 (cuerpo -> otros .)
    SEMI            reduce using rule 25 (cuerpo -> otros .)
    BREAK           reduce using rule 25 (cuerpo -> otros .)


state 27

    (26) cuerpo -> breturn .

    $end            reduce using rule 26 (cuerpo -> breturn .)
    RBRACE          reduce using rule 26 (cuerpo -> breturn .)
    SEMI            reduce using rule 26 (cuerpo -> breturn .)
    BREAK           reduce using rule 26 (cuerpo -> breturn .)


state 28

    (27) cuerpo -> comment .

    $end            reduce using rule 27 (cuerpo -> comment .)
    RBRACE          reduce using rule 27 (cuerpo -> comment .)
    SEMI            reduce using rule 27 (cuerpo -> comment .)
    BREAK           reduce using rule 27 (cuerpo -> comment .)


state 29

    (28) cuerpo -> casting .

    $end            reduce using rule 28 (cuerpo -> casting .)
    RBRACE          reduce using rule 28 (cuerpo -> casting .)
    SEMI            reduce using rule 28 (cuerpo -> casting .)
    BREAK           reduce using rule 28 (cuerpo -> casting .)


state 30

    (29) cuerpo -> bconcat .

    $end            reduce using rule 29 (cuerpo -> bconcat .)
    RBRACE          reduce using rule 29 (cuerpo -> bconcat .)
    SEMI            reduce using rule 29 (cuerpo -> bconcat .)
    BREAK           reduce using rule 29 (cuerpo -> bconcat .)


state 31

    (30) cuerpo -> simbolos .

    $end            reduce using rule 30 (cuerpo -> simbolos .)
    RBRACE          reduce using rule 30 (cuerpo -> simbolos .)
    SEMI            reduce using rule 30 (cuerpo -> simbolos .)
    BREAK           reduce using rule 30 (cuerpo -> simbolos .)


state 32

    (53) imprimir -> ECHO . valor SEMI
    (57) imprimir -> ECHO . NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (58) imprimir -> ECHO . bconcat
    (59) imprimir -> ECHO . operaciones_mat SEMI
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (123) operaciones_mat -> . valor operadores valor
    (124) operaciones_mat -> . valor operadores operaciones_mat
    (125) operaciones_mat -> . VARIABLE operadores VARIABLE
    (126) operaciones_mat -> . operaciones_mat_par
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (127) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (128) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (129) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (130) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    NOMBRE          shift and go to state 84
    CADENA          shift and go to state 91
    VARIABLE        shift and go to state 92
    BOOLEANO        shift and go to state 95
    LPAREN          shift and go to state 96
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 83
    bconcat                        shift and go to state 86
    operaciones_mat                shift and go to state 87
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    operaciones_mat_par            shift and go to state 93
    numero                         shift and go to state 94

state 33

    (54) imprimir -> PRINT . valor SEMI
    (55) imprimir -> PRINT . LPAREN valor RPAREN SEMI
    (56) imprimir -> PRINT . bconcat
    (60) imprimir -> PRINT . operaciones_mat SEMI
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (123) operaciones_mat -> . valor operadores valor
    (124) operaciones_mat -> . valor operadores operaciones_mat
    (125) operaciones_mat -> . VARIABLE operadores VARIABLE
    (126) operaciones_mat -> . operaciones_mat_par
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (127) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (128) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (129) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (130) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    LPAREN          shift and go to state 99
    CADENA          shift and go to state 91
    VARIABLE        shift and go to state 92
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 98
    bconcat                        shift and go to state 100
    operaciones_mat                shift and go to state 101
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    operaciones_mat_par            shift and go to state 93
    numero                         shift and go to state 94

state 34

    (208) casting -> LPAREN . tiposCast RPAREN VARIABLE SEMI
    (177) simbolos -> LPAREN . RPAREN
    (178) simbolos -> LPAREN .
    (198) tiposCast -> . STRING
    (199) tiposCast -> . BOOL
    (200) tiposCast -> . BOOLEAN
    (201) tiposCast -> . DOUBLE
    (202) tiposCast -> . FLOAT
    (203) tiposCast -> . ARRAY
    (204) tiposCast -> . OBJECT
    (205) tiposCast -> . INTEGER
    (206) tiposCast -> . INT

    RPAREN          shift and go to state 103
    $end            reduce using rule 178 (simbolos -> LPAREN .)
    RBRACE          reduce using rule 178 (simbolos -> LPAREN .)
    SEMI            reduce using rule 178 (simbolos -> LPAREN .)
    BREAK           reduce using rule 178 (simbolos -> LPAREN .)
    STRING          shift and go to state 104
    BOOL            shift and go to state 105
    BOOLEAN         shift and go to state 106
    DOUBLE          shift and go to state 107
    FLOAT           shift and go to state 108
    ARRAY           shift and go to state 109
    OBJECT          shift and go to state 110
    INTEGER         shift and go to state 111
    INT             shift and go to state 112

    tiposCast                      shift and go to state 102

state 35

    (179) simbolos -> RPAREN .

    $end            reduce using rule 179 (simbolos -> RPAREN .)
    RBRACE          reduce using rule 179 (simbolos -> RPAREN .)
    SEMI            reduce using rule 179 (simbolos -> RPAREN .)
    BREAK           reduce using rule 179 (simbolos -> RPAREN .)


state 36

    (144) llamada_funcion -> NOMBRE . LPAREN params_list RPAREN SEMI
    (174) otros -> NOMBRE . COLON

    LPAREN          shift and go to state 113
    COLON           shift and go to state 114


state 37

    (180) simbolos -> LBRACKET . RBRACKET
    (181) simbolos -> LBRACKET .

    RBRACKET        shift and go to state 115
    $end            reduce using rule 181 (simbolos -> LBRACKET .)
    RBRACE          reduce using rule 181 (simbolos -> LBRACKET .)
    SEMI            reduce using rule 181 (simbolos -> LBRACKET .)
    BREAK           reduce using rule 181 (simbolos -> LBRACKET .)


state 38

    (182) simbolos -> RBRACKET .

    $end            reduce using rule 182 (simbolos -> RBRACKET .)
    RBRACE          reduce using rule 182 (simbolos -> RBRACKET .)
    SEMI            reduce using rule 182 (simbolos -> RBRACKET .)
    BREAK           reduce using rule 182 (simbolos -> RBRACKET .)


state 39

    (31) asignacion -> VARIABLE . EQUALS valor SEMI
    (34) asignacion -> VARIABLE . EQUALS brand
    (35) asignacion -> VARIABLE . EQUALS escribir
    (36) asignacion -> VARIABLE . EQUALS btrim
    (37) asignacion -> VARIABLE . EQUALS lectura
    (38) asignacion -> VARIABLE . EQUALS bconcat
    (40) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (88) incrementOp -> VARIABLE . SUMA SUMA SEMI
    (89) incrementOp -> VARIABLE . RESTA RESTA SEMI
    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (207) casting -> VARIABLE . EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (194) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (195) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (196) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (42) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (209) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (111) incrementos_mat -> . MINUS_EQUAL
    (112) incrementos_mat -> . MOD_EQUAL
    (113) incrementos_mat -> . MUL_EQUAL
    (114) incrementos_mat -> . PLUS_EQUAL
    (115) incrementos_mat -> . DIV_EQUAL

    EQUALS          shift and go to state 116
    SUMA            shift and go to state 117
    RESTA           shift and go to state 118
    CONCAT          shift and go to state 119
    CONCAT_EQUAL    shift and go to state 120
    MINUS_EQUAL     shift and go to state 122
    MOD_EQUAL       shift and go to state 123
    MUL_EQUAL       shift and go to state 124
    PLUS_EQUAL      shift and go to state 125
    DIV_EQUAL       shift and go to state 126

    incrementos_mat                shift and go to state 121

state 40

    (32) asignacion -> VAR . asignacion
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 128
    VAR             shift and go to state 40
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80

    asignacion                     shift and go to state 127
    proteccion                     shift and go to state 129
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43

state 41

    (33) asignacion -> proteccion . asignacion
    (132) funciones -> proteccion . funcion_nparams
    (134) funciones -> proteccion . funcion_blank
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (138) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 128
    VAR             shift and go to state 40
    FUNCTION        shift and go to state 133
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80

    proteccion                     shift and go to state 129
    asignacion                     shift and go to state 130
    funcion_nparams                shift and go to state 131
    funcion_blank                  shift and go to state 132
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43

state 42

    (39) asignacion -> asignacion_array .

    $end            reduce using rule 39 (asignacion -> asignacion_array .)
    RBRACE          reduce using rule 39 (asignacion -> asignacion_array .)
    SEMI            reduce using rule 39 (asignacion -> asignacion_array .)
    BREAK           reduce using rule 39 (asignacion -> asignacion_array .)
    RPAREN          reduce using rule 39 (asignacion -> asignacion_array .)
    COMMA           reduce using rule 39 (asignacion -> asignacion_array .)
    VARIABLE        reduce using rule 39 (asignacion -> asignacion_array .)
    LPAREN          reduce using rule 39 (asignacion -> asignacion_array .)
    CADENA          reduce using rule 39 (asignacion -> asignacion_array .)
    BOOLEANO        reduce using rule 39 (asignacion -> asignacion_array .)
    ENTERO          reduce using rule 39 (asignacion -> asignacion_array .)
    DECIMAL         reduce using rule 39 (asignacion -> asignacion_array .)


state 43

    (41) asignacion -> aumentoCasting .

    $end            reduce using rule 41 (asignacion -> aumentoCasting .)
    RBRACE          reduce using rule 41 (asignacion -> aumentoCasting .)
    SEMI            reduce using rule 41 (asignacion -> aumentoCasting .)
    BREAK           reduce using rule 41 (asignacion -> aumentoCasting .)
    RPAREN          reduce using rule 41 (asignacion -> aumentoCasting .)
    COMMA           reduce using rule 41 (asignacion -> aumentoCasting .)
    VARIABLE        reduce using rule 41 (asignacion -> aumentoCasting .)
    LPAREN          reduce using rule 41 (asignacion -> aumentoCasting .)
    CADENA          reduce using rule 41 (asignacion -> aumentoCasting .)
    BOOLEANO        reduce using rule 41 (asignacion -> aumentoCasting .)
    ENTERO          reduce using rule 41 (asignacion -> aumentoCasting .)
    DECIMAL         reduce using rule 41 (asignacion -> aumentoCasting .)


state 44

    (131) funciones -> funcion_nparams .

    $end            reduce using rule 131 (funciones -> funcion_nparams .)
    RBRACE          reduce using rule 131 (funciones -> funcion_nparams .)
    SEMI            reduce using rule 131 (funciones -> funcion_nparams .)
    BREAK           reduce using rule 131 (funciones -> funcion_nparams .)


state 45

    (133) funciones -> funcion_blank .

    $end            reduce using rule 133 (funciones -> funcion_blank .)
    RBRACE          reduce using rule 133 (funciones -> funcion_blank .)
    SEMI            reduce using rule 133 (funciones -> funcion_blank .)
    BREAK           reduce using rule 133 (funciones -> funcion_blank .)


state 46

    (135) funciones -> funcion_void .

    $end            reduce using rule 135 (funciones -> funcion_void .)
    RBRACE          reduce using rule 135 (funciones -> funcion_void .)
    SEMI            reduce using rule 135 (funciones -> funcion_void .)
    BREAK           reduce using rule 135 (funciones -> funcion_void .)


state 47

    (43) constante -> DEFINE . LPAREN CADENA COMMA valor RPAREN SEMI
    (44) constante -> DEFINE . LPAREN NOMBRE COMMA ARRAY RPAREN SEMI

    LPAREN          shift and go to state 134


state 48

    (193) bconcat -> CADENA . CONCAT CADENA SEMI
    (197) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI

    CONCAT          shift and go to state 135
    CONCAT_EQUAL    shift and go to state 136


state 49

    (162) lectura -> READLINE . LPAREN CADENA RPAREN SEMI
    (163) lectura -> READLINE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 137


state 50

    (91) bwhile -> WHILE . LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> WHILE . LPAREN condicion RPAREN COLON stc_bloque

    LPAREN          shift and go to state 138


state 51

    (183) simbolos -> LBRACE . RBRACE
    (184) simbolos -> LBRACE .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 139
    $end            reduce using rule 184 (simbolos -> LBRACE .)
    SEMI            reduce using rule 184 (simbolos -> LBRACE .)
    BREAK           reduce using rule 184 (simbolos -> LBRACE .)

  ! RBRACE          [ reduce using rule 184 (simbolos -> LBRACE .) ]


state 52

    (185) simbolos -> RBRACE . instrucciones
    (189) instrucciones -> . condicion_else
    (190) instrucciones -> . condicion_elseif
    (191) instrucciones -> . bwhile
    (192) instrucciones -> . bfor
    (63) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (62) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (91) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (78) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def

    ELSE            shift and go to state 58
    ELSEIF          shift and go to state 59
    WHILE           shift and go to state 50
    FOR             shift and go to state 54

    instrucciones                  shift and go to state 140
    condicion_else                 shift and go to state 141
    condicion_elseif               shift and go to state 142
    bwhile                         shift and go to state 143
    bfor                           shift and go to state 144

state 53

    (93) bdo -> DO . LBRACE cuerpo RBRACE bwhile

    LBRACE          shift and go to state 145


state 54

    (78) bfor -> FOR . LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def

    LPAREN          shift and go to state 146


state 55

    (90) bforeach -> FOREACH . LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 147


state 56

    (99) btry -> TRY . LBRACE stc_bloque_def RBRACE catches

    LBRACE          shift and go to state 148


state 57

    (64) condicion_ifelse -> condicion_if .
    (65) condicion_ifelse -> condicion_if . condicion_else
    (66) condicion_ifelse -> condicion_if . condicion_elseif
    (67) condicion_ifelse -> condicion_if . condicion_elseif condicion_else
    (63) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (62) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    $end            reduce using rule 64 (condicion_ifelse -> condicion_if .)
    RBRACE          reduce using rule 64 (condicion_ifelse -> condicion_if .)
    SEMI            reduce using rule 64 (condicion_ifelse -> condicion_if .)
    BREAK           reduce using rule 64 (condicion_ifelse -> condicion_if .)
    ELSE            shift and go to state 58
    ELSEIF          shift and go to state 59

    condicion_else                 shift and go to state 149
    condicion_elseif               shift and go to state 150

state 58

    (63) condicion_else -> ELSE . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 151


state 59

    (62) condicion_elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 152


state 60

    (94) bswitch -> SWITCH . LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE

    LPAREN          shift and go to state 153


state 61

    (95) bcase -> CASE . ENTERO COLON
    (96) bcase -> CASE . CADENA COLON

    ENTERO          shift and go to state 154
    CADENA          shift and go to state 155


state 62

    (168) bgoto -> GOTO . NOMBRE SEMI

    NOMBRE          shift and go to state 156


state 63

    (169) bcortes -> EXIT . SEMI

    SEMI            shift and go to state 157


state 64

    (170) bcortes -> BREAK . SEMI

    SEMI            shift and go to state 158


state 65

    (171) bcortes -> DEFAULT . SEMI

    SEMI            shift and go to state 159


state 66

    (172) bcortes -> CONTINUE . SEMI

    SEMI            shift and go to state 160


state 67

    (145) brand -> RAND . LPAREN ENTERO COMMA ENTERO RPAREN SEMI

    LPAREN          shift and go to state 161


state 68

    (164) escribir -> FWRITE . LPAREN NOMBRE COMMA CADENA RPAREN SEMI

    LPAREN          shift and go to state 162


state 69

    (165) btrim -> TRIM . LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 163


state 70

    (173) otros -> SMALLER . NOMBRE GREATER

    NOMBRE          shift and go to state 164


state 71

    (150) breturn -> empty .

    $end            reduce using rule 150 (breturn -> empty .)
    RBRACE          reduce using rule 150 (breturn -> empty .)
    SEMI            reduce using rule 150 (breturn -> empty .)
    BREAK           reduce using rule 150 (breturn -> empty .)


state 72

    (151) breturn -> RETURN . SEMI
    (152) breturn -> RETURN . NULL SEMI
    (153) breturn -> RETURN . VARIABLE SEMI
    (154) breturn -> RETURN . BOOLEANO SEMI

    SEMI            shift and go to state 165
    NULL            shift and go to state 166
    VARIABLE        shift and go to state 167
    BOOLEANO        shift and go to state 168


state 73

    (166) comment -> COMENTARIOS .

    $end            reduce using rule 166 (comment -> COMENTARIOS .)
    RBRACE          reduce using rule 166 (comment -> COMENTARIOS .)
    SEMI            reduce using rule 166 (comment -> COMENTARIOS .)
    BREAK           reduce using rule 166 (comment -> COMENTARIOS .)


state 74

    (167) comment -> DOC_COMENTARIOS .

    $end            reduce using rule 167 (comment -> DOC_COMENTARIOS .)
    RBRACE          reduce using rule 167 (comment -> DOC_COMENTARIOS .)
    SEMI            reduce using rule 167 (comment -> DOC_COMENTARIOS .)
    BREAK           reduce using rule 167 (comment -> DOC_COMENTARIOS .)


state 75

    (186) simbolos -> OPEN_TAG . CLOSE_TAG
    (187) simbolos -> OPEN_TAG .

    CLOSE_TAG       shift and go to state 169
    $end            reduce using rule 187 (simbolos -> OPEN_TAG .)
    RBRACE          reduce using rule 187 (simbolos -> OPEN_TAG .)
    SEMI            reduce using rule 187 (simbolos -> OPEN_TAG .)
    BREAK           reduce using rule 187 (simbolos -> OPEN_TAG .)


state 76

    (188) simbolos -> CLOSE_TAG .

    $end            reduce using rule 188 (simbolos -> CLOSE_TAG .)
    RBRACE          reduce using rule 188 (simbolos -> CLOSE_TAG .)
    SEMI            reduce using rule 188 (simbolos -> CLOSE_TAG .)
    BREAK           reduce using rule 188 (simbolos -> CLOSE_TAG .)


state 77

    (146) proteccion -> PUBLIC .

    VARIABLE        reduce using rule 146 (proteccion -> PUBLIC .)
    VAR             reduce using rule 146 (proteccion -> PUBLIC .)
    FUNCTION        reduce using rule 146 (proteccion -> PUBLIC .)
    PUBLIC          reduce using rule 146 (proteccion -> PUBLIC .)
    PRIVATE         reduce using rule 146 (proteccion -> PUBLIC .)
    PROTECTED       reduce using rule 146 (proteccion -> PUBLIC .)
    STATIC          reduce using rule 146 (proteccion -> PUBLIC .)


state 78

    (147) proteccion -> PRIVATE .

    VARIABLE        reduce using rule 147 (proteccion -> PRIVATE .)
    VAR             reduce using rule 147 (proteccion -> PRIVATE .)
    FUNCTION        reduce using rule 147 (proteccion -> PRIVATE .)
    PUBLIC          reduce using rule 147 (proteccion -> PRIVATE .)
    PRIVATE         reduce using rule 147 (proteccion -> PRIVATE .)
    PROTECTED       reduce using rule 147 (proteccion -> PRIVATE .)
    STATIC          reduce using rule 147 (proteccion -> PRIVATE .)


state 79

    (148) proteccion -> PROTECTED .

    VARIABLE        reduce using rule 148 (proteccion -> PROTECTED .)
    VAR             reduce using rule 148 (proteccion -> PROTECTED .)
    FUNCTION        reduce using rule 148 (proteccion -> PROTECTED .)
    PUBLIC          reduce using rule 148 (proteccion -> PROTECTED .)
    PRIVATE         reduce using rule 148 (proteccion -> PROTECTED .)
    PROTECTED       reduce using rule 148 (proteccion -> PROTECTED .)
    STATIC          reduce using rule 148 (proteccion -> PROTECTED .)


state 80

    (149) proteccion -> STATIC .

    VARIABLE        reduce using rule 149 (proteccion -> STATIC .)
    VAR             reduce using rule 149 (proteccion -> STATIC .)
    FUNCTION        reduce using rule 149 (proteccion -> STATIC .)
    PUBLIC          reduce using rule 149 (proteccion -> STATIC .)
    PRIVATE         reduce using rule 149 (proteccion -> STATIC .)
    PROTECTED       reduce using rule 149 (proteccion -> STATIC .)
    STATIC          reduce using rule 149 (proteccion -> STATIC .)


state 81

    (138) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (141) funcion_void -> FUNCTION . NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    NOMBRE          shift and go to state 170


state 82

    (61) condicion_if -> IF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 171


state 83

    (53) imprimir -> ECHO valor . SEMI
    (123) operaciones_mat -> valor . operadores valor
    (124) operaciones_mat -> valor . operadores operaciones_mat
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    SEMI            shift and go to state 172
    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 173

state 84

    (57) imprimir -> ECHO NOMBRE . LBRACKET ENTERO RBRACKET SEMI

    LBRACKET        shift and go to state 179


state 85

    (51) numero -> ENTERO .

    SEMI            reduce using rule 51 (numero -> ENTERO .)
    SUMA            reduce using rule 51 (numero -> ENTERO .)
    RESTA           reduce using rule 51 (numero -> ENTERO .)
    MULTIPLICACION  reduce using rule 51 (numero -> ENTERO .)
    DIVISION        reduce using rule 51 (numero -> ENTERO .)
    MODULO          reduce using rule 51 (numero -> ENTERO .)
    RPAREN          reduce using rule 51 (numero -> ENTERO .)
    SMALLER         reduce using rule 51 (numero -> ENTERO .)
    GREATER         reduce using rule 51 (numero -> ENTERO .)
    IS_SMALLER_OR_EQUAL reduce using rule 51 (numero -> ENTERO .)
    IS_GREATER_OR_EQUAL reduce using rule 51 (numero -> ENTERO .)
    AND             reduce using rule 51 (numero -> ENTERO .)
    OR              reduce using rule 51 (numero -> ENTERO .)
    XOR             reduce using rule 51 (numero -> ENTERO .)
    IS_EQUAL        reduce using rule 51 (numero -> ENTERO .)
    IS_NOT_EQUAL    reduce using rule 51 (numero -> ENTERO .)
    IS_IDENTICAL    reduce using rule 51 (numero -> ENTERO .)
    IS_NOT_IDENTICAL reduce using rule 51 (numero -> ENTERO .)
    COMMA           reduce using rule 51 (numero -> ENTERO .)


state 86

    (58) imprimir -> ECHO bconcat .

    $end            reduce using rule 58 (imprimir -> ECHO bconcat .)
    RBRACE          reduce using rule 58 (imprimir -> ECHO bconcat .)
    SEMI            reduce using rule 58 (imprimir -> ECHO bconcat .)
    BREAK           reduce using rule 58 (imprimir -> ECHO bconcat .)


state 87

    (59) imprimir -> ECHO operaciones_mat . SEMI

    SEMI            shift and go to state 180


state 88

    (45) valor -> tipoDato .

    SEMI            reduce using rule 45 (valor -> tipoDato .)
    SUMA            reduce using rule 45 (valor -> tipoDato .)
    RESTA           reduce using rule 45 (valor -> tipoDato .)
    MULTIPLICACION  reduce using rule 45 (valor -> tipoDato .)
    DIVISION        reduce using rule 45 (valor -> tipoDato .)
    MODULO          reduce using rule 45 (valor -> tipoDato .)
    RPAREN          reduce using rule 45 (valor -> tipoDato .)
    SMALLER         reduce using rule 45 (valor -> tipoDato .)
    GREATER         reduce using rule 45 (valor -> tipoDato .)
    IS_SMALLER_OR_EQUAL reduce using rule 45 (valor -> tipoDato .)
    IS_GREATER_OR_EQUAL reduce using rule 45 (valor -> tipoDato .)
    AND             reduce using rule 45 (valor -> tipoDato .)
    OR              reduce using rule 45 (valor -> tipoDato .)
    XOR             reduce using rule 45 (valor -> tipoDato .)
    IS_EQUAL        reduce using rule 45 (valor -> tipoDato .)
    IS_NOT_EQUAL    reduce using rule 45 (valor -> tipoDato .)
    IS_IDENTICAL    reduce using rule 45 (valor -> tipoDato .)
    IS_NOT_IDENTICAL reduce using rule 45 (valor -> tipoDato .)
    COMMA           reduce using rule 45 (valor -> tipoDato .)


state 89

    (46) valor -> bcolas .

    SEMI            reduce using rule 46 (valor -> bcolas .)
    SUMA            reduce using rule 46 (valor -> bcolas .)
    RESTA           reduce using rule 46 (valor -> bcolas .)
    MULTIPLICACION  reduce using rule 46 (valor -> bcolas .)
    DIVISION        reduce using rule 46 (valor -> bcolas .)
    MODULO          reduce using rule 46 (valor -> bcolas .)
    RPAREN          reduce using rule 46 (valor -> bcolas .)
    SMALLER         reduce using rule 46 (valor -> bcolas .)
    GREATER         reduce using rule 46 (valor -> bcolas .)
    IS_SMALLER_OR_EQUAL reduce using rule 46 (valor -> bcolas .)
    IS_GREATER_OR_EQUAL reduce using rule 46 (valor -> bcolas .)
    AND             reduce using rule 46 (valor -> bcolas .)
    OR              reduce using rule 46 (valor -> bcolas .)
    XOR             reduce using rule 46 (valor -> bcolas .)
    IS_EQUAL        reduce using rule 46 (valor -> bcolas .)
    IS_NOT_EQUAL    reduce using rule 46 (valor -> bcolas .)
    IS_IDENTICAL    reduce using rule 46 (valor -> bcolas .)
    IS_NOT_IDENTICAL reduce using rule 46 (valor -> bcolas .)
    COMMA           reduce using rule 46 (valor -> bcolas .)


state 90

    (47) valor -> bpila .

    SEMI            reduce using rule 47 (valor -> bpila .)
    SUMA            reduce using rule 47 (valor -> bpila .)
    RESTA           reduce using rule 47 (valor -> bpila .)
    MULTIPLICACION  reduce using rule 47 (valor -> bpila .)
    DIVISION        reduce using rule 47 (valor -> bpila .)
    MODULO          reduce using rule 47 (valor -> bpila .)
    RPAREN          reduce using rule 47 (valor -> bpila .)
    SMALLER         reduce using rule 47 (valor -> bpila .)
    GREATER         reduce using rule 47 (valor -> bpila .)
    IS_SMALLER_OR_EQUAL reduce using rule 47 (valor -> bpila .)
    IS_GREATER_OR_EQUAL reduce using rule 47 (valor -> bpila .)
    AND             reduce using rule 47 (valor -> bpila .)
    OR              reduce using rule 47 (valor -> bpila .)
    XOR             reduce using rule 47 (valor -> bpila .)
    IS_EQUAL        reduce using rule 47 (valor -> bpila .)
    IS_NOT_EQUAL    reduce using rule 47 (valor -> bpila .)
    IS_IDENTICAL    reduce using rule 47 (valor -> bpila .)
    IS_NOT_IDENTICAL reduce using rule 47 (valor -> bpila .)
    COMMA           reduce using rule 47 (valor -> bpila .)


state 91

    (193) bconcat -> CADENA . CONCAT CADENA SEMI
    (197) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI
    (49) tipoDato -> CADENA .

    CONCAT          shift and go to state 135
    CONCAT_EQUAL    shift and go to state 136
    SEMI            reduce using rule 49 (tipoDato -> CADENA .)
    SUMA            reduce using rule 49 (tipoDato -> CADENA .)
    RESTA           reduce using rule 49 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 49 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 49 (tipoDato -> CADENA .)
    MODULO          reduce using rule 49 (tipoDato -> CADENA .)


state 92

    (194) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (195) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (196) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (125) operaciones_mat -> VARIABLE . operadores VARIABLE
    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    CONCAT          shift and go to state 119
    CONCAT_EQUAL    shift and go to state 120
    EQUALS          shift and go to state 182
    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 181

state 93

    (126) operaciones_mat -> operaciones_mat_par .

    SEMI            reduce using rule 126 (operaciones_mat -> operaciones_mat_par .)


state 94

    (48) tipoDato -> numero .

    SEMI            reduce using rule 48 (tipoDato -> numero .)
    SUMA            reduce using rule 48 (tipoDato -> numero .)
    RESTA           reduce using rule 48 (tipoDato -> numero .)
    MULTIPLICACION  reduce using rule 48 (tipoDato -> numero .)
    DIVISION        reduce using rule 48 (tipoDato -> numero .)
    MODULO          reduce using rule 48 (tipoDato -> numero .)
    RPAREN          reduce using rule 48 (tipoDato -> numero .)
    SMALLER         reduce using rule 48 (tipoDato -> numero .)
    GREATER         reduce using rule 48 (tipoDato -> numero .)
    IS_SMALLER_OR_EQUAL reduce using rule 48 (tipoDato -> numero .)
    IS_GREATER_OR_EQUAL reduce using rule 48 (tipoDato -> numero .)
    AND             reduce using rule 48 (tipoDato -> numero .)
    OR              reduce using rule 48 (tipoDato -> numero .)
    XOR             reduce using rule 48 (tipoDato -> numero .)
    IS_EQUAL        reduce using rule 48 (tipoDato -> numero .)
    IS_NOT_EQUAL    reduce using rule 48 (tipoDato -> numero .)
    IS_IDENTICAL    reduce using rule 48 (tipoDato -> numero .)
    IS_NOT_IDENTICAL reduce using rule 48 (tipoDato -> numero .)
    COMMA           reduce using rule 48 (tipoDato -> numero .)


state 95

    (50) tipoDato -> BOOLEANO .

    SEMI            reduce using rule 50 (tipoDato -> BOOLEANO .)
    SUMA            reduce using rule 50 (tipoDato -> BOOLEANO .)
    RESTA           reduce using rule 50 (tipoDato -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 50 (tipoDato -> BOOLEANO .)
    DIVISION        reduce using rule 50 (tipoDato -> BOOLEANO .)
    MODULO          reduce using rule 50 (tipoDato -> BOOLEANO .)
    RPAREN          reduce using rule 50 (tipoDato -> BOOLEANO .)
    SMALLER         reduce using rule 50 (tipoDato -> BOOLEANO .)
    GREATER         reduce using rule 50 (tipoDato -> BOOLEANO .)
    IS_SMALLER_OR_EQUAL reduce using rule 50 (tipoDato -> BOOLEANO .)
    IS_GREATER_OR_EQUAL reduce using rule 50 (tipoDato -> BOOLEANO .)
    AND             reduce using rule 50 (tipoDato -> BOOLEANO .)
    OR              reduce using rule 50 (tipoDato -> BOOLEANO .)
    XOR             reduce using rule 50 (tipoDato -> BOOLEANO .)
    IS_EQUAL        reduce using rule 50 (tipoDato -> BOOLEANO .)
    IS_NOT_EQUAL    reduce using rule 50 (tipoDato -> BOOLEANO .)
    IS_IDENTICAL    reduce using rule 50 (tipoDato -> BOOLEANO .)
    IS_NOT_IDENTICAL reduce using rule 50 (tipoDato -> BOOLEANO .)
    COMMA           reduce using rule 50 (tipoDato -> BOOLEANO .)


state 96

    (127) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (128) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (129) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (130) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 184
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 183
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 97

    (52) numero -> DECIMAL .

    SEMI            reduce using rule 52 (numero -> DECIMAL .)
    SUMA            reduce using rule 52 (numero -> DECIMAL .)
    RESTA           reduce using rule 52 (numero -> DECIMAL .)
    MULTIPLICACION  reduce using rule 52 (numero -> DECIMAL .)
    DIVISION        reduce using rule 52 (numero -> DECIMAL .)
    MODULO          reduce using rule 52 (numero -> DECIMAL .)
    RPAREN          reduce using rule 52 (numero -> DECIMAL .)
    SMALLER         reduce using rule 52 (numero -> DECIMAL .)
    GREATER         reduce using rule 52 (numero -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 52 (numero -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 52 (numero -> DECIMAL .)
    AND             reduce using rule 52 (numero -> DECIMAL .)
    OR              reduce using rule 52 (numero -> DECIMAL .)
    XOR             reduce using rule 52 (numero -> DECIMAL .)
    IS_EQUAL        reduce using rule 52 (numero -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 52 (numero -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 52 (numero -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 52 (numero -> DECIMAL .)
    COMMA           reduce using rule 52 (numero -> DECIMAL .)


state 98

    (54) imprimir -> PRINT valor . SEMI
    (123) operaciones_mat -> valor . operadores valor
    (124) operaciones_mat -> valor . operadores operaciones_mat
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    SEMI            shift and go to state 186
    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 173

state 99

    (55) imprimir -> PRINT LPAREN . valor RPAREN SEMI
    (127) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (128) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (129) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (130) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 184
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 187
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 100

    (56) imprimir -> PRINT bconcat .

    $end            reduce using rule 56 (imprimir -> PRINT bconcat .)
    RBRACE          reduce using rule 56 (imprimir -> PRINT bconcat .)
    SEMI            reduce using rule 56 (imprimir -> PRINT bconcat .)
    BREAK           reduce using rule 56 (imprimir -> PRINT bconcat .)


state 101

    (60) imprimir -> PRINT operaciones_mat . SEMI

    SEMI            shift and go to state 188


state 102

    (208) casting -> LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 189


state 103

    (177) simbolos -> LPAREN RPAREN .

    $end            reduce using rule 177 (simbolos -> LPAREN RPAREN .)
    RBRACE          reduce using rule 177 (simbolos -> LPAREN RPAREN .)
    SEMI            reduce using rule 177 (simbolos -> LPAREN RPAREN .)
    BREAK           reduce using rule 177 (simbolos -> LPAREN RPAREN .)


state 104

    (198) tiposCast -> STRING .

    RPAREN          reduce using rule 198 (tiposCast -> STRING .)


state 105

    (199) tiposCast -> BOOL .

    RPAREN          reduce using rule 199 (tiposCast -> BOOL .)


state 106

    (200) tiposCast -> BOOLEAN .

    RPAREN          reduce using rule 200 (tiposCast -> BOOLEAN .)


state 107

    (201) tiposCast -> DOUBLE .

    RPAREN          reduce using rule 201 (tiposCast -> DOUBLE .)


state 108

    (202) tiposCast -> FLOAT .

    RPAREN          reduce using rule 202 (tiposCast -> FLOAT .)


state 109

    (203) tiposCast -> ARRAY .

    RPAREN          reduce using rule 203 (tiposCast -> ARRAY .)


state 110

    (204) tiposCast -> OBJECT .

    RPAREN          reduce using rule 204 (tiposCast -> OBJECT .)


state 111

    (205) tiposCast -> INTEGER .

    RPAREN          reduce using rule 205 (tiposCast -> INTEGER .)


state 112

    (206) tiposCast -> INT .

    RPAREN          reduce using rule 206 (tiposCast -> INT .)


state 113

    (144) llamada_funcion -> NOMBRE LPAREN . params_list RPAREN SEMI
    (139) params_list -> . params_list COMMA param
    (140) params_list -> . param
    (136) param -> . VARIABLE
    (137) param -> . asignacion
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 192
    VAR             shift and go to state 40
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80

    params_list                    shift and go to state 190
    param                          shift and go to state 191
    asignacion                     shift and go to state 193
    proteccion                     shift and go to state 129
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43

state 114

    (174) otros -> NOMBRE COLON .

    $end            reduce using rule 174 (otros -> NOMBRE COLON .)
    RBRACE          reduce using rule 174 (otros -> NOMBRE COLON .)
    SEMI            reduce using rule 174 (otros -> NOMBRE COLON .)
    BREAK           reduce using rule 174 (otros -> NOMBRE COLON .)


state 115

    (180) simbolos -> LBRACKET RBRACKET .

    $end            reduce using rule 180 (simbolos -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 180 (simbolos -> LBRACKET RBRACKET .)
    SEMI            reduce using rule 180 (simbolos -> LBRACKET RBRACKET .)
    BREAK           reduce using rule 180 (simbolos -> LBRACKET RBRACKET .)


state 116

    (31) asignacion -> VARIABLE EQUALS . valor SEMI
    (34) asignacion -> VARIABLE EQUALS . brand
    (35) asignacion -> VARIABLE EQUALS . escribir
    (36) asignacion -> VARIABLE EQUALS . btrim
    (37) asignacion -> VARIABLE EQUALS . lectura
    (38) asignacion -> VARIABLE EQUALS . bconcat
    (40) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (160) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI
    (207) casting -> VARIABLE EQUALS . LPAREN tiposCast RPAREN VARIABLE SEMI
    (42) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (210) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (145) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (164) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (165) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (162) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (163) lectura -> . READLINE LPAREN RPAREN SEMI
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (123) operaciones_mat -> . valor operadores valor
    (124) operaciones_mat -> . valor operadores operaciones_mat
    (125) operaciones_mat -> . VARIABLE operadores VARIABLE
    (126) operaciones_mat -> . operaciones_mat_par
    (155) array_def -> . ARRAY LPAREN RPAREN
    (156) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (127) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (128) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (129) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (130) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    NEW             shift and go to state 202
    LPAREN          shift and go to state 203
    VARIABLE        shift and go to state 194
    RAND            shift and go to state 67
    FWRITE          shift and go to state 68
    TRIM            shift and go to state 69
    READLINE        shift and go to state 49
    CADENA          shift and go to state 91
    ARRAY           shift and go to state 205
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 195
    brand                          shift and go to state 196
    escribir                       shift and go to state 197
    btrim                          shift and go to state 198
    lectura                        shift and go to state 199
    bconcat                        shift and go to state 200
    operaciones_mat                shift and go to state 201
    array_def                      shift and go to state 204
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    operaciones_mat_par            shift and go to state 93
    numero                         shift and go to state 94

state 117

    (88) incrementOp -> VARIABLE SUMA . SUMA SEMI

    SUMA            shift and go to state 206


state 118

    (89) incrementOp -> VARIABLE RESTA . RESTA SEMI

    RESTA           shift and go to state 207


state 119

    (194) bconcat -> VARIABLE CONCAT . VARIABLE SEMI
    (195) bconcat -> VARIABLE CONCAT . CADENA SEMI

    VARIABLE        shift and go to state 208
    CADENA          shift and go to state 209


state 120

    (196) bconcat -> VARIABLE CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 210


state 121

    (209) aumentoCasting -> VARIABLE incrementos_mat . tipoDato SEMI
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    tipoDato                       shift and go to state 211
    numero                         shift and go to state 94

state 122

    (111) incrementos_mat -> MINUS_EQUAL .

    CADENA          reduce using rule 111 (incrementos_mat -> MINUS_EQUAL .)
    BOOLEANO        reduce using rule 111 (incrementos_mat -> MINUS_EQUAL .)
    ENTERO          reduce using rule 111 (incrementos_mat -> MINUS_EQUAL .)
    DECIMAL         reduce using rule 111 (incrementos_mat -> MINUS_EQUAL .)


state 123

    (112) incrementos_mat -> MOD_EQUAL .

    CADENA          reduce using rule 112 (incrementos_mat -> MOD_EQUAL .)
    BOOLEANO        reduce using rule 112 (incrementos_mat -> MOD_EQUAL .)
    ENTERO          reduce using rule 112 (incrementos_mat -> MOD_EQUAL .)
    DECIMAL         reduce using rule 112 (incrementos_mat -> MOD_EQUAL .)


state 124

    (113) incrementos_mat -> MUL_EQUAL .

    CADENA          reduce using rule 113 (incrementos_mat -> MUL_EQUAL .)
    BOOLEANO        reduce using rule 113 (incrementos_mat -> MUL_EQUAL .)
    ENTERO          reduce using rule 113 (incrementos_mat -> MUL_EQUAL .)
    DECIMAL         reduce using rule 113 (incrementos_mat -> MUL_EQUAL .)


state 125

    (114) incrementos_mat -> PLUS_EQUAL .

    CADENA          reduce using rule 114 (incrementos_mat -> PLUS_EQUAL .)
    BOOLEANO        reduce using rule 114 (incrementos_mat -> PLUS_EQUAL .)
    ENTERO          reduce using rule 114 (incrementos_mat -> PLUS_EQUAL .)
    DECIMAL         reduce using rule 114 (incrementos_mat -> PLUS_EQUAL .)


state 126

    (115) incrementos_mat -> DIV_EQUAL .

    CADENA          reduce using rule 115 (incrementos_mat -> DIV_EQUAL .)
    BOOLEANO        reduce using rule 115 (incrementos_mat -> DIV_EQUAL .)
    ENTERO          reduce using rule 115 (incrementos_mat -> DIV_EQUAL .)
    DECIMAL         reduce using rule 115 (incrementos_mat -> DIV_EQUAL .)


state 127

    (32) asignacion -> VAR asignacion .

    $end            reduce using rule 32 (asignacion -> VAR asignacion .)
    RBRACE          reduce using rule 32 (asignacion -> VAR asignacion .)
    SEMI            reduce using rule 32 (asignacion -> VAR asignacion .)
    BREAK           reduce using rule 32 (asignacion -> VAR asignacion .)
    RPAREN          reduce using rule 32 (asignacion -> VAR asignacion .)
    COMMA           reduce using rule 32 (asignacion -> VAR asignacion .)
    VARIABLE        reduce using rule 32 (asignacion -> VAR asignacion .)
    LPAREN          reduce using rule 32 (asignacion -> VAR asignacion .)
    CADENA          reduce using rule 32 (asignacion -> VAR asignacion .)
    BOOLEANO        reduce using rule 32 (asignacion -> VAR asignacion .)
    ENTERO          reduce using rule 32 (asignacion -> VAR asignacion .)
    DECIMAL         reduce using rule 32 (asignacion -> VAR asignacion .)


state 128

    (31) asignacion -> VARIABLE . EQUALS valor SEMI
    (34) asignacion -> VARIABLE . EQUALS brand
    (35) asignacion -> VARIABLE . EQUALS escribir
    (36) asignacion -> VARIABLE . EQUALS btrim
    (37) asignacion -> VARIABLE . EQUALS lectura
    (38) asignacion -> VARIABLE . EQUALS bconcat
    (40) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (42) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (209) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (111) incrementos_mat -> . MINUS_EQUAL
    (112) incrementos_mat -> . MOD_EQUAL
    (113) incrementos_mat -> . MUL_EQUAL
    (114) incrementos_mat -> . PLUS_EQUAL
    (115) incrementos_mat -> . DIV_EQUAL

    EQUALS          shift and go to state 212
    MINUS_EQUAL     shift and go to state 122
    MOD_EQUAL       shift and go to state 123
    MUL_EQUAL       shift and go to state 124
    PLUS_EQUAL      shift and go to state 125
    DIV_EQUAL       shift and go to state 126

    incrementos_mat                shift and go to state 121

state 129

    (33) asignacion -> proteccion . asignacion
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 128
    VAR             shift and go to state 40
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80

    proteccion                     shift and go to state 129
    asignacion                     shift and go to state 130
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43

state 130

    (33) asignacion -> proteccion asignacion .

    $end            reduce using rule 33 (asignacion -> proteccion asignacion .)
    RBRACE          reduce using rule 33 (asignacion -> proteccion asignacion .)
    SEMI            reduce using rule 33 (asignacion -> proteccion asignacion .)
    BREAK           reduce using rule 33 (asignacion -> proteccion asignacion .)
    RPAREN          reduce using rule 33 (asignacion -> proteccion asignacion .)
    COMMA           reduce using rule 33 (asignacion -> proteccion asignacion .)
    VARIABLE        reduce using rule 33 (asignacion -> proteccion asignacion .)
    LPAREN          reduce using rule 33 (asignacion -> proteccion asignacion .)
    CADENA          reduce using rule 33 (asignacion -> proteccion asignacion .)
    BOOLEANO        reduce using rule 33 (asignacion -> proteccion asignacion .)
    ENTERO          reduce using rule 33 (asignacion -> proteccion asignacion .)
    DECIMAL         reduce using rule 33 (asignacion -> proteccion asignacion .)


state 131

    (132) funciones -> proteccion funcion_nparams .

    $end            reduce using rule 132 (funciones -> proteccion funcion_nparams .)
    RBRACE          reduce using rule 132 (funciones -> proteccion funcion_nparams .)
    SEMI            reduce using rule 132 (funciones -> proteccion funcion_nparams .)
    BREAK           reduce using rule 132 (funciones -> proteccion funcion_nparams .)


state 132

    (134) funciones -> proteccion funcion_blank .

    $end            reduce using rule 134 (funciones -> proteccion funcion_blank .)
    RBRACE          reduce using rule 134 (funciones -> proteccion funcion_blank .)
    SEMI            reduce using rule 134 (funciones -> proteccion funcion_blank .)
    BREAK           reduce using rule 134 (funciones -> proteccion funcion_blank .)


state 133

    (138) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE

    NOMBRE          shift and go to state 213


state 134

    (43) constante -> DEFINE LPAREN . CADENA COMMA valor RPAREN SEMI
    (44) constante -> DEFINE LPAREN . NOMBRE COMMA ARRAY RPAREN SEMI

    CADENA          shift and go to state 214
    NOMBRE          shift and go to state 215


state 135

    (193) bconcat -> CADENA CONCAT . CADENA SEMI

    CADENA          shift and go to state 216


state 136

    (197) bconcat -> CADENA CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 217


state 137

    (162) lectura -> READLINE LPAREN . CADENA RPAREN SEMI
    (163) lectura -> READLINE LPAREN . RPAREN SEMI

    CADENA          shift and go to state 218
    RPAREN          shift and go to state 219


state 138

    (91) bwhile -> WHILE LPAREN . condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> WHILE LPAREN . condicion RPAREN COLON stc_bloque
    (68) condicion -> . VARIABLE operador_logico VARIABLE
    (69) condicion -> . valor operador_logico valor
    (70) condicion -> . VARIABLE operador_logico valor
    (71) condicion -> . VARIABLE condicion_booleana VARIABLE
    (72) condicion -> . valor condicion_booleana valor
    (73) condicion -> . VARIABLE condicion_booleana valor
    (74) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (75) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (76) condicion -> . condicion condicion_booleana condicion
    (77) condicion -> . condicion condicion_booleana comprobacion
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 222
    LPAREN          shift and go to state 220
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    condicion                      shift and go to state 221
    valor                          shift and go to state 223
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 139

    (183) simbolos -> LBRACE RBRACE .

    $end            reduce using rule 183 (simbolos -> LBRACE RBRACE .)
    RBRACE          reduce using rule 183 (simbolos -> LBRACE RBRACE .)
    SEMI            reduce using rule 183 (simbolos -> LBRACE RBRACE .)
    BREAK           reduce using rule 183 (simbolos -> LBRACE RBRACE .)


state 140

    (185) simbolos -> RBRACE instrucciones .

    $end            reduce using rule 185 (simbolos -> RBRACE instrucciones .)
    RBRACE          reduce using rule 185 (simbolos -> RBRACE instrucciones .)
    SEMI            reduce using rule 185 (simbolos -> RBRACE instrucciones .)
    BREAK           reduce using rule 185 (simbolos -> RBRACE instrucciones .)


state 141

    (189) instrucciones -> condicion_else .

    RBRACE          reduce using rule 189 (instrucciones -> condicion_else .)
    SEMI            reduce using rule 189 (instrucciones -> condicion_else .)
    $end            reduce using rule 189 (instrucciones -> condicion_else .)
    BREAK           reduce using rule 189 (instrucciones -> condicion_else .)


state 142

    (190) instrucciones -> condicion_elseif .

    RBRACE          reduce using rule 190 (instrucciones -> condicion_elseif .)
    SEMI            reduce using rule 190 (instrucciones -> condicion_elseif .)
    $end            reduce using rule 190 (instrucciones -> condicion_elseif .)
    BREAK           reduce using rule 190 (instrucciones -> condicion_elseif .)


state 143

    (191) instrucciones -> bwhile .

    RBRACE          reduce using rule 191 (instrucciones -> bwhile .)
    SEMI            reduce using rule 191 (instrucciones -> bwhile .)
    $end            reduce using rule 191 (instrucciones -> bwhile .)
    BREAK           reduce using rule 191 (instrucciones -> bwhile .)


state 144

    (192) instrucciones -> bfor .

    RBRACE          reduce using rule 192 (instrucciones -> bfor .)
    SEMI            reduce using rule 192 (instrucciones -> bfor .)
    $end            reduce using rule 192 (instrucciones -> bfor .)
    BREAK           reduce using rule 192 (instrucciones -> bfor .)


state 145

    (93) bdo -> DO LBRACE . cuerpo RBRACE bwhile
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . incrementOp
    (11) cuerpo -> . bforeach
    (12) cuerpo -> . btry
    (13) cuerpo -> . condicion_ifelse
    (14) cuerpo -> . condicion_else
    (15) cuerpo -> . condicion_elseif
    (16) cuerpo -> . bswitch
    (17) cuerpo -> . bcase
    (18) cuerpo -> . bgoto
    (19) cuerpo -> . bcolas
    (20) cuerpo -> . bpila
    (21) cuerpo -> . bcortes
    (22) cuerpo -> . brand
    (23) cuerpo -> . escribir
    (24) cuerpo -> . btrim
    (25) cuerpo -> . otros
    (26) cuerpo -> . breturn
    (27) cuerpo -> . comment
    (28) cuerpo -> . casting
    (29) cuerpo -> . bconcat
    (30) cuerpo -> . simbolos
    (53) imprimir -> . ECHO valor SEMI
    (54) imprimir -> . PRINT valor SEMI
    (55) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (56) imprimir -> . PRINT bconcat
    (57) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (58) imprimir -> . ECHO bconcat
    (59) imprimir -> . ECHO operaciones_mat SEMI
    (60) imprimir -> . PRINT operaciones_mat SEMI
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (131) funciones -> . funcion_nparams
    (132) funciones -> . proteccion funcion_nparams
    (133) funciones -> . funcion_blank
    (134) funciones -> . proteccion funcion_blank
    (135) funciones -> . funcion_void
    (144) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (43) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (44) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (162) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (163) lectura -> . READLINE LPAREN RPAREN SEMI
    (91) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (93) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (78) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (88) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (89) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (90) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (99) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (64) condicion_ifelse -> . condicion_if
    (65) condicion_ifelse -> . condicion_if condicion_else
    (66) condicion_ifelse -> . condicion_if condicion_elseif
    (67) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (63) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (62) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (94) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (95) bcase -> . CASE ENTERO COLON
    (96) bcase -> . CASE CADENA COLON
    (168) bgoto -> . GOTO NOMBRE SEMI
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (169) bcortes -> . EXIT SEMI
    (170) bcortes -> . BREAK SEMI
    (171) bcortes -> . DEFAULT SEMI
    (172) bcortes -> . CONTINUE SEMI
    (145) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (164) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (165) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (173) otros -> . SMALLER NOMBRE GREATER
    (174) otros -> . NOMBRE COLON
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI
    (166) comment -> . COMENTARIOS
    (167) comment -> . DOC_COMENTARIOS
    (207) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (177) simbolos -> . LPAREN RPAREN
    (178) simbolos -> . LPAREN
    (179) simbolos -> . RPAREN
    (180) simbolos -> . LBRACKET RBRACKET
    (181) simbolos -> . LBRACKET
    (182) simbolos -> . RBRACKET
    (183) simbolos -> . LBRACE RBRACE
    (184) simbolos -> . LBRACE
    (185) simbolos -> . RBRACE instrucciones
    (186) simbolos -> . OPEN_TAG CLOSE_TAG
    (187) simbolos -> . OPEN_TAG
    (188) simbolos -> . CLOSE_TAG
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (138) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (141) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (61) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (159) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 32
    PRINT           shift and go to state 33
    VARIABLE        shift and go to state 39
    VAR             shift and go to state 40
    NOMBRE          shift and go to state 36
    DEFINE          shift and go to state 47
    READLINE        shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 53
    FOR             shift and go to state 54
    FOREACH         shift and go to state 55
    TRY             shift and go to state 56
    ELSE            shift and go to state 58
    ELSEIF          shift and go to state 59
    SWITCH          shift and go to state 60
    CASE            shift and go to state 61
    GOTO            shift and go to state 62
    EXIT            shift and go to state 63
    BREAK           shift and go to state 64
    DEFAULT         shift and go to state 65
    CONTINUE        shift and go to state 66
    RAND            shift and go to state 67
    FWRITE          shift and go to state 68
    TRIM            shift and go to state 69
    SMALLER         shift and go to state 70
    RETURN          shift and go to state 72
    COMENTARIOS     shift and go to state 73
    DOC_COMENTARIOS shift and go to state 74
    LPAREN          shift and go to state 34
    CADENA          shift and go to state 48
    RPAREN          shift and go to state 35
    LBRACKET        shift and go to state 37
    RBRACKET        shift and go to state 38
    LBRACE          shift and go to state 51
    RBRACE          shift and go to state 52
    OPEN_TAG        shift and go to state 75
    CLOSE_TAG       shift and go to state 76
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80
    FUNCTION        shift and go to state 81
    IF              shift and go to state 82

  ! RBRACE          [ reduce using rule 159 (empty -> .) ]

    cuerpo                         shift and go to state 224
    bwhile                         shift and go to state 8
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    incrementOp                    shift and go to state 11
    bforeach                       shift and go to state 12
    btry                           shift and go to state 13
    condicion_ifelse               shift and go to state 14
    condicion_else                 shift and go to state 15
    condicion_elseif               shift and go to state 16
    bswitch                        shift and go to state 17
    bcase                          shift and go to state 18
    bgoto                          shift and go to state 19
    bcolas                         shift and go to state 20
    bpila                          shift and go to state 21
    bcortes                        shift and go to state 22
    brand                          shift and go to state 23
    escribir                       shift and go to state 24
    btrim                          shift and go to state 25
    otros                          shift and go to state 26
    breturn                        shift and go to state 27
    comment                        shift and go to state 28
    casting                        shift and go to state 29
    bconcat                        shift and go to state 30
    simbolos                       shift and go to state 31
    proteccion                     shift and go to state 41
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43
    funcion_nparams                shift and go to state 44
    funcion_blank                  shift and go to state 45
    funcion_void                   shift and go to state 46
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 71

state 146

    (78) bfor -> FOR LPAREN . asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 128
    VAR             shift and go to state 40
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80

    asignacion                     shift and go to state 225
    proteccion                     shift and go to state 129
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43

state 147

    (90) bforeach -> FOREACH LPAREN . VARIABLE AS VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 226


state 148

    (99) btry -> TRY LBRACE . stc_bloque_def RBRACE catches
    (81) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 227

    stc_bloque_def                 shift and go to state 228

state 149

    (65) condicion_ifelse -> condicion_if condicion_else .

    $end            reduce using rule 65 (condicion_ifelse -> condicion_if condicion_else .)
    RBRACE          reduce using rule 65 (condicion_ifelse -> condicion_if condicion_else .)
    SEMI            reduce using rule 65 (condicion_ifelse -> condicion_if condicion_else .)
    BREAK           reduce using rule 65 (condicion_ifelse -> condicion_if condicion_else .)


state 150

    (66) condicion_ifelse -> condicion_if condicion_elseif .
    (67) condicion_ifelse -> condicion_if condicion_elseif . condicion_else
    (63) condicion_else -> . ELSE LBRACE cuerpo RBRACE

    $end            reduce using rule 66 (condicion_ifelse -> condicion_if condicion_elseif .)
    RBRACE          reduce using rule 66 (condicion_ifelse -> condicion_if condicion_elseif .)
    SEMI            reduce using rule 66 (condicion_ifelse -> condicion_if condicion_elseif .)
    BREAK           reduce using rule 66 (condicion_ifelse -> condicion_if condicion_elseif .)
    ELSE            shift and go to state 58

    condicion_else                 shift and go to state 229

state 151

    (63) condicion_else -> ELSE LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . incrementOp
    (11) cuerpo -> . bforeach
    (12) cuerpo -> . btry
    (13) cuerpo -> . condicion_ifelse
    (14) cuerpo -> . condicion_else
    (15) cuerpo -> . condicion_elseif
    (16) cuerpo -> . bswitch
    (17) cuerpo -> . bcase
    (18) cuerpo -> . bgoto
    (19) cuerpo -> . bcolas
    (20) cuerpo -> . bpila
    (21) cuerpo -> . bcortes
    (22) cuerpo -> . brand
    (23) cuerpo -> . escribir
    (24) cuerpo -> . btrim
    (25) cuerpo -> . otros
    (26) cuerpo -> . breturn
    (27) cuerpo -> . comment
    (28) cuerpo -> . casting
    (29) cuerpo -> . bconcat
    (30) cuerpo -> . simbolos
    (53) imprimir -> . ECHO valor SEMI
    (54) imprimir -> . PRINT valor SEMI
    (55) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (56) imprimir -> . PRINT bconcat
    (57) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (58) imprimir -> . ECHO bconcat
    (59) imprimir -> . ECHO operaciones_mat SEMI
    (60) imprimir -> . PRINT operaciones_mat SEMI
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (131) funciones -> . funcion_nparams
    (132) funciones -> . proteccion funcion_nparams
    (133) funciones -> . funcion_blank
    (134) funciones -> . proteccion funcion_blank
    (135) funciones -> . funcion_void
    (144) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (43) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (44) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (162) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (163) lectura -> . READLINE LPAREN RPAREN SEMI
    (91) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (93) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (78) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (88) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (89) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (90) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (99) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (64) condicion_ifelse -> . condicion_if
    (65) condicion_ifelse -> . condicion_if condicion_else
    (66) condicion_ifelse -> . condicion_if condicion_elseif
    (67) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (63) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (62) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (94) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (95) bcase -> . CASE ENTERO COLON
    (96) bcase -> . CASE CADENA COLON
    (168) bgoto -> . GOTO NOMBRE SEMI
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (169) bcortes -> . EXIT SEMI
    (170) bcortes -> . BREAK SEMI
    (171) bcortes -> . DEFAULT SEMI
    (172) bcortes -> . CONTINUE SEMI
    (145) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (164) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (165) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (173) otros -> . SMALLER NOMBRE GREATER
    (174) otros -> . NOMBRE COLON
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI
    (166) comment -> . COMENTARIOS
    (167) comment -> . DOC_COMENTARIOS
    (207) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (177) simbolos -> . LPAREN RPAREN
    (178) simbolos -> . LPAREN
    (179) simbolos -> . RPAREN
    (180) simbolos -> . LBRACKET RBRACKET
    (181) simbolos -> . LBRACKET
    (182) simbolos -> . RBRACKET
    (183) simbolos -> . LBRACE RBRACE
    (184) simbolos -> . LBRACE
    (185) simbolos -> . RBRACE instrucciones
    (186) simbolos -> . OPEN_TAG CLOSE_TAG
    (187) simbolos -> . OPEN_TAG
    (188) simbolos -> . CLOSE_TAG
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (138) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (141) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (61) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (159) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 32
    PRINT           shift and go to state 33
    VARIABLE        shift and go to state 39
    VAR             shift and go to state 40
    NOMBRE          shift and go to state 36
    DEFINE          shift and go to state 47
    READLINE        shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 53
    FOR             shift and go to state 54
    FOREACH         shift and go to state 55
    TRY             shift and go to state 56
    ELSE            shift and go to state 58
    ELSEIF          shift and go to state 59
    SWITCH          shift and go to state 60
    CASE            shift and go to state 61
    GOTO            shift and go to state 62
    EXIT            shift and go to state 63
    BREAK           shift and go to state 64
    DEFAULT         shift and go to state 65
    CONTINUE        shift and go to state 66
    RAND            shift and go to state 67
    FWRITE          shift and go to state 68
    TRIM            shift and go to state 69
    SMALLER         shift and go to state 70
    RETURN          shift and go to state 72
    COMENTARIOS     shift and go to state 73
    DOC_COMENTARIOS shift and go to state 74
    LPAREN          shift and go to state 34
    CADENA          shift and go to state 48
    RPAREN          shift and go to state 35
    LBRACKET        shift and go to state 37
    RBRACKET        shift and go to state 38
    LBRACE          shift and go to state 51
    RBRACE          shift and go to state 52
    OPEN_TAG        shift and go to state 75
    CLOSE_TAG       shift and go to state 76
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80
    FUNCTION        shift and go to state 81
    IF              shift and go to state 82

  ! RBRACE          [ reduce using rule 159 (empty -> .) ]

    cuerpo                         shift and go to state 230
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    incrementOp                    shift and go to state 11
    bforeach                       shift and go to state 12
    btry                           shift and go to state 13
    condicion_ifelse               shift and go to state 14
    condicion_else                 shift and go to state 15
    condicion_elseif               shift and go to state 16
    bswitch                        shift and go to state 17
    bcase                          shift and go to state 18
    bgoto                          shift and go to state 19
    bcolas                         shift and go to state 20
    bpila                          shift and go to state 21
    bcortes                        shift and go to state 22
    brand                          shift and go to state 23
    escribir                       shift and go to state 24
    btrim                          shift and go to state 25
    otros                          shift and go to state 26
    breturn                        shift and go to state 27
    comment                        shift and go to state 28
    casting                        shift and go to state 29
    bconcat                        shift and go to state 30
    simbolos                       shift and go to state 31
    proteccion                     shift and go to state 41
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43
    funcion_nparams                shift and go to state 44
    funcion_blank                  shift and go to state 45
    funcion_void                   shift and go to state 46
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 71

state 152

    (62) condicion_elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (68) condicion -> . VARIABLE operador_logico VARIABLE
    (69) condicion -> . valor operador_logico valor
    (70) condicion -> . VARIABLE operador_logico valor
    (71) condicion -> . VARIABLE condicion_booleana VARIABLE
    (72) condicion -> . valor condicion_booleana valor
    (73) condicion -> . VARIABLE condicion_booleana valor
    (74) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (75) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (76) condicion -> . condicion condicion_booleana condicion
    (77) condicion -> . condicion condicion_booleana comprobacion
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 222
    LPAREN          shift and go to state 220
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    condicion                      shift and go to state 231
    valor                          shift and go to state 223
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 153

    (94) bswitch -> SWITCH LPAREN . VARIABLE RPAREN LBRACE innerSwitch RBRACE

    VARIABLE        shift and go to state 232


state 154

    (95) bcase -> CASE ENTERO . COLON

    COLON           shift and go to state 233


state 155

    (96) bcase -> CASE CADENA . COLON

    COLON           shift and go to state 234


state 156

    (168) bgoto -> GOTO NOMBRE . SEMI

    SEMI            shift and go to state 235


state 157

    (169) bcortes -> EXIT SEMI .

    $end            reduce using rule 169 (bcortes -> EXIT SEMI .)
    RBRACE          reduce using rule 169 (bcortes -> EXIT SEMI .)
    SEMI            reduce using rule 169 (bcortes -> EXIT SEMI .)
    BREAK           reduce using rule 169 (bcortes -> EXIT SEMI .)


state 158

    (170) bcortes -> BREAK SEMI .

    $end            reduce using rule 170 (bcortes -> BREAK SEMI .)
    RBRACE          reduce using rule 170 (bcortes -> BREAK SEMI .)
    SEMI            reduce using rule 170 (bcortes -> BREAK SEMI .)
    BREAK           reduce using rule 170 (bcortes -> BREAK SEMI .)


state 159

    (171) bcortes -> DEFAULT SEMI .

    $end            reduce using rule 171 (bcortes -> DEFAULT SEMI .)
    RBRACE          reduce using rule 171 (bcortes -> DEFAULT SEMI .)
    SEMI            reduce using rule 171 (bcortes -> DEFAULT SEMI .)
    BREAK           reduce using rule 171 (bcortes -> DEFAULT SEMI .)


state 160

    (172) bcortes -> CONTINUE SEMI .

    $end            reduce using rule 172 (bcortes -> CONTINUE SEMI .)
    RBRACE          reduce using rule 172 (bcortes -> CONTINUE SEMI .)
    SEMI            reduce using rule 172 (bcortes -> CONTINUE SEMI .)
    BREAK           reduce using rule 172 (bcortes -> CONTINUE SEMI .)


state 161

    (145) brand -> RAND LPAREN . ENTERO COMMA ENTERO RPAREN SEMI

    ENTERO          shift and go to state 236


state 162

    (164) escribir -> FWRITE LPAREN . NOMBRE COMMA CADENA RPAREN SEMI

    NOMBRE          shift and go to state 237


state 163

    (165) btrim -> TRIM LPAREN . NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 238


state 164

    (173) otros -> SMALLER NOMBRE . GREATER

    GREATER         shift and go to state 239


state 165

    (151) breturn -> RETURN SEMI .

    $end            reduce using rule 151 (breturn -> RETURN SEMI .)
    RBRACE          reduce using rule 151 (breturn -> RETURN SEMI .)
    SEMI            reduce using rule 151 (breturn -> RETURN SEMI .)
    BREAK           reduce using rule 151 (breturn -> RETURN SEMI .)


state 166

    (152) breturn -> RETURN NULL . SEMI

    SEMI            shift and go to state 240


state 167

    (153) breturn -> RETURN VARIABLE . SEMI

    SEMI            shift and go to state 241


state 168

    (154) breturn -> RETURN BOOLEANO . SEMI

    SEMI            shift and go to state 242


state 169

    (186) simbolos -> OPEN_TAG CLOSE_TAG .

    $end            reduce using rule 186 (simbolos -> OPEN_TAG CLOSE_TAG .)
    RBRACE          reduce using rule 186 (simbolos -> OPEN_TAG CLOSE_TAG .)
    SEMI            reduce using rule 186 (simbolos -> OPEN_TAG CLOSE_TAG .)
    BREAK           reduce using rule 186 (simbolos -> OPEN_TAG CLOSE_TAG .)


state 170

    (138) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE
    (141) funcion_void -> FUNCTION NOMBRE . LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    LPAREN          shift and go to state 243


state 171

    (61) condicion_if -> IF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (68) condicion -> . VARIABLE operador_logico VARIABLE
    (69) condicion -> . valor operador_logico valor
    (70) condicion -> . VARIABLE operador_logico valor
    (71) condicion -> . VARIABLE condicion_booleana VARIABLE
    (72) condicion -> . valor condicion_booleana valor
    (73) condicion -> . VARIABLE condicion_booleana valor
    (74) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (75) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (76) condicion -> . condicion condicion_booleana condicion
    (77) condicion -> . condicion condicion_booleana comprobacion
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 222
    LPAREN          shift and go to state 220
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    condicion                      shift and go to state 244
    valor                          shift and go to state 223
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 172

    (53) imprimir -> ECHO valor SEMI .

    $end            reduce using rule 53 (imprimir -> ECHO valor SEMI .)
    RBRACE          reduce using rule 53 (imprimir -> ECHO valor SEMI .)
    SEMI            reduce using rule 53 (imprimir -> ECHO valor SEMI .)
    BREAK           reduce using rule 53 (imprimir -> ECHO valor SEMI .)


state 173

    (123) operaciones_mat -> valor operadores . valor
    (124) operaciones_mat -> valor operadores . operaciones_mat
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (123) operaciones_mat -> . valor operadores valor
    (124) operaciones_mat -> . valor operadores operaciones_mat
    (125) operaciones_mat -> . VARIABLE operadores VARIABLE
    (126) operaciones_mat -> . operaciones_mat_par
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (127) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (128) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (129) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (130) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 247
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    LPAREN          shift and go to state 96
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 245
    operaciones_mat                shift and go to state 246
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    operaciones_mat_par            shift and go to state 93
    numero                         shift and go to state 94

state 174

    (102) operadores -> SUMA .

    VARIABLE        reduce using rule 102 (operadores -> SUMA .)
    CADENA          reduce using rule 102 (operadores -> SUMA .)
    BOOLEANO        reduce using rule 102 (operadores -> SUMA .)
    LPAREN          reduce using rule 102 (operadores -> SUMA .)
    ENTERO          reduce using rule 102 (operadores -> SUMA .)
    DECIMAL         reduce using rule 102 (operadores -> SUMA .)


state 175

    (103) operadores -> RESTA .

    VARIABLE        reduce using rule 103 (operadores -> RESTA .)
    CADENA          reduce using rule 103 (operadores -> RESTA .)
    BOOLEANO        reduce using rule 103 (operadores -> RESTA .)
    LPAREN          reduce using rule 103 (operadores -> RESTA .)
    ENTERO          reduce using rule 103 (operadores -> RESTA .)
    DECIMAL         reduce using rule 103 (operadores -> RESTA .)


state 176

    (104) operadores -> MULTIPLICACION .

    VARIABLE        reduce using rule 104 (operadores -> MULTIPLICACION .)
    CADENA          reduce using rule 104 (operadores -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 104 (operadores -> MULTIPLICACION .)
    LPAREN          reduce using rule 104 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 104 (operadores -> MULTIPLICACION .)
    DECIMAL         reduce using rule 104 (operadores -> MULTIPLICACION .)


state 177

    (105) operadores -> DIVISION .

    VARIABLE        reduce using rule 105 (operadores -> DIVISION .)
    CADENA          reduce using rule 105 (operadores -> DIVISION .)
    BOOLEANO        reduce using rule 105 (operadores -> DIVISION .)
    LPAREN          reduce using rule 105 (operadores -> DIVISION .)
    ENTERO          reduce using rule 105 (operadores -> DIVISION .)
    DECIMAL         reduce using rule 105 (operadores -> DIVISION .)


state 178

    (106) operadores -> MODULO .

    VARIABLE        reduce using rule 106 (operadores -> MODULO .)
    CADENA          reduce using rule 106 (operadores -> MODULO .)
    BOOLEANO        reduce using rule 106 (operadores -> MODULO .)
    LPAREN          reduce using rule 106 (operadores -> MODULO .)
    ENTERO          reduce using rule 106 (operadores -> MODULO .)
    DECIMAL         reduce using rule 106 (operadores -> MODULO .)


state 179

    (57) imprimir -> ECHO NOMBRE LBRACKET . ENTERO RBRACKET SEMI

    ENTERO          shift and go to state 248


state 180

    (59) imprimir -> ECHO operaciones_mat SEMI .

    $end            reduce using rule 59 (imprimir -> ECHO operaciones_mat SEMI .)
    RBRACE          reduce using rule 59 (imprimir -> ECHO operaciones_mat SEMI .)
    SEMI            reduce using rule 59 (imprimir -> ECHO operaciones_mat SEMI .)
    BREAK           reduce using rule 59 (imprimir -> ECHO operaciones_mat SEMI .)


state 181

    (125) operaciones_mat -> VARIABLE operadores . VARIABLE

    VARIABLE        shift and go to state 249


state 182

    (160) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI

    NEW             shift and go to state 202


state 183

    (127) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (128) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 250

state 184

    (129) operaciones_mat_par -> LPAREN VARIABLE . operadores VARIABLE RPAREN
    (130) operaciones_mat_par -> LPAREN VARIABLE . operadores valor RPAREN operadores valor
    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    EQUALS          shift and go to state 182
    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 251

state 185

    (49) tipoDato -> CADENA .

    SUMA            reduce using rule 49 (tipoDato -> CADENA .)
    RESTA           reduce using rule 49 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 49 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 49 (tipoDato -> CADENA .)
    MODULO          reduce using rule 49 (tipoDato -> CADENA .)
    RPAREN          reduce using rule 49 (tipoDato -> CADENA .)
    SEMI            reduce using rule 49 (tipoDato -> CADENA .)
    SMALLER         reduce using rule 49 (tipoDato -> CADENA .)
    GREATER         reduce using rule 49 (tipoDato -> CADENA .)
    IS_SMALLER_OR_EQUAL reduce using rule 49 (tipoDato -> CADENA .)
    IS_GREATER_OR_EQUAL reduce using rule 49 (tipoDato -> CADENA .)
    AND             reduce using rule 49 (tipoDato -> CADENA .)
    OR              reduce using rule 49 (tipoDato -> CADENA .)
    XOR             reduce using rule 49 (tipoDato -> CADENA .)
    IS_EQUAL        reduce using rule 49 (tipoDato -> CADENA .)
    IS_NOT_EQUAL    reduce using rule 49 (tipoDato -> CADENA .)
    IS_IDENTICAL    reduce using rule 49 (tipoDato -> CADENA .)
    IS_NOT_IDENTICAL reduce using rule 49 (tipoDato -> CADENA .)
    COMMA           reduce using rule 49 (tipoDato -> CADENA .)


state 186

    (54) imprimir -> PRINT valor SEMI .

    $end            reduce using rule 54 (imprimir -> PRINT valor SEMI .)
    RBRACE          reduce using rule 54 (imprimir -> PRINT valor SEMI .)
    SEMI            reduce using rule 54 (imprimir -> PRINT valor SEMI .)
    BREAK           reduce using rule 54 (imprimir -> PRINT valor SEMI .)


state 187

    (55) imprimir -> PRINT LPAREN valor . RPAREN SEMI
    (127) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (128) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    RPAREN          shift and go to state 252
    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 250

state 188

    (60) imprimir -> PRINT operaciones_mat SEMI .

    $end            reduce using rule 60 (imprimir -> PRINT operaciones_mat SEMI .)
    RBRACE          reduce using rule 60 (imprimir -> PRINT operaciones_mat SEMI .)
    SEMI            reduce using rule 60 (imprimir -> PRINT operaciones_mat SEMI .)
    BREAK           reduce using rule 60 (imprimir -> PRINT operaciones_mat SEMI .)


state 189

    (208) casting -> LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 253


state 190

    (144) llamada_funcion -> NOMBRE LPAREN params_list . RPAREN SEMI
    (139) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 254
    COMMA           shift and go to state 255


state 191

    (140) params_list -> param .

    RPAREN          reduce using rule 140 (params_list -> param .)
    COMMA           reduce using rule 140 (params_list -> param .)


state 192

    (136) param -> VARIABLE .
    (31) asignacion -> VARIABLE . EQUALS valor SEMI
    (34) asignacion -> VARIABLE . EQUALS brand
    (35) asignacion -> VARIABLE . EQUALS escribir
    (36) asignacion -> VARIABLE . EQUALS btrim
    (37) asignacion -> VARIABLE . EQUALS lectura
    (38) asignacion -> VARIABLE . EQUALS bconcat
    (40) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (42) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (209) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (111) incrementos_mat -> . MINUS_EQUAL
    (112) incrementos_mat -> . MOD_EQUAL
    (113) incrementos_mat -> . MUL_EQUAL
    (114) incrementos_mat -> . PLUS_EQUAL
    (115) incrementos_mat -> . DIV_EQUAL

    RPAREN          reduce using rule 136 (param -> VARIABLE .)
    COMMA           reduce using rule 136 (param -> VARIABLE .)
    EQUALS          shift and go to state 212
    MINUS_EQUAL     shift and go to state 122
    MOD_EQUAL       shift and go to state 123
    MUL_EQUAL       shift and go to state 124
    PLUS_EQUAL      shift and go to state 125
    DIV_EQUAL       shift and go to state 126

    incrementos_mat                shift and go to state 121

state 193

    (137) param -> asignacion .

    RPAREN          reduce using rule 137 (param -> asignacion .)
    COMMA           reduce using rule 137 (param -> asignacion .)


state 194

    (210) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores tipoDato SEMI
    (194) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (195) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (196) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (125) operaciones_mat -> VARIABLE . operadores VARIABLE
    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    CONCAT          shift and go to state 119
    CONCAT_EQUAL    shift and go to state 120
    EQUALS          shift and go to state 182
    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 256

state 195

    (31) asignacion -> VARIABLE EQUALS valor . SEMI
    (123) operaciones_mat -> valor . operadores valor
    (124) operaciones_mat -> valor . operadores operaciones_mat
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    SEMI            shift and go to state 257
    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 173

state 196

    (34) asignacion -> VARIABLE EQUALS brand .

    $end            reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    RBRACE          reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    SEMI            reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    BREAK           reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    RPAREN          reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    COMMA           reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    VARIABLE        reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    LPAREN          reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    CADENA          reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    BOOLEANO        reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    ENTERO          reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)
    DECIMAL         reduce using rule 34 (asignacion -> VARIABLE EQUALS brand .)


state 197

    (35) asignacion -> VARIABLE EQUALS escribir .

    $end            reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    RBRACE          reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    SEMI            reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    BREAK           reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    RPAREN          reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    COMMA           reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    VARIABLE        reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    LPAREN          reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    CADENA          reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    BOOLEANO        reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    ENTERO          reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)
    DECIMAL         reduce using rule 35 (asignacion -> VARIABLE EQUALS escribir .)


state 198

    (36) asignacion -> VARIABLE EQUALS btrim .

    $end            reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    RBRACE          reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    SEMI            reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    BREAK           reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    RPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    COMMA           reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    VARIABLE        reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    LPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    CADENA          reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    BOOLEANO        reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    ENTERO          reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)
    DECIMAL         reduce using rule 36 (asignacion -> VARIABLE EQUALS btrim .)


state 199

    (37) asignacion -> VARIABLE EQUALS lectura .

    $end            reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    RBRACE          reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    SEMI            reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    BREAK           reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    RPAREN          reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    COMMA           reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    VARIABLE        reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    LPAREN          reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    CADENA          reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    BOOLEANO        reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    ENTERO          reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)
    DECIMAL         reduce using rule 37 (asignacion -> VARIABLE EQUALS lectura .)


state 200

    (38) asignacion -> VARIABLE EQUALS bconcat .

    $end            reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    RBRACE          reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    SEMI            reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    BREAK           reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    RPAREN          reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    COMMA           reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    VARIABLE        reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    LPAREN          reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    CADENA          reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    BOOLEANO        reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    ENTERO          reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)
    DECIMAL         reduce using rule 38 (asignacion -> VARIABLE EQUALS bconcat .)


state 201

    (40) asignacion -> VARIABLE EQUALS operaciones_mat . SEMI

    SEMI            shift and go to state 258


state 202

    (160) bcolas -> VARIABLE EQUALS NEW . SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE EQUALS NEW . SPLSTACK LPAREN RPAREN SEMI

    SPLQUEUE        shift and go to state 259
    SPLSTACK        shift and go to state 260


state 203

    (207) casting -> VARIABLE EQUALS LPAREN . tiposCast RPAREN VARIABLE SEMI
    (127) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (128) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (129) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (130) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (198) tiposCast -> . STRING
    (199) tiposCast -> . BOOL
    (200) tiposCast -> . BOOLEAN
    (201) tiposCast -> . DOUBLE
    (202) tiposCast -> . FLOAT
    (203) tiposCast -> . ARRAY
    (204) tiposCast -> . OBJECT
    (205) tiposCast -> . INTEGER
    (206) tiposCast -> . INT
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 184
    STRING          shift and go to state 104
    BOOL            shift and go to state 105
    BOOLEAN         shift and go to state 106
    DOUBLE          shift and go to state 107
    FLOAT           shift and go to state 108
    ARRAY           shift and go to state 109
    OBJECT          shift and go to state 110
    INTEGER         shift and go to state 111
    INT             shift and go to state 112
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    tiposCast                      shift and go to state 261
    valor                          shift and go to state 183
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 204

    (42) asignacion_array -> VARIABLE EQUALS array_def . SEMI

    SEMI            shift and go to state 262


state 205

    (155) array_def -> ARRAY . LPAREN RPAREN
    (156) array_def -> ARRAY . LPAREN array_elmnt RPAREN

    LPAREN          shift and go to state 263


state 206

    (88) incrementOp -> VARIABLE SUMA SUMA . SEMI

    SEMI            shift and go to state 264


state 207

    (89) incrementOp -> VARIABLE RESTA RESTA . SEMI

    SEMI            shift and go to state 265


state 208

    (194) bconcat -> VARIABLE CONCAT VARIABLE . SEMI

    SEMI            shift and go to state 266


state 209

    (195) bconcat -> VARIABLE CONCAT CADENA . SEMI

    SEMI            shift and go to state 267


state 210

    (196) bconcat -> VARIABLE CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 268


state 211

    (209) aumentoCasting -> VARIABLE incrementos_mat tipoDato . SEMI

    SEMI            shift and go to state 269


state 212

    (31) asignacion -> VARIABLE EQUALS . valor SEMI
    (34) asignacion -> VARIABLE EQUALS . brand
    (35) asignacion -> VARIABLE EQUALS . escribir
    (36) asignacion -> VARIABLE EQUALS . btrim
    (37) asignacion -> VARIABLE EQUALS . lectura
    (38) asignacion -> VARIABLE EQUALS . bconcat
    (40) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (42) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (210) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (145) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (164) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (165) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (162) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (163) lectura -> . READLINE LPAREN RPAREN SEMI
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (123) operaciones_mat -> . valor operadores valor
    (124) operaciones_mat -> . valor operadores operaciones_mat
    (125) operaciones_mat -> . VARIABLE operadores VARIABLE
    (126) operaciones_mat -> . operaciones_mat_par
    (155) array_def -> . ARRAY LPAREN RPAREN
    (156) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (127) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (128) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (129) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (130) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 194
    RAND            shift and go to state 67
    FWRITE          shift and go to state 68
    TRIM            shift and go to state 69
    READLINE        shift and go to state 49
    CADENA          shift and go to state 91
    ARRAY           shift and go to state 205
    BOOLEANO        shift and go to state 95
    LPAREN          shift and go to state 96
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 195
    brand                          shift and go to state 196
    escribir                       shift and go to state 197
    btrim                          shift and go to state 198
    lectura                        shift and go to state 199
    bconcat                        shift and go to state 200
    operaciones_mat                shift and go to state 201
    array_def                      shift and go to state 204
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    operaciones_mat_par            shift and go to state 93
    numero                         shift and go to state 94

state 213

    (138) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE

    LPAREN          shift and go to state 270


state 214

    (43) constante -> DEFINE LPAREN CADENA . COMMA valor RPAREN SEMI

    COMMA           shift and go to state 271


state 215

    (44) constante -> DEFINE LPAREN NOMBRE . COMMA ARRAY RPAREN SEMI

    COMMA           shift and go to state 272


state 216

    (193) bconcat -> CADENA CONCAT CADENA . SEMI

    SEMI            shift and go to state 273


state 217

    (197) bconcat -> CADENA CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 274


state 218

    (162) lectura -> READLINE LPAREN CADENA . RPAREN SEMI

    RPAREN          shift and go to state 275


state 219

    (163) lectura -> READLINE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 276


state 220

    (74) condicion -> LPAREN . VARIABLE operadores valor RPAREN operador_logico valor
    (75) condicion -> LPAREN . VARIABLE operadores valor RPAREN condicion_booleana valor

    VARIABLE        shift and go to state 277


state 221

    (91) bwhile -> WHILE LPAREN condicion . RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> WHILE LPAREN condicion . RPAREN COLON stc_bloque
    (76) condicion -> condicion . condicion_booleana condicion
    (77) condicion -> condicion . condicion_booleana comprobacion
    (116) condicion_booleana -> . AND
    (117) condicion_booleana -> . OR
    (118) condicion_booleana -> . XOR
    (119) condicion_booleana -> . IS_EQUAL
    (120) condicion_booleana -> . IS_NOT_EQUAL
    (121) condicion_booleana -> . IS_IDENTICAL
    (122) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 278
    AND             shift and go to state 280
    OR              shift and go to state 281
    XOR             shift and go to state 282
    IS_EQUAL        shift and go to state 283
    IS_NOT_EQUAL    shift and go to state 284
    IS_IDENTICAL    shift and go to state 285
    IS_NOT_IDENTICAL shift and go to state 286

    condicion_booleana             shift and go to state 279

state 222

    (68) condicion -> VARIABLE . operador_logico VARIABLE
    (70) condicion -> VARIABLE . operador_logico valor
    (71) condicion -> VARIABLE . condicion_booleana VARIABLE
    (73) condicion -> VARIABLE . condicion_booleana valor
    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (107) operador_logico -> . SMALLER
    (108) operador_logico -> . GREATER
    (109) operador_logico -> . IS_SMALLER_OR_EQUAL
    (110) operador_logico -> . IS_GREATER_OR_EQUAL
    (116) condicion_booleana -> . AND
    (117) condicion_booleana -> . OR
    (118) condicion_booleana -> . XOR
    (119) condicion_booleana -> . IS_EQUAL
    (120) condicion_booleana -> . IS_NOT_EQUAL
    (121) condicion_booleana -> . IS_IDENTICAL
    (122) condicion_booleana -> . IS_NOT_IDENTICAL

    EQUALS          shift and go to state 182
    SMALLER         shift and go to state 289
    GREATER         shift and go to state 290
    IS_SMALLER_OR_EQUAL shift and go to state 291
    IS_GREATER_OR_EQUAL shift and go to state 292
    AND             shift and go to state 280
    OR              shift and go to state 281
    XOR             shift and go to state 282
    IS_EQUAL        shift and go to state 283
    IS_NOT_EQUAL    shift and go to state 284
    IS_IDENTICAL    shift and go to state 285
    IS_NOT_IDENTICAL shift and go to state 286

    operador_logico                shift and go to state 287
    condicion_booleana             shift and go to state 288

state 223

    (69) condicion -> valor . operador_logico valor
    (72) condicion -> valor . condicion_booleana valor
    (107) operador_logico -> . SMALLER
    (108) operador_logico -> . GREATER
    (109) operador_logico -> . IS_SMALLER_OR_EQUAL
    (110) operador_logico -> . IS_GREATER_OR_EQUAL
    (116) condicion_booleana -> . AND
    (117) condicion_booleana -> . OR
    (118) condicion_booleana -> . XOR
    (119) condicion_booleana -> . IS_EQUAL
    (120) condicion_booleana -> . IS_NOT_EQUAL
    (121) condicion_booleana -> . IS_IDENTICAL
    (122) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 289
    GREATER         shift and go to state 290
    IS_SMALLER_OR_EQUAL shift and go to state 291
    IS_GREATER_OR_EQUAL shift and go to state 292
    AND             shift and go to state 280
    OR              shift and go to state 281
    XOR             shift and go to state 282
    IS_EQUAL        shift and go to state 283
    IS_NOT_EQUAL    shift and go to state 284
    IS_IDENTICAL    shift and go to state 285
    IS_NOT_IDENTICAL shift and go to state 286

    operador_logico                shift and go to state 293
    condicion_booleana             shift and go to state 294

state 224

    (93) bdo -> DO LBRACE cuerpo . RBRACE bwhile

    RBRACE          shift and go to state 295


state 225

    (78) bfor -> FOR LPAREN asignacion . condicion SEMI for_incr RPAREN stc_bloque_def
    (68) condicion -> . VARIABLE operador_logico VARIABLE
    (69) condicion -> . valor operador_logico valor
    (70) condicion -> . VARIABLE operador_logico valor
    (71) condicion -> . VARIABLE condicion_booleana VARIABLE
    (72) condicion -> . valor condicion_booleana valor
    (73) condicion -> . VARIABLE condicion_booleana valor
    (74) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (75) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (76) condicion -> . condicion condicion_booleana condicion
    (77) condicion -> . condicion condicion_booleana comprobacion
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 222
    LPAREN          shift and go to state 220
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    condicion                      shift and go to state 296
    valor                          shift and go to state 223
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 226

    (90) bforeach -> FOREACH LPAREN VARIABLE . AS VARIABLE RPAREN stc_bloque_def

    AS              shift and go to state 297


state 227

    (81) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (79) stc_bloque -> . stc_bloque SEMI cuerpo
    (80) stc_bloque -> . breturn
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI
    (159) empty -> .

    RETURN          shift and go to state 72
    RBRACE          reduce using rule 159 (empty -> .)
    SEMI            reduce using rule 159 (empty -> .)

    stc_bloque                     shift and go to state 298
    breturn                        shift and go to state 299
    empty                          shift and go to state 71

state 228

    (99) btry -> TRY LBRACE stc_bloque_def . RBRACE catches

    RBRACE          shift and go to state 300


state 229

    (67) condicion_ifelse -> condicion_if condicion_elseif condicion_else .

    $end            reduce using rule 67 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    RBRACE          reduce using rule 67 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    SEMI            reduce using rule 67 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    BREAK           reduce using rule 67 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)


state 230

    (63) condicion_else -> ELSE LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 301


state 231

    (62) condicion_elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE
    (76) condicion -> condicion . condicion_booleana condicion
    (77) condicion -> condicion . condicion_booleana comprobacion
    (116) condicion_booleana -> . AND
    (117) condicion_booleana -> . OR
    (118) condicion_booleana -> . XOR
    (119) condicion_booleana -> . IS_EQUAL
    (120) condicion_booleana -> . IS_NOT_EQUAL
    (121) condicion_booleana -> . IS_IDENTICAL
    (122) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 302
    AND             shift and go to state 280
    OR              shift and go to state 281
    XOR             shift and go to state 282
    IS_EQUAL        shift and go to state 283
    IS_NOT_EQUAL    shift and go to state 284
    IS_IDENTICAL    shift and go to state 285
    IS_NOT_IDENTICAL shift and go to state 286

    condicion_booleana             shift and go to state 279

state 232

    (94) bswitch -> SWITCH LPAREN VARIABLE . RPAREN LBRACE innerSwitch RBRACE

    RPAREN          shift and go to state 303


state 233

    (95) bcase -> CASE ENTERO COLON .

    $end            reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    RBRACE          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    SEMI            reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    BREAK           reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    ECHO            reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    PRINT           reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    VARIABLE        reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    VAR             reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    NOMBRE          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    DEFINE          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    READLINE        reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    WHILE           reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    DO              reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    FOR             reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    FOREACH         reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    TRY             reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    ELSE            reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    ELSEIF          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    SWITCH          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    CASE            reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    GOTO            reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    EXIT            reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    DEFAULT         reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    CONTINUE        reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    RAND            reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    FWRITE          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    TRIM            reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    SMALLER         reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    RETURN          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    COMENTARIOS     reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    DOC_COMENTARIOS reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    LPAREN          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    CADENA          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    RPAREN          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    LBRACKET        reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    RBRACKET        reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    LBRACE          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    OPEN_TAG        reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    CLOSE_TAG       reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    PUBLIC          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    PRIVATE         reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    PROTECTED       reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    STATIC          reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    FUNCTION        reduce using rule 95 (bcase -> CASE ENTERO COLON .)
    IF              reduce using rule 95 (bcase -> CASE ENTERO COLON .)


state 234

    (96) bcase -> CASE CADENA COLON .

    $end            reduce using rule 96 (bcase -> CASE CADENA COLON .)
    RBRACE          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    SEMI            reduce using rule 96 (bcase -> CASE CADENA COLON .)
    BREAK           reduce using rule 96 (bcase -> CASE CADENA COLON .)
    ECHO            reduce using rule 96 (bcase -> CASE CADENA COLON .)
    PRINT           reduce using rule 96 (bcase -> CASE CADENA COLON .)
    VARIABLE        reduce using rule 96 (bcase -> CASE CADENA COLON .)
    VAR             reduce using rule 96 (bcase -> CASE CADENA COLON .)
    NOMBRE          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    DEFINE          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    READLINE        reduce using rule 96 (bcase -> CASE CADENA COLON .)
    WHILE           reduce using rule 96 (bcase -> CASE CADENA COLON .)
    DO              reduce using rule 96 (bcase -> CASE CADENA COLON .)
    FOR             reduce using rule 96 (bcase -> CASE CADENA COLON .)
    FOREACH         reduce using rule 96 (bcase -> CASE CADENA COLON .)
    TRY             reduce using rule 96 (bcase -> CASE CADENA COLON .)
    ELSE            reduce using rule 96 (bcase -> CASE CADENA COLON .)
    ELSEIF          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    SWITCH          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    CASE            reduce using rule 96 (bcase -> CASE CADENA COLON .)
    GOTO            reduce using rule 96 (bcase -> CASE CADENA COLON .)
    EXIT            reduce using rule 96 (bcase -> CASE CADENA COLON .)
    DEFAULT         reduce using rule 96 (bcase -> CASE CADENA COLON .)
    CONTINUE        reduce using rule 96 (bcase -> CASE CADENA COLON .)
    RAND            reduce using rule 96 (bcase -> CASE CADENA COLON .)
    FWRITE          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    TRIM            reduce using rule 96 (bcase -> CASE CADENA COLON .)
    SMALLER         reduce using rule 96 (bcase -> CASE CADENA COLON .)
    RETURN          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    COMENTARIOS     reduce using rule 96 (bcase -> CASE CADENA COLON .)
    DOC_COMENTARIOS reduce using rule 96 (bcase -> CASE CADENA COLON .)
    LPAREN          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    CADENA          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    RPAREN          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    LBRACKET        reduce using rule 96 (bcase -> CASE CADENA COLON .)
    RBRACKET        reduce using rule 96 (bcase -> CASE CADENA COLON .)
    LBRACE          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    OPEN_TAG        reduce using rule 96 (bcase -> CASE CADENA COLON .)
    CLOSE_TAG       reduce using rule 96 (bcase -> CASE CADENA COLON .)
    PUBLIC          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    PRIVATE         reduce using rule 96 (bcase -> CASE CADENA COLON .)
    PROTECTED       reduce using rule 96 (bcase -> CASE CADENA COLON .)
    STATIC          reduce using rule 96 (bcase -> CASE CADENA COLON .)
    FUNCTION        reduce using rule 96 (bcase -> CASE CADENA COLON .)
    IF              reduce using rule 96 (bcase -> CASE CADENA COLON .)


state 235

    (168) bgoto -> GOTO NOMBRE SEMI .

    $end            reduce using rule 168 (bgoto -> GOTO NOMBRE SEMI .)
    RBRACE          reduce using rule 168 (bgoto -> GOTO NOMBRE SEMI .)
    SEMI            reduce using rule 168 (bgoto -> GOTO NOMBRE SEMI .)
    BREAK           reduce using rule 168 (bgoto -> GOTO NOMBRE SEMI .)


state 236

    (145) brand -> RAND LPAREN ENTERO . COMMA ENTERO RPAREN SEMI

    COMMA           shift and go to state 304


state 237

    (164) escribir -> FWRITE LPAREN NOMBRE . COMMA CADENA RPAREN SEMI

    COMMA           shift and go to state 305


state 238

    (165) btrim -> TRIM LPAREN NOMBRE . LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 306


state 239

    (173) otros -> SMALLER NOMBRE GREATER .

    $end            reduce using rule 173 (otros -> SMALLER NOMBRE GREATER .)
    RBRACE          reduce using rule 173 (otros -> SMALLER NOMBRE GREATER .)
    SEMI            reduce using rule 173 (otros -> SMALLER NOMBRE GREATER .)
    BREAK           reduce using rule 173 (otros -> SMALLER NOMBRE GREATER .)


state 240

    (152) breturn -> RETURN NULL SEMI .

    $end            reduce using rule 152 (breturn -> RETURN NULL SEMI .)
    RBRACE          reduce using rule 152 (breturn -> RETURN NULL SEMI .)
    SEMI            reduce using rule 152 (breturn -> RETURN NULL SEMI .)
    BREAK           reduce using rule 152 (breturn -> RETURN NULL SEMI .)


state 241

    (153) breturn -> RETURN VARIABLE SEMI .

    $end            reduce using rule 153 (breturn -> RETURN VARIABLE SEMI .)
    RBRACE          reduce using rule 153 (breturn -> RETURN VARIABLE SEMI .)
    SEMI            reduce using rule 153 (breturn -> RETURN VARIABLE SEMI .)
    BREAK           reduce using rule 153 (breturn -> RETURN VARIABLE SEMI .)


state 242

    (154) breturn -> RETURN BOOLEANO SEMI .

    $end            reduce using rule 154 (breturn -> RETURN BOOLEANO SEMI .)
    RBRACE          reduce using rule 154 (breturn -> RETURN BOOLEANO SEMI .)
    SEMI            reduce using rule 154 (breturn -> RETURN BOOLEANO SEMI .)
    BREAK           reduce using rule 154 (breturn -> RETURN BOOLEANO SEMI .)


state 243

    (138) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (142) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (143) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (141) funcion_void -> FUNCTION NOMBRE LPAREN . RPAREN COLON VOID LBRACE empty RBRACE
    (139) params_list -> . params_list COMMA param
    (140) params_list -> . param
    (136) param -> . VARIABLE
    (137) param -> . asignacion
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    RPAREN          shift and go to state 308
    VARIABLE        shift and go to state 192
    VAR             shift and go to state 40
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80

    params_list                    shift and go to state 307
    param                          shift and go to state 191
    asignacion                     shift and go to state 193
    proteccion                     shift and go to state 129
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43

state 244

    (61) condicion_if -> IF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE
    (76) condicion -> condicion . condicion_booleana condicion
    (77) condicion -> condicion . condicion_booleana comprobacion
    (116) condicion_booleana -> . AND
    (117) condicion_booleana -> . OR
    (118) condicion_booleana -> . XOR
    (119) condicion_booleana -> . IS_EQUAL
    (120) condicion_booleana -> . IS_NOT_EQUAL
    (121) condicion_booleana -> . IS_IDENTICAL
    (122) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 309
    AND             shift and go to state 280
    OR              shift and go to state 281
    XOR             shift and go to state 282
    IS_EQUAL        shift and go to state 283
    IS_NOT_EQUAL    shift and go to state 284
    IS_IDENTICAL    shift and go to state 285
    IS_NOT_IDENTICAL shift and go to state 286

    condicion_booleana             shift and go to state 279

state 245

    (123) operaciones_mat -> valor operadores valor .
    (123) operaciones_mat -> valor . operadores valor
    (124) operaciones_mat -> valor . operadores operaciones_mat
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    SEMI            reduce using rule 123 (operaciones_mat -> valor operadores valor .)
    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 173

state 246

    (124) operaciones_mat -> valor operadores operaciones_mat .

    SEMI            reduce using rule 124 (operaciones_mat -> valor operadores operaciones_mat .)


state 247

    (125) operaciones_mat -> VARIABLE . operadores VARIABLE
    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    EQUALS          shift and go to state 182
    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 181

state 248

    (57) imprimir -> ECHO NOMBRE LBRACKET ENTERO . RBRACKET SEMI

    RBRACKET        shift and go to state 310


state 249

    (125) operaciones_mat -> VARIABLE operadores VARIABLE .

    SEMI            reduce using rule 125 (operaciones_mat -> VARIABLE operadores VARIABLE .)


state 250

    (127) operaciones_mat_par -> LPAREN valor operadores . valor RPAREN
    (128) operaciones_mat_par -> LPAREN valor operadores . operaciones_mat_par RPAREN
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (127) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (128) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (129) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (130) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    LPAREN          shift and go to state 96
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    VARIABLE        shift and go to state 313
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 311
    operaciones_mat_par            shift and go to state 312
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 251

    (129) operaciones_mat_par -> LPAREN VARIABLE operadores . VARIABLE RPAREN
    (130) operaciones_mat_par -> LPAREN VARIABLE operadores . valor RPAREN operadores valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 314
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 315
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 252

    (55) imprimir -> PRINT LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 316


state 253

    (208) casting -> LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 317


state 254

    (144) llamada_funcion -> NOMBRE LPAREN params_list RPAREN . SEMI

    SEMI            shift and go to state 318


state 255

    (139) params_list -> params_list COMMA . param
    (136) param -> . VARIABLE
    (137) param -> . asignacion
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    VARIABLE        shift and go to state 192
    VAR             shift and go to state 40
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80

    param                          shift and go to state 319
    asignacion                     shift and go to state 193
    proteccion                     shift and go to state 129
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43

state 256

    (210) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . tipoDato SEMI
    (125) operaciones_mat -> VARIABLE operadores . VARIABLE
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 249
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    tipoDato                       shift and go to state 320
    numero                         shift and go to state 94

state 257

    (31) asignacion -> VARIABLE EQUALS valor SEMI .

    $end            reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RBRACE          reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    SEMI            reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BREAK           reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RPAREN          reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    COMMA           reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    VARIABLE        reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    LPAREN          reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    CADENA          reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BOOLEANO        reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    ENTERO          reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)
    DECIMAL         reduce using rule 31 (asignacion -> VARIABLE EQUALS valor SEMI .)


state 258

    (40) asignacion -> VARIABLE EQUALS operaciones_mat SEMI .

    $end            reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RBRACE          reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    SEMI            reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BREAK           reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RPAREN          reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    COMMA           reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    VARIABLE        reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    LPAREN          reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    CADENA          reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BOOLEANO        reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    ENTERO          reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    DECIMAL         reduce using rule 40 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)


state 259

    (160) bcolas -> VARIABLE EQUALS NEW SPLQUEUE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 321


state 260

    (161) bpila -> VARIABLE EQUALS NEW SPLSTACK . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 322


state 261

    (207) casting -> VARIABLE EQUALS LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 323


state 262

    (42) asignacion_array -> VARIABLE EQUALS array_def SEMI .

    $end            reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RBRACE          reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    SEMI            reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BREAK           reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RPAREN          reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    COMMA           reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    VARIABLE        reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    LPAREN          reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    CADENA          reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BOOLEANO        reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    ENTERO          reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    DECIMAL         reduce using rule 42 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)


state 263

    (155) array_def -> ARRAY LPAREN . RPAREN
    (156) array_def -> ARRAY LPAREN . array_elmnt RPAREN
    (157) array_elmnt -> . array_elmnt COMMA valor
    (158) array_elmnt -> . valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    RPAREN          shift and go to state 324
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    VARIABLE        shift and go to state 313
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    array_elmnt                    shift and go to state 325
    valor                          shift and go to state 326
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 264

    (88) incrementOp -> VARIABLE SUMA SUMA SEMI .

    $end            reduce using rule 88 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    RBRACE          reduce using rule 88 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    SEMI            reduce using rule 88 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    BREAK           reduce using rule 88 (incrementOp -> VARIABLE SUMA SUMA SEMI .)


state 265

    (89) incrementOp -> VARIABLE RESTA RESTA SEMI .

    $end            reduce using rule 89 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    RBRACE          reduce using rule 89 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    SEMI            reduce using rule 89 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    BREAK           reduce using rule 89 (incrementOp -> VARIABLE RESTA RESTA SEMI .)


state 266

    (194) bconcat -> VARIABLE CONCAT VARIABLE SEMI .

    $end            reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RBRACE          reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    SEMI            reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BREAK           reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RPAREN          reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    COMMA           reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    VARIABLE        reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    LPAREN          reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    CADENA          reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BOOLEANO        reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    ENTERO          reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    DECIMAL         reduce using rule 194 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)


state 267

    (195) bconcat -> VARIABLE CONCAT CADENA SEMI .

    $end            reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    SEMI            reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BREAK           reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    COMMA           reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    LPAREN          reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    CADENA          reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 195 (bconcat -> VARIABLE CONCAT CADENA SEMI .)


state 268

    (196) bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BREAK           reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    LPAREN          reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 196 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)


state 269

    (209) aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .

    $end            reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RBRACE          reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    SEMI            reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BREAK           reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RPAREN          reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    COMMA           reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    VARIABLE        reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    LPAREN          reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    CADENA          reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BOOLEANO        reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    ENTERO          reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    DECIMAL         reduce using rule 209 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)


state 270

    (138) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (142) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (143) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (139) params_list -> . params_list COMMA param
    (140) params_list -> . param
    (136) param -> . VARIABLE
    (137) param -> . asignacion
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI

    RPAREN          shift and go to state 327
    VARIABLE        shift and go to state 192
    VAR             shift and go to state 40
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80

    params_list                    shift and go to state 307
    param                          shift and go to state 191
    asignacion                     shift and go to state 193
    proteccion                     shift and go to state 129
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43

state 271

    (43) constante -> DEFINE LPAREN CADENA COMMA . valor RPAREN SEMI
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    VARIABLE        shift and go to state 313
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 328
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 272

    (44) constante -> DEFINE LPAREN NOMBRE COMMA . ARRAY RPAREN SEMI

    ARRAY           shift and go to state 329


state 273

    (193) bconcat -> CADENA CONCAT CADENA SEMI .

    $end            reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    SEMI            reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BREAK           reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    COMMA           reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    LPAREN          reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    CADENA          reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 193 (bconcat -> CADENA CONCAT CADENA SEMI .)


state 274

    (197) bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BREAK           reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    LPAREN          reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 197 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)


state 275

    (162) lectura -> READLINE LPAREN CADENA RPAREN . SEMI

    SEMI            shift and go to state 330


state 276

    (163) lectura -> READLINE LPAREN RPAREN SEMI .

    $end            reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 163 (lectura -> READLINE LPAREN RPAREN SEMI .)


state 277

    (74) condicion -> LPAREN VARIABLE . operadores valor RPAREN operador_logico valor
    (75) condicion -> LPAREN VARIABLE . operadores valor RPAREN condicion_booleana valor
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 331

state 278

    (91) bwhile -> WHILE LPAREN condicion RPAREN . LBRACE stc_bloque RBRACE
    (92) bwhile -> WHILE LPAREN condicion RPAREN . COLON stc_bloque

    LBRACE          shift and go to state 332
    COLON           shift and go to state 333


state 279

    (76) condicion -> condicion condicion_booleana . condicion
    (77) condicion -> condicion condicion_booleana . comprobacion
    (68) condicion -> . VARIABLE operador_logico VARIABLE
    (69) condicion -> . valor operador_logico valor
    (70) condicion -> . VARIABLE operador_logico valor
    (71) condicion -> . VARIABLE condicion_booleana VARIABLE
    (72) condicion -> . valor condicion_booleana valor
    (73) condicion -> . VARIABLE condicion_booleana valor
    (74) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (75) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (76) condicion -> . condicion condicion_booleana condicion
    (77) condicion -> . condicion condicion_booleana comprobacion
    (175) comprobacion -> . NOMBRE LPAREN valor RPAREN
    (176) comprobacion -> . NOMBRE LPAREN VARIABLE RPAREN
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 222
    LPAREN          shift and go to state 220
    NOMBRE          shift and go to state 336
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    condicion                      shift and go to state 334
    comprobacion                   shift and go to state 335
    valor                          shift and go to state 223
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 280

    (116) condicion_booleana -> AND .

    VARIABLE        reduce using rule 116 (condicion_booleana -> AND .)
    LPAREN          reduce using rule 116 (condicion_booleana -> AND .)
    NOMBRE          reduce using rule 116 (condicion_booleana -> AND .)
    CADENA          reduce using rule 116 (condicion_booleana -> AND .)
    BOOLEANO        reduce using rule 116 (condicion_booleana -> AND .)
    ENTERO          reduce using rule 116 (condicion_booleana -> AND .)
    DECIMAL         reduce using rule 116 (condicion_booleana -> AND .)


state 281

    (117) condicion_booleana -> OR .

    VARIABLE        reduce using rule 117 (condicion_booleana -> OR .)
    LPAREN          reduce using rule 117 (condicion_booleana -> OR .)
    NOMBRE          reduce using rule 117 (condicion_booleana -> OR .)
    CADENA          reduce using rule 117 (condicion_booleana -> OR .)
    BOOLEANO        reduce using rule 117 (condicion_booleana -> OR .)
    ENTERO          reduce using rule 117 (condicion_booleana -> OR .)
    DECIMAL         reduce using rule 117 (condicion_booleana -> OR .)


state 282

    (118) condicion_booleana -> XOR .

    VARIABLE        reduce using rule 118 (condicion_booleana -> XOR .)
    LPAREN          reduce using rule 118 (condicion_booleana -> XOR .)
    NOMBRE          reduce using rule 118 (condicion_booleana -> XOR .)
    CADENA          reduce using rule 118 (condicion_booleana -> XOR .)
    BOOLEANO        reduce using rule 118 (condicion_booleana -> XOR .)
    ENTERO          reduce using rule 118 (condicion_booleana -> XOR .)
    DECIMAL         reduce using rule 118 (condicion_booleana -> XOR .)


state 283

    (119) condicion_booleana -> IS_EQUAL .

    VARIABLE        reduce using rule 119 (condicion_booleana -> IS_EQUAL .)
    LPAREN          reduce using rule 119 (condicion_booleana -> IS_EQUAL .)
    NOMBRE          reduce using rule 119 (condicion_booleana -> IS_EQUAL .)
    CADENA          reduce using rule 119 (condicion_booleana -> IS_EQUAL .)
    BOOLEANO        reduce using rule 119 (condicion_booleana -> IS_EQUAL .)
    ENTERO          reduce using rule 119 (condicion_booleana -> IS_EQUAL .)
    DECIMAL         reduce using rule 119 (condicion_booleana -> IS_EQUAL .)


state 284

    (120) condicion_booleana -> IS_NOT_EQUAL .

    VARIABLE        reduce using rule 120 (condicion_booleana -> IS_NOT_EQUAL .)
    LPAREN          reduce using rule 120 (condicion_booleana -> IS_NOT_EQUAL .)
    NOMBRE          reduce using rule 120 (condicion_booleana -> IS_NOT_EQUAL .)
    CADENA          reduce using rule 120 (condicion_booleana -> IS_NOT_EQUAL .)
    BOOLEANO        reduce using rule 120 (condicion_booleana -> IS_NOT_EQUAL .)
    ENTERO          reduce using rule 120 (condicion_booleana -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 120 (condicion_booleana -> IS_NOT_EQUAL .)


state 285

    (121) condicion_booleana -> IS_IDENTICAL .

    VARIABLE        reduce using rule 121 (condicion_booleana -> IS_IDENTICAL .)
    LPAREN          reduce using rule 121 (condicion_booleana -> IS_IDENTICAL .)
    NOMBRE          reduce using rule 121 (condicion_booleana -> IS_IDENTICAL .)
    CADENA          reduce using rule 121 (condicion_booleana -> IS_IDENTICAL .)
    BOOLEANO        reduce using rule 121 (condicion_booleana -> IS_IDENTICAL .)
    ENTERO          reduce using rule 121 (condicion_booleana -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 121 (condicion_booleana -> IS_IDENTICAL .)


state 286

    (122) condicion_booleana -> IS_NOT_IDENTICAL .

    VARIABLE        reduce using rule 122 (condicion_booleana -> IS_NOT_IDENTICAL .)
    LPAREN          reduce using rule 122 (condicion_booleana -> IS_NOT_IDENTICAL .)
    NOMBRE          reduce using rule 122 (condicion_booleana -> IS_NOT_IDENTICAL .)
    CADENA          reduce using rule 122 (condicion_booleana -> IS_NOT_IDENTICAL .)
    BOOLEANO        reduce using rule 122 (condicion_booleana -> IS_NOT_IDENTICAL .)
    ENTERO          reduce using rule 122 (condicion_booleana -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 122 (condicion_booleana -> IS_NOT_IDENTICAL .)


state 287

    (68) condicion -> VARIABLE operador_logico . VARIABLE
    (70) condicion -> VARIABLE operador_logico . valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 337
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 338
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 288

    (71) condicion -> VARIABLE condicion_booleana . VARIABLE
    (73) condicion -> VARIABLE condicion_booleana . valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 339
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 340
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 289

    (107) operador_logico -> SMALLER .

    VARIABLE        reduce using rule 107 (operador_logico -> SMALLER .)
    CADENA          reduce using rule 107 (operador_logico -> SMALLER .)
    BOOLEANO        reduce using rule 107 (operador_logico -> SMALLER .)
    ENTERO          reduce using rule 107 (operador_logico -> SMALLER .)
    DECIMAL         reduce using rule 107 (operador_logico -> SMALLER .)


state 290

    (108) operador_logico -> GREATER .

    VARIABLE        reduce using rule 108 (operador_logico -> GREATER .)
    CADENA          reduce using rule 108 (operador_logico -> GREATER .)
    BOOLEANO        reduce using rule 108 (operador_logico -> GREATER .)
    ENTERO          reduce using rule 108 (operador_logico -> GREATER .)
    DECIMAL         reduce using rule 108 (operador_logico -> GREATER .)


state 291

    (109) operador_logico -> IS_SMALLER_OR_EQUAL .

    VARIABLE        reduce using rule 109 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    CADENA          reduce using rule 109 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    BOOLEANO        reduce using rule 109 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    ENTERO          reduce using rule 109 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 109 (operador_logico -> IS_SMALLER_OR_EQUAL .)


state 292

    (110) operador_logico -> IS_GREATER_OR_EQUAL .

    VARIABLE        reduce using rule 110 (operador_logico -> IS_GREATER_OR_EQUAL .)
    CADENA          reduce using rule 110 (operador_logico -> IS_GREATER_OR_EQUAL .)
    BOOLEANO        reduce using rule 110 (operador_logico -> IS_GREATER_OR_EQUAL .)
    ENTERO          reduce using rule 110 (operador_logico -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 110 (operador_logico -> IS_GREATER_OR_EQUAL .)


state 293

    (69) condicion -> valor operador_logico . valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    VARIABLE        shift and go to state 313
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 341
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 294

    (72) condicion -> valor condicion_booleana . valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    VARIABLE        shift and go to state 313
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 342
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 295

    (93) bdo -> DO LBRACE cuerpo RBRACE . bwhile
    (91) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque

    WHILE           shift and go to state 50

    bwhile                         shift and go to state 343

state 296

    (78) bfor -> FOR LPAREN asignacion condicion . SEMI for_incr RPAREN stc_bloque_def
    (76) condicion -> condicion . condicion_booleana condicion
    (77) condicion -> condicion . condicion_booleana comprobacion
    (116) condicion_booleana -> . AND
    (117) condicion_booleana -> . OR
    (118) condicion_booleana -> . XOR
    (119) condicion_booleana -> . IS_EQUAL
    (120) condicion_booleana -> . IS_NOT_EQUAL
    (121) condicion_booleana -> . IS_IDENTICAL
    (122) condicion_booleana -> . IS_NOT_IDENTICAL

    SEMI            shift and go to state 344
    AND             shift and go to state 280
    OR              shift and go to state 281
    XOR             shift and go to state 282
    IS_EQUAL        shift and go to state 283
    IS_NOT_EQUAL    shift and go to state 284
    IS_IDENTICAL    shift and go to state 285
    IS_NOT_IDENTICAL shift and go to state 286

    condicion_booleana             shift and go to state 279

state 297

    (90) bforeach -> FOREACH LPAREN VARIABLE AS . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 345


state 298

    (81) stc_bloque_def -> LBRACE stc_bloque . RBRACE
    (79) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 346
    SEMI            shift and go to state 347


state 299

    (80) stc_bloque -> breturn .

    RBRACE          reduce using rule 80 (stc_bloque -> breturn .)
    SEMI            reduce using rule 80 (stc_bloque -> breturn .)
    $end            reduce using rule 80 (stc_bloque -> breturn .)
    BREAK           reduce using rule 80 (stc_bloque -> breturn .)


state 300

    (99) btry -> TRY LBRACE stc_bloque_def RBRACE . catches
    (100) catches -> . catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
    (101) catches -> . empty
    (159) empty -> .

    CATCH           reduce using rule 159 (empty -> .)
    $end            reduce using rule 159 (empty -> .)
    RBRACE          reduce using rule 159 (empty -> .)
    SEMI            reduce using rule 159 (empty -> .)
    BREAK           reduce using rule 159 (empty -> .)

    catches                        shift and go to state 348
    empty                          shift and go to state 349

state 301

    (63) condicion_else -> ELSE LBRACE cuerpo RBRACE .

    $end            reduce using rule 63 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 63 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 63 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 63 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)


state 302

    (62) condicion_elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 350


state 303

    (94) bswitch -> SWITCH LPAREN VARIABLE RPAREN . LBRACE innerSwitch RBRACE

    LBRACE          shift and go to state 351


state 304

    (145) brand -> RAND LPAREN ENTERO COMMA . ENTERO RPAREN SEMI

    ENTERO          shift and go to state 352


state 305

    (164) escribir -> FWRITE LPAREN NOMBRE COMMA . CADENA RPAREN SEMI

    CADENA          shift and go to state 353


state 306

    (165) btrim -> TRIM LPAREN NOMBRE LPAREN . NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 354


state 307

    (138) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list . RPAREN stc_bloque_def
    (139) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 355
    COMMA           shift and go to state 255


state 308

    (142) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (143) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (141) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN . COLON VOID LBRACE empty RBRACE
    (81) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 357
    COLON           shift and go to state 358

    stc_bloque_def                 shift and go to state 356

state 309

    (61) condicion_if -> IF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 359


state 310

    (57) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET . SEMI

    SEMI            shift and go to state 360


state 311

    (127) operaciones_mat_par -> LPAREN valor operadores valor . RPAREN

    RPAREN          shift and go to state 361


state 312

    (128) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par . RPAREN

    RPAREN          shift and go to state 362


state 313

    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    EQUALS          shift and go to state 182


state 314

    (129) operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE . RPAREN
    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 363
    EQUALS          shift and go to state 182


state 315

    (130) operaciones_mat_par -> LPAREN VARIABLE operadores valor . RPAREN operadores valor

    RPAREN          shift and go to state 364


state 316

    (55) imprimir -> PRINT LPAREN valor RPAREN SEMI .

    $end            reduce using rule 55 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 55 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 55 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    BREAK           reduce using rule 55 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)


state 317

    (208) casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 208 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 208 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 208 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    BREAK           reduce using rule 208 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 318

    (144) llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .

    $end            reduce using rule 144 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    RBRACE          reduce using rule 144 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    SEMI            reduce using rule 144 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    BREAK           reduce using rule 144 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)


state 319

    (139) params_list -> params_list COMMA param .

    RPAREN          reduce using rule 139 (params_list -> params_list COMMA param .)
    COMMA           reduce using rule 139 (params_list -> params_list COMMA param .)


state 320

    (210) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato . SEMI

    SEMI            shift and go to state 365


state 321

    (160) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 366


state 322

    (161) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 367


state 323

    (207) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 368


state 324

    (155) array_def -> ARRAY LPAREN RPAREN .

    SEMI            reduce using rule 155 (array_def -> ARRAY LPAREN RPAREN .)


state 325

    (156) array_def -> ARRAY LPAREN array_elmnt . RPAREN
    (157) array_elmnt -> array_elmnt . COMMA valor

    RPAREN          shift and go to state 369
    COMMA           shift and go to state 370


state 326

    (158) array_elmnt -> valor .

    RPAREN          reduce using rule 158 (array_elmnt -> valor .)
    COMMA           reduce using rule 158 (array_elmnt -> valor .)


state 327

    (142) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (143) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (81) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 357

    stc_bloque_def                 shift and go to state 356

state 328

    (43) constante -> DEFINE LPAREN CADENA COMMA valor . RPAREN SEMI

    RPAREN          shift and go to state 371


state 329

    (44) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY . RPAREN SEMI

    RPAREN          shift and go to state 372


state 330

    (162) lectura -> READLINE LPAREN CADENA RPAREN SEMI .

    $end            reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    SEMI            reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BREAK           reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    COMMA           reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    CADENA          reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 162 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)


state 331

    (74) condicion -> LPAREN VARIABLE operadores . valor RPAREN operador_logico valor
    (75) condicion -> LPAREN VARIABLE operadores . valor RPAREN condicion_booleana valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    VARIABLE        shift and go to state 313
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 373
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 332

    (91) bwhile -> WHILE LPAREN condicion RPAREN LBRACE . stc_bloque RBRACE
    (79) stc_bloque -> . stc_bloque SEMI cuerpo
    (80) stc_bloque -> . breturn
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI
    (159) empty -> .

    RETURN          shift and go to state 72
    RBRACE          reduce using rule 159 (empty -> .)
    SEMI            reduce using rule 159 (empty -> .)

    stc_bloque                     shift and go to state 374
    breturn                        shift and go to state 299
    empty                          shift and go to state 71

state 333

    (92) bwhile -> WHILE LPAREN condicion RPAREN COLON . stc_bloque
    (79) stc_bloque -> . stc_bloque SEMI cuerpo
    (80) stc_bloque -> . breturn
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI
    (159) empty -> .

    RETURN          shift and go to state 72
    RBRACE          reduce using rule 159 (empty -> .)
    SEMI            reduce using rule 159 (empty -> .)
    $end            reduce using rule 159 (empty -> .)
    BREAK           reduce using rule 159 (empty -> .)

    stc_bloque                     shift and go to state 375
    breturn                        shift and go to state 299
    empty                          shift and go to state 71

state 334

    (76) condicion -> condicion condicion_booleana condicion .
    (76) condicion -> condicion . condicion_booleana condicion
    (77) condicion -> condicion . condicion_booleana comprobacion
    (116) condicion_booleana -> . AND
    (117) condicion_booleana -> . OR
    (118) condicion_booleana -> . XOR
    (119) condicion_booleana -> . IS_EQUAL
    (120) condicion_booleana -> . IS_NOT_EQUAL
    (121) condicion_booleana -> . IS_IDENTICAL
    (122) condicion_booleana -> . IS_NOT_IDENTICAL

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IS_EQUAL resolved as shift
  ! shift/reduce conflict for IS_NOT_EQUAL resolved as shift
  ! shift/reduce conflict for IS_IDENTICAL resolved as shift
  ! shift/reduce conflict for IS_NOT_IDENTICAL resolved as shift
    RPAREN          reduce using rule 76 (condicion -> condicion condicion_booleana condicion .)
    SEMI            reduce using rule 76 (condicion -> condicion condicion_booleana condicion .)
    AND             shift and go to state 280
    OR              shift and go to state 281
    XOR             shift and go to state 282
    IS_EQUAL        shift and go to state 283
    IS_NOT_EQUAL    shift and go to state 284
    IS_IDENTICAL    shift and go to state 285
    IS_NOT_IDENTICAL shift and go to state 286

  ! AND             [ reduce using rule 76 (condicion -> condicion condicion_booleana condicion .) ]
  ! OR              [ reduce using rule 76 (condicion -> condicion condicion_booleana condicion .) ]
  ! XOR             [ reduce using rule 76 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_EQUAL        [ reduce using rule 76 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 76 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_IDENTICAL    [ reduce using rule 76 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 76 (condicion -> condicion condicion_booleana condicion .) ]

    condicion_booleana             shift and go to state 279

state 335

    (77) condicion -> condicion condicion_booleana comprobacion .

    RPAREN          reduce using rule 77 (condicion -> condicion condicion_booleana comprobacion .)
    AND             reduce using rule 77 (condicion -> condicion condicion_booleana comprobacion .)
    OR              reduce using rule 77 (condicion -> condicion condicion_booleana comprobacion .)
    XOR             reduce using rule 77 (condicion -> condicion condicion_booleana comprobacion .)
    IS_EQUAL        reduce using rule 77 (condicion -> condicion condicion_booleana comprobacion .)
    IS_NOT_EQUAL    reduce using rule 77 (condicion -> condicion condicion_booleana comprobacion .)
    IS_IDENTICAL    reduce using rule 77 (condicion -> condicion condicion_booleana comprobacion .)
    IS_NOT_IDENTICAL reduce using rule 77 (condicion -> condicion condicion_booleana comprobacion .)
    SEMI            reduce using rule 77 (condicion -> condicion condicion_booleana comprobacion .)


state 336

    (175) comprobacion -> NOMBRE . LPAREN valor RPAREN
    (176) comprobacion -> NOMBRE . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 376


state 337

    (68) condicion -> VARIABLE operador_logico VARIABLE .
    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 68 (condicion -> VARIABLE operador_logico VARIABLE .)
    AND             reduce using rule 68 (condicion -> VARIABLE operador_logico VARIABLE .)
    OR              reduce using rule 68 (condicion -> VARIABLE operador_logico VARIABLE .)
    XOR             reduce using rule 68 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_EQUAL        reduce using rule 68 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 68 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_IDENTICAL    reduce using rule 68 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 68 (condicion -> VARIABLE operador_logico VARIABLE .)
    SEMI            reduce using rule 68 (condicion -> VARIABLE operador_logico VARIABLE .)
    EQUALS          shift and go to state 182


state 338

    (70) condicion -> VARIABLE operador_logico valor .

    RPAREN          reduce using rule 70 (condicion -> VARIABLE operador_logico valor .)
    AND             reduce using rule 70 (condicion -> VARIABLE operador_logico valor .)
    OR              reduce using rule 70 (condicion -> VARIABLE operador_logico valor .)
    XOR             reduce using rule 70 (condicion -> VARIABLE operador_logico valor .)
    IS_EQUAL        reduce using rule 70 (condicion -> VARIABLE operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 70 (condicion -> VARIABLE operador_logico valor .)
    IS_IDENTICAL    reduce using rule 70 (condicion -> VARIABLE operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 70 (condicion -> VARIABLE operador_logico valor .)
    SEMI            reduce using rule 70 (condicion -> VARIABLE operador_logico valor .)


state 339

    (71) condicion -> VARIABLE condicion_booleana VARIABLE .
    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 71 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    AND             reduce using rule 71 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    OR              reduce using rule 71 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    XOR             reduce using rule 71 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_EQUAL        reduce using rule 71 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 71 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_IDENTICAL    reduce using rule 71 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 71 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    SEMI            reduce using rule 71 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    EQUALS          shift and go to state 182


state 340

    (73) condicion -> VARIABLE condicion_booleana valor .

    RPAREN          reduce using rule 73 (condicion -> VARIABLE condicion_booleana valor .)
    AND             reduce using rule 73 (condicion -> VARIABLE condicion_booleana valor .)
    OR              reduce using rule 73 (condicion -> VARIABLE condicion_booleana valor .)
    XOR             reduce using rule 73 (condicion -> VARIABLE condicion_booleana valor .)
    IS_EQUAL        reduce using rule 73 (condicion -> VARIABLE condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 73 (condicion -> VARIABLE condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 73 (condicion -> VARIABLE condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 73 (condicion -> VARIABLE condicion_booleana valor .)
    SEMI            reduce using rule 73 (condicion -> VARIABLE condicion_booleana valor .)


state 341

    (69) condicion -> valor operador_logico valor .

    RPAREN          reduce using rule 69 (condicion -> valor operador_logico valor .)
    AND             reduce using rule 69 (condicion -> valor operador_logico valor .)
    OR              reduce using rule 69 (condicion -> valor operador_logico valor .)
    XOR             reduce using rule 69 (condicion -> valor operador_logico valor .)
    IS_EQUAL        reduce using rule 69 (condicion -> valor operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 69 (condicion -> valor operador_logico valor .)
    IS_IDENTICAL    reduce using rule 69 (condicion -> valor operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 69 (condicion -> valor operador_logico valor .)
    SEMI            reduce using rule 69 (condicion -> valor operador_logico valor .)


state 342

    (72) condicion -> valor condicion_booleana valor .

    RPAREN          reduce using rule 72 (condicion -> valor condicion_booleana valor .)
    AND             reduce using rule 72 (condicion -> valor condicion_booleana valor .)
    OR              reduce using rule 72 (condicion -> valor condicion_booleana valor .)
    XOR             reduce using rule 72 (condicion -> valor condicion_booleana valor .)
    IS_EQUAL        reduce using rule 72 (condicion -> valor condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 72 (condicion -> valor condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 72 (condicion -> valor condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 72 (condicion -> valor condicion_booleana valor .)
    SEMI            reduce using rule 72 (condicion -> valor condicion_booleana valor .)


state 343

    (93) bdo -> DO LBRACE cuerpo RBRACE bwhile .

    $end            reduce using rule 93 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    RBRACE          reduce using rule 93 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    SEMI            reduce using rule 93 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    BREAK           reduce using rule 93 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)


state 344

    (78) bfor -> FOR LPAREN asignacion condicion SEMI . for_incr RPAREN stc_bloque_def
    (82) for_incr -> . VARIABLE SUMA SUMA
    (83) for_incr -> . SUMA SUMA VARIABLE
    (84) for_incr -> . VARIABLE RESTA RESTA
    (85) for_incr -> . RESTA RESTA VARIABLE
    (86) for_incr -> . VARIABLE SUMA EQUALS numero
    (87) for_incr -> . VARIABLE RESTA EQUALS numero

    VARIABLE        shift and go to state 378
    SUMA            shift and go to state 379
    RESTA           shift and go to state 380

    for_incr                       shift and go to state 377

state 345

    (90) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 381


state 346

    (81) stc_bloque_def -> LBRACE stc_bloque RBRACE .

    RBRACE          reduce using rule 81 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    $end            reduce using rule 81 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 81 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    BREAK           reduce using rule 81 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    CATCH           reduce using rule 81 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)


state 347

    (79) stc_bloque -> stc_bloque SEMI . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . incrementOp
    (11) cuerpo -> . bforeach
    (12) cuerpo -> . btry
    (13) cuerpo -> . condicion_ifelse
    (14) cuerpo -> . condicion_else
    (15) cuerpo -> . condicion_elseif
    (16) cuerpo -> . bswitch
    (17) cuerpo -> . bcase
    (18) cuerpo -> . bgoto
    (19) cuerpo -> . bcolas
    (20) cuerpo -> . bpila
    (21) cuerpo -> . bcortes
    (22) cuerpo -> . brand
    (23) cuerpo -> . escribir
    (24) cuerpo -> . btrim
    (25) cuerpo -> . otros
    (26) cuerpo -> . breturn
    (27) cuerpo -> . comment
    (28) cuerpo -> . casting
    (29) cuerpo -> . bconcat
    (30) cuerpo -> . simbolos
    (53) imprimir -> . ECHO valor SEMI
    (54) imprimir -> . PRINT valor SEMI
    (55) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (56) imprimir -> . PRINT bconcat
    (57) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (58) imprimir -> . ECHO bconcat
    (59) imprimir -> . ECHO operaciones_mat SEMI
    (60) imprimir -> . PRINT operaciones_mat SEMI
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (131) funciones -> . funcion_nparams
    (132) funciones -> . proteccion funcion_nparams
    (133) funciones -> . funcion_blank
    (134) funciones -> . proteccion funcion_blank
    (135) funciones -> . funcion_void
    (144) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (43) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (44) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (162) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (163) lectura -> . READLINE LPAREN RPAREN SEMI
    (91) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (93) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (78) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (88) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (89) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (90) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (99) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (64) condicion_ifelse -> . condicion_if
    (65) condicion_ifelse -> . condicion_if condicion_else
    (66) condicion_ifelse -> . condicion_if condicion_elseif
    (67) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (63) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (62) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (94) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (95) bcase -> . CASE ENTERO COLON
    (96) bcase -> . CASE CADENA COLON
    (168) bgoto -> . GOTO NOMBRE SEMI
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (169) bcortes -> . EXIT SEMI
    (170) bcortes -> . BREAK SEMI
    (171) bcortes -> . DEFAULT SEMI
    (172) bcortes -> . CONTINUE SEMI
    (145) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (164) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (165) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (173) otros -> . SMALLER NOMBRE GREATER
    (174) otros -> . NOMBRE COLON
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI
    (166) comment -> . COMENTARIOS
    (167) comment -> . DOC_COMENTARIOS
    (207) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (177) simbolos -> . LPAREN RPAREN
    (178) simbolos -> . LPAREN
    (179) simbolos -> . RPAREN
    (180) simbolos -> . LBRACKET RBRACKET
    (181) simbolos -> . LBRACKET
    (182) simbolos -> . RBRACKET
    (183) simbolos -> . LBRACE RBRACE
    (184) simbolos -> . LBRACE
    (185) simbolos -> . RBRACE instrucciones
    (186) simbolos -> . OPEN_TAG CLOSE_TAG
    (187) simbolos -> . OPEN_TAG
    (188) simbolos -> . CLOSE_TAG
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (138) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (141) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (61) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (159) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    ECHO            shift and go to state 32
    PRINT           shift and go to state 33
    VARIABLE        shift and go to state 39
    VAR             shift and go to state 40
    NOMBRE          shift and go to state 36
    DEFINE          shift and go to state 47
    READLINE        shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 53
    FOR             shift and go to state 54
    FOREACH         shift and go to state 55
    TRY             shift and go to state 56
    ELSE            shift and go to state 58
    ELSEIF          shift and go to state 59
    SWITCH          shift and go to state 60
    CASE            shift and go to state 61
    GOTO            shift and go to state 62
    EXIT            shift and go to state 63
    BREAK           shift and go to state 64
    DEFAULT         shift and go to state 65
    CONTINUE        shift and go to state 66
    RAND            shift and go to state 67
    FWRITE          shift and go to state 68
    TRIM            shift and go to state 69
    SMALLER         shift and go to state 70
    RETURN          shift and go to state 72
    COMENTARIOS     shift and go to state 73
    DOC_COMENTARIOS shift and go to state 74
    LPAREN          shift and go to state 34
    CADENA          shift and go to state 48
    RPAREN          shift and go to state 35
    LBRACKET        shift and go to state 37
    RBRACKET        shift and go to state 38
    LBRACE          shift and go to state 51
    RBRACE          shift and go to state 52
    OPEN_TAG        shift and go to state 75
    CLOSE_TAG       shift and go to state 76
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80
    FUNCTION        shift and go to state 81
    IF              shift and go to state 82
    SEMI            reduce using rule 159 (empty -> .)
    $end            reduce using rule 159 (empty -> .)

  ! RBRACE          [ reduce using rule 159 (empty -> .) ]
  ! BREAK           [ reduce using rule 159 (empty -> .) ]

    cuerpo                         shift and go to state 382
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    incrementOp                    shift and go to state 11
    bforeach                       shift and go to state 12
    btry                           shift and go to state 13
    condicion_ifelse               shift and go to state 14
    condicion_else                 shift and go to state 15
    condicion_elseif               shift and go to state 16
    bswitch                        shift and go to state 17
    bcase                          shift and go to state 18
    bgoto                          shift and go to state 19
    bcolas                         shift and go to state 20
    bpila                          shift and go to state 21
    bcortes                        shift and go to state 22
    brand                          shift and go to state 23
    escribir                       shift and go to state 24
    btrim                          shift and go to state 25
    otros                          shift and go to state 26
    breturn                        shift and go to state 27
    comment                        shift and go to state 28
    casting                        shift and go to state 29
    bconcat                        shift and go to state 30
    simbolos                       shift and go to state 31
    proteccion                     shift and go to state 41
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43
    funcion_nparams                shift and go to state 44
    funcion_blank                  shift and go to state 45
    funcion_void                   shift and go to state 46
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 71

state 348

    (99) btry -> TRY LBRACE stc_bloque_def RBRACE catches .
    (100) catches -> catches . CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    $end            reduce using rule 99 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    RBRACE          reduce using rule 99 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    SEMI            reduce using rule 99 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    BREAK           reduce using rule 99 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    CATCH           shift and go to state 383


state 349

    (101) catches -> empty .

    CATCH           reduce using rule 101 (catches -> empty .)
    $end            reduce using rule 101 (catches -> empty .)
    RBRACE          reduce using rule 101 (catches -> empty .)
    SEMI            reduce using rule 101 (catches -> empty .)
    BREAK           reduce using rule 101 (catches -> empty .)


state 350

    (62) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . incrementOp
    (11) cuerpo -> . bforeach
    (12) cuerpo -> . btry
    (13) cuerpo -> . condicion_ifelse
    (14) cuerpo -> . condicion_else
    (15) cuerpo -> . condicion_elseif
    (16) cuerpo -> . bswitch
    (17) cuerpo -> . bcase
    (18) cuerpo -> . bgoto
    (19) cuerpo -> . bcolas
    (20) cuerpo -> . bpila
    (21) cuerpo -> . bcortes
    (22) cuerpo -> . brand
    (23) cuerpo -> . escribir
    (24) cuerpo -> . btrim
    (25) cuerpo -> . otros
    (26) cuerpo -> . breturn
    (27) cuerpo -> . comment
    (28) cuerpo -> . casting
    (29) cuerpo -> . bconcat
    (30) cuerpo -> . simbolos
    (53) imprimir -> . ECHO valor SEMI
    (54) imprimir -> . PRINT valor SEMI
    (55) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (56) imprimir -> . PRINT bconcat
    (57) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (58) imprimir -> . ECHO bconcat
    (59) imprimir -> . ECHO operaciones_mat SEMI
    (60) imprimir -> . PRINT operaciones_mat SEMI
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (131) funciones -> . funcion_nparams
    (132) funciones -> . proteccion funcion_nparams
    (133) funciones -> . funcion_blank
    (134) funciones -> . proteccion funcion_blank
    (135) funciones -> . funcion_void
    (144) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (43) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (44) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (162) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (163) lectura -> . READLINE LPAREN RPAREN SEMI
    (91) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (93) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (78) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (88) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (89) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (90) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (99) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (64) condicion_ifelse -> . condicion_if
    (65) condicion_ifelse -> . condicion_if condicion_else
    (66) condicion_ifelse -> . condicion_if condicion_elseif
    (67) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (63) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (62) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (94) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (95) bcase -> . CASE ENTERO COLON
    (96) bcase -> . CASE CADENA COLON
    (168) bgoto -> . GOTO NOMBRE SEMI
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (169) bcortes -> . EXIT SEMI
    (170) bcortes -> . BREAK SEMI
    (171) bcortes -> . DEFAULT SEMI
    (172) bcortes -> . CONTINUE SEMI
    (145) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (164) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (165) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (173) otros -> . SMALLER NOMBRE GREATER
    (174) otros -> . NOMBRE COLON
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI
    (166) comment -> . COMENTARIOS
    (167) comment -> . DOC_COMENTARIOS
    (207) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (177) simbolos -> . LPAREN RPAREN
    (178) simbolos -> . LPAREN
    (179) simbolos -> . RPAREN
    (180) simbolos -> . LBRACKET RBRACKET
    (181) simbolos -> . LBRACKET
    (182) simbolos -> . RBRACKET
    (183) simbolos -> . LBRACE RBRACE
    (184) simbolos -> . LBRACE
    (185) simbolos -> . RBRACE instrucciones
    (186) simbolos -> . OPEN_TAG CLOSE_TAG
    (187) simbolos -> . OPEN_TAG
    (188) simbolos -> . CLOSE_TAG
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (138) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (141) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (61) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (159) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 32
    PRINT           shift and go to state 33
    VARIABLE        shift and go to state 39
    VAR             shift and go to state 40
    NOMBRE          shift and go to state 36
    DEFINE          shift and go to state 47
    READLINE        shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 53
    FOR             shift and go to state 54
    FOREACH         shift and go to state 55
    TRY             shift and go to state 56
    ELSE            shift and go to state 58
    ELSEIF          shift and go to state 59
    SWITCH          shift and go to state 60
    CASE            shift and go to state 61
    GOTO            shift and go to state 62
    EXIT            shift and go to state 63
    BREAK           shift and go to state 64
    DEFAULT         shift and go to state 65
    CONTINUE        shift and go to state 66
    RAND            shift and go to state 67
    FWRITE          shift and go to state 68
    TRIM            shift and go to state 69
    SMALLER         shift and go to state 70
    RETURN          shift and go to state 72
    COMENTARIOS     shift and go to state 73
    DOC_COMENTARIOS shift and go to state 74
    LPAREN          shift and go to state 34
    CADENA          shift and go to state 48
    RPAREN          shift and go to state 35
    LBRACKET        shift and go to state 37
    RBRACKET        shift and go to state 38
    LBRACE          shift and go to state 51
    RBRACE          shift and go to state 52
    OPEN_TAG        shift and go to state 75
    CLOSE_TAG       shift and go to state 76
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80
    FUNCTION        shift and go to state 81
    IF              shift and go to state 82

  ! RBRACE          [ reduce using rule 159 (empty -> .) ]

    cuerpo                         shift and go to state 384
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    incrementOp                    shift and go to state 11
    bforeach                       shift and go to state 12
    btry                           shift and go to state 13
    condicion_ifelse               shift and go to state 14
    condicion_else                 shift and go to state 15
    condicion_elseif               shift and go to state 16
    bswitch                        shift and go to state 17
    bcase                          shift and go to state 18
    bgoto                          shift and go to state 19
    bcolas                         shift and go to state 20
    bpila                          shift and go to state 21
    bcortes                        shift and go to state 22
    brand                          shift and go to state 23
    escribir                       shift and go to state 24
    btrim                          shift and go to state 25
    otros                          shift and go to state 26
    breturn                        shift and go to state 27
    comment                        shift and go to state 28
    casting                        shift and go to state 29
    bconcat                        shift and go to state 30
    simbolos                       shift and go to state 31
    proteccion                     shift and go to state 41
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43
    funcion_nparams                shift and go to state 44
    funcion_blank                  shift and go to state 45
    funcion_void                   shift and go to state 46
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 71

state 351

    (94) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE . innerSwitch RBRACE
    (97) innerSwitch -> . bcase cuerpo BREAK SEMI
    (98) innerSwitch -> . bcase cuerpo BREAK SEMI innerSwitch
    (95) bcase -> . CASE ENTERO COLON
    (96) bcase -> . CASE CADENA COLON

    CASE            shift and go to state 61

    innerSwitch                    shift and go to state 385
    bcase                          shift and go to state 386

state 352

    (145) brand -> RAND LPAREN ENTERO COMMA ENTERO . RPAREN SEMI

    RPAREN          shift and go to state 387


state 353

    (164) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA . RPAREN SEMI

    RPAREN          shift and go to state 388


state 354

    (165) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE . RPAREN RPAREN SEMI

    RPAREN          shift and go to state 389


state 355

    (138) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN . stc_bloque_def
    (81) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 227

    stc_bloque_def                 shift and go to state 390

state 356

    (142) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .

    $end            reduce using rule 142 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 142 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    SEMI            reduce using rule 142 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    BREAK           reduce using rule 142 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)


state 357

    (143) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE . empty RBRACE
    (81) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (159) empty -> .
    (79) stc_bloque -> . stc_bloque SEMI cuerpo
    (80) stc_bloque -> . breturn
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI

    RBRACE          reduce using rule 159 (empty -> .)
    SEMI            reduce using rule 159 (empty -> .)
    RETURN          shift and go to state 72

    empty                          shift and go to state 391
    stc_bloque                     shift and go to state 298
    breturn                        shift and go to state 299

state 358

    (141) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON . VOID LBRACE empty RBRACE

    VOID            shift and go to state 392


state 359

    (61) condicion_if -> IF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . incrementOp
    (11) cuerpo -> . bforeach
    (12) cuerpo -> . btry
    (13) cuerpo -> . condicion_ifelse
    (14) cuerpo -> . condicion_else
    (15) cuerpo -> . condicion_elseif
    (16) cuerpo -> . bswitch
    (17) cuerpo -> . bcase
    (18) cuerpo -> . bgoto
    (19) cuerpo -> . bcolas
    (20) cuerpo -> . bpila
    (21) cuerpo -> . bcortes
    (22) cuerpo -> . brand
    (23) cuerpo -> . escribir
    (24) cuerpo -> . btrim
    (25) cuerpo -> . otros
    (26) cuerpo -> . breturn
    (27) cuerpo -> . comment
    (28) cuerpo -> . casting
    (29) cuerpo -> . bconcat
    (30) cuerpo -> . simbolos
    (53) imprimir -> . ECHO valor SEMI
    (54) imprimir -> . PRINT valor SEMI
    (55) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (56) imprimir -> . PRINT bconcat
    (57) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (58) imprimir -> . ECHO bconcat
    (59) imprimir -> . ECHO operaciones_mat SEMI
    (60) imprimir -> . PRINT operaciones_mat SEMI
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (131) funciones -> . funcion_nparams
    (132) funciones -> . proteccion funcion_nparams
    (133) funciones -> . funcion_blank
    (134) funciones -> . proteccion funcion_blank
    (135) funciones -> . funcion_void
    (144) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (43) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (44) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (162) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (163) lectura -> . READLINE LPAREN RPAREN SEMI
    (91) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (93) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (78) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (88) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (89) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (90) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (99) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (64) condicion_ifelse -> . condicion_if
    (65) condicion_ifelse -> . condicion_if condicion_else
    (66) condicion_ifelse -> . condicion_if condicion_elseif
    (67) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (63) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (62) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (94) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (95) bcase -> . CASE ENTERO COLON
    (96) bcase -> . CASE CADENA COLON
    (168) bgoto -> . GOTO NOMBRE SEMI
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (169) bcortes -> . EXIT SEMI
    (170) bcortes -> . BREAK SEMI
    (171) bcortes -> . DEFAULT SEMI
    (172) bcortes -> . CONTINUE SEMI
    (145) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (164) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (165) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (173) otros -> . SMALLER NOMBRE GREATER
    (174) otros -> . NOMBRE COLON
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI
    (166) comment -> . COMENTARIOS
    (167) comment -> . DOC_COMENTARIOS
    (207) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (177) simbolos -> . LPAREN RPAREN
    (178) simbolos -> . LPAREN
    (179) simbolos -> . RPAREN
    (180) simbolos -> . LBRACKET RBRACKET
    (181) simbolos -> . LBRACKET
    (182) simbolos -> . RBRACKET
    (183) simbolos -> . LBRACE RBRACE
    (184) simbolos -> . LBRACE
    (185) simbolos -> . RBRACE instrucciones
    (186) simbolos -> . OPEN_TAG CLOSE_TAG
    (187) simbolos -> . OPEN_TAG
    (188) simbolos -> . CLOSE_TAG
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (138) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (141) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (61) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (159) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 32
    PRINT           shift and go to state 33
    VARIABLE        shift and go to state 39
    VAR             shift and go to state 40
    NOMBRE          shift and go to state 36
    DEFINE          shift and go to state 47
    READLINE        shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 53
    FOR             shift and go to state 54
    FOREACH         shift and go to state 55
    TRY             shift and go to state 56
    ELSE            shift and go to state 58
    ELSEIF          shift and go to state 59
    SWITCH          shift and go to state 60
    CASE            shift and go to state 61
    GOTO            shift and go to state 62
    EXIT            shift and go to state 63
    BREAK           shift and go to state 64
    DEFAULT         shift and go to state 65
    CONTINUE        shift and go to state 66
    RAND            shift and go to state 67
    FWRITE          shift and go to state 68
    TRIM            shift and go to state 69
    SMALLER         shift and go to state 70
    RETURN          shift and go to state 72
    COMENTARIOS     shift and go to state 73
    DOC_COMENTARIOS shift and go to state 74
    LPAREN          shift and go to state 34
    CADENA          shift and go to state 48
    RPAREN          shift and go to state 35
    LBRACKET        shift and go to state 37
    RBRACKET        shift and go to state 38
    LBRACE          shift and go to state 51
    RBRACE          shift and go to state 52
    OPEN_TAG        shift and go to state 75
    CLOSE_TAG       shift and go to state 76
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80
    FUNCTION        shift and go to state 81
    IF              shift and go to state 82

  ! RBRACE          [ reduce using rule 159 (empty -> .) ]

    cuerpo                         shift and go to state 393
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    incrementOp                    shift and go to state 11
    bforeach                       shift and go to state 12
    btry                           shift and go to state 13
    condicion_ifelse               shift and go to state 14
    condicion_else                 shift and go to state 15
    condicion_elseif               shift and go to state 16
    bswitch                        shift and go to state 17
    bcase                          shift and go to state 18
    bgoto                          shift and go to state 19
    bcolas                         shift and go to state 20
    bpila                          shift and go to state 21
    bcortes                        shift and go to state 22
    brand                          shift and go to state 23
    escribir                       shift and go to state 24
    btrim                          shift and go to state 25
    otros                          shift and go to state 26
    breturn                        shift and go to state 27
    comment                        shift and go to state 28
    casting                        shift and go to state 29
    bconcat                        shift and go to state 30
    simbolos                       shift and go to state 31
    proteccion                     shift and go to state 41
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43
    funcion_nparams                shift and go to state 44
    funcion_blank                  shift and go to state 45
    funcion_void                   shift and go to state 46
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 71

state 360

    (57) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .

    $end            reduce using rule 57 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    RBRACE          reduce using rule 57 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    SEMI            reduce using rule 57 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    BREAK           reduce using rule 57 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)


state 361

    (127) operaciones_mat_par -> LPAREN valor operadores valor RPAREN .

    SEMI            reduce using rule 127 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)
    RPAREN          reduce using rule 127 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)


state 362

    (128) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .

    SEMI            reduce using rule 128 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)
    RPAREN          reduce using rule 128 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)


state 363

    (129) operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .

    SEMI            reduce using rule 129 (operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .)
    RPAREN          reduce using rule 129 (operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .)


state 364

    (130) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN . operadores valor
    (102) operadores -> . SUMA
    (103) operadores -> . RESTA
    (104) operadores -> . MULTIPLICACION
    (105) operadores -> . DIVISION
    (106) operadores -> . MODULO

    SUMA            shift and go to state 174
    RESTA           shift and go to state 175
    MULTIPLICACION  shift and go to state 176
    DIVISION        shift and go to state 177
    MODULO          shift and go to state 178

    operadores                     shift and go to state 394

state 365

    (210) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .

    $end            reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RBRACE          reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    SEMI            reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BREAK           reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RPAREN          reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    COMMA           reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    VARIABLE        reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    LPAREN          reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    CADENA          reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BOOLEANO        reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    ENTERO          reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    DECIMAL         reduce using rule 210 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)


state 366

    (160) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 395


state 367

    (161) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN . SEMI

    SEMI            shift and go to state 396


state 368

    (207) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 397


state 369

    (156) array_def -> ARRAY LPAREN array_elmnt RPAREN .

    SEMI            reduce using rule 156 (array_def -> ARRAY LPAREN array_elmnt RPAREN .)


state 370

    (157) array_elmnt -> array_elmnt COMMA . valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    VARIABLE        shift and go to state 313
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 398
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 371

    (43) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN . SEMI

    SEMI            shift and go to state 399


state 372

    (44) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN . SEMI

    SEMI            shift and go to state 400


state 373

    (74) condicion -> LPAREN VARIABLE operadores valor . RPAREN operador_logico valor
    (75) condicion -> LPAREN VARIABLE operadores valor . RPAREN condicion_booleana valor

    RPAREN          shift and go to state 401


state 374

    (91) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque . RBRACE
    (79) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 402
    SEMI            shift and go to state 347


state 375

    (92) bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .
    (79) stc_bloque -> stc_bloque . SEMI cuerpo

  ! shift/reduce conflict for SEMI resolved as shift
    $end            reduce using rule 92 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    RBRACE          reduce using rule 92 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    BREAK           reduce using rule 92 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    SEMI            shift and go to state 347

  ! SEMI            [ reduce using rule 92 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .) ]


state 376

    (175) comprobacion -> NOMBRE LPAREN . valor RPAREN
    (176) comprobacion -> NOMBRE LPAREN . VARIABLE RPAREN
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    VARIABLE        shift and go to state 404
    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 403
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 377

    (78) bfor -> FOR LPAREN asignacion condicion SEMI for_incr . RPAREN stc_bloque_def

    RPAREN          shift and go to state 405


state 378

    (82) for_incr -> VARIABLE . SUMA SUMA
    (84) for_incr -> VARIABLE . RESTA RESTA
    (86) for_incr -> VARIABLE . SUMA EQUALS numero
    (87) for_incr -> VARIABLE . RESTA EQUALS numero

    SUMA            shift and go to state 406
    RESTA           shift and go to state 407


state 379

    (83) for_incr -> SUMA . SUMA VARIABLE

    SUMA            shift and go to state 408


state 380

    (85) for_incr -> RESTA . RESTA VARIABLE

    RESTA           shift and go to state 409


state 381

    (90) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN . stc_bloque_def
    (81) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 227

    stc_bloque_def                 shift and go to state 410

state 382

    (79) stc_bloque -> stc_bloque SEMI cuerpo .

    RBRACE          reduce using rule 79 (stc_bloque -> stc_bloque SEMI cuerpo .)
    SEMI            reduce using rule 79 (stc_bloque -> stc_bloque SEMI cuerpo .)
    $end            reduce using rule 79 (stc_bloque -> stc_bloque SEMI cuerpo .)
    BREAK           reduce using rule 79 (stc_bloque -> stc_bloque SEMI cuerpo .)


state 383

    (100) catches -> catches CATCH . LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 411


state 384

    (62) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 412


state 385

    (94) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch . RBRACE

    RBRACE          shift and go to state 413


state 386

    (97) innerSwitch -> bcase . cuerpo BREAK SEMI
    (98) innerSwitch -> bcase . cuerpo BREAK SEMI innerSwitch
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . bwhile
    (8) cuerpo -> . bdo
    (9) cuerpo -> . bfor
    (10) cuerpo -> . incrementOp
    (11) cuerpo -> . bforeach
    (12) cuerpo -> . btry
    (13) cuerpo -> . condicion_ifelse
    (14) cuerpo -> . condicion_else
    (15) cuerpo -> . condicion_elseif
    (16) cuerpo -> . bswitch
    (17) cuerpo -> . bcase
    (18) cuerpo -> . bgoto
    (19) cuerpo -> . bcolas
    (20) cuerpo -> . bpila
    (21) cuerpo -> . bcortes
    (22) cuerpo -> . brand
    (23) cuerpo -> . escribir
    (24) cuerpo -> . btrim
    (25) cuerpo -> . otros
    (26) cuerpo -> . breturn
    (27) cuerpo -> . comment
    (28) cuerpo -> . casting
    (29) cuerpo -> . bconcat
    (30) cuerpo -> . simbolos
    (53) imprimir -> . ECHO valor SEMI
    (54) imprimir -> . PRINT valor SEMI
    (55) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (56) imprimir -> . PRINT bconcat
    (57) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (58) imprimir -> . ECHO bconcat
    (59) imprimir -> . ECHO operaciones_mat SEMI
    (60) imprimir -> . PRINT operaciones_mat SEMI
    (31) asignacion -> . VARIABLE EQUALS valor SEMI
    (32) asignacion -> . VAR asignacion
    (33) asignacion -> . proteccion asignacion
    (34) asignacion -> . VARIABLE EQUALS brand
    (35) asignacion -> . VARIABLE EQUALS escribir
    (36) asignacion -> . VARIABLE EQUALS btrim
    (37) asignacion -> . VARIABLE EQUALS lectura
    (38) asignacion -> . VARIABLE EQUALS bconcat
    (39) asignacion -> . asignacion_array
    (40) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (41) asignacion -> . aumentoCasting
    (131) funciones -> . funcion_nparams
    (132) funciones -> . proteccion funcion_nparams
    (133) funciones -> . funcion_blank
    (134) funciones -> . proteccion funcion_blank
    (135) funciones -> . funcion_void
    (144) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (43) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (44) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (162) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (163) lectura -> . READLINE LPAREN RPAREN SEMI
    (91) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (92) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (93) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (78) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (88) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (89) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (90) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (99) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (64) condicion_ifelse -> . condicion_if
    (65) condicion_ifelse -> . condicion_if condicion_else
    (66) condicion_ifelse -> . condicion_if condicion_elseif
    (67) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (63) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (62) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (94) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (95) bcase -> . CASE ENTERO COLON
    (96) bcase -> . CASE CADENA COLON
    (168) bgoto -> . GOTO NOMBRE SEMI
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (169) bcortes -> . EXIT SEMI
    (170) bcortes -> . BREAK SEMI
    (171) bcortes -> . DEFAULT SEMI
    (172) bcortes -> . CONTINUE SEMI
    (145) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (164) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (165) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (173) otros -> . SMALLER NOMBRE GREATER
    (174) otros -> . NOMBRE COLON
    (150) breturn -> . empty
    (151) breturn -> . RETURN SEMI
    (152) breturn -> . RETURN NULL SEMI
    (153) breturn -> . RETURN VARIABLE SEMI
    (154) breturn -> . RETURN BOOLEANO SEMI
    (166) comment -> . COMENTARIOS
    (167) comment -> . DOC_COMENTARIOS
    (207) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (193) bconcat -> . CADENA CONCAT CADENA SEMI
    (194) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (195) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (196) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (197) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (177) simbolos -> . LPAREN RPAREN
    (178) simbolos -> . LPAREN
    (179) simbolos -> . RPAREN
    (180) simbolos -> . LBRACKET RBRACKET
    (181) simbolos -> . LBRACKET
    (182) simbolos -> . RBRACKET
    (183) simbolos -> . LBRACE RBRACE
    (184) simbolos -> . LBRACE
    (185) simbolos -> . RBRACE instrucciones
    (186) simbolos -> . OPEN_TAG CLOSE_TAG
    (187) simbolos -> . OPEN_TAG
    (188) simbolos -> . CLOSE_TAG
    (146) proteccion -> . PUBLIC
    (147) proteccion -> . PRIVATE
    (148) proteccion -> . PROTECTED
    (149) proteccion -> . STATIC
    (42) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (209) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (210) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (138) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (142) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (143) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (141) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (61) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (159) empty -> .

  ! shift/reduce conflict for BREAK resolved as shift
    ECHO            shift and go to state 32
    PRINT           shift and go to state 33
    VARIABLE        shift and go to state 39
    VAR             shift and go to state 40
    NOMBRE          shift and go to state 36
    DEFINE          shift and go to state 47
    READLINE        shift and go to state 49
    WHILE           shift and go to state 50
    DO              shift and go to state 53
    FOR             shift and go to state 54
    FOREACH         shift and go to state 55
    TRY             shift and go to state 56
    ELSE            shift and go to state 58
    ELSEIF          shift and go to state 59
    SWITCH          shift and go to state 60
    CASE            shift and go to state 61
    GOTO            shift and go to state 62
    EXIT            shift and go to state 63
    BREAK           shift and go to state 64
    DEFAULT         shift and go to state 65
    CONTINUE        shift and go to state 66
    RAND            shift and go to state 67
    FWRITE          shift and go to state 68
    TRIM            shift and go to state 69
    SMALLER         shift and go to state 70
    RETURN          shift and go to state 72
    COMENTARIOS     shift and go to state 73
    DOC_COMENTARIOS shift and go to state 74
    LPAREN          shift and go to state 34
    CADENA          shift and go to state 48
    RPAREN          shift and go to state 35
    LBRACKET        shift and go to state 37
    RBRACKET        shift and go to state 38
    LBRACE          shift and go to state 51
    RBRACE          shift and go to state 52
    OPEN_TAG        shift and go to state 75
    CLOSE_TAG       shift and go to state 76
    PUBLIC          shift and go to state 77
    PRIVATE         shift and go to state 78
    PROTECTED       shift and go to state 79
    STATIC          shift and go to state 80
    FUNCTION        shift and go to state 81
    IF              shift and go to state 82

  ! BREAK           [ reduce using rule 159 (empty -> .) ]

    bcase                          shift and go to state 18
    cuerpo                         shift and go to state 414
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    bwhile                         shift and go to state 8
    bdo                            shift and go to state 9
    bfor                           shift and go to state 10
    incrementOp                    shift and go to state 11
    bforeach                       shift and go to state 12
    btry                           shift and go to state 13
    condicion_ifelse               shift and go to state 14
    condicion_else                 shift and go to state 15
    condicion_elseif               shift and go to state 16
    bswitch                        shift and go to state 17
    bgoto                          shift and go to state 19
    bcolas                         shift and go to state 20
    bpila                          shift and go to state 21
    bcortes                        shift and go to state 22
    brand                          shift and go to state 23
    escribir                       shift and go to state 24
    btrim                          shift and go to state 25
    otros                          shift and go to state 26
    breturn                        shift and go to state 27
    comment                        shift and go to state 28
    casting                        shift and go to state 29
    bconcat                        shift and go to state 30
    simbolos                       shift and go to state 31
    proteccion                     shift and go to state 41
    asignacion_array               shift and go to state 42
    aumentoCasting                 shift and go to state 43
    funcion_nparams                shift and go to state 44
    funcion_blank                  shift and go to state 45
    funcion_void                   shift and go to state 46
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 71

state 387

    (145) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN . SEMI

    SEMI            shift and go to state 415


state 388

    (164) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN . SEMI

    SEMI            shift and go to state 416


state 389

    (165) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN . RPAREN SEMI

    RPAREN          shift and go to state 417


state 390

    (138) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .

    $end            reduce using rule 138 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 138 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    SEMI            reduce using rule 138 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    BREAK           reduce using rule 138 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)


state 391

    (143) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty . RBRACE
    (150) breturn -> empty .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 418
    SEMI            reduce using rule 150 (breturn -> empty .)

  ! RBRACE          [ reduce using rule 150 (breturn -> empty .) ]


state 392

    (141) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID . LBRACE empty RBRACE

    LBRACE          shift and go to state 419


state 393

    (61) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 420


state 394

    (130) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores . valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    VARIABLE        shift and go to state 313
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 421
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 395

    (160) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .

    $end            reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    AND             reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    OR              reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    XOR             reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 160 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)


state 396

    (161) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .

    $end            reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    AND             reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    OR              reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    XOR             reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 161 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)


state 397

    (207) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 207 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 207 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 207 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    BREAK           reduce using rule 207 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 398

    (157) array_elmnt -> array_elmnt COMMA valor .

    RPAREN          reduce using rule 157 (array_elmnt -> array_elmnt COMMA valor .)
    COMMA           reduce using rule 157 (array_elmnt -> array_elmnt COMMA valor .)


state 399

    (43) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .

    $end            reduce using rule 43 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    RBRACE          reduce using rule 43 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    SEMI            reduce using rule 43 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    BREAK           reduce using rule 43 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)


state 400

    (44) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .

    $end            reduce using rule 44 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    RBRACE          reduce using rule 44 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    SEMI            reduce using rule 44 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    BREAK           reduce using rule 44 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)


state 401

    (74) condicion -> LPAREN VARIABLE operadores valor RPAREN . operador_logico valor
    (75) condicion -> LPAREN VARIABLE operadores valor RPAREN . condicion_booleana valor
    (107) operador_logico -> . SMALLER
    (108) operador_logico -> . GREATER
    (109) operador_logico -> . IS_SMALLER_OR_EQUAL
    (110) operador_logico -> . IS_GREATER_OR_EQUAL
    (116) condicion_booleana -> . AND
    (117) condicion_booleana -> . OR
    (118) condicion_booleana -> . XOR
    (119) condicion_booleana -> . IS_EQUAL
    (120) condicion_booleana -> . IS_NOT_EQUAL
    (121) condicion_booleana -> . IS_IDENTICAL
    (122) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 289
    GREATER         shift and go to state 290
    IS_SMALLER_OR_EQUAL shift and go to state 291
    IS_GREATER_OR_EQUAL shift and go to state 292
    AND             shift and go to state 280
    OR              shift and go to state 281
    XOR             shift and go to state 282
    IS_EQUAL        shift and go to state 283
    IS_NOT_EQUAL    shift and go to state 284
    IS_IDENTICAL    shift and go to state 285
    IS_NOT_IDENTICAL shift and go to state 286

    operador_logico                shift and go to state 422
    condicion_booleana             shift and go to state 423

state 402

    (91) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .

    $end            reduce using rule 91 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    RBRACE          reduce using rule 91 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 91 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    BREAK           reduce using rule 91 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)


state 403

    (175) comprobacion -> NOMBRE LPAREN valor . RPAREN

    RPAREN          shift and go to state 424


state 404

    (176) comprobacion -> NOMBRE LPAREN VARIABLE . RPAREN
    (160) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 425
    EQUALS          shift and go to state 182


state 405

    (78) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN . stc_bloque_def
    (81) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 227

    stc_bloque_def                 shift and go to state 426

state 406

    (82) for_incr -> VARIABLE SUMA . SUMA
    (86) for_incr -> VARIABLE SUMA . EQUALS numero

    SUMA            shift and go to state 427
    EQUALS          shift and go to state 428


state 407

    (84) for_incr -> VARIABLE RESTA . RESTA
    (87) for_incr -> VARIABLE RESTA . EQUALS numero

    RESTA           shift and go to state 429
    EQUALS          shift and go to state 430


state 408

    (83) for_incr -> SUMA SUMA . VARIABLE

    VARIABLE        shift and go to state 431


state 409

    (85) for_incr -> RESTA RESTA . VARIABLE

    VARIABLE        shift and go to state 432


state 410

    (90) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .

    $end            reduce using rule 90 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 90 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 90 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    BREAK           reduce using rule 90 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)


state 411

    (100) catches -> catches CATCH LPAREN . NOMBRE VARIABLE RPAREN stc_bloque_def

    NOMBRE          shift and go to state 433


state 412

    (62) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    $end            reduce using rule 62 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 62 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 62 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 62 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    ELSE            reduce using rule 62 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 413

    (94) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .

    $end            reduce using rule 94 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    RBRACE          reduce using rule 94 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    SEMI            reduce using rule 94 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    BREAK           reduce using rule 94 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)


state 414

    (97) innerSwitch -> bcase cuerpo . BREAK SEMI
    (98) innerSwitch -> bcase cuerpo . BREAK SEMI innerSwitch

    BREAK           shift and go to state 434


state 415

    (145) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .

    $end            reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RBRACE          reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    SEMI            reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BREAK           reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RPAREN          reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    COMMA           reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    VARIABLE        reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    LPAREN          reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    CADENA          reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BOOLEANO        reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    ENTERO          reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    DECIMAL         reduce using rule 145 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)


state 416

    (164) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .

    $end            reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    SEMI            reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BREAK           reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    COMMA           reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    CADENA          reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 164 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)


state 417

    (165) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN . SEMI

    SEMI            shift and go to state 435


state 418

    (143) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .

    $end            reduce using rule 143 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    RBRACE          reduce using rule 143 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    SEMI            reduce using rule 143 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    BREAK           reduce using rule 143 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)


state 419

    (141) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE . empty RBRACE
    (159) empty -> .

    RBRACE          reduce using rule 159 (empty -> .)

    empty                          shift and go to state 436

state 420

    (61) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 61 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    ELSEIF          reduce using rule 61 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 61 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 61 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 61 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 61 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 421

    (130) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .

    SEMI            reduce using rule 130 (operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .)
    RPAREN          reduce using rule 130 (operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .)


state 422

    (74) condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico . valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    VARIABLE        shift and go to state 313
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 437
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 423

    (75) condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana . valor
    (45) valor -> . tipoDato
    (46) valor -> . bcolas
    (47) valor -> . bpila
    (48) tipoDato -> . numero
    (49) tipoDato -> . CADENA
    (50) tipoDato -> . BOOLEANO
    (160) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (161) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    CADENA          shift and go to state 185
    BOOLEANO        shift and go to state 95
    VARIABLE        shift and go to state 313
    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    valor                          shift and go to state 438
    tipoDato                       shift and go to state 88
    bcolas                         shift and go to state 89
    bpila                          shift and go to state 90
    numero                         shift and go to state 94

state 424

    (175) comprobacion -> NOMBRE LPAREN valor RPAREN .

    RPAREN          reduce using rule 175 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    AND             reduce using rule 175 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    OR              reduce using rule 175 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    XOR             reduce using rule 175 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_EQUAL        reduce using rule 175 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_NOT_EQUAL    reduce using rule 175 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_IDENTICAL    reduce using rule 175 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 175 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    SEMI            reduce using rule 175 (comprobacion -> NOMBRE LPAREN valor RPAREN .)


state 425

    (176) comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .

    RPAREN          reduce using rule 176 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 176 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 176 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    XOR             reduce using rule 176 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_EQUAL        reduce using rule 176 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_NOT_EQUAL    reduce using rule 176 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_IDENTICAL    reduce using rule 176 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 176 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    SEMI            reduce using rule 176 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)


state 426

    (78) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .

    $end            reduce using rule 78 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 78 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    SEMI            reduce using rule 78 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    BREAK           reduce using rule 78 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)


state 427

    (82) for_incr -> VARIABLE SUMA SUMA .

    RPAREN          reduce using rule 82 (for_incr -> VARIABLE SUMA SUMA .)


state 428

    (86) for_incr -> VARIABLE SUMA EQUALS . numero
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    numero                         shift and go to state 439

state 429

    (84) for_incr -> VARIABLE RESTA RESTA .

    RPAREN          reduce using rule 84 (for_incr -> VARIABLE RESTA RESTA .)


state 430

    (87) for_incr -> VARIABLE RESTA EQUALS . numero
    (51) numero -> . ENTERO
    (52) numero -> . DECIMAL

    ENTERO          shift and go to state 85
    DECIMAL         shift and go to state 97

    numero                         shift and go to state 440

state 431

    (83) for_incr -> SUMA SUMA VARIABLE .

    RPAREN          reduce using rule 83 (for_incr -> SUMA SUMA VARIABLE .)


state 432

    (85) for_incr -> RESTA RESTA VARIABLE .

    RPAREN          reduce using rule 85 (for_incr -> RESTA RESTA VARIABLE .)


state 433

    (100) catches -> catches CATCH LPAREN NOMBRE . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 441


state 434

    (97) innerSwitch -> bcase cuerpo BREAK . SEMI
    (98) innerSwitch -> bcase cuerpo BREAK . SEMI innerSwitch

    SEMI            shift and go to state 442


state 435

    (165) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .

    $end            reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    SEMI            reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BREAK           reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    COMMA           reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    CADENA          reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 165 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)


state 436

    (141) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty . RBRACE

    RBRACE          shift and go to state 443


state 437

    (74) condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .

    RPAREN          reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    AND             reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    OR              reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    XOR             reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_EQUAL        reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_IDENTICAL    reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    SEMI            reduce using rule 74 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)


state 438

    (75) condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .

    RPAREN          reduce using rule 75 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    AND             reduce using rule 75 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    OR              reduce using rule 75 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    XOR             reduce using rule 75 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_EQUAL        reduce using rule 75 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 75 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 75 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 75 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    SEMI            reduce using rule 75 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)


state 439

    (86) for_incr -> VARIABLE SUMA EQUALS numero .

    RPAREN          reduce using rule 86 (for_incr -> VARIABLE SUMA EQUALS numero .)


state 440

    (87) for_incr -> VARIABLE RESTA EQUALS numero .

    RPAREN          reduce using rule 87 (for_incr -> VARIABLE RESTA EQUALS numero .)


state 441

    (100) catches -> catches CATCH LPAREN NOMBRE VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 444


state 442

    (97) innerSwitch -> bcase cuerpo BREAK SEMI .
    (98) innerSwitch -> bcase cuerpo BREAK SEMI . innerSwitch
    (97) innerSwitch -> . bcase cuerpo BREAK SEMI
    (98) innerSwitch -> . bcase cuerpo BREAK SEMI innerSwitch
    (95) bcase -> . CASE ENTERO COLON
    (96) bcase -> . CASE CADENA COLON

    RBRACE          reduce using rule 97 (innerSwitch -> bcase cuerpo BREAK SEMI .)
    CASE            shift and go to state 61

    bcase                          shift and go to state 386
    innerSwitch                    shift and go to state 445

state 443

    (141) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .

    $end            reduce using rule 141 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    RBRACE          reduce using rule 141 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    SEMI            reduce using rule 141 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    BREAK           reduce using rule 141 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)


state 444

    (100) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN . stc_bloque_def
    (81) stc_bloque_def -> . LBRACE stc_bloque RBRACE

    LBRACE          shift and go to state 227

    stc_bloque_def                 shift and go to state 446

state 445

    (98) innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch .

    RBRACE          reduce using rule 98 (innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch .)


state 446

    (100) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .

    CATCH           reduce using rule 100 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    $end            reduce using rule 100 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 100 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 100 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    BREAK           reduce using rule 100 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACE in state 51 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 145 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 151 resolved as shift
WARNING: shift/reduce conflict for AND in state 334 resolved as shift
WARNING: shift/reduce conflict for OR in state 334 resolved as shift
WARNING: shift/reduce conflict for XOR in state 334 resolved as shift
WARNING: shift/reduce conflict for IS_EQUAL in state 334 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_EQUAL in state 334 resolved as shift
WARNING: shift/reduce conflict for IS_IDENTICAL in state 334 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_IDENTICAL in state 334 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 347 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 347 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 350 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 359 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 375 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 386 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 391 resolved as shift
