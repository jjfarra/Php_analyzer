Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> imprimir
Rule 2     cuerpo -> asignacion
Rule 3     cuerpo -> funciones
Rule 4     cuerpo -> llamada_funcion
Rule 5     cuerpo -> constante
Rule 6     cuerpo -> lectura
Rule 7     cuerpo -> condicion_ifelse
Rule 8     cuerpo -> bwhile
Rule 9     cuerpo -> bdo
Rule 10    cuerpo -> bfor
Rule 11    cuerpo -> incrementOp
Rule 12    cuerpo -> bforeach
Rule 13    cuerpo -> btry
Rule 14    cuerpo -> bswitch
Rule 15    cuerpo -> bcase
Rule 16    cuerpo -> bgoto
Rule 17    cuerpo -> bcolas
Rule 18    cuerpo -> bpila
Rule 19    cuerpo -> bcortes
Rule 20    cuerpo -> brand
Rule 21    cuerpo -> escribir
Rule 22    cuerpo -> btrim
Rule 23    cuerpo -> otros
Rule 24    cuerpo -> breturn
Rule 25    cuerpo -> comment
Rule 26    cuerpo -> casting
Rule 27    cuerpo -> bconcat
Rule 28    cuerpo -> simbolos
Rule 29    asignacion -> VARIABLE EQUALS valor SEMI
Rule 30    asignacion -> VAR asignacion
Rule 31    asignacion -> proteccion asignacion
Rule 32    asignacion -> VARIABLE EQUALS brand
Rule 33    asignacion -> VARIABLE EQUALS escribir
Rule 34    asignacion -> VARIABLE EQUALS btrim
Rule 35    asignacion -> VARIABLE EQUALS lectura
Rule 36    asignacion -> VARIABLE EQUALS bconcat
Rule 37    asignacion -> asignacion_array
Rule 38    asignacion -> VARIABLE EQUALS operaciones_mat SEMI
Rule 39    asignacion -> aumentoCasting
Rule 40    asignacion -> VARIABLE EQUALS llamada_funcion
Rule 41    asignacion_array -> VARIABLE EQUALS array_def SEMI
Rule 42    constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
Rule 43    constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
Rule 44    valor -> tipoDato
Rule 45    valor -> bcolas
Rule 46    valor -> bpila
Rule 47    tipoDato -> numero
Rule 48    tipoDato -> CADENA
Rule 49    tipoDato -> BOOLEANO
Rule 50    numero -> ENTERO
Rule 51    numero -> DECIMAL
Rule 52    imprimir -> ECHO valor SEMI
Rule 53    imprimir -> PRINT valor SEMI
Rule 54    imprimir -> PRINT LPAREN valor RPAREN SEMI
Rule 55    imprimir -> PRINT bconcat
Rule 56    imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
Rule 57    imprimir -> ECHO bconcat
Rule 58    imprimir -> ECHO operaciones_mat SEMI
Rule 59    imprimir -> PRINT operaciones_mat SEMI
Rule 60    imprimir -> ECHO VARIABLE SEMI
Rule 61    imprimir -> PRINT VARIABLE SEMI
Rule 62    condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 63    condicion_if -> IF LPAREN condicion RPAREN llamada_funcion
Rule 64    condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 65    condicion_else -> ELSE LBRACE cuerpo RBRACE
Rule 66    condicion_ifelse -> condicion_if
Rule 67    condicion_ifelse -> condicion_if condicion_else
Rule 68    condicion_ifelse -> condicion_if condicion_elseif
Rule 69    condicion_ifelse -> condicion_if condicion_elseif condicion_else
Rule 70    condicion -> VARIABLE operador_logico VARIABLE
Rule 71    condicion -> valor operador_logico valor
Rule 72    condicion -> VARIABLE operador_logico valor
Rule 73    condicion -> VARIABLE condicion_booleana VARIABLE
Rule 74    condicion -> valor condicion_booleana valor
Rule 75    condicion -> VARIABLE condicion_booleana valor
Rule 76    condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor
Rule 77    condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
Rule 78    condicion -> condicion condicion_booleana condicion
Rule 79    condicion -> condicion condicion_booleana comprobacion
Rule 80    condicion -> aumentoCasting
Rule 81    condicion -> VARIABLE
Rule 82    bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
Rule 83    stc_bloque -> stc_bloque SEMI cuerpo
Rule 84    stc_bloque -> breturn
Rule 85    stc_bloque_def -> LBRACE stc_bloque RBRACE
Rule 86    stc_bloque_def -> LBRACE cuerpo RBRACE
Rule 87    for_incr -> VARIABLE SUMA SUMA
Rule 88    for_incr -> SUMA SUMA VARIABLE
Rule 89    for_incr -> VARIABLE RESTA RESTA
Rule 90    for_incr -> RESTA RESTA VARIABLE
Rule 91    for_incr -> VARIABLE SUMA EQUALS numero
Rule 92    for_incr -> VARIABLE RESTA EQUALS numero
Rule 93    incrementOp -> VARIABLE SUMA SUMA SEMI
Rule 94    incrementOp -> VARIABLE RESTA RESTA SEMI
Rule 95    bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
Rule 96    bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
Rule 97    bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque
Rule 98    bwhile -> WHILE LPAREN condicion RPAREN SEMI
Rule 99    bwhile -> <empty>
Rule 100   bdo -> DO LBRACE cuerpo RBRACE bwhile
Rule 101   bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
Rule 102   bcase -> CASE ENTERO COLON
Rule 103   bcase -> CASE CADENA COLON
Rule 104   innerSwitch -> bcase cuerpo BREAK SEMI
Rule 105   innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch
Rule 106   btry -> TRY LBRACE stc_bloque_def RBRACE catches
Rule 107   catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
Rule 108   catches -> empty
Rule 109   operadores -> SUMA
Rule 110   operadores -> RESTA
Rule 111   operadores -> MULTIPLICACION
Rule 112   operadores -> DIVISION
Rule 113   operadores -> MODULO
Rule 114   operador_logico -> SMALLER
Rule 115   operador_logico -> GREATER
Rule 116   operador_logico -> IS_SMALLER_OR_EQUAL
Rule 117   operador_logico -> IS_GREATER_OR_EQUAL
Rule 118   incrementos_mat -> MINUS_EQUAL
Rule 119   incrementos_mat -> MOD_EQUAL
Rule 120   incrementos_mat -> MUL_EQUAL
Rule 121   incrementos_mat -> PLUS_EQUAL
Rule 122   incrementos_mat -> DIV_EQUAL
Rule 123   condicion_booleana -> AND
Rule 124   condicion_booleana -> OR
Rule 125   condicion_booleana -> XOR
Rule 126   condicion_booleana -> IS_EQUAL
Rule 127   condicion_booleana -> IS_NOT_EQUAL
Rule 128   condicion_booleana -> IS_IDENTICAL
Rule 129   condicion_booleana -> IS_NOT_IDENTICAL
Rule 130   operaciones_mat -> valor operadores valor
Rule 131   operaciones_mat -> valor operadores operaciones_mat
Rule 132   operaciones_mat -> VARIABLE operadores VARIABLE
Rule 133   operaciones_mat -> operaciones_mat_par
Rule 134   operaciones_mat_par -> LPAREN valor operadores valor RPAREN
Rule 135   operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN
Rule 136   operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN
Rule 137   operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor
Rule 138   operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN
Rule 139   operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
Rule 140   funciones -> funcion_nparams
Rule 141   funciones -> proteccion funcion_nparams
Rule 142   funciones -> funcion_blank
Rule 143   funciones -> proteccion funcion_blank
Rule 144   funciones -> funcion_void
Rule 145   param -> VARIABLE
Rule 146   param -> asignacion
Rule 147   funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
Rule 148   params_list -> params_list COMMA param
Rule 149   params_list -> param
Rule 150   params_list -> empty
Rule 151   funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
Rule 152   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
Rule 153   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
Rule 154   llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI
Rule 155   brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
Rule 156   proteccion -> PUBLIC
Rule 157   proteccion -> PRIVATE
Rule 158   proteccion -> PROTECTED
Rule 159   proteccion -> STATIC
Rule 160   breturn -> empty
Rule 161   breturn -> RETURN SEMI
Rule 162   breturn -> RETURN NULL SEMI
Rule 163   breturn -> RETURN VARIABLE SEMI
Rule 164   breturn -> RETURN BOOLEANO SEMI
Rule 165   breturn -> breturn RBRACE
Rule 166   array_def -> ARRAY LPAREN RPAREN
Rule 167   array_def -> ARRAY LPAREN array_elmnt RPAREN
Rule 168   array_elmnt -> array_elmnt COMMA valor
Rule 169   array_elmnt -> valor
Rule 170   empty -> <empty>
Rule 171   bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
Rule 172   bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
Rule 173   lectura -> READLINE LPAREN CADENA RPAREN SEMI
Rule 174   lectura -> READLINE LPAREN RPAREN SEMI
Rule 175   escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
Rule 176   btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
Rule 177   comment -> COMENTARIOS
Rule 178   comment -> DOC_COMENTARIOS
Rule 179   bgoto -> GOTO NOMBRE SEMI
Rule 180   bcortes -> EXIT SEMI
Rule 181   bcortes -> BREAK SEMI
Rule 182   bcortes -> DEFAULT SEMI
Rule 183   bcortes -> CONTINUE SEMI
Rule 184   otros -> SMALLER NOMBRE GREATER
Rule 185   otros -> SMALLER DIVISION NOMBRE GREATER
Rule 186   otros -> NOMBRE COLON
Rule 187   comprobacion -> NOMBRE LPAREN valor RPAREN
Rule 188   comprobacion -> NOMBRE LPAREN VARIABLE RPAREN
Rule 189   simbolos -> LPAREN RPAREN
Rule 190   simbolos -> LPAREN
Rule 191   simbolos -> RPAREN
Rule 192   simbolos -> LBRACKET RBRACKET
Rule 193   simbolos -> LBRACKET
Rule 194   simbolos -> RBRACKET
Rule 195   simbolos -> LBRACE RBRACE
Rule 196   simbolos -> LBRACE
Rule 197   simbolos -> RBRACE instrucciones
Rule 198   simbolos -> OPEN_TAG CLOSE_TAG
Rule 199   simbolos -> OPEN_TAG
Rule 200   simbolos -> CLOSE_TAG
Rule 201   instrucciones -> condicion_else
Rule 202   instrucciones -> condicion_elseif
Rule 203   instrucciones -> bwhile
Rule 204   instrucciones -> bfor
Rule 205   instrucciones -> funciones
Rule 206   instrucciones -> bswitch
Rule 207   instrucciones -> bdo
Rule 208   bconcat -> CADENA CONCAT CADENA SEMI
Rule 209   bconcat -> VARIABLE CONCAT CADENA SEMI
Rule 210   bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI
Rule 211   bconcat -> CADENA CONCAT_EQUAL CADENA SEMI
Rule 212   bconcat -> VARIABLE CONCAT VARIABLE SEMI
Rule 213   bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
Rule 214   tiposCast -> STRING
Rule 215   tiposCast -> BOOL
Rule 216   tiposCast -> BOOLEAN
Rule 217   tiposCast -> DOUBLE
Rule 218   tiposCast -> FLOAT
Rule 219   tiposCast -> ARRAY
Rule 220   tiposCast -> OBJECT
Rule 221   tiposCast -> INTEGER
Rule 222   tiposCast -> INT
Rule 223   casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 224   casting -> LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 225   aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI
Rule 226   aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
Rule 227   aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
Rule 228   aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor
Rule 229   aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI

Terminals, with rules where they appear

AND                  : 123
ARRAY                : 43 166 167 219
AS                   : 95
BOOL                 : 215
BOOLEAN              : 216
BOOLEANO             : 49 164
BREAK                : 104 105 181
CADENA               : 42 48 103 173 175 208 208 209 210 211 211 213
CASE                 : 102 103
CATCH                : 107
CLOSE_TAG            : 198 200
COLON                : 97 102 103 151 186
COMENTARIOS          : 177
COMMA                : 42 43 148 155 168 175
CONCAT               : 208 209 212 213 213
CONCAT_EQUAL         : 210 211
CONTINUE             : 183
DECIMAL              : 51
DEFAULT              : 182
DEFINE               : 42 43
DIVISION             : 112 185
DIV_EQUAL            : 122
DO                   : 100
DOC_COMENTARIOS      : 178
DOUBLE               : 217
ECHO                 : 52 56 57 58 60
ELSE                 : 65
ELSEIF               : 64
ENTERO               : 50 56 102 155 155
EQUALS               : 29 32 33 34 35 36 38 40 41 91 92 171 172 223 226 227
EXIT                 : 180
FLOAT                : 218
FOR                  : 82
FOREACH              : 95
FUNCTION             : 147 151 152 153
FWRITE               : 175
GOTO                 : 179
GREATER              : 115 184 185
IF                   : 62 63
INT                  : 222
INTEGER              : 221
IS_EQUAL             : 126
IS_GREATER_OR_EQUAL  : 117
IS_IDENTICAL         : 128
IS_NOT_EQUAL         : 127
IS_NOT_IDENTICAL     : 129
IS_SMALLER_OR_EQUAL  : 116
LBRACE               : 62 64 65 85 86 96 100 101 106 151 153 195 196
LBRACKET             : 56 192 193
LPAREN               : 42 43 54 62 63 64 76 77 82 95 96 97 98 101 107 134 135 136 137 138 139 147 151 152 153 154 155 166 167 171 172 173 174 175 176 176 187 188 189 190 223 224
MINUS_EQUAL          : 118
MODULO               : 113
MOD_EQUAL            : 119
MULTIPLICACION       : 111
MUL_EQUAL            : 120
NEW                  : 171 172
NOMBRE               : 43 56 107 147 151 152 153 154 175 176 176 179 184 185 186 187 188
NULL                 : 162
OBJECT               : 220
OPEN_TAG             : 198 199
OR                   : 124
PLUS_EQUAL           : 121
PRINT                : 53 54 55 59 61
PRIVATE              : 157
PROTECTED            : 158
PUBLIC               : 156
RAND                 : 155
RBRACE               : 62 64 65 85 86 96 100 101 106 151 153 165 195 197
RBRACKET             : 56 192 194
READLINE             : 173 174
RESTA                : 89 89 90 90 92 94 94 110
RETURN               : 161 162 163 164
RPAREN               : 42 43 54 62 63 64 76 77 82 95 96 97 98 101 107 134 135 136 137 138 139 147 151 152 153 154 155 166 167 171 172 173 174 175 176 176 187 188 189 191 223 224
SEMI                 : 29 38 41 42 43 52 53 54 56 58 59 60 61 82 83 93 94 98 104 105 154 155 161 162 163 164 171 172 173 174 175 176 179 180 181 182 183 208 209 210 211 212 213 223 224 225 226 227 229
SMALLER              : 114 184 185
SPLQUEUE             : 171
SPLSTACK             : 172
STATIC               : 159
STRING               : 214
SUMA                 : 87 87 88 88 91 93 93 109
SWITCH               : 101
TRIM                 : 176
TRY                  : 106
VAR                  : 30
VARIABLE             : 29 32 33 34 35 36 38 40 41 60 61 70 70 72 73 73 75 76 77 81 87 88 89 90 91 92 93 94 95 95 101 107 132 132 136 136 137 138 139 145 163 171 172 188 209 210 212 212 213 213 223 223 224 225 226 226 227 227 227 228 229 229
VOID                 : 151
WHILE                : 96 97 98
XOR                  : 125
error                : 

Nonterminals, with rules where they appear

array_def            : 41
array_elmnt          : 167 168
asignacion           : 2 30 31 82 146
asignacion_array     : 37
aumentoCasting       : 39 80
bcase                : 15 104 105
bcolas               : 17 45
bconcat              : 27 36 55 57
bcortes              : 19
bdo                  : 9 207
bfor                 : 10 204
bforeach             : 12
bgoto                : 16
bpila                : 18 46
brand                : 20 32
breturn              : 24 84 165
bswitch              : 14 206
btrim                : 22 34
btry                 : 13
bwhile               : 8 100 203
casting              : 26
catches              : 106 107
comment              : 25
comprobacion         : 79
condicion            : 62 63 64 78 78 79 82 96 97 98
condicion_booleana   : 73 74 75 77 78 79 228
condicion_else       : 67 69 201
condicion_elseif     : 68 69 202
condicion_if         : 66 67 68 69
condicion_ifelse     : 7
constante            : 5
cuerpo               : 62 64 65 83 86 100 104 105 0
empty                : 108 150 151 153 160
escribir             : 21 33
for_incr             : 82
funcion_blank        : 142 143
funcion_nparams      : 140 141
funcion_void         : 144
funciones            : 3 205
imprimir             : 1
incrementOp          : 11
incrementos_mat      : 225 229
innerSwitch          : 101 105
instrucciones        : 197
lectura              : 6 35
llamada_funcion      : 4 40 63
numero               : 47 91 92
operaciones_mat      : 38 58 59 131
operaciones_mat_par  : 133 135 227
operador_logico      : 70 71 72 76
operadores           : 76 77 130 131 132 134 135 136 137 137 138 139 139 226 227 227 228
otros                : 23
param                : 148 149
params_list          : 147 148 154
proteccion           : 31 141 143
simbolos             : 28
stc_bloque           : 83 85 96 97
stc_bloque_def       : 82 95 106 107 147 152
tipoDato             : 44 138 139 139 225 226 228
tiposCast            : 223 224
valor                : 29 42 52 53 54 71 71 72 74 74 75 76 76 77 77 130 130 131 134 134 135 137 137 168 169 187 228

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (60) imprimir -> . ECHO VARIABLE SEMI
    (61) imprimir -> . PRINT VARIABLE SEMI
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (140) funciones -> . funcion_nparams
    (141) funciones -> . proteccion funcion_nparams
    (142) funciones -> . funcion_blank
    (143) funciones -> . proteccion funcion_blank
    (144) funciones -> . funcion_void
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (66) condicion_ifelse -> . condicion_if
    (67) condicion_ifelse -> . condicion_if condicion_else
    (68) condicion_ifelse -> . condicion_if condicion_elseif
    (69) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .
    (100) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (82) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (93) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (94) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (95) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (106) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (101) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON
    (179) bgoto -> . GOTO NOMBRE SEMI
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (180) bcortes -> . EXIT SEMI
    (181) bcortes -> . BREAK SEMI
    (182) bcortes -> . DEFAULT SEMI
    (183) bcortes -> . CONTINUE SEMI
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (184) otros -> . SMALLER NOMBRE GREATER
    (185) otros -> . SMALLER DIVISION NOMBRE GREATER
    (186) otros -> . NOMBRE COLON
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (177) comment -> . COMENTARIOS
    (178) comment -> . DOC_COMENTARIOS
    (223) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (224) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (189) simbolos -> . LPAREN RPAREN
    (190) simbolos -> . LPAREN
    (191) simbolos -> . RPAREN
    (192) simbolos -> . LBRACKET RBRACKET
    (193) simbolos -> . LBRACKET
    (194) simbolos -> . RBRACKET
    (195) simbolos -> . LBRACE RBRACE
    (196) simbolos -> . LBRACE
    (197) simbolos -> . RBRACE instrucciones
    (198) simbolos -> . OPEN_TAG CLOSE_TAG
    (199) simbolos -> . OPEN_TAG
    (200) simbolos -> . CLOSE_TAG
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (62) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (170) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 99 (bwhile -> .)
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    VARIABLE        shift and go to state 37
    VAR             shift and go to state 38
    NOMBRE          shift and go to state 34
    DEFINE          shift and go to state 45
    READLINE        shift and go to state 47
    WHILE           shift and go to state 49
    $end            reduce using rule 99 (bwhile -> .)
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    SWITCH          shift and go to state 56
    CASE            shift and go to state 57
    GOTO            shift and go to state 58
    EXIT            shift and go to state 59
    BREAK           shift and go to state 60
    DEFAULT         shift and go to state 61
    CONTINUE        shift and go to state 62
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    SMALLER         shift and go to state 66
    RETURN          shift and go to state 68
    COMENTARIOS     shift and go to state 69
    DOC_COMENTARIOS shift and go to state 70
    LPAREN          shift and go to state 32
    CADENA          shift and go to state 46
    RPAREN          shift and go to state 33
    LBRACKET        shift and go to state 35
    RBRACKET        shift and go to state 36
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 71
    CLOSE_TAG       shift and go to state 72
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76
    FUNCTION        shift and go to state 77
    IF              shift and go to state 78

  ! RBRACE          [ reduce using rule 170 (empty -> .) ]
  ! $end            [ reduce using rule 170 (empty -> .) ]

    cuerpo                         shift and go to state 1
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    proteccion                     shift and go to state 39
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41
    funcion_nparams                shift and go to state 42
    funcion_blank                  shift and go to state 43
    funcion_void                   shift and go to state 44
    condicion_if                   shift and go to state 48
    empty                          shift and go to state 67

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> imprimir .

    $end            reduce using rule 1 (cuerpo -> imprimir .)
    RBRACE          reduce using rule 1 (cuerpo -> imprimir .)
    SEMI            reduce using rule 1 (cuerpo -> imprimir .)
    BREAK           reduce using rule 1 (cuerpo -> imprimir .)


state 3

    (2) cuerpo -> asignacion .

    $end            reduce using rule 2 (cuerpo -> asignacion .)
    RBRACE          reduce using rule 2 (cuerpo -> asignacion .)
    SEMI            reduce using rule 2 (cuerpo -> asignacion .)
    BREAK           reduce using rule 2 (cuerpo -> asignacion .)


state 4

    (3) cuerpo -> funciones .

    $end            reduce using rule 3 (cuerpo -> funciones .)
    RBRACE          reduce using rule 3 (cuerpo -> funciones .)
    SEMI            reduce using rule 3 (cuerpo -> funciones .)
    BREAK           reduce using rule 3 (cuerpo -> funciones .)


state 5

    (4) cuerpo -> llamada_funcion .

    $end            reduce using rule 4 (cuerpo -> llamada_funcion .)
    RBRACE          reduce using rule 4 (cuerpo -> llamada_funcion .)
    SEMI            reduce using rule 4 (cuerpo -> llamada_funcion .)
    BREAK           reduce using rule 4 (cuerpo -> llamada_funcion .)


state 6

    (5) cuerpo -> constante .

    $end            reduce using rule 5 (cuerpo -> constante .)
    RBRACE          reduce using rule 5 (cuerpo -> constante .)
    SEMI            reduce using rule 5 (cuerpo -> constante .)
    BREAK           reduce using rule 5 (cuerpo -> constante .)


state 7

    (6) cuerpo -> lectura .

    $end            reduce using rule 6 (cuerpo -> lectura .)
    RBRACE          reduce using rule 6 (cuerpo -> lectura .)
    SEMI            reduce using rule 6 (cuerpo -> lectura .)
    BREAK           reduce using rule 6 (cuerpo -> lectura .)


state 8

    (7) cuerpo -> condicion_ifelse .

    $end            reduce using rule 7 (cuerpo -> condicion_ifelse .)
    RBRACE          reduce using rule 7 (cuerpo -> condicion_ifelse .)
    SEMI            reduce using rule 7 (cuerpo -> condicion_ifelse .)
    BREAK           reduce using rule 7 (cuerpo -> condicion_ifelse .)


state 9

    (8) cuerpo -> bwhile .

    $end            reduce using rule 8 (cuerpo -> bwhile .)
    RBRACE          reduce using rule 8 (cuerpo -> bwhile .)
    SEMI            reduce using rule 8 (cuerpo -> bwhile .)
    BREAK           reduce using rule 8 (cuerpo -> bwhile .)


state 10

    (9) cuerpo -> bdo .

    $end            reduce using rule 9 (cuerpo -> bdo .)
    RBRACE          reduce using rule 9 (cuerpo -> bdo .)
    SEMI            reduce using rule 9 (cuerpo -> bdo .)
    BREAK           reduce using rule 9 (cuerpo -> bdo .)


state 11

    (10) cuerpo -> bfor .

    $end            reduce using rule 10 (cuerpo -> bfor .)
    RBRACE          reduce using rule 10 (cuerpo -> bfor .)
    SEMI            reduce using rule 10 (cuerpo -> bfor .)
    BREAK           reduce using rule 10 (cuerpo -> bfor .)


state 12

    (11) cuerpo -> incrementOp .

    $end            reduce using rule 11 (cuerpo -> incrementOp .)
    RBRACE          reduce using rule 11 (cuerpo -> incrementOp .)
    SEMI            reduce using rule 11 (cuerpo -> incrementOp .)
    BREAK           reduce using rule 11 (cuerpo -> incrementOp .)


state 13

    (12) cuerpo -> bforeach .

    $end            reduce using rule 12 (cuerpo -> bforeach .)
    RBRACE          reduce using rule 12 (cuerpo -> bforeach .)
    SEMI            reduce using rule 12 (cuerpo -> bforeach .)
    BREAK           reduce using rule 12 (cuerpo -> bforeach .)


state 14

    (13) cuerpo -> btry .

    $end            reduce using rule 13 (cuerpo -> btry .)
    RBRACE          reduce using rule 13 (cuerpo -> btry .)
    SEMI            reduce using rule 13 (cuerpo -> btry .)
    BREAK           reduce using rule 13 (cuerpo -> btry .)


state 15

    (14) cuerpo -> bswitch .

    $end            reduce using rule 14 (cuerpo -> bswitch .)
    RBRACE          reduce using rule 14 (cuerpo -> bswitch .)
    SEMI            reduce using rule 14 (cuerpo -> bswitch .)
    BREAK           reduce using rule 14 (cuerpo -> bswitch .)


state 16

    (15) cuerpo -> bcase .

    $end            reduce using rule 15 (cuerpo -> bcase .)
    RBRACE          reduce using rule 15 (cuerpo -> bcase .)
    SEMI            reduce using rule 15 (cuerpo -> bcase .)
    BREAK           reduce using rule 15 (cuerpo -> bcase .)


state 17

    (16) cuerpo -> bgoto .

    $end            reduce using rule 16 (cuerpo -> bgoto .)
    RBRACE          reduce using rule 16 (cuerpo -> bgoto .)
    SEMI            reduce using rule 16 (cuerpo -> bgoto .)
    BREAK           reduce using rule 16 (cuerpo -> bgoto .)


state 18

    (17) cuerpo -> bcolas .

    $end            reduce using rule 17 (cuerpo -> bcolas .)
    RBRACE          reduce using rule 17 (cuerpo -> bcolas .)
    SEMI            reduce using rule 17 (cuerpo -> bcolas .)
    BREAK           reduce using rule 17 (cuerpo -> bcolas .)


state 19

    (18) cuerpo -> bpila .

    $end            reduce using rule 18 (cuerpo -> bpila .)
    RBRACE          reduce using rule 18 (cuerpo -> bpila .)
    SEMI            reduce using rule 18 (cuerpo -> bpila .)
    BREAK           reduce using rule 18 (cuerpo -> bpila .)


state 20

    (19) cuerpo -> bcortes .

    $end            reduce using rule 19 (cuerpo -> bcortes .)
    RBRACE          reduce using rule 19 (cuerpo -> bcortes .)
    SEMI            reduce using rule 19 (cuerpo -> bcortes .)
    BREAK           reduce using rule 19 (cuerpo -> bcortes .)


state 21

    (20) cuerpo -> brand .

    $end            reduce using rule 20 (cuerpo -> brand .)
    RBRACE          reduce using rule 20 (cuerpo -> brand .)
    SEMI            reduce using rule 20 (cuerpo -> brand .)
    BREAK           reduce using rule 20 (cuerpo -> brand .)


state 22

    (21) cuerpo -> escribir .

    $end            reduce using rule 21 (cuerpo -> escribir .)
    RBRACE          reduce using rule 21 (cuerpo -> escribir .)
    SEMI            reduce using rule 21 (cuerpo -> escribir .)
    BREAK           reduce using rule 21 (cuerpo -> escribir .)


state 23

    (22) cuerpo -> btrim .

    $end            reduce using rule 22 (cuerpo -> btrim .)
    RBRACE          reduce using rule 22 (cuerpo -> btrim .)
    SEMI            reduce using rule 22 (cuerpo -> btrim .)
    BREAK           reduce using rule 22 (cuerpo -> btrim .)


state 24

    (23) cuerpo -> otros .

    $end            reduce using rule 23 (cuerpo -> otros .)
    RBRACE          reduce using rule 23 (cuerpo -> otros .)
    SEMI            reduce using rule 23 (cuerpo -> otros .)
    BREAK           reduce using rule 23 (cuerpo -> otros .)


state 25

    (24) cuerpo -> breturn .
    (165) breturn -> breturn . RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    $end            reduce using rule 24 (cuerpo -> breturn .)
    SEMI            reduce using rule 24 (cuerpo -> breturn .)
    BREAK           reduce using rule 24 (cuerpo -> breturn .)
    RBRACE          shift and go to state 79

  ! RBRACE          [ reduce using rule 24 (cuerpo -> breturn .) ]


state 26

    (25) cuerpo -> comment .

    $end            reduce using rule 25 (cuerpo -> comment .)
    RBRACE          reduce using rule 25 (cuerpo -> comment .)
    SEMI            reduce using rule 25 (cuerpo -> comment .)
    BREAK           reduce using rule 25 (cuerpo -> comment .)


state 27

    (26) cuerpo -> casting .

    $end            reduce using rule 26 (cuerpo -> casting .)
    RBRACE          reduce using rule 26 (cuerpo -> casting .)
    SEMI            reduce using rule 26 (cuerpo -> casting .)
    BREAK           reduce using rule 26 (cuerpo -> casting .)


state 28

    (27) cuerpo -> bconcat .

    $end            reduce using rule 27 (cuerpo -> bconcat .)
    RBRACE          reduce using rule 27 (cuerpo -> bconcat .)
    SEMI            reduce using rule 27 (cuerpo -> bconcat .)
    BREAK           reduce using rule 27 (cuerpo -> bconcat .)


state 29

    (28) cuerpo -> simbolos .

    $end            reduce using rule 28 (cuerpo -> simbolos .)
    RBRACE          reduce using rule 28 (cuerpo -> simbolos .)
    SEMI            reduce using rule 28 (cuerpo -> simbolos .)
    BREAK           reduce using rule 28 (cuerpo -> simbolos .)


state 30

    (52) imprimir -> ECHO . valor SEMI
    (56) imprimir -> ECHO . NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> ECHO . bconcat
    (58) imprimir -> ECHO . operaciones_mat SEMI
    (60) imprimir -> ECHO . VARIABLE SEMI
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (130) operaciones_mat -> . valor operadores valor
    (131) operaciones_mat -> . valor operadores operaciones_mat
    (132) operaciones_mat -> . VARIABLE operadores VARIABLE
    (133) operaciones_mat -> . operaciones_mat_par
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (134) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (135) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (136) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (139) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    NOMBRE          shift and go to state 81
    VARIABLE        shift and go to state 85
    CADENA          shift and go to state 89
    BOOLEANO        shift and go to state 92
    LPAREN          shift and go to state 93
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 80
    bconcat                        shift and go to state 83
    operaciones_mat                shift and go to state 84
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    operaciones_mat_par            shift and go to state 90
    numero                         shift and go to state 91

state 31

    (53) imprimir -> PRINT . valor SEMI
    (54) imprimir -> PRINT . LPAREN valor RPAREN SEMI
    (55) imprimir -> PRINT . bconcat
    (59) imprimir -> PRINT . operaciones_mat SEMI
    (61) imprimir -> PRINT . VARIABLE SEMI
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (130) operaciones_mat -> . valor operadores valor
    (131) operaciones_mat -> . valor operadores operaciones_mat
    (132) operaciones_mat -> . VARIABLE operadores VARIABLE
    (133) operaciones_mat -> . operaciones_mat_par
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (134) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (135) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (136) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (139) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    LPAREN          shift and go to state 96
    VARIABLE        shift and go to state 99
    CADENA          shift and go to state 89
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 95
    bconcat                        shift and go to state 97
    operaciones_mat                shift and go to state 98
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    operaciones_mat_par            shift and go to state 90
    numero                         shift and go to state 91

state 32

    (224) casting -> LPAREN . tiposCast RPAREN VARIABLE SEMI
    (189) simbolos -> LPAREN . RPAREN
    (190) simbolos -> LPAREN .
    (214) tiposCast -> . STRING
    (215) tiposCast -> . BOOL
    (216) tiposCast -> . BOOLEAN
    (217) tiposCast -> . DOUBLE
    (218) tiposCast -> . FLOAT
    (219) tiposCast -> . ARRAY
    (220) tiposCast -> . OBJECT
    (221) tiposCast -> . INTEGER
    (222) tiposCast -> . INT

    RPAREN          shift and go to state 101
    $end            reduce using rule 190 (simbolos -> LPAREN .)
    RBRACE          reduce using rule 190 (simbolos -> LPAREN .)
    SEMI            reduce using rule 190 (simbolos -> LPAREN .)
    BREAK           reduce using rule 190 (simbolos -> LPAREN .)
    STRING          shift and go to state 102
    BOOL            shift and go to state 103
    BOOLEAN         shift and go to state 104
    DOUBLE          shift and go to state 105
    FLOAT           shift and go to state 106
    ARRAY           shift and go to state 107
    OBJECT          shift and go to state 108
    INTEGER         shift and go to state 109
    INT             shift and go to state 110

    tiposCast                      shift and go to state 100

state 33

    (191) simbolos -> RPAREN .

    $end            reduce using rule 191 (simbolos -> RPAREN .)
    RBRACE          reduce using rule 191 (simbolos -> RPAREN .)
    SEMI            reduce using rule 191 (simbolos -> RPAREN .)
    BREAK           reduce using rule 191 (simbolos -> RPAREN .)


state 34

    (154) llamada_funcion -> NOMBRE . LPAREN params_list RPAREN SEMI
    (186) otros -> NOMBRE . COLON

    LPAREN          shift and go to state 111
    COLON           shift and go to state 112


state 35

    (192) simbolos -> LBRACKET . RBRACKET
    (193) simbolos -> LBRACKET .

    RBRACKET        shift and go to state 113
    $end            reduce using rule 193 (simbolos -> LBRACKET .)
    RBRACE          reduce using rule 193 (simbolos -> LBRACKET .)
    SEMI            reduce using rule 193 (simbolos -> LBRACKET .)
    BREAK           reduce using rule 193 (simbolos -> LBRACKET .)


state 36

    (194) simbolos -> RBRACKET .

    $end            reduce using rule 194 (simbolos -> RBRACKET .)
    RBRACE          reduce using rule 194 (simbolos -> RBRACKET .)
    SEMI            reduce using rule 194 (simbolos -> RBRACKET .)
    BREAK           reduce using rule 194 (simbolos -> RBRACKET .)


state 37

    (29) asignacion -> VARIABLE . EQUALS valor SEMI
    (32) asignacion -> VARIABLE . EQUALS brand
    (33) asignacion -> VARIABLE . EQUALS escribir
    (34) asignacion -> VARIABLE . EQUALS btrim
    (35) asignacion -> VARIABLE . EQUALS lectura
    (36) asignacion -> VARIABLE . EQUALS bconcat
    (38) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (40) asignacion -> VARIABLE . EQUALS llamada_funcion
    (93) incrementOp -> VARIABLE . SUMA SUMA SEMI
    (94) incrementOp -> VARIABLE . RESTA RESTA SEMI
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (223) casting -> VARIABLE . EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (209) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (210) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (213) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (41) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (225) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (118) incrementos_mat -> . MINUS_EQUAL
    (119) incrementos_mat -> . MOD_EQUAL
    (120) incrementos_mat -> . MUL_EQUAL
    (121) incrementos_mat -> . PLUS_EQUAL
    (122) incrementos_mat -> . DIV_EQUAL
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    EQUALS          shift and go to state 114
    SUMA            shift and go to state 115
    RESTA           shift and go to state 116
    CONCAT          shift and go to state 117
    CONCAT_EQUAL    shift and go to state 118
    MINUS_EQUAL     shift and go to state 121
    MOD_EQUAL       shift and go to state 122
    MUL_EQUAL       shift and go to state 123
    PLUS_EQUAL      shift and go to state 124
    DIV_EQUAL       shift and go to state 125
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    incrementos_mat                shift and go to state 119
    operadores                     shift and go to state 120

state 38

    (30) asignacion -> VAR . asignacion
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 130
    VAR             shift and go to state 38
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76

    asignacion                     shift and go to state 129
    proteccion                     shift and go to state 131
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41

state 39

    (31) asignacion -> proteccion . asignacion
    (141) funciones -> proteccion . funcion_nparams
    (143) funciones -> proteccion . funcion_blank
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 130
    VAR             shift and go to state 38
    FUNCTION        shift and go to state 135
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76

    proteccion                     shift and go to state 131
    asignacion                     shift and go to state 132
    funcion_nparams                shift and go to state 133
    funcion_blank                  shift and go to state 134
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41

state 40

    (37) asignacion -> asignacion_array .

    $end            reduce using rule 37 (asignacion -> asignacion_array .)
    RBRACE          reduce using rule 37 (asignacion -> asignacion_array .)
    SEMI            reduce using rule 37 (asignacion -> asignacion_array .)
    BREAK           reduce using rule 37 (asignacion -> asignacion_array .)
    RPAREN          reduce using rule 37 (asignacion -> asignacion_array .)
    COMMA           reduce using rule 37 (asignacion -> asignacion_array .)
    VARIABLE        reduce using rule 37 (asignacion -> asignacion_array .)
    LPAREN          reduce using rule 37 (asignacion -> asignacion_array .)
    CADENA          reduce using rule 37 (asignacion -> asignacion_array .)
    BOOLEANO        reduce using rule 37 (asignacion -> asignacion_array .)
    ENTERO          reduce using rule 37 (asignacion -> asignacion_array .)
    DECIMAL         reduce using rule 37 (asignacion -> asignacion_array .)


state 41

    (39) asignacion -> aumentoCasting .

    $end            reduce using rule 39 (asignacion -> aumentoCasting .)
    RBRACE          reduce using rule 39 (asignacion -> aumentoCasting .)
    SEMI            reduce using rule 39 (asignacion -> aumentoCasting .)
    BREAK           reduce using rule 39 (asignacion -> aumentoCasting .)
    RPAREN          reduce using rule 39 (asignacion -> aumentoCasting .)
    COMMA           reduce using rule 39 (asignacion -> aumentoCasting .)
    VARIABLE        reduce using rule 39 (asignacion -> aumentoCasting .)
    LPAREN          reduce using rule 39 (asignacion -> aumentoCasting .)
    CADENA          reduce using rule 39 (asignacion -> aumentoCasting .)
    BOOLEANO        reduce using rule 39 (asignacion -> aumentoCasting .)
    ENTERO          reduce using rule 39 (asignacion -> aumentoCasting .)
    DECIMAL         reduce using rule 39 (asignacion -> aumentoCasting .)


state 42

    (140) funciones -> funcion_nparams .

    $end            reduce using rule 140 (funciones -> funcion_nparams .)
    RBRACE          reduce using rule 140 (funciones -> funcion_nparams .)
    SEMI            reduce using rule 140 (funciones -> funcion_nparams .)
    BREAK           reduce using rule 140 (funciones -> funcion_nparams .)


state 43

    (142) funciones -> funcion_blank .

    $end            reduce using rule 142 (funciones -> funcion_blank .)
    RBRACE          reduce using rule 142 (funciones -> funcion_blank .)
    SEMI            reduce using rule 142 (funciones -> funcion_blank .)
    BREAK           reduce using rule 142 (funciones -> funcion_blank .)


state 44

    (144) funciones -> funcion_void .

    $end            reduce using rule 144 (funciones -> funcion_void .)
    RBRACE          reduce using rule 144 (funciones -> funcion_void .)
    SEMI            reduce using rule 144 (funciones -> funcion_void .)
    BREAK           reduce using rule 144 (funciones -> funcion_void .)


state 45

    (42) constante -> DEFINE . LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> DEFINE . LPAREN NOMBRE COMMA ARRAY RPAREN SEMI

    LPAREN          shift and go to state 136


state 46

    (208) bconcat -> CADENA . CONCAT CADENA SEMI
    (211) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI

    CONCAT          shift and go to state 137
    CONCAT_EQUAL    shift and go to state 138


state 47

    (173) lectura -> READLINE . LPAREN CADENA RPAREN SEMI
    (174) lectura -> READLINE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 139


state 48

    (66) condicion_ifelse -> condicion_if .
    (67) condicion_ifelse -> condicion_if . condicion_else
    (68) condicion_ifelse -> condicion_if . condicion_elseif
    (69) condicion_ifelse -> condicion_if . condicion_elseif condicion_else
    (65) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (64) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    $end            reduce using rule 66 (condicion_ifelse -> condicion_if .)
    RBRACE          reduce using rule 66 (condicion_ifelse -> condicion_if .)
    SEMI            reduce using rule 66 (condicion_ifelse -> condicion_if .)
    BREAK           reduce using rule 66 (condicion_ifelse -> condicion_if .)
    ELSE            shift and go to state 142
    ELSEIF          shift and go to state 143

    condicion_else                 shift and go to state 140
    condicion_elseif               shift and go to state 141

state 49

    (96) bwhile -> WHILE . LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> WHILE . LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> WHILE . LPAREN condicion RPAREN SEMI

    LPAREN          shift and go to state 144


state 50

    (195) simbolos -> LBRACE . RBRACE
    (196) simbolos -> LBRACE .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 145
    $end            reduce using rule 196 (simbolos -> LBRACE .)
    SEMI            reduce using rule 196 (simbolos -> LBRACE .)
    BREAK           reduce using rule 196 (simbolos -> LBRACE .)

  ! RBRACE          [ reduce using rule 196 (simbolos -> LBRACE .) ]


state 51

    (197) simbolos -> RBRACE . instrucciones
    (201) instrucciones -> . condicion_else
    (202) instrucciones -> . condicion_elseif
    (203) instrucciones -> . bwhile
    (204) instrucciones -> . bfor
    (205) instrucciones -> . funciones
    (206) instrucciones -> . bswitch
    (207) instrucciones -> . bdo
    (65) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (64) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .
    (82) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (140) funciones -> . funcion_nparams
    (141) funciones -> . proteccion funcion_nparams
    (142) funciones -> . funcion_blank
    (143) funciones -> . proteccion funcion_blank
    (144) funciones -> . funcion_void
    (101) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (100) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    ELSE            shift and go to state 142
    ELSEIF          shift and go to state 143
    WHILE           shift and go to state 49
    RBRACE          reduce using rule 99 (bwhile -> .)
    SEMI            reduce using rule 99 (bwhile -> .)
    $end            reduce using rule 99 (bwhile -> .)
    BREAK           reduce using rule 99 (bwhile -> .)
    FOR             shift and go to state 53
    SWITCH          shift and go to state 56
    DO              shift and go to state 52
    FUNCTION        shift and go to state 77
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76

    instrucciones                  shift and go to state 146
    condicion_else                 shift and go to state 147
    condicion_elseif               shift and go to state 148
    bwhile                         shift and go to state 149
    bfor                           shift and go to state 150
    funciones                      shift and go to state 151
    bswitch                        shift and go to state 152
    bdo                            shift and go to state 153
    funcion_nparams                shift and go to state 42
    proteccion                     shift and go to state 154
    funcion_blank                  shift and go to state 43
    funcion_void                   shift and go to state 44

state 52

    (100) bdo -> DO . LBRACE cuerpo RBRACE bwhile

    LBRACE          shift and go to state 155


state 53

    (82) bfor -> FOR . LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def

    LPAREN          shift and go to state 156


state 54

    (95) bforeach -> FOREACH . LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 157


state 55

    (106) btry -> TRY . LBRACE stc_bloque_def RBRACE catches

    LBRACE          shift and go to state 158


state 56

    (101) bswitch -> SWITCH . LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE

    LPAREN          shift and go to state 159


state 57

    (102) bcase -> CASE . ENTERO COLON
    (103) bcase -> CASE . CADENA COLON

    ENTERO          shift and go to state 160
    CADENA          shift and go to state 161


state 58

    (179) bgoto -> GOTO . NOMBRE SEMI

    NOMBRE          shift and go to state 162


state 59

    (180) bcortes -> EXIT . SEMI

    SEMI            shift and go to state 163


state 60

    (181) bcortes -> BREAK . SEMI

    SEMI            shift and go to state 164


state 61

    (182) bcortes -> DEFAULT . SEMI

    SEMI            shift and go to state 165


state 62

    (183) bcortes -> CONTINUE . SEMI

    SEMI            shift and go to state 166


state 63

    (155) brand -> RAND . LPAREN ENTERO COMMA ENTERO RPAREN SEMI

    LPAREN          shift and go to state 167


state 64

    (175) escribir -> FWRITE . LPAREN NOMBRE COMMA CADENA RPAREN SEMI

    LPAREN          shift and go to state 168


state 65

    (176) btrim -> TRIM . LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 169


state 66

    (184) otros -> SMALLER . NOMBRE GREATER
    (185) otros -> SMALLER . DIVISION NOMBRE GREATER

    NOMBRE          shift and go to state 170
    DIVISION        shift and go to state 171


state 67

    (160) breturn -> empty .

    RBRACE          reduce using rule 160 (breturn -> empty .)
    $end            reduce using rule 160 (breturn -> empty .)
    SEMI            reduce using rule 160 (breturn -> empty .)
    BREAK           reduce using rule 160 (breturn -> empty .)


state 68

    (161) breturn -> RETURN . SEMI
    (162) breturn -> RETURN . NULL SEMI
    (163) breturn -> RETURN . VARIABLE SEMI
    (164) breturn -> RETURN . BOOLEANO SEMI

    SEMI            shift and go to state 172
    NULL            shift and go to state 173
    VARIABLE        shift and go to state 174
    BOOLEANO        shift and go to state 175


state 69

    (177) comment -> COMENTARIOS .

    $end            reduce using rule 177 (comment -> COMENTARIOS .)
    RBRACE          reduce using rule 177 (comment -> COMENTARIOS .)
    SEMI            reduce using rule 177 (comment -> COMENTARIOS .)
    BREAK           reduce using rule 177 (comment -> COMENTARIOS .)


state 70

    (178) comment -> DOC_COMENTARIOS .

    $end            reduce using rule 178 (comment -> DOC_COMENTARIOS .)
    RBRACE          reduce using rule 178 (comment -> DOC_COMENTARIOS .)
    SEMI            reduce using rule 178 (comment -> DOC_COMENTARIOS .)
    BREAK           reduce using rule 178 (comment -> DOC_COMENTARIOS .)


state 71

    (198) simbolos -> OPEN_TAG . CLOSE_TAG
    (199) simbolos -> OPEN_TAG .

    CLOSE_TAG       shift and go to state 176
    $end            reduce using rule 199 (simbolos -> OPEN_TAG .)
    RBRACE          reduce using rule 199 (simbolos -> OPEN_TAG .)
    SEMI            reduce using rule 199 (simbolos -> OPEN_TAG .)
    BREAK           reduce using rule 199 (simbolos -> OPEN_TAG .)


state 72

    (200) simbolos -> CLOSE_TAG .

    $end            reduce using rule 200 (simbolos -> CLOSE_TAG .)
    RBRACE          reduce using rule 200 (simbolos -> CLOSE_TAG .)
    SEMI            reduce using rule 200 (simbolos -> CLOSE_TAG .)
    BREAK           reduce using rule 200 (simbolos -> CLOSE_TAG .)


state 73

    (156) proteccion -> PUBLIC .

    VARIABLE        reduce using rule 156 (proteccion -> PUBLIC .)
    VAR             reduce using rule 156 (proteccion -> PUBLIC .)
    FUNCTION        reduce using rule 156 (proteccion -> PUBLIC .)
    PUBLIC          reduce using rule 156 (proteccion -> PUBLIC .)
    PRIVATE         reduce using rule 156 (proteccion -> PUBLIC .)
    PROTECTED       reduce using rule 156 (proteccion -> PUBLIC .)
    STATIC          reduce using rule 156 (proteccion -> PUBLIC .)


state 74

    (157) proteccion -> PRIVATE .

    VARIABLE        reduce using rule 157 (proteccion -> PRIVATE .)
    VAR             reduce using rule 157 (proteccion -> PRIVATE .)
    FUNCTION        reduce using rule 157 (proteccion -> PRIVATE .)
    PUBLIC          reduce using rule 157 (proteccion -> PRIVATE .)
    PRIVATE         reduce using rule 157 (proteccion -> PRIVATE .)
    PROTECTED       reduce using rule 157 (proteccion -> PRIVATE .)
    STATIC          reduce using rule 157 (proteccion -> PRIVATE .)


state 75

    (158) proteccion -> PROTECTED .

    VARIABLE        reduce using rule 158 (proteccion -> PROTECTED .)
    VAR             reduce using rule 158 (proteccion -> PROTECTED .)
    FUNCTION        reduce using rule 158 (proteccion -> PROTECTED .)
    PUBLIC          reduce using rule 158 (proteccion -> PROTECTED .)
    PRIVATE         reduce using rule 158 (proteccion -> PROTECTED .)
    PROTECTED       reduce using rule 158 (proteccion -> PROTECTED .)
    STATIC          reduce using rule 158 (proteccion -> PROTECTED .)


state 76

    (159) proteccion -> STATIC .

    VARIABLE        reduce using rule 159 (proteccion -> STATIC .)
    VAR             reduce using rule 159 (proteccion -> STATIC .)
    FUNCTION        reduce using rule 159 (proteccion -> STATIC .)
    PUBLIC          reduce using rule 159 (proteccion -> STATIC .)
    PRIVATE         reduce using rule 159 (proteccion -> STATIC .)
    PROTECTED       reduce using rule 159 (proteccion -> STATIC .)
    STATIC          reduce using rule 159 (proteccion -> STATIC .)


state 77

    (147) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> FUNCTION . NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    NOMBRE          shift and go to state 177


state 78

    (62) condicion_if -> IF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> IF . LPAREN condicion RPAREN llamada_funcion

    LPAREN          shift and go to state 178


state 79

    (165) breturn -> breturn RBRACE .

    RBRACE          reduce using rule 165 (breturn -> breturn RBRACE .)
    $end            reduce using rule 165 (breturn -> breturn RBRACE .)
    SEMI            reduce using rule 165 (breturn -> breturn RBRACE .)
    BREAK           reduce using rule 165 (breturn -> breturn RBRACE .)


state 80

    (52) imprimir -> ECHO valor . SEMI
    (130) operaciones_mat -> valor . operadores valor
    (131) operaciones_mat -> valor . operadores operaciones_mat
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SEMI            shift and go to state 179
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 180

state 81

    (56) imprimir -> ECHO NOMBRE . LBRACKET ENTERO RBRACKET SEMI

    LBRACKET        shift and go to state 183


state 82

    (50) numero -> ENTERO .

    SEMI            reduce using rule 50 (numero -> ENTERO .)
    SUMA            reduce using rule 50 (numero -> ENTERO .)
    RESTA           reduce using rule 50 (numero -> ENTERO .)
    MULTIPLICACION  reduce using rule 50 (numero -> ENTERO .)
    DIVISION        reduce using rule 50 (numero -> ENTERO .)
    MODULO          reduce using rule 50 (numero -> ENTERO .)
    RPAREN          reduce using rule 50 (numero -> ENTERO .)
    AND             reduce using rule 50 (numero -> ENTERO .)
    OR              reduce using rule 50 (numero -> ENTERO .)
    XOR             reduce using rule 50 (numero -> ENTERO .)
    IS_EQUAL        reduce using rule 50 (numero -> ENTERO .)
    IS_NOT_EQUAL    reduce using rule 50 (numero -> ENTERO .)
    IS_IDENTICAL    reduce using rule 50 (numero -> ENTERO .)
    IS_NOT_IDENTICAL reduce using rule 50 (numero -> ENTERO .)
    SMALLER         reduce using rule 50 (numero -> ENTERO .)
    GREATER         reduce using rule 50 (numero -> ENTERO .)
    IS_SMALLER_OR_EQUAL reduce using rule 50 (numero -> ENTERO .)
    IS_GREATER_OR_EQUAL reduce using rule 50 (numero -> ENTERO .)
    COMMA           reduce using rule 50 (numero -> ENTERO .)
    $end            reduce using rule 50 (numero -> ENTERO .)
    RBRACE          reduce using rule 50 (numero -> ENTERO .)
    BREAK           reduce using rule 50 (numero -> ENTERO .)
    VARIABLE        reduce using rule 50 (numero -> ENTERO .)
    LPAREN          reduce using rule 50 (numero -> ENTERO .)
    CADENA          reduce using rule 50 (numero -> ENTERO .)
    BOOLEANO        reduce using rule 50 (numero -> ENTERO .)
    ENTERO          reduce using rule 50 (numero -> ENTERO .)
    DECIMAL         reduce using rule 50 (numero -> ENTERO .)


state 83

    (57) imprimir -> ECHO bconcat .

    $end            reduce using rule 57 (imprimir -> ECHO bconcat .)
    RBRACE          reduce using rule 57 (imprimir -> ECHO bconcat .)
    SEMI            reduce using rule 57 (imprimir -> ECHO bconcat .)
    BREAK           reduce using rule 57 (imprimir -> ECHO bconcat .)


state 84

    (58) imprimir -> ECHO operaciones_mat . SEMI

    SEMI            shift and go to state 184


state 85

    (60) imprimir -> ECHO VARIABLE . SEMI
    (209) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (210) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (213) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (132) operaciones_mat -> VARIABLE . operadores VARIABLE
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SEMI            shift and go to state 185
    CONCAT          shift and go to state 117
    CONCAT_EQUAL    shift and go to state 118
    EQUALS          shift and go to state 187
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 186

state 86

    (44) valor -> tipoDato .

    SEMI            reduce using rule 44 (valor -> tipoDato .)
    SUMA            reduce using rule 44 (valor -> tipoDato .)
    RESTA           reduce using rule 44 (valor -> tipoDato .)
    MULTIPLICACION  reduce using rule 44 (valor -> tipoDato .)
    DIVISION        reduce using rule 44 (valor -> tipoDato .)
    MODULO          reduce using rule 44 (valor -> tipoDato .)
    RPAREN          reduce using rule 44 (valor -> tipoDato .)
    SMALLER         reduce using rule 44 (valor -> tipoDato .)
    GREATER         reduce using rule 44 (valor -> tipoDato .)
    IS_SMALLER_OR_EQUAL reduce using rule 44 (valor -> tipoDato .)
    IS_GREATER_OR_EQUAL reduce using rule 44 (valor -> tipoDato .)
    AND             reduce using rule 44 (valor -> tipoDato .)
    OR              reduce using rule 44 (valor -> tipoDato .)
    XOR             reduce using rule 44 (valor -> tipoDato .)
    IS_EQUAL        reduce using rule 44 (valor -> tipoDato .)
    IS_NOT_EQUAL    reduce using rule 44 (valor -> tipoDato .)
    IS_IDENTICAL    reduce using rule 44 (valor -> tipoDato .)
    IS_NOT_IDENTICAL reduce using rule 44 (valor -> tipoDato .)
    COMMA           reduce using rule 44 (valor -> tipoDato .)
    $end            reduce using rule 44 (valor -> tipoDato .)
    RBRACE          reduce using rule 44 (valor -> tipoDato .)
    BREAK           reduce using rule 44 (valor -> tipoDato .)
    VARIABLE        reduce using rule 44 (valor -> tipoDato .)
    LPAREN          reduce using rule 44 (valor -> tipoDato .)
    CADENA          reduce using rule 44 (valor -> tipoDato .)
    BOOLEANO        reduce using rule 44 (valor -> tipoDato .)
    ENTERO          reduce using rule 44 (valor -> tipoDato .)
    DECIMAL         reduce using rule 44 (valor -> tipoDato .)


state 87

    (45) valor -> bcolas .

    SEMI            reduce using rule 45 (valor -> bcolas .)
    SUMA            reduce using rule 45 (valor -> bcolas .)
    RESTA           reduce using rule 45 (valor -> bcolas .)
    MULTIPLICACION  reduce using rule 45 (valor -> bcolas .)
    DIVISION        reduce using rule 45 (valor -> bcolas .)
    MODULO          reduce using rule 45 (valor -> bcolas .)
    RPAREN          reduce using rule 45 (valor -> bcolas .)
    SMALLER         reduce using rule 45 (valor -> bcolas .)
    GREATER         reduce using rule 45 (valor -> bcolas .)
    IS_SMALLER_OR_EQUAL reduce using rule 45 (valor -> bcolas .)
    IS_GREATER_OR_EQUAL reduce using rule 45 (valor -> bcolas .)
    AND             reduce using rule 45 (valor -> bcolas .)
    OR              reduce using rule 45 (valor -> bcolas .)
    XOR             reduce using rule 45 (valor -> bcolas .)
    IS_EQUAL        reduce using rule 45 (valor -> bcolas .)
    IS_NOT_EQUAL    reduce using rule 45 (valor -> bcolas .)
    IS_IDENTICAL    reduce using rule 45 (valor -> bcolas .)
    IS_NOT_IDENTICAL reduce using rule 45 (valor -> bcolas .)
    COMMA           reduce using rule 45 (valor -> bcolas .)
    $end            reduce using rule 45 (valor -> bcolas .)
    RBRACE          reduce using rule 45 (valor -> bcolas .)
    BREAK           reduce using rule 45 (valor -> bcolas .)
    VARIABLE        reduce using rule 45 (valor -> bcolas .)
    LPAREN          reduce using rule 45 (valor -> bcolas .)
    CADENA          reduce using rule 45 (valor -> bcolas .)
    BOOLEANO        reduce using rule 45 (valor -> bcolas .)
    ENTERO          reduce using rule 45 (valor -> bcolas .)
    DECIMAL         reduce using rule 45 (valor -> bcolas .)


state 88

    (46) valor -> bpila .

    SEMI            reduce using rule 46 (valor -> bpila .)
    SUMA            reduce using rule 46 (valor -> bpila .)
    RESTA           reduce using rule 46 (valor -> bpila .)
    MULTIPLICACION  reduce using rule 46 (valor -> bpila .)
    DIVISION        reduce using rule 46 (valor -> bpila .)
    MODULO          reduce using rule 46 (valor -> bpila .)
    RPAREN          reduce using rule 46 (valor -> bpila .)
    SMALLER         reduce using rule 46 (valor -> bpila .)
    GREATER         reduce using rule 46 (valor -> bpila .)
    IS_SMALLER_OR_EQUAL reduce using rule 46 (valor -> bpila .)
    IS_GREATER_OR_EQUAL reduce using rule 46 (valor -> bpila .)
    AND             reduce using rule 46 (valor -> bpila .)
    OR              reduce using rule 46 (valor -> bpila .)
    XOR             reduce using rule 46 (valor -> bpila .)
    IS_EQUAL        reduce using rule 46 (valor -> bpila .)
    IS_NOT_EQUAL    reduce using rule 46 (valor -> bpila .)
    IS_IDENTICAL    reduce using rule 46 (valor -> bpila .)
    IS_NOT_IDENTICAL reduce using rule 46 (valor -> bpila .)
    COMMA           reduce using rule 46 (valor -> bpila .)
    $end            reduce using rule 46 (valor -> bpila .)
    RBRACE          reduce using rule 46 (valor -> bpila .)
    BREAK           reduce using rule 46 (valor -> bpila .)
    VARIABLE        reduce using rule 46 (valor -> bpila .)
    LPAREN          reduce using rule 46 (valor -> bpila .)
    CADENA          reduce using rule 46 (valor -> bpila .)
    BOOLEANO        reduce using rule 46 (valor -> bpila .)
    ENTERO          reduce using rule 46 (valor -> bpila .)
    DECIMAL         reduce using rule 46 (valor -> bpila .)


state 89

    (208) bconcat -> CADENA . CONCAT CADENA SEMI
    (211) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI
    (48) tipoDato -> CADENA .

    CONCAT          shift and go to state 137
    CONCAT_EQUAL    shift and go to state 138
    SEMI            reduce using rule 48 (tipoDato -> CADENA .)
    SUMA            reduce using rule 48 (tipoDato -> CADENA .)
    RESTA           reduce using rule 48 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 48 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 48 (tipoDato -> CADENA .)
    MODULO          reduce using rule 48 (tipoDato -> CADENA .)


state 90

    (133) operaciones_mat -> operaciones_mat_par .

    SEMI            reduce using rule 133 (operaciones_mat -> operaciones_mat_par .)


state 91

    (47) tipoDato -> numero .

    SEMI            reduce using rule 47 (tipoDato -> numero .)
    SUMA            reduce using rule 47 (tipoDato -> numero .)
    RESTA           reduce using rule 47 (tipoDato -> numero .)
    MULTIPLICACION  reduce using rule 47 (tipoDato -> numero .)
    DIVISION        reduce using rule 47 (tipoDato -> numero .)
    MODULO          reduce using rule 47 (tipoDato -> numero .)
    RPAREN          reduce using rule 47 (tipoDato -> numero .)
    AND             reduce using rule 47 (tipoDato -> numero .)
    OR              reduce using rule 47 (tipoDato -> numero .)
    XOR             reduce using rule 47 (tipoDato -> numero .)
    IS_EQUAL        reduce using rule 47 (tipoDato -> numero .)
    IS_NOT_EQUAL    reduce using rule 47 (tipoDato -> numero .)
    IS_IDENTICAL    reduce using rule 47 (tipoDato -> numero .)
    IS_NOT_IDENTICAL reduce using rule 47 (tipoDato -> numero .)
    SMALLER         reduce using rule 47 (tipoDato -> numero .)
    GREATER         reduce using rule 47 (tipoDato -> numero .)
    IS_SMALLER_OR_EQUAL reduce using rule 47 (tipoDato -> numero .)
    IS_GREATER_OR_EQUAL reduce using rule 47 (tipoDato -> numero .)
    COMMA           reduce using rule 47 (tipoDato -> numero .)
    $end            reduce using rule 47 (tipoDato -> numero .)
    RBRACE          reduce using rule 47 (tipoDato -> numero .)
    BREAK           reduce using rule 47 (tipoDato -> numero .)
    VARIABLE        reduce using rule 47 (tipoDato -> numero .)
    LPAREN          reduce using rule 47 (tipoDato -> numero .)
    CADENA          reduce using rule 47 (tipoDato -> numero .)
    BOOLEANO        reduce using rule 47 (tipoDato -> numero .)
    ENTERO          reduce using rule 47 (tipoDato -> numero .)
    DECIMAL         reduce using rule 47 (tipoDato -> numero .)


state 92

    (49) tipoDato -> BOOLEANO .

    SEMI            reduce using rule 49 (tipoDato -> BOOLEANO .)
    SUMA            reduce using rule 49 (tipoDato -> BOOLEANO .)
    RESTA           reduce using rule 49 (tipoDato -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 49 (tipoDato -> BOOLEANO .)
    DIVISION        reduce using rule 49 (tipoDato -> BOOLEANO .)
    MODULO          reduce using rule 49 (tipoDato -> BOOLEANO .)
    RPAREN          reduce using rule 49 (tipoDato -> BOOLEANO .)
    AND             reduce using rule 49 (tipoDato -> BOOLEANO .)
    OR              reduce using rule 49 (tipoDato -> BOOLEANO .)
    XOR             reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_EQUAL        reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_NOT_EQUAL    reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_IDENTICAL    reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_NOT_IDENTICAL reduce using rule 49 (tipoDato -> BOOLEANO .)
    SMALLER         reduce using rule 49 (tipoDato -> BOOLEANO .)
    GREATER         reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_SMALLER_OR_EQUAL reduce using rule 49 (tipoDato -> BOOLEANO .)
    IS_GREATER_OR_EQUAL reduce using rule 49 (tipoDato -> BOOLEANO .)
    COMMA           reduce using rule 49 (tipoDato -> BOOLEANO .)
    $end            reduce using rule 49 (tipoDato -> BOOLEANO .)
    RBRACE          reduce using rule 49 (tipoDato -> BOOLEANO .)
    BREAK           reduce using rule 49 (tipoDato -> BOOLEANO .)
    VARIABLE        reduce using rule 49 (tipoDato -> BOOLEANO .)
    LPAREN          reduce using rule 49 (tipoDato -> BOOLEANO .)
    CADENA          reduce using rule 49 (tipoDato -> BOOLEANO .)
    BOOLEANO        reduce using rule 49 (tipoDato -> BOOLEANO .)
    ENTERO          reduce using rule 49 (tipoDato -> BOOLEANO .)
    DECIMAL         reduce using rule 49 (tipoDato -> BOOLEANO .)


state 93

    (134) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (135) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (136) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN
    (139) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 189
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 188
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 94

    (51) numero -> DECIMAL .

    SEMI            reduce using rule 51 (numero -> DECIMAL .)
    SUMA            reduce using rule 51 (numero -> DECIMAL .)
    RESTA           reduce using rule 51 (numero -> DECIMAL .)
    MULTIPLICACION  reduce using rule 51 (numero -> DECIMAL .)
    DIVISION        reduce using rule 51 (numero -> DECIMAL .)
    MODULO          reduce using rule 51 (numero -> DECIMAL .)
    RPAREN          reduce using rule 51 (numero -> DECIMAL .)
    AND             reduce using rule 51 (numero -> DECIMAL .)
    OR              reduce using rule 51 (numero -> DECIMAL .)
    XOR             reduce using rule 51 (numero -> DECIMAL .)
    IS_EQUAL        reduce using rule 51 (numero -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 51 (numero -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 51 (numero -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 51 (numero -> DECIMAL .)
    SMALLER         reduce using rule 51 (numero -> DECIMAL .)
    GREATER         reduce using rule 51 (numero -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 51 (numero -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 51 (numero -> DECIMAL .)
    COMMA           reduce using rule 51 (numero -> DECIMAL .)
    $end            reduce using rule 51 (numero -> DECIMAL .)
    RBRACE          reduce using rule 51 (numero -> DECIMAL .)
    BREAK           reduce using rule 51 (numero -> DECIMAL .)
    VARIABLE        reduce using rule 51 (numero -> DECIMAL .)
    LPAREN          reduce using rule 51 (numero -> DECIMAL .)
    CADENA          reduce using rule 51 (numero -> DECIMAL .)
    BOOLEANO        reduce using rule 51 (numero -> DECIMAL .)
    ENTERO          reduce using rule 51 (numero -> DECIMAL .)
    DECIMAL         reduce using rule 51 (numero -> DECIMAL .)


state 95

    (53) imprimir -> PRINT valor . SEMI
    (130) operaciones_mat -> valor . operadores valor
    (131) operaciones_mat -> valor . operadores operaciones_mat
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SEMI            shift and go to state 191
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 180

state 96

    (54) imprimir -> PRINT LPAREN . valor RPAREN SEMI
    (134) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (135) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (136) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN
    (139) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 189
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 192
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 97

    (55) imprimir -> PRINT bconcat .

    $end            reduce using rule 55 (imprimir -> PRINT bconcat .)
    RBRACE          reduce using rule 55 (imprimir -> PRINT bconcat .)
    SEMI            reduce using rule 55 (imprimir -> PRINT bconcat .)
    BREAK           reduce using rule 55 (imprimir -> PRINT bconcat .)


state 98

    (59) imprimir -> PRINT operaciones_mat . SEMI

    SEMI            shift and go to state 193


state 99

    (61) imprimir -> PRINT VARIABLE . SEMI
    (209) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (210) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (213) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (132) operaciones_mat -> VARIABLE . operadores VARIABLE
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SEMI            shift and go to state 194
    CONCAT          shift and go to state 117
    CONCAT_EQUAL    shift and go to state 118
    EQUALS          shift and go to state 187
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 186

state 100

    (224) casting -> LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 195


state 101

    (189) simbolos -> LPAREN RPAREN .

    $end            reduce using rule 189 (simbolos -> LPAREN RPAREN .)
    RBRACE          reduce using rule 189 (simbolos -> LPAREN RPAREN .)
    SEMI            reduce using rule 189 (simbolos -> LPAREN RPAREN .)
    BREAK           reduce using rule 189 (simbolos -> LPAREN RPAREN .)


state 102

    (214) tiposCast -> STRING .

    RPAREN          reduce using rule 214 (tiposCast -> STRING .)


state 103

    (215) tiposCast -> BOOL .

    RPAREN          reduce using rule 215 (tiposCast -> BOOL .)


state 104

    (216) tiposCast -> BOOLEAN .

    RPAREN          reduce using rule 216 (tiposCast -> BOOLEAN .)


state 105

    (217) tiposCast -> DOUBLE .

    RPAREN          reduce using rule 217 (tiposCast -> DOUBLE .)


state 106

    (218) tiposCast -> FLOAT .

    RPAREN          reduce using rule 218 (tiposCast -> FLOAT .)


state 107

    (219) tiposCast -> ARRAY .

    RPAREN          reduce using rule 219 (tiposCast -> ARRAY .)


state 108

    (220) tiposCast -> OBJECT .

    RPAREN          reduce using rule 220 (tiposCast -> OBJECT .)


state 109

    (221) tiposCast -> INTEGER .

    RPAREN          reduce using rule 221 (tiposCast -> INTEGER .)


state 110

    (222) tiposCast -> INT .

    RPAREN          reduce using rule 222 (tiposCast -> INT .)


state 111

    (154) llamada_funcion -> NOMBRE LPAREN . params_list RPAREN SEMI
    (148) params_list -> . params_list COMMA param
    (149) params_list -> . param
    (150) params_list -> . empty
    (145) param -> . VARIABLE
    (146) param -> . asignacion
    (170) empty -> .
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 199
    RPAREN          reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    VAR             shift and go to state 38
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76

    params_list                    shift and go to state 196
    param                          shift and go to state 197
    empty                          shift and go to state 198
    asignacion                     shift and go to state 200
    proteccion                     shift and go to state 131
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41

state 112

    (186) otros -> NOMBRE COLON .

    $end            reduce using rule 186 (otros -> NOMBRE COLON .)
    RBRACE          reduce using rule 186 (otros -> NOMBRE COLON .)
    SEMI            reduce using rule 186 (otros -> NOMBRE COLON .)
    BREAK           reduce using rule 186 (otros -> NOMBRE COLON .)


state 113

    (192) simbolos -> LBRACKET RBRACKET .

    $end            reduce using rule 192 (simbolos -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 192 (simbolos -> LBRACKET RBRACKET .)
    SEMI            reduce using rule 192 (simbolos -> LBRACKET RBRACKET .)
    BREAK           reduce using rule 192 (simbolos -> LBRACKET RBRACKET .)


state 114

    (29) asignacion -> VARIABLE EQUALS . valor SEMI
    (32) asignacion -> VARIABLE EQUALS . brand
    (33) asignacion -> VARIABLE EQUALS . escribir
    (34) asignacion -> VARIABLE EQUALS . btrim
    (35) asignacion -> VARIABLE EQUALS . lectura
    (36) asignacion -> VARIABLE EQUALS . bconcat
    (38) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (40) asignacion -> VARIABLE EQUALS . llamada_funcion
    (171) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI
    (223) casting -> VARIABLE EQUALS . LPAREN tiposCast RPAREN VARIABLE SEMI
    (41) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (226) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (130) operaciones_mat -> . valor operadores valor
    (131) operaciones_mat -> . valor operadores operaciones_mat
    (132) operaciones_mat -> . VARIABLE operadores VARIABLE
    (133) operaciones_mat -> . operaciones_mat_par
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (166) array_def -> . ARRAY LPAREN RPAREN
    (167) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (134) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (135) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (136) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (139) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    NEW             shift and go to state 210
    LPAREN          shift and go to state 211
    VARIABLE        shift and go to state 201
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    READLINE        shift and go to state 47
    CADENA          shift and go to state 89
    NOMBRE          shift and go to state 213
    ARRAY           shift and go to state 214
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 202
    brand                          shift and go to state 203
    escribir                       shift and go to state 204
    btrim                          shift and go to state 205
    lectura                        shift and go to state 206
    bconcat                        shift and go to state 207
    operaciones_mat                shift and go to state 208
    llamada_funcion                shift and go to state 209
    array_def                      shift and go to state 212
    tipoDato                       shift and go to state 86
    operaciones_mat_par            shift and go to state 90
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 115

    (93) incrementOp -> VARIABLE SUMA . SUMA SEMI
    (109) operadores -> SUMA .

    SUMA            shift and go to state 215
    CADENA          reduce using rule 109 (operadores -> SUMA .)
    BOOLEANO        reduce using rule 109 (operadores -> SUMA .)
    ENTERO          reduce using rule 109 (operadores -> SUMA .)
    DECIMAL         reduce using rule 109 (operadores -> SUMA .)


state 116

    (94) incrementOp -> VARIABLE RESTA . RESTA SEMI
    (110) operadores -> RESTA .

    RESTA           shift and go to state 216
    CADENA          reduce using rule 110 (operadores -> RESTA .)
    BOOLEANO        reduce using rule 110 (operadores -> RESTA .)
    ENTERO          reduce using rule 110 (operadores -> RESTA .)
    DECIMAL         reduce using rule 110 (operadores -> RESTA .)


state 117

    (209) bconcat -> VARIABLE CONCAT . CADENA SEMI
    (212) bconcat -> VARIABLE CONCAT . VARIABLE SEMI
    (213) bconcat -> VARIABLE CONCAT . CADENA CONCAT VARIABLE SEMI

    CADENA          shift and go to state 218
    VARIABLE        shift and go to state 217


state 118

    (210) bconcat -> VARIABLE CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 219


state 119

    (225) aumentoCasting -> VARIABLE incrementos_mat . tipoDato SEMI
    (229) aumentoCasting -> VARIABLE incrementos_mat . VARIABLE SEMI
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 220
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    tipoDato                       shift and go to state 221
    numero                         shift and go to state 91

state 120

    (228) aumentoCasting -> VARIABLE operadores . tipoDato condicion_booleana valor
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    tipoDato                       shift and go to state 222
    numero                         shift and go to state 91

state 121

    (118) incrementos_mat -> MINUS_EQUAL .

    VARIABLE        reduce using rule 118 (incrementos_mat -> MINUS_EQUAL .)
    CADENA          reduce using rule 118 (incrementos_mat -> MINUS_EQUAL .)
    BOOLEANO        reduce using rule 118 (incrementos_mat -> MINUS_EQUAL .)
    ENTERO          reduce using rule 118 (incrementos_mat -> MINUS_EQUAL .)
    DECIMAL         reduce using rule 118 (incrementos_mat -> MINUS_EQUAL .)


state 122

    (119) incrementos_mat -> MOD_EQUAL .

    VARIABLE        reduce using rule 119 (incrementos_mat -> MOD_EQUAL .)
    CADENA          reduce using rule 119 (incrementos_mat -> MOD_EQUAL .)
    BOOLEANO        reduce using rule 119 (incrementos_mat -> MOD_EQUAL .)
    ENTERO          reduce using rule 119 (incrementos_mat -> MOD_EQUAL .)
    DECIMAL         reduce using rule 119 (incrementos_mat -> MOD_EQUAL .)


state 123

    (120) incrementos_mat -> MUL_EQUAL .

    VARIABLE        reduce using rule 120 (incrementos_mat -> MUL_EQUAL .)
    CADENA          reduce using rule 120 (incrementos_mat -> MUL_EQUAL .)
    BOOLEANO        reduce using rule 120 (incrementos_mat -> MUL_EQUAL .)
    ENTERO          reduce using rule 120 (incrementos_mat -> MUL_EQUAL .)
    DECIMAL         reduce using rule 120 (incrementos_mat -> MUL_EQUAL .)


state 124

    (121) incrementos_mat -> PLUS_EQUAL .

    VARIABLE        reduce using rule 121 (incrementos_mat -> PLUS_EQUAL .)
    CADENA          reduce using rule 121 (incrementos_mat -> PLUS_EQUAL .)
    BOOLEANO        reduce using rule 121 (incrementos_mat -> PLUS_EQUAL .)
    ENTERO          reduce using rule 121 (incrementos_mat -> PLUS_EQUAL .)
    DECIMAL         reduce using rule 121 (incrementos_mat -> PLUS_EQUAL .)


state 125

    (122) incrementos_mat -> DIV_EQUAL .

    VARIABLE        reduce using rule 122 (incrementos_mat -> DIV_EQUAL .)
    CADENA          reduce using rule 122 (incrementos_mat -> DIV_EQUAL .)
    BOOLEANO        reduce using rule 122 (incrementos_mat -> DIV_EQUAL .)
    ENTERO          reduce using rule 122 (incrementos_mat -> DIV_EQUAL .)
    DECIMAL         reduce using rule 122 (incrementos_mat -> DIV_EQUAL .)


state 126

    (111) operadores -> MULTIPLICACION .

    CADENA          reduce using rule 111 (operadores -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 111 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 111 (operadores -> MULTIPLICACION .)
    DECIMAL         reduce using rule 111 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 111 (operadores -> MULTIPLICACION .)
    LPAREN          reduce using rule 111 (operadores -> MULTIPLICACION .)


state 127

    (112) operadores -> DIVISION .

    CADENA          reduce using rule 112 (operadores -> DIVISION .)
    BOOLEANO        reduce using rule 112 (operadores -> DIVISION .)
    ENTERO          reduce using rule 112 (operadores -> DIVISION .)
    DECIMAL         reduce using rule 112 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 112 (operadores -> DIVISION .)
    LPAREN          reduce using rule 112 (operadores -> DIVISION .)


state 128

    (113) operadores -> MODULO .

    CADENA          reduce using rule 113 (operadores -> MODULO .)
    BOOLEANO        reduce using rule 113 (operadores -> MODULO .)
    ENTERO          reduce using rule 113 (operadores -> MODULO .)
    DECIMAL         reduce using rule 113 (operadores -> MODULO .)
    VARIABLE        reduce using rule 113 (operadores -> MODULO .)
    LPAREN          reduce using rule 113 (operadores -> MODULO .)


state 129

    (30) asignacion -> VAR asignacion .

    $end            reduce using rule 30 (asignacion -> VAR asignacion .)
    RBRACE          reduce using rule 30 (asignacion -> VAR asignacion .)
    SEMI            reduce using rule 30 (asignacion -> VAR asignacion .)
    BREAK           reduce using rule 30 (asignacion -> VAR asignacion .)
    RPAREN          reduce using rule 30 (asignacion -> VAR asignacion .)
    COMMA           reduce using rule 30 (asignacion -> VAR asignacion .)
    VARIABLE        reduce using rule 30 (asignacion -> VAR asignacion .)
    LPAREN          reduce using rule 30 (asignacion -> VAR asignacion .)
    CADENA          reduce using rule 30 (asignacion -> VAR asignacion .)
    BOOLEANO        reduce using rule 30 (asignacion -> VAR asignacion .)
    ENTERO          reduce using rule 30 (asignacion -> VAR asignacion .)
    DECIMAL         reduce using rule 30 (asignacion -> VAR asignacion .)


state 130

    (29) asignacion -> VARIABLE . EQUALS valor SEMI
    (32) asignacion -> VARIABLE . EQUALS brand
    (33) asignacion -> VARIABLE . EQUALS escribir
    (34) asignacion -> VARIABLE . EQUALS btrim
    (35) asignacion -> VARIABLE . EQUALS lectura
    (36) asignacion -> VARIABLE . EQUALS bconcat
    (38) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (40) asignacion -> VARIABLE . EQUALS llamada_funcion
    (41) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (225) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (118) incrementos_mat -> . MINUS_EQUAL
    (119) incrementos_mat -> . MOD_EQUAL
    (120) incrementos_mat -> . MUL_EQUAL
    (121) incrementos_mat -> . PLUS_EQUAL
    (122) incrementos_mat -> . DIV_EQUAL
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    EQUALS          shift and go to state 223
    MINUS_EQUAL     shift and go to state 121
    MOD_EQUAL       shift and go to state 122
    MUL_EQUAL       shift and go to state 123
    PLUS_EQUAL      shift and go to state 124
    DIV_EQUAL       shift and go to state 125
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    incrementos_mat                shift and go to state 119
    operadores                     shift and go to state 120

state 131

    (31) asignacion -> proteccion . asignacion
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 130
    VAR             shift and go to state 38
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76

    proteccion                     shift and go to state 131
    asignacion                     shift and go to state 132
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41

state 132

    (31) asignacion -> proteccion asignacion .

    $end            reduce using rule 31 (asignacion -> proteccion asignacion .)
    RBRACE          reduce using rule 31 (asignacion -> proteccion asignacion .)
    SEMI            reduce using rule 31 (asignacion -> proteccion asignacion .)
    BREAK           reduce using rule 31 (asignacion -> proteccion asignacion .)
    RPAREN          reduce using rule 31 (asignacion -> proteccion asignacion .)
    COMMA           reduce using rule 31 (asignacion -> proteccion asignacion .)
    VARIABLE        reduce using rule 31 (asignacion -> proteccion asignacion .)
    LPAREN          reduce using rule 31 (asignacion -> proteccion asignacion .)
    CADENA          reduce using rule 31 (asignacion -> proteccion asignacion .)
    BOOLEANO        reduce using rule 31 (asignacion -> proteccion asignacion .)
    ENTERO          reduce using rule 31 (asignacion -> proteccion asignacion .)
    DECIMAL         reduce using rule 31 (asignacion -> proteccion asignacion .)


state 133

    (141) funciones -> proteccion funcion_nparams .

    $end            reduce using rule 141 (funciones -> proteccion funcion_nparams .)
    RBRACE          reduce using rule 141 (funciones -> proteccion funcion_nparams .)
    SEMI            reduce using rule 141 (funciones -> proteccion funcion_nparams .)
    BREAK           reduce using rule 141 (funciones -> proteccion funcion_nparams .)


state 134

    (143) funciones -> proteccion funcion_blank .

    $end            reduce using rule 143 (funciones -> proteccion funcion_blank .)
    RBRACE          reduce using rule 143 (funciones -> proteccion funcion_blank .)
    SEMI            reduce using rule 143 (funciones -> proteccion funcion_blank .)
    BREAK           reduce using rule 143 (funciones -> proteccion funcion_blank .)


state 135

    (147) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE

    NOMBRE          shift and go to state 224


state 136

    (42) constante -> DEFINE LPAREN . CADENA COMMA valor RPAREN SEMI
    (43) constante -> DEFINE LPAREN . NOMBRE COMMA ARRAY RPAREN SEMI

    CADENA          shift and go to state 225
    NOMBRE          shift and go to state 226


state 137

    (208) bconcat -> CADENA CONCAT . CADENA SEMI

    CADENA          shift and go to state 227


state 138

    (211) bconcat -> CADENA CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 228


state 139

    (173) lectura -> READLINE LPAREN . CADENA RPAREN SEMI
    (174) lectura -> READLINE LPAREN . RPAREN SEMI

    CADENA          shift and go to state 229
    RPAREN          shift and go to state 230


state 140

    (67) condicion_ifelse -> condicion_if condicion_else .

    $end            reduce using rule 67 (condicion_ifelse -> condicion_if condicion_else .)
    RBRACE          reduce using rule 67 (condicion_ifelse -> condicion_if condicion_else .)
    SEMI            reduce using rule 67 (condicion_ifelse -> condicion_if condicion_else .)
    BREAK           reduce using rule 67 (condicion_ifelse -> condicion_if condicion_else .)


state 141

    (68) condicion_ifelse -> condicion_if condicion_elseif .
    (69) condicion_ifelse -> condicion_if condicion_elseif . condicion_else
    (65) condicion_else -> . ELSE LBRACE cuerpo RBRACE

    $end            reduce using rule 68 (condicion_ifelse -> condicion_if condicion_elseif .)
    RBRACE          reduce using rule 68 (condicion_ifelse -> condicion_if condicion_elseif .)
    SEMI            reduce using rule 68 (condicion_ifelse -> condicion_if condicion_elseif .)
    BREAK           reduce using rule 68 (condicion_ifelse -> condicion_if condicion_elseif .)
    ELSE            shift and go to state 142

    condicion_else                 shift and go to state 231

state 142

    (65) condicion_else -> ELSE . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 232


state 143

    (64) condicion_elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 233


state 144

    (96) bwhile -> WHILE LPAREN . condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> WHILE LPAREN . condicion RPAREN COLON stc_bloque
    (98) bwhile -> WHILE LPAREN . condicion RPAREN SEMI
    (70) condicion -> . VARIABLE operador_logico VARIABLE
    (71) condicion -> . valor operador_logico valor
    (72) condicion -> . VARIABLE operador_logico valor
    (73) condicion -> . VARIABLE condicion_booleana VARIABLE
    (74) condicion -> . valor condicion_booleana valor
    (75) condicion -> . VARIABLE condicion_booleana valor
    (76) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (77) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (78) condicion -> . condicion condicion_booleana condicion
    (79) condicion -> . condicion condicion_booleana comprobacion
    (80) condicion -> . aumentoCasting
    (81) condicion -> . VARIABLE
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 236
    LPAREN          shift and go to state 234
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    condicion                      shift and go to state 235
    valor                          shift and go to state 237
    aumentoCasting                 shift and go to state 238
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 145

    (195) simbolos -> LBRACE RBRACE .

    $end            reduce using rule 195 (simbolos -> LBRACE RBRACE .)
    RBRACE          reduce using rule 195 (simbolos -> LBRACE RBRACE .)
    SEMI            reduce using rule 195 (simbolos -> LBRACE RBRACE .)
    BREAK           reduce using rule 195 (simbolos -> LBRACE RBRACE .)


state 146

    (197) simbolos -> RBRACE instrucciones .

    $end            reduce using rule 197 (simbolos -> RBRACE instrucciones .)
    RBRACE          reduce using rule 197 (simbolos -> RBRACE instrucciones .)
    SEMI            reduce using rule 197 (simbolos -> RBRACE instrucciones .)
    BREAK           reduce using rule 197 (simbolos -> RBRACE instrucciones .)


state 147

    (201) instrucciones -> condicion_else .

    RBRACE          reduce using rule 201 (instrucciones -> condicion_else .)
    SEMI            reduce using rule 201 (instrucciones -> condicion_else .)
    $end            reduce using rule 201 (instrucciones -> condicion_else .)
    BREAK           reduce using rule 201 (instrucciones -> condicion_else .)


state 148

    (202) instrucciones -> condicion_elseif .

    RBRACE          reduce using rule 202 (instrucciones -> condicion_elseif .)
    SEMI            reduce using rule 202 (instrucciones -> condicion_elseif .)
    $end            reduce using rule 202 (instrucciones -> condicion_elseif .)
    BREAK           reduce using rule 202 (instrucciones -> condicion_elseif .)


state 149

    (203) instrucciones -> bwhile .

    RBRACE          reduce using rule 203 (instrucciones -> bwhile .)
    SEMI            reduce using rule 203 (instrucciones -> bwhile .)
    $end            reduce using rule 203 (instrucciones -> bwhile .)
    BREAK           reduce using rule 203 (instrucciones -> bwhile .)


state 150

    (204) instrucciones -> bfor .

    RBRACE          reduce using rule 204 (instrucciones -> bfor .)
    SEMI            reduce using rule 204 (instrucciones -> bfor .)
    $end            reduce using rule 204 (instrucciones -> bfor .)
    BREAK           reduce using rule 204 (instrucciones -> bfor .)


state 151

    (205) instrucciones -> funciones .

    RBRACE          reduce using rule 205 (instrucciones -> funciones .)
    SEMI            reduce using rule 205 (instrucciones -> funciones .)
    $end            reduce using rule 205 (instrucciones -> funciones .)
    BREAK           reduce using rule 205 (instrucciones -> funciones .)


state 152

    (206) instrucciones -> bswitch .

    RBRACE          reduce using rule 206 (instrucciones -> bswitch .)
    SEMI            reduce using rule 206 (instrucciones -> bswitch .)
    $end            reduce using rule 206 (instrucciones -> bswitch .)
    BREAK           reduce using rule 206 (instrucciones -> bswitch .)


state 153

    (207) instrucciones -> bdo .

    RBRACE          reduce using rule 207 (instrucciones -> bdo .)
    SEMI            reduce using rule 207 (instrucciones -> bdo .)
    $end            reduce using rule 207 (instrucciones -> bdo .)
    BREAK           reduce using rule 207 (instrucciones -> bdo .)


state 154

    (141) funciones -> proteccion . funcion_nparams
    (143) funciones -> proteccion . funcion_blank
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE

    FUNCTION        shift and go to state 135

    funcion_nparams                shift and go to state 133
    funcion_blank                  shift and go to state 134

state 155

    (100) bdo -> DO LBRACE . cuerpo RBRACE bwhile
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (60) imprimir -> . ECHO VARIABLE SEMI
    (61) imprimir -> . PRINT VARIABLE SEMI
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (140) funciones -> . funcion_nparams
    (141) funciones -> . proteccion funcion_nparams
    (142) funciones -> . funcion_blank
    (143) funciones -> . proteccion funcion_blank
    (144) funciones -> . funcion_void
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (66) condicion_ifelse -> . condicion_if
    (67) condicion_ifelse -> . condicion_if condicion_else
    (68) condicion_ifelse -> . condicion_if condicion_elseif
    (69) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .
    (100) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (82) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (93) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (94) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (95) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (106) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (101) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON
    (179) bgoto -> . GOTO NOMBRE SEMI
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (180) bcortes -> . EXIT SEMI
    (181) bcortes -> . BREAK SEMI
    (182) bcortes -> . DEFAULT SEMI
    (183) bcortes -> . CONTINUE SEMI
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (184) otros -> . SMALLER NOMBRE GREATER
    (185) otros -> . SMALLER DIVISION NOMBRE GREATER
    (186) otros -> . NOMBRE COLON
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (177) comment -> . COMENTARIOS
    (178) comment -> . DOC_COMENTARIOS
    (223) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (224) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (189) simbolos -> . LPAREN RPAREN
    (190) simbolos -> . LPAREN
    (191) simbolos -> . RPAREN
    (192) simbolos -> . LBRACKET RBRACKET
    (193) simbolos -> . LBRACKET
    (194) simbolos -> . RBRACKET
    (195) simbolos -> . LBRACE RBRACE
    (196) simbolos -> . LBRACE
    (197) simbolos -> . RBRACE instrucciones
    (198) simbolos -> . OPEN_TAG CLOSE_TAG
    (199) simbolos -> . OPEN_TAG
    (200) simbolos -> . CLOSE_TAG
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (62) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (170) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    VARIABLE        shift and go to state 37
    VAR             shift and go to state 38
    NOMBRE          shift and go to state 34
    DEFINE          shift and go to state 45
    READLINE        shift and go to state 47
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    SWITCH          shift and go to state 56
    CASE            shift and go to state 57
    GOTO            shift and go to state 58
    EXIT            shift and go to state 59
    BREAK           shift and go to state 60
    DEFAULT         shift and go to state 61
    CONTINUE        shift and go to state 62
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    SMALLER         shift and go to state 66
    RETURN          shift and go to state 68
    COMENTARIOS     shift and go to state 69
    DOC_COMENTARIOS shift and go to state 70
    LPAREN          shift and go to state 32
    CADENA          shift and go to state 46
    RPAREN          shift and go to state 33
    LBRACKET        shift and go to state 35
    RBRACKET        shift and go to state 36
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 71
    CLOSE_TAG       shift and go to state 72
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76
    FUNCTION        shift and go to state 77
    IF              shift and go to state 78

  ! RBRACE          [ reduce using rule 99 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 170 (empty -> .) ]

    cuerpo                         shift and go to state 239
    bwhile                         shift and go to state 9
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    proteccion                     shift and go to state 39
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41
    funcion_nparams                shift and go to state 42
    funcion_blank                  shift and go to state 43
    funcion_void                   shift and go to state 44
    condicion_if                   shift and go to state 48
    empty                          shift and go to state 67

state 156

    (82) bfor -> FOR LPAREN . asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 130
    VAR             shift and go to state 38
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76

    asignacion                     shift and go to state 240
    proteccion                     shift and go to state 131
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41

state 157

    (95) bforeach -> FOREACH LPAREN . VARIABLE AS VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 241


state 158

    (106) btry -> TRY LBRACE . stc_bloque_def RBRACE catches
    (85) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (86) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 242

    stc_bloque_def                 shift and go to state 243

state 159

    (101) bswitch -> SWITCH LPAREN . VARIABLE RPAREN LBRACE innerSwitch RBRACE

    VARIABLE        shift and go to state 244


state 160

    (102) bcase -> CASE ENTERO . COLON

    COLON           shift and go to state 245


state 161

    (103) bcase -> CASE CADENA . COLON

    COLON           shift and go to state 246


state 162

    (179) bgoto -> GOTO NOMBRE . SEMI

    SEMI            shift and go to state 247


state 163

    (180) bcortes -> EXIT SEMI .

    $end            reduce using rule 180 (bcortes -> EXIT SEMI .)
    RBRACE          reduce using rule 180 (bcortes -> EXIT SEMI .)
    SEMI            reduce using rule 180 (bcortes -> EXIT SEMI .)
    BREAK           reduce using rule 180 (bcortes -> EXIT SEMI .)


state 164

    (181) bcortes -> BREAK SEMI .

    $end            reduce using rule 181 (bcortes -> BREAK SEMI .)
    RBRACE          reduce using rule 181 (bcortes -> BREAK SEMI .)
    SEMI            reduce using rule 181 (bcortes -> BREAK SEMI .)
    BREAK           reduce using rule 181 (bcortes -> BREAK SEMI .)


state 165

    (182) bcortes -> DEFAULT SEMI .

    $end            reduce using rule 182 (bcortes -> DEFAULT SEMI .)
    RBRACE          reduce using rule 182 (bcortes -> DEFAULT SEMI .)
    SEMI            reduce using rule 182 (bcortes -> DEFAULT SEMI .)
    BREAK           reduce using rule 182 (bcortes -> DEFAULT SEMI .)


state 166

    (183) bcortes -> CONTINUE SEMI .

    $end            reduce using rule 183 (bcortes -> CONTINUE SEMI .)
    RBRACE          reduce using rule 183 (bcortes -> CONTINUE SEMI .)
    SEMI            reduce using rule 183 (bcortes -> CONTINUE SEMI .)
    BREAK           reduce using rule 183 (bcortes -> CONTINUE SEMI .)


state 167

    (155) brand -> RAND LPAREN . ENTERO COMMA ENTERO RPAREN SEMI

    ENTERO          shift and go to state 248


state 168

    (175) escribir -> FWRITE LPAREN . NOMBRE COMMA CADENA RPAREN SEMI

    NOMBRE          shift and go to state 249


state 169

    (176) btrim -> TRIM LPAREN . NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 250


state 170

    (184) otros -> SMALLER NOMBRE . GREATER

    GREATER         shift and go to state 251


state 171

    (185) otros -> SMALLER DIVISION . NOMBRE GREATER

    NOMBRE          shift and go to state 252


state 172

    (161) breturn -> RETURN SEMI .

    RBRACE          reduce using rule 161 (breturn -> RETURN SEMI .)
    $end            reduce using rule 161 (breturn -> RETURN SEMI .)
    SEMI            reduce using rule 161 (breturn -> RETURN SEMI .)
    BREAK           reduce using rule 161 (breturn -> RETURN SEMI .)


state 173

    (162) breturn -> RETURN NULL . SEMI

    SEMI            shift and go to state 253


state 174

    (163) breturn -> RETURN VARIABLE . SEMI

    SEMI            shift and go to state 254


state 175

    (164) breturn -> RETURN BOOLEANO . SEMI

    SEMI            shift and go to state 255


state 176

    (198) simbolos -> OPEN_TAG CLOSE_TAG .

    $end            reduce using rule 198 (simbolos -> OPEN_TAG CLOSE_TAG .)
    RBRACE          reduce using rule 198 (simbolos -> OPEN_TAG CLOSE_TAG .)
    SEMI            reduce using rule 198 (simbolos -> OPEN_TAG CLOSE_TAG .)
    BREAK           reduce using rule 198 (simbolos -> OPEN_TAG CLOSE_TAG .)


state 177

    (147) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> FUNCTION NOMBRE . LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    LPAREN          shift and go to state 256


state 178

    (62) condicion_if -> IF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> IF LPAREN . condicion RPAREN llamada_funcion
    (70) condicion -> . VARIABLE operador_logico VARIABLE
    (71) condicion -> . valor operador_logico valor
    (72) condicion -> . VARIABLE operador_logico valor
    (73) condicion -> . VARIABLE condicion_booleana VARIABLE
    (74) condicion -> . valor condicion_booleana valor
    (75) condicion -> . VARIABLE condicion_booleana valor
    (76) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (77) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (78) condicion -> . condicion condicion_booleana condicion
    (79) condicion -> . condicion condicion_booleana comprobacion
    (80) condicion -> . aumentoCasting
    (81) condicion -> . VARIABLE
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 236
    LPAREN          shift and go to state 234
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    condicion                      shift and go to state 257
    valor                          shift and go to state 237
    aumentoCasting                 shift and go to state 238
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 179

    (52) imprimir -> ECHO valor SEMI .

    $end            reduce using rule 52 (imprimir -> ECHO valor SEMI .)
    RBRACE          reduce using rule 52 (imprimir -> ECHO valor SEMI .)
    SEMI            reduce using rule 52 (imprimir -> ECHO valor SEMI .)
    BREAK           reduce using rule 52 (imprimir -> ECHO valor SEMI .)


state 180

    (130) operaciones_mat -> valor operadores . valor
    (131) operaciones_mat -> valor operadores . operaciones_mat
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (130) operaciones_mat -> . valor operadores valor
    (131) operaciones_mat -> . valor operadores operaciones_mat
    (132) operaciones_mat -> . VARIABLE operadores VARIABLE
    (133) operaciones_mat -> . operaciones_mat_par
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (134) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (135) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (136) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (139) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 260
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    LPAREN          shift and go to state 93
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 258
    operaciones_mat                shift and go to state 259
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    operaciones_mat_par            shift and go to state 90
    numero                         shift and go to state 91

state 181

    (109) operadores -> SUMA .

    VARIABLE        reduce using rule 109 (operadores -> SUMA .)
    CADENA          reduce using rule 109 (operadores -> SUMA .)
    BOOLEANO        reduce using rule 109 (operadores -> SUMA .)
    LPAREN          reduce using rule 109 (operadores -> SUMA .)
    ENTERO          reduce using rule 109 (operadores -> SUMA .)
    DECIMAL         reduce using rule 109 (operadores -> SUMA .)


state 182

    (110) operadores -> RESTA .

    VARIABLE        reduce using rule 110 (operadores -> RESTA .)
    CADENA          reduce using rule 110 (operadores -> RESTA .)
    BOOLEANO        reduce using rule 110 (operadores -> RESTA .)
    LPAREN          reduce using rule 110 (operadores -> RESTA .)
    ENTERO          reduce using rule 110 (operadores -> RESTA .)
    DECIMAL         reduce using rule 110 (operadores -> RESTA .)


state 183

    (56) imprimir -> ECHO NOMBRE LBRACKET . ENTERO RBRACKET SEMI

    ENTERO          shift and go to state 261


state 184

    (58) imprimir -> ECHO operaciones_mat SEMI .

    $end            reduce using rule 58 (imprimir -> ECHO operaciones_mat SEMI .)
    RBRACE          reduce using rule 58 (imprimir -> ECHO operaciones_mat SEMI .)
    SEMI            reduce using rule 58 (imprimir -> ECHO operaciones_mat SEMI .)
    BREAK           reduce using rule 58 (imprimir -> ECHO operaciones_mat SEMI .)


state 185

    (60) imprimir -> ECHO VARIABLE SEMI .

    $end            reduce using rule 60 (imprimir -> ECHO VARIABLE SEMI .)
    RBRACE          reduce using rule 60 (imprimir -> ECHO VARIABLE SEMI .)
    SEMI            reduce using rule 60 (imprimir -> ECHO VARIABLE SEMI .)
    BREAK           reduce using rule 60 (imprimir -> ECHO VARIABLE SEMI .)


state 186

    (132) operaciones_mat -> VARIABLE operadores . VARIABLE

    VARIABLE        shift and go to state 262


state 187

    (171) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI

    NEW             shift and go to state 210


state 188

    (134) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (135) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 263

state 189

    (136) operaciones_mat_par -> LPAREN VARIABLE . operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> LPAREN VARIABLE . operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> LPAREN VARIABLE . operadores tipoDato RPAREN
    (139) operaciones_mat_par -> LPAREN VARIABLE . operadores tipoDato RPAREN operadores tipoDato
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    EQUALS          shift and go to state 187
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 264

state 190

    (48) tipoDato -> CADENA .

    SUMA            reduce using rule 48 (tipoDato -> CADENA .)
    RESTA           reduce using rule 48 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 48 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 48 (tipoDato -> CADENA .)
    MODULO          reduce using rule 48 (tipoDato -> CADENA .)
    RPAREN          reduce using rule 48 (tipoDato -> CADENA .)
    SEMI            reduce using rule 48 (tipoDato -> CADENA .)
    AND             reduce using rule 48 (tipoDato -> CADENA .)
    OR              reduce using rule 48 (tipoDato -> CADENA .)
    XOR             reduce using rule 48 (tipoDato -> CADENA .)
    IS_EQUAL        reduce using rule 48 (tipoDato -> CADENA .)
    IS_NOT_EQUAL    reduce using rule 48 (tipoDato -> CADENA .)
    IS_IDENTICAL    reduce using rule 48 (tipoDato -> CADENA .)
    IS_NOT_IDENTICAL reduce using rule 48 (tipoDato -> CADENA .)
    SMALLER         reduce using rule 48 (tipoDato -> CADENA .)
    GREATER         reduce using rule 48 (tipoDato -> CADENA .)
    IS_SMALLER_OR_EQUAL reduce using rule 48 (tipoDato -> CADENA .)
    IS_GREATER_OR_EQUAL reduce using rule 48 (tipoDato -> CADENA .)
    COMMA           reduce using rule 48 (tipoDato -> CADENA .)
    $end            reduce using rule 48 (tipoDato -> CADENA .)
    RBRACE          reduce using rule 48 (tipoDato -> CADENA .)
    BREAK           reduce using rule 48 (tipoDato -> CADENA .)
    VARIABLE        reduce using rule 48 (tipoDato -> CADENA .)
    LPAREN          reduce using rule 48 (tipoDato -> CADENA .)
    CADENA          reduce using rule 48 (tipoDato -> CADENA .)
    BOOLEANO        reduce using rule 48 (tipoDato -> CADENA .)
    ENTERO          reduce using rule 48 (tipoDato -> CADENA .)
    DECIMAL         reduce using rule 48 (tipoDato -> CADENA .)


state 191

    (53) imprimir -> PRINT valor SEMI .

    $end            reduce using rule 53 (imprimir -> PRINT valor SEMI .)
    RBRACE          reduce using rule 53 (imprimir -> PRINT valor SEMI .)
    SEMI            reduce using rule 53 (imprimir -> PRINT valor SEMI .)
    BREAK           reduce using rule 53 (imprimir -> PRINT valor SEMI .)


state 192

    (54) imprimir -> PRINT LPAREN valor . RPAREN SEMI
    (134) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (135) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    RPAREN          shift and go to state 265
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 263

state 193

    (59) imprimir -> PRINT operaciones_mat SEMI .

    $end            reduce using rule 59 (imprimir -> PRINT operaciones_mat SEMI .)
    RBRACE          reduce using rule 59 (imprimir -> PRINT operaciones_mat SEMI .)
    SEMI            reduce using rule 59 (imprimir -> PRINT operaciones_mat SEMI .)
    BREAK           reduce using rule 59 (imprimir -> PRINT operaciones_mat SEMI .)


state 194

    (61) imprimir -> PRINT VARIABLE SEMI .

    $end            reduce using rule 61 (imprimir -> PRINT VARIABLE SEMI .)
    RBRACE          reduce using rule 61 (imprimir -> PRINT VARIABLE SEMI .)
    SEMI            reduce using rule 61 (imprimir -> PRINT VARIABLE SEMI .)
    BREAK           reduce using rule 61 (imprimir -> PRINT VARIABLE SEMI .)


state 195

    (224) casting -> LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 266


state 196

    (154) llamada_funcion -> NOMBRE LPAREN params_list . RPAREN SEMI
    (148) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 267
    COMMA           shift and go to state 268


state 197

    (149) params_list -> param .

    RPAREN          reduce using rule 149 (params_list -> param .)
    COMMA           reduce using rule 149 (params_list -> param .)


state 198

    (150) params_list -> empty .

    RPAREN          reduce using rule 150 (params_list -> empty .)
    COMMA           reduce using rule 150 (params_list -> empty .)


state 199

    (145) param -> VARIABLE .
    (29) asignacion -> VARIABLE . EQUALS valor SEMI
    (32) asignacion -> VARIABLE . EQUALS brand
    (33) asignacion -> VARIABLE . EQUALS escribir
    (34) asignacion -> VARIABLE . EQUALS btrim
    (35) asignacion -> VARIABLE . EQUALS lectura
    (36) asignacion -> VARIABLE . EQUALS bconcat
    (38) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (40) asignacion -> VARIABLE . EQUALS llamada_funcion
    (41) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (225) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (118) incrementos_mat -> . MINUS_EQUAL
    (119) incrementos_mat -> . MOD_EQUAL
    (120) incrementos_mat -> . MUL_EQUAL
    (121) incrementos_mat -> . PLUS_EQUAL
    (122) incrementos_mat -> . DIV_EQUAL
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    RPAREN          reduce using rule 145 (param -> VARIABLE .)
    COMMA           reduce using rule 145 (param -> VARIABLE .)
    EQUALS          shift and go to state 223
    MINUS_EQUAL     shift and go to state 121
    MOD_EQUAL       shift and go to state 122
    MUL_EQUAL       shift and go to state 123
    PLUS_EQUAL      shift and go to state 124
    DIV_EQUAL       shift and go to state 125
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    incrementos_mat                shift and go to state 119
    operadores                     shift and go to state 120

state 200

    (146) param -> asignacion .

    RPAREN          reduce using rule 146 (param -> asignacion .)
    COMMA           reduce using rule 146 (param -> asignacion .)


state 201

    (226) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores tipoDato SEMI
    (227) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores VARIABLE operadores operaciones_mat_par SEMI
    (209) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (210) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (213) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (132) operaciones_mat -> VARIABLE . operadores VARIABLE
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    CONCAT          shift and go to state 117
    CONCAT_EQUAL    shift and go to state 118
    EQUALS          shift and go to state 187
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 269

state 202

    (29) asignacion -> VARIABLE EQUALS valor . SEMI
    (130) operaciones_mat -> valor . operadores valor
    (131) operaciones_mat -> valor . operadores operaciones_mat
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SEMI            shift and go to state 270
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 180

state 203

    (32) asignacion -> VARIABLE EQUALS brand .

    $end            reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    RBRACE          reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    SEMI            reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    BREAK           reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    RPAREN          reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    COMMA           reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    VARIABLE        reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    LPAREN          reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    CADENA          reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    BOOLEANO        reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    ENTERO          reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)
    DECIMAL         reduce using rule 32 (asignacion -> VARIABLE EQUALS brand .)


state 204

    (33) asignacion -> VARIABLE EQUALS escribir .

    $end            reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    RBRACE          reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    SEMI            reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    BREAK           reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    RPAREN          reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    COMMA           reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    VARIABLE        reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    LPAREN          reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    CADENA          reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    BOOLEANO        reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    ENTERO          reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)
    DECIMAL         reduce using rule 33 (asignacion -> VARIABLE EQUALS escribir .)


state 205

    (34) asignacion -> VARIABLE EQUALS btrim .

    $end            reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    RBRACE          reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    SEMI            reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    BREAK           reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    RPAREN          reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    COMMA           reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    VARIABLE        reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    LPAREN          reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    CADENA          reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    BOOLEANO        reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    ENTERO          reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)
    DECIMAL         reduce using rule 34 (asignacion -> VARIABLE EQUALS btrim .)


state 206

    (35) asignacion -> VARIABLE EQUALS lectura .

    $end            reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    RBRACE          reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    SEMI            reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    BREAK           reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    RPAREN          reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    COMMA           reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    VARIABLE        reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    LPAREN          reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    CADENA          reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    BOOLEANO        reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    ENTERO          reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)
    DECIMAL         reduce using rule 35 (asignacion -> VARIABLE EQUALS lectura .)


state 207

    (36) asignacion -> VARIABLE EQUALS bconcat .

    $end            reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    RBRACE          reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    SEMI            reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    BREAK           reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    RPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    COMMA           reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    VARIABLE        reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    LPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    CADENA          reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    BOOLEANO        reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    ENTERO          reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)
    DECIMAL         reduce using rule 36 (asignacion -> VARIABLE EQUALS bconcat .)


state 208

    (38) asignacion -> VARIABLE EQUALS operaciones_mat . SEMI

    SEMI            shift and go to state 271


state 209

    (40) asignacion -> VARIABLE EQUALS llamada_funcion .

    $end            reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    RBRACE          reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    SEMI            reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    BREAK           reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    RPAREN          reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    COMMA           reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    VARIABLE        reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    LPAREN          reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    CADENA          reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    BOOLEANO        reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    ENTERO          reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    DECIMAL         reduce using rule 40 (asignacion -> VARIABLE EQUALS llamada_funcion .)


state 210

    (171) bcolas -> VARIABLE EQUALS NEW . SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE EQUALS NEW . SPLSTACK LPAREN RPAREN SEMI

    SPLQUEUE        shift and go to state 272
    SPLSTACK        shift and go to state 273


state 211

    (223) casting -> VARIABLE EQUALS LPAREN . tiposCast RPAREN VARIABLE SEMI
    (134) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (135) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (136) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN
    (139) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (214) tiposCast -> . STRING
    (215) tiposCast -> . BOOL
    (216) tiposCast -> . BOOLEAN
    (217) tiposCast -> . DOUBLE
    (218) tiposCast -> . FLOAT
    (219) tiposCast -> . ARRAY
    (220) tiposCast -> . OBJECT
    (221) tiposCast -> . INTEGER
    (222) tiposCast -> . INT
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 189
    STRING          shift and go to state 102
    BOOL            shift and go to state 103
    BOOLEAN         shift and go to state 104
    DOUBLE          shift and go to state 105
    FLOAT           shift and go to state 106
    ARRAY           shift and go to state 107
    OBJECT          shift and go to state 108
    INTEGER         shift and go to state 109
    INT             shift and go to state 110
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    tiposCast                      shift and go to state 274
    valor                          shift and go to state 188
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 212

    (41) asignacion_array -> VARIABLE EQUALS array_def . SEMI

    SEMI            shift and go to state 275


state 213

    (154) llamada_funcion -> NOMBRE . LPAREN params_list RPAREN SEMI

    LPAREN          shift and go to state 111


state 214

    (166) array_def -> ARRAY . LPAREN RPAREN
    (167) array_def -> ARRAY . LPAREN array_elmnt RPAREN

    LPAREN          shift and go to state 276


state 215

    (93) incrementOp -> VARIABLE SUMA SUMA . SEMI

    SEMI            shift and go to state 277


state 216

    (94) incrementOp -> VARIABLE RESTA RESTA . SEMI

    SEMI            shift and go to state 278


state 217

    (212) bconcat -> VARIABLE CONCAT VARIABLE . SEMI

    SEMI            shift and go to state 279


state 218

    (209) bconcat -> VARIABLE CONCAT CADENA . SEMI
    (213) bconcat -> VARIABLE CONCAT CADENA . CONCAT VARIABLE SEMI

    SEMI            shift and go to state 281
    CONCAT          shift and go to state 280


state 219

    (210) bconcat -> VARIABLE CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 282


state 220

    (229) aumentoCasting -> VARIABLE incrementos_mat VARIABLE . SEMI

    SEMI            shift and go to state 283


state 221

    (225) aumentoCasting -> VARIABLE incrementos_mat tipoDato . SEMI

    SEMI            shift and go to state 284


state 222

    (228) aumentoCasting -> VARIABLE operadores tipoDato . condicion_booleana valor
    (123) condicion_booleana -> . AND
    (124) condicion_booleana -> . OR
    (125) condicion_booleana -> . XOR
    (126) condicion_booleana -> . IS_EQUAL
    (127) condicion_booleana -> . IS_NOT_EQUAL
    (128) condicion_booleana -> . IS_IDENTICAL
    (129) condicion_booleana -> . IS_NOT_IDENTICAL

    AND             shift and go to state 286
    OR              shift and go to state 287
    XOR             shift and go to state 288
    IS_EQUAL        shift and go to state 289
    IS_NOT_EQUAL    shift and go to state 290
    IS_IDENTICAL    shift and go to state 291
    IS_NOT_IDENTICAL shift and go to state 292

    condicion_booleana             shift and go to state 285

state 223

    (29) asignacion -> VARIABLE EQUALS . valor SEMI
    (32) asignacion -> VARIABLE EQUALS . brand
    (33) asignacion -> VARIABLE EQUALS . escribir
    (34) asignacion -> VARIABLE EQUALS . btrim
    (35) asignacion -> VARIABLE EQUALS . lectura
    (36) asignacion -> VARIABLE EQUALS . bconcat
    (38) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (40) asignacion -> VARIABLE EQUALS . llamada_funcion
    (41) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (226) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (130) operaciones_mat -> . valor operadores valor
    (131) operaciones_mat -> . valor operadores operaciones_mat
    (132) operaciones_mat -> . VARIABLE operadores VARIABLE
    (133) operaciones_mat -> . operaciones_mat_par
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (166) array_def -> . ARRAY LPAREN RPAREN
    (167) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (134) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (135) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (136) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (139) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 201
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    READLINE        shift and go to state 47
    CADENA          shift and go to state 89
    NOMBRE          shift and go to state 213
    ARRAY           shift and go to state 214
    BOOLEANO        shift and go to state 92
    LPAREN          shift and go to state 93
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 202
    brand                          shift and go to state 203
    escribir                       shift and go to state 204
    btrim                          shift and go to state 205
    lectura                        shift and go to state 206
    bconcat                        shift and go to state 207
    operaciones_mat                shift and go to state 208
    llamada_funcion                shift and go to state 209
    array_def                      shift and go to state 212
    tipoDato                       shift and go to state 86
    operaciones_mat_par            shift and go to state 90
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 224

    (147) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE

    LPAREN          shift and go to state 293


state 225

    (42) constante -> DEFINE LPAREN CADENA . COMMA valor RPAREN SEMI

    COMMA           shift and go to state 294


state 226

    (43) constante -> DEFINE LPAREN NOMBRE . COMMA ARRAY RPAREN SEMI

    COMMA           shift and go to state 295


state 227

    (208) bconcat -> CADENA CONCAT CADENA . SEMI

    SEMI            shift and go to state 296


state 228

    (211) bconcat -> CADENA CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 297


state 229

    (173) lectura -> READLINE LPAREN CADENA . RPAREN SEMI

    RPAREN          shift and go to state 298


state 230

    (174) lectura -> READLINE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 299


state 231

    (69) condicion_ifelse -> condicion_if condicion_elseif condicion_else .

    $end            reduce using rule 69 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    RBRACE          reduce using rule 69 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    SEMI            reduce using rule 69 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    BREAK           reduce using rule 69 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)


state 232

    (65) condicion_else -> ELSE LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (60) imprimir -> . ECHO VARIABLE SEMI
    (61) imprimir -> . PRINT VARIABLE SEMI
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (140) funciones -> . funcion_nparams
    (141) funciones -> . proteccion funcion_nparams
    (142) funciones -> . funcion_blank
    (143) funciones -> . proteccion funcion_blank
    (144) funciones -> . funcion_void
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (66) condicion_ifelse -> . condicion_if
    (67) condicion_ifelse -> . condicion_if condicion_else
    (68) condicion_ifelse -> . condicion_if condicion_elseif
    (69) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .
    (100) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (82) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (93) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (94) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (95) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (106) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (101) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON
    (179) bgoto -> . GOTO NOMBRE SEMI
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (180) bcortes -> . EXIT SEMI
    (181) bcortes -> . BREAK SEMI
    (182) bcortes -> . DEFAULT SEMI
    (183) bcortes -> . CONTINUE SEMI
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (184) otros -> . SMALLER NOMBRE GREATER
    (185) otros -> . SMALLER DIVISION NOMBRE GREATER
    (186) otros -> . NOMBRE COLON
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (177) comment -> . COMENTARIOS
    (178) comment -> . DOC_COMENTARIOS
    (223) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (224) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (189) simbolos -> . LPAREN RPAREN
    (190) simbolos -> . LPAREN
    (191) simbolos -> . RPAREN
    (192) simbolos -> . LBRACKET RBRACKET
    (193) simbolos -> . LBRACKET
    (194) simbolos -> . RBRACKET
    (195) simbolos -> . LBRACE RBRACE
    (196) simbolos -> . LBRACE
    (197) simbolos -> . RBRACE instrucciones
    (198) simbolos -> . OPEN_TAG CLOSE_TAG
    (199) simbolos -> . OPEN_TAG
    (200) simbolos -> . CLOSE_TAG
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (62) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (170) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    VARIABLE        shift and go to state 37
    VAR             shift and go to state 38
    NOMBRE          shift and go to state 34
    DEFINE          shift and go to state 45
    READLINE        shift and go to state 47
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    SWITCH          shift and go to state 56
    CASE            shift and go to state 57
    GOTO            shift and go to state 58
    EXIT            shift and go to state 59
    BREAK           shift and go to state 60
    DEFAULT         shift and go to state 61
    CONTINUE        shift and go to state 62
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    SMALLER         shift and go to state 66
    RETURN          shift and go to state 68
    COMENTARIOS     shift and go to state 69
    DOC_COMENTARIOS shift and go to state 70
    LPAREN          shift and go to state 32
    CADENA          shift and go to state 46
    RPAREN          shift and go to state 33
    LBRACKET        shift and go to state 35
    RBRACKET        shift and go to state 36
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 71
    CLOSE_TAG       shift and go to state 72
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76
    FUNCTION        shift and go to state 77
    IF              shift and go to state 78

  ! RBRACE          [ reduce using rule 99 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 170 (empty -> .) ]

    cuerpo                         shift and go to state 300
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    proteccion                     shift and go to state 39
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41
    funcion_nparams                shift and go to state 42
    funcion_blank                  shift and go to state 43
    funcion_void                   shift and go to state 44
    condicion_if                   shift and go to state 48
    empty                          shift and go to state 67

state 233

    (64) condicion_elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (70) condicion -> . VARIABLE operador_logico VARIABLE
    (71) condicion -> . valor operador_logico valor
    (72) condicion -> . VARIABLE operador_logico valor
    (73) condicion -> . VARIABLE condicion_booleana VARIABLE
    (74) condicion -> . valor condicion_booleana valor
    (75) condicion -> . VARIABLE condicion_booleana valor
    (76) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (77) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (78) condicion -> . condicion condicion_booleana condicion
    (79) condicion -> . condicion condicion_booleana comprobacion
    (80) condicion -> . aumentoCasting
    (81) condicion -> . VARIABLE
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 236
    LPAREN          shift and go to state 234
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    condicion                      shift and go to state 301
    valor                          shift and go to state 237
    aumentoCasting                 shift and go to state 238
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 234

    (76) condicion -> LPAREN . VARIABLE operadores valor RPAREN operador_logico valor
    (77) condicion -> LPAREN . VARIABLE operadores valor RPAREN condicion_booleana valor

    VARIABLE        shift and go to state 302


state 235

    (96) bwhile -> WHILE LPAREN condicion . RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> WHILE LPAREN condicion . RPAREN COLON stc_bloque
    (98) bwhile -> WHILE LPAREN condicion . RPAREN SEMI
    (78) condicion -> condicion . condicion_booleana condicion
    (79) condicion -> condicion . condicion_booleana comprobacion
    (123) condicion_booleana -> . AND
    (124) condicion_booleana -> . OR
    (125) condicion_booleana -> . XOR
    (126) condicion_booleana -> . IS_EQUAL
    (127) condicion_booleana -> . IS_NOT_EQUAL
    (128) condicion_booleana -> . IS_IDENTICAL
    (129) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 303
    AND             shift and go to state 286
    OR              shift and go to state 287
    XOR             shift and go to state 288
    IS_EQUAL        shift and go to state 289
    IS_NOT_EQUAL    shift and go to state 290
    IS_IDENTICAL    shift and go to state 291
    IS_NOT_IDENTICAL shift and go to state 292

    condicion_booleana             shift and go to state 304

state 236

    (70) condicion -> VARIABLE . operador_logico VARIABLE
    (72) condicion -> VARIABLE . operador_logico valor
    (73) condicion -> VARIABLE . condicion_booleana VARIABLE
    (75) condicion -> VARIABLE . condicion_booleana valor
    (81) condicion -> VARIABLE .
    (225) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (114) operador_logico -> . SMALLER
    (115) operador_logico -> . GREATER
    (116) operador_logico -> . IS_SMALLER_OR_EQUAL
    (117) operador_logico -> . IS_GREATER_OR_EQUAL
    (123) condicion_booleana -> . AND
    (124) condicion_booleana -> . OR
    (125) condicion_booleana -> . XOR
    (126) condicion_booleana -> . IS_EQUAL
    (127) condicion_booleana -> . IS_NOT_EQUAL
    (128) condicion_booleana -> . IS_IDENTICAL
    (129) condicion_booleana -> . IS_NOT_IDENTICAL
    (118) incrementos_mat -> . MINUS_EQUAL
    (119) incrementos_mat -> . MOD_EQUAL
    (120) incrementos_mat -> . MUL_EQUAL
    (121) incrementos_mat -> . PLUS_EQUAL
    (122) incrementos_mat -> . DIV_EQUAL
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IS_EQUAL resolved as shift
  ! shift/reduce conflict for IS_NOT_EQUAL resolved as shift
  ! shift/reduce conflict for IS_IDENTICAL resolved as shift
  ! shift/reduce conflict for IS_NOT_IDENTICAL resolved as shift
    RPAREN          reduce using rule 81 (condicion -> VARIABLE .)
    SEMI            reduce using rule 81 (condicion -> VARIABLE .)
    EQUALS          shift and go to state 307
    SMALLER         shift and go to state 308
    GREATER         shift and go to state 309
    IS_SMALLER_OR_EQUAL shift and go to state 310
    IS_GREATER_OR_EQUAL shift and go to state 311
    AND             shift and go to state 286
    OR              shift and go to state 287
    XOR             shift and go to state 288
    IS_EQUAL        shift and go to state 289
    IS_NOT_EQUAL    shift and go to state 290
    IS_IDENTICAL    shift and go to state 291
    IS_NOT_IDENTICAL shift and go to state 292
    MINUS_EQUAL     shift and go to state 121
    MOD_EQUAL       shift and go to state 122
    MUL_EQUAL       shift and go to state 123
    PLUS_EQUAL      shift and go to state 124
    DIV_EQUAL       shift and go to state 125
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

  ! AND             [ reduce using rule 81 (condicion -> VARIABLE .) ]
  ! OR              [ reduce using rule 81 (condicion -> VARIABLE .) ]
  ! XOR             [ reduce using rule 81 (condicion -> VARIABLE .) ]
  ! IS_EQUAL        [ reduce using rule 81 (condicion -> VARIABLE .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 81 (condicion -> VARIABLE .) ]
  ! IS_IDENTICAL    [ reduce using rule 81 (condicion -> VARIABLE .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 81 (condicion -> VARIABLE .) ]

    operador_logico                shift and go to state 305
    condicion_booleana             shift and go to state 306
    incrementos_mat                shift and go to state 119
    operadores                     shift and go to state 120

state 237

    (71) condicion -> valor . operador_logico valor
    (74) condicion -> valor . condicion_booleana valor
    (114) operador_logico -> . SMALLER
    (115) operador_logico -> . GREATER
    (116) operador_logico -> . IS_SMALLER_OR_EQUAL
    (117) operador_logico -> . IS_GREATER_OR_EQUAL
    (123) condicion_booleana -> . AND
    (124) condicion_booleana -> . OR
    (125) condicion_booleana -> . XOR
    (126) condicion_booleana -> . IS_EQUAL
    (127) condicion_booleana -> . IS_NOT_EQUAL
    (128) condicion_booleana -> . IS_IDENTICAL
    (129) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 308
    GREATER         shift and go to state 309
    IS_SMALLER_OR_EQUAL shift and go to state 310
    IS_GREATER_OR_EQUAL shift and go to state 311
    AND             shift and go to state 286
    OR              shift and go to state 287
    XOR             shift and go to state 288
    IS_EQUAL        shift and go to state 289
    IS_NOT_EQUAL    shift and go to state 290
    IS_IDENTICAL    shift and go to state 291
    IS_NOT_IDENTICAL shift and go to state 292

    operador_logico                shift and go to state 312
    condicion_booleana             shift and go to state 313

state 238

    (80) condicion -> aumentoCasting .

    RPAREN          reduce using rule 80 (condicion -> aumentoCasting .)
    AND             reduce using rule 80 (condicion -> aumentoCasting .)
    OR              reduce using rule 80 (condicion -> aumentoCasting .)
    XOR             reduce using rule 80 (condicion -> aumentoCasting .)
    IS_EQUAL        reduce using rule 80 (condicion -> aumentoCasting .)
    IS_NOT_EQUAL    reduce using rule 80 (condicion -> aumentoCasting .)
    IS_IDENTICAL    reduce using rule 80 (condicion -> aumentoCasting .)
    IS_NOT_IDENTICAL reduce using rule 80 (condicion -> aumentoCasting .)
    SEMI            reduce using rule 80 (condicion -> aumentoCasting .)


state 239

    (100) bdo -> DO LBRACE cuerpo . RBRACE bwhile

    RBRACE          shift and go to state 314


state 240

    (82) bfor -> FOR LPAREN asignacion . condicion SEMI for_incr RPAREN stc_bloque_def
    (70) condicion -> . VARIABLE operador_logico VARIABLE
    (71) condicion -> . valor operador_logico valor
    (72) condicion -> . VARIABLE operador_logico valor
    (73) condicion -> . VARIABLE condicion_booleana VARIABLE
    (74) condicion -> . valor condicion_booleana valor
    (75) condicion -> . VARIABLE condicion_booleana valor
    (76) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (77) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (78) condicion -> . condicion condicion_booleana condicion
    (79) condicion -> . condicion condicion_booleana comprobacion
    (80) condicion -> . aumentoCasting
    (81) condicion -> . VARIABLE
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 236
    LPAREN          shift and go to state 234
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    condicion                      shift and go to state 315
    valor                          shift and go to state 237
    aumentoCasting                 shift and go to state 238
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 241

    (95) bforeach -> FOREACH LPAREN VARIABLE . AS VARIABLE RPAREN stc_bloque_def

    AS              shift and go to state 316


state 242

    (85) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (86) stc_bloque_def -> LBRACE . cuerpo RBRACE
    (83) stc_bloque -> . stc_bloque SEMI cuerpo
    (84) stc_bloque -> . breturn
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (60) imprimir -> . ECHO VARIABLE SEMI
    (61) imprimir -> . PRINT VARIABLE SEMI
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (140) funciones -> . funcion_nparams
    (141) funciones -> . proteccion funcion_nparams
    (142) funciones -> . funcion_blank
    (143) funciones -> . proteccion funcion_blank
    (144) funciones -> . funcion_void
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (66) condicion_ifelse -> . condicion_if
    (67) condicion_ifelse -> . condicion_if condicion_else
    (68) condicion_ifelse -> . condicion_if condicion_elseif
    (69) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .
    (100) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (82) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (93) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (94) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (95) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (106) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (101) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON
    (179) bgoto -> . GOTO NOMBRE SEMI
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (180) bcortes -> . EXIT SEMI
    (181) bcortes -> . BREAK SEMI
    (182) bcortes -> . DEFAULT SEMI
    (183) bcortes -> . CONTINUE SEMI
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (184) otros -> . SMALLER NOMBRE GREATER
    (185) otros -> . SMALLER DIVISION NOMBRE GREATER
    (186) otros -> . NOMBRE COLON
    (177) comment -> . COMENTARIOS
    (178) comment -> . DOC_COMENTARIOS
    (223) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (224) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (189) simbolos -> . LPAREN RPAREN
    (190) simbolos -> . LPAREN
    (191) simbolos -> . RPAREN
    (192) simbolos -> . LBRACKET RBRACKET
    (193) simbolos -> . LBRACKET
    (194) simbolos -> . RBRACKET
    (195) simbolos -> . LBRACE RBRACE
    (196) simbolos -> . LBRACE
    (197) simbolos -> . RBRACE instrucciones
    (198) simbolos -> . OPEN_TAG CLOSE_TAG
    (199) simbolos -> . OPEN_TAG
    (200) simbolos -> . CLOSE_TAG
    (170) empty -> .
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (62) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    RETURN          shift and go to state 68
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    VARIABLE        shift and go to state 37
    VAR             shift and go to state 38
    NOMBRE          shift and go to state 34
    DEFINE          shift and go to state 45
    READLINE        shift and go to state 47
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    SWITCH          shift and go to state 56
    CASE            shift and go to state 57
    GOTO            shift and go to state 58
    EXIT            shift and go to state 59
    BREAK           shift and go to state 60
    DEFAULT         shift and go to state 61
    CONTINUE        shift and go to state 62
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    SMALLER         shift and go to state 66
    COMENTARIOS     shift and go to state 69
    DOC_COMENTARIOS shift and go to state 70
    LPAREN          shift and go to state 32
    CADENA          shift and go to state 46
    RPAREN          shift and go to state 33
    LBRACKET        shift and go to state 35
    RBRACKET        shift and go to state 36
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 71
    CLOSE_TAG       shift and go to state 72
    SEMI            reduce using rule 170 (empty -> .)
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76
    FUNCTION        shift and go to state 77
    IF              shift and go to state 78

  ! RBRACE          [ reduce using rule 99 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 170 (empty -> .) ]

    stc_bloque                     shift and go to state 317
    cuerpo                         shift and go to state 318
    breturn                        shift and go to state 319
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    empty                          shift and go to state 67
    proteccion                     shift and go to state 39
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41
    funcion_nparams                shift and go to state 42
    funcion_blank                  shift and go to state 43
    funcion_void                   shift and go to state 44
    condicion_if                   shift and go to state 48

state 243

    (106) btry -> TRY LBRACE stc_bloque_def . RBRACE catches

    RBRACE          shift and go to state 320


state 244

    (101) bswitch -> SWITCH LPAREN VARIABLE . RPAREN LBRACE innerSwitch RBRACE

    RPAREN          shift and go to state 321


state 245

    (102) bcase -> CASE ENTERO COLON .

    $end            reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    RBRACE          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    SEMI            reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    BREAK           reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    ECHO            reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    PRINT           reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    VARIABLE        reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    VAR             reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    NOMBRE          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    DEFINE          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    READLINE        reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    WHILE           reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    DO              reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    FOR             reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    FOREACH         reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    TRY             reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    SWITCH          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    CASE            reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    GOTO            reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    EXIT            reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    DEFAULT         reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    CONTINUE        reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    RAND            reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    FWRITE          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    TRIM            reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    SMALLER         reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    RETURN          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    COMENTARIOS     reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    DOC_COMENTARIOS reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    LPAREN          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    CADENA          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    RPAREN          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    LBRACKET        reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    RBRACKET        reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    LBRACE          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    OPEN_TAG        reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    CLOSE_TAG       reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    PUBLIC          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    PRIVATE         reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    PROTECTED       reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    STATIC          reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    FUNCTION        reduce using rule 102 (bcase -> CASE ENTERO COLON .)
    IF              reduce using rule 102 (bcase -> CASE ENTERO COLON .)


state 246

    (103) bcase -> CASE CADENA COLON .

    $end            reduce using rule 103 (bcase -> CASE CADENA COLON .)
    RBRACE          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    SEMI            reduce using rule 103 (bcase -> CASE CADENA COLON .)
    BREAK           reduce using rule 103 (bcase -> CASE CADENA COLON .)
    ECHO            reduce using rule 103 (bcase -> CASE CADENA COLON .)
    PRINT           reduce using rule 103 (bcase -> CASE CADENA COLON .)
    VARIABLE        reduce using rule 103 (bcase -> CASE CADENA COLON .)
    VAR             reduce using rule 103 (bcase -> CASE CADENA COLON .)
    NOMBRE          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    DEFINE          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    READLINE        reduce using rule 103 (bcase -> CASE CADENA COLON .)
    WHILE           reduce using rule 103 (bcase -> CASE CADENA COLON .)
    DO              reduce using rule 103 (bcase -> CASE CADENA COLON .)
    FOR             reduce using rule 103 (bcase -> CASE CADENA COLON .)
    FOREACH         reduce using rule 103 (bcase -> CASE CADENA COLON .)
    TRY             reduce using rule 103 (bcase -> CASE CADENA COLON .)
    SWITCH          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    CASE            reduce using rule 103 (bcase -> CASE CADENA COLON .)
    GOTO            reduce using rule 103 (bcase -> CASE CADENA COLON .)
    EXIT            reduce using rule 103 (bcase -> CASE CADENA COLON .)
    DEFAULT         reduce using rule 103 (bcase -> CASE CADENA COLON .)
    CONTINUE        reduce using rule 103 (bcase -> CASE CADENA COLON .)
    RAND            reduce using rule 103 (bcase -> CASE CADENA COLON .)
    FWRITE          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    TRIM            reduce using rule 103 (bcase -> CASE CADENA COLON .)
    SMALLER         reduce using rule 103 (bcase -> CASE CADENA COLON .)
    RETURN          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    COMENTARIOS     reduce using rule 103 (bcase -> CASE CADENA COLON .)
    DOC_COMENTARIOS reduce using rule 103 (bcase -> CASE CADENA COLON .)
    LPAREN          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    CADENA          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    RPAREN          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    LBRACKET        reduce using rule 103 (bcase -> CASE CADENA COLON .)
    RBRACKET        reduce using rule 103 (bcase -> CASE CADENA COLON .)
    LBRACE          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    OPEN_TAG        reduce using rule 103 (bcase -> CASE CADENA COLON .)
    CLOSE_TAG       reduce using rule 103 (bcase -> CASE CADENA COLON .)
    PUBLIC          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    PRIVATE         reduce using rule 103 (bcase -> CASE CADENA COLON .)
    PROTECTED       reduce using rule 103 (bcase -> CASE CADENA COLON .)
    STATIC          reduce using rule 103 (bcase -> CASE CADENA COLON .)
    FUNCTION        reduce using rule 103 (bcase -> CASE CADENA COLON .)
    IF              reduce using rule 103 (bcase -> CASE CADENA COLON .)


state 247

    (179) bgoto -> GOTO NOMBRE SEMI .

    $end            reduce using rule 179 (bgoto -> GOTO NOMBRE SEMI .)
    RBRACE          reduce using rule 179 (bgoto -> GOTO NOMBRE SEMI .)
    SEMI            reduce using rule 179 (bgoto -> GOTO NOMBRE SEMI .)
    BREAK           reduce using rule 179 (bgoto -> GOTO NOMBRE SEMI .)


state 248

    (155) brand -> RAND LPAREN ENTERO . COMMA ENTERO RPAREN SEMI

    COMMA           shift and go to state 322


state 249

    (175) escribir -> FWRITE LPAREN NOMBRE . COMMA CADENA RPAREN SEMI

    COMMA           shift and go to state 323


state 250

    (176) btrim -> TRIM LPAREN NOMBRE . LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 324


state 251

    (184) otros -> SMALLER NOMBRE GREATER .

    $end            reduce using rule 184 (otros -> SMALLER NOMBRE GREATER .)
    RBRACE          reduce using rule 184 (otros -> SMALLER NOMBRE GREATER .)
    SEMI            reduce using rule 184 (otros -> SMALLER NOMBRE GREATER .)
    BREAK           reduce using rule 184 (otros -> SMALLER NOMBRE GREATER .)


state 252

    (185) otros -> SMALLER DIVISION NOMBRE . GREATER

    GREATER         shift and go to state 325


state 253

    (162) breturn -> RETURN NULL SEMI .

    RBRACE          reduce using rule 162 (breturn -> RETURN NULL SEMI .)
    $end            reduce using rule 162 (breturn -> RETURN NULL SEMI .)
    SEMI            reduce using rule 162 (breturn -> RETURN NULL SEMI .)
    BREAK           reduce using rule 162 (breturn -> RETURN NULL SEMI .)


state 254

    (163) breturn -> RETURN VARIABLE SEMI .

    RBRACE          reduce using rule 163 (breturn -> RETURN VARIABLE SEMI .)
    $end            reduce using rule 163 (breturn -> RETURN VARIABLE SEMI .)
    SEMI            reduce using rule 163 (breturn -> RETURN VARIABLE SEMI .)
    BREAK           reduce using rule 163 (breturn -> RETURN VARIABLE SEMI .)


state 255

    (164) breturn -> RETURN BOOLEANO SEMI .

    RBRACE          reduce using rule 164 (breturn -> RETURN BOOLEANO SEMI .)
    $end            reduce using rule 164 (breturn -> RETURN BOOLEANO SEMI .)
    SEMI            reduce using rule 164 (breturn -> RETURN BOOLEANO SEMI .)
    BREAK           reduce using rule 164 (breturn -> RETURN BOOLEANO SEMI .)


state 256

    (147) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (152) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (153) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (151) funcion_void -> FUNCTION NOMBRE LPAREN . RPAREN COLON VOID LBRACE empty RBRACE
    (148) params_list -> . params_list COMMA param
    (149) params_list -> . param
    (150) params_list -> . empty
    (145) param -> . VARIABLE
    (146) param -> . asignacion
    (170) empty -> .
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 327
    VARIABLE        shift and go to state 199
    COMMA           reduce using rule 170 (empty -> .)
    VAR             shift and go to state 38
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76

  ! RPAREN          [ reduce using rule 170 (empty -> .) ]

    params_list                    shift and go to state 326
    empty                          shift and go to state 198
    param                          shift and go to state 197
    asignacion                     shift and go to state 200
    proteccion                     shift and go to state 131
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41

state 257

    (62) condicion_if -> IF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> IF LPAREN condicion . RPAREN llamada_funcion
    (78) condicion -> condicion . condicion_booleana condicion
    (79) condicion -> condicion . condicion_booleana comprobacion
    (123) condicion_booleana -> . AND
    (124) condicion_booleana -> . OR
    (125) condicion_booleana -> . XOR
    (126) condicion_booleana -> . IS_EQUAL
    (127) condicion_booleana -> . IS_NOT_EQUAL
    (128) condicion_booleana -> . IS_IDENTICAL
    (129) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 328
    AND             shift and go to state 286
    OR              shift and go to state 287
    XOR             shift and go to state 288
    IS_EQUAL        shift and go to state 289
    IS_NOT_EQUAL    shift and go to state 290
    IS_IDENTICAL    shift and go to state 291
    IS_NOT_IDENTICAL shift and go to state 292

    condicion_booleana             shift and go to state 304

state 258

    (130) operaciones_mat -> valor operadores valor .
    (130) operaciones_mat -> valor . operadores valor
    (131) operaciones_mat -> valor . operadores operaciones_mat
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SEMI            reduce using rule 130 (operaciones_mat -> valor operadores valor .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 180

state 259

    (131) operaciones_mat -> valor operadores operaciones_mat .

    SEMI            reduce using rule 131 (operaciones_mat -> valor operadores operaciones_mat .)


state 260

    (132) operaciones_mat -> VARIABLE . operadores VARIABLE
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    EQUALS          shift and go to state 187
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 186

state 261

    (56) imprimir -> ECHO NOMBRE LBRACKET ENTERO . RBRACKET SEMI

    RBRACKET        shift and go to state 329


state 262

    (132) operaciones_mat -> VARIABLE operadores VARIABLE .

    SEMI            reduce using rule 132 (operaciones_mat -> VARIABLE operadores VARIABLE .)


state 263

    (134) operaciones_mat_par -> LPAREN valor operadores . valor RPAREN
    (135) operaciones_mat_par -> LPAREN valor operadores . operaciones_mat_par RPAREN
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (134) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (135) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (136) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (139) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    LPAREN          shift and go to state 93
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 330
    operaciones_mat_par            shift and go to state 331
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 264

    (136) operaciones_mat_par -> LPAREN VARIABLE operadores . VARIABLE RPAREN
    (137) operaciones_mat_par -> LPAREN VARIABLE operadores . valor RPAREN operadores valor
    (138) operaciones_mat_par -> LPAREN VARIABLE operadores . tipoDato RPAREN
    (139) operaciones_mat_par -> LPAREN VARIABLE operadores . tipoDato RPAREN operadores tipoDato
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 333
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 334
    tipoDato                       shift and go to state 335
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 265

    (54) imprimir -> PRINT LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 336


state 266

    (224) casting -> LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 337


state 267

    (154) llamada_funcion -> NOMBRE LPAREN params_list RPAREN . SEMI

    SEMI            shift and go to state 338


state 268

    (148) params_list -> params_list COMMA . param
    (145) param -> . VARIABLE
    (146) param -> . asignacion
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 199
    VAR             shift and go to state 38
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76

    param                          shift and go to state 339
    asignacion                     shift and go to state 200
    proteccion                     shift and go to state 131
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41

state 269

    (226) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . tipoDato SEMI
    (227) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . VARIABLE operadores operaciones_mat_par SEMI
    (132) operaciones_mat -> VARIABLE operadores . VARIABLE
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 340
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    tipoDato                       shift and go to state 341
    numero                         shift and go to state 91

state 270

    (29) asignacion -> VARIABLE EQUALS valor SEMI .

    $end            reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RBRACE          reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    SEMI            reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BREAK           reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RPAREN          reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    COMMA           reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    VARIABLE        reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    LPAREN          reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    CADENA          reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BOOLEANO        reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    ENTERO          reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)
    DECIMAL         reduce using rule 29 (asignacion -> VARIABLE EQUALS valor SEMI .)


state 271

    (38) asignacion -> VARIABLE EQUALS operaciones_mat SEMI .

    $end            reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RBRACE          reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    SEMI            reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BREAK           reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RPAREN          reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    COMMA           reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    VARIABLE        reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    LPAREN          reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    CADENA          reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BOOLEANO        reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    ENTERO          reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    DECIMAL         reduce using rule 38 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)


state 272

    (171) bcolas -> VARIABLE EQUALS NEW SPLQUEUE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 342


state 273

    (172) bpila -> VARIABLE EQUALS NEW SPLSTACK . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 343


state 274

    (223) casting -> VARIABLE EQUALS LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 344


state 275

    (41) asignacion_array -> VARIABLE EQUALS array_def SEMI .

    $end            reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RBRACE          reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    SEMI            reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BREAK           reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RPAREN          reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    COMMA           reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    VARIABLE        reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    LPAREN          reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    CADENA          reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BOOLEANO        reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    ENTERO          reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    DECIMAL         reduce using rule 41 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)


state 276

    (166) array_def -> ARRAY LPAREN . RPAREN
    (167) array_def -> ARRAY LPAREN . array_elmnt RPAREN
    (168) array_elmnt -> . array_elmnt COMMA valor
    (169) array_elmnt -> . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    RPAREN          shift and go to state 345
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    array_elmnt                    shift and go to state 346
    valor                          shift and go to state 347
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 277

    (93) incrementOp -> VARIABLE SUMA SUMA SEMI .

    $end            reduce using rule 93 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    RBRACE          reduce using rule 93 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    SEMI            reduce using rule 93 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    BREAK           reduce using rule 93 (incrementOp -> VARIABLE SUMA SUMA SEMI .)


state 278

    (94) incrementOp -> VARIABLE RESTA RESTA SEMI .

    $end            reduce using rule 94 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    RBRACE          reduce using rule 94 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    SEMI            reduce using rule 94 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    BREAK           reduce using rule 94 (incrementOp -> VARIABLE RESTA RESTA SEMI .)


state 279

    (212) bconcat -> VARIABLE CONCAT VARIABLE SEMI .

    $end            reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RBRACE          reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    SEMI            reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BREAK           reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RPAREN          reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    COMMA           reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    VARIABLE        reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    LPAREN          reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    CADENA          reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BOOLEANO        reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    ENTERO          reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    DECIMAL         reduce using rule 212 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)


state 280

    (213) bconcat -> VARIABLE CONCAT CADENA CONCAT . VARIABLE SEMI

    VARIABLE        shift and go to state 348


state 281

    (209) bconcat -> VARIABLE CONCAT CADENA SEMI .

    $end            reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    SEMI            reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BREAK           reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    COMMA           reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    LPAREN          reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    CADENA          reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 209 (bconcat -> VARIABLE CONCAT CADENA SEMI .)


state 282

    (210) bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BREAK           reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    LPAREN          reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 210 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)


state 283

    (229) aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .

    $end            reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    RBRACE          reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    SEMI            reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    BREAK           reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    RPAREN          reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    COMMA           reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    VARIABLE        reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    LPAREN          reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    CADENA          reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    BOOLEANO        reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    ENTERO          reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    DECIMAL         reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    AND             reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    OR              reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    XOR             reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_EQUAL        reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_NOT_EQUAL    reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_IDENTICAL    reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_NOT_IDENTICAL reduce using rule 229 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)


state 284

    (225) aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .

    $end            reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RBRACE          reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    SEMI            reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BREAK           reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RPAREN          reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    COMMA           reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    VARIABLE        reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    LPAREN          reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    CADENA          reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BOOLEANO        reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    ENTERO          reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    DECIMAL         reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    AND             reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    OR              reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    XOR             reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_EQUAL        reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_NOT_EQUAL    reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_IDENTICAL    reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_NOT_IDENTICAL reduce using rule 225 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)


state 285

    (228) aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    tipoDato                       shift and go to state 86
    valor                          shift and go to state 349
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 286

    (123) condicion_booleana -> AND .

    CADENA          reduce using rule 123 (condicion_booleana -> AND .)
    BOOLEANO        reduce using rule 123 (condicion_booleana -> AND .)
    VARIABLE        reduce using rule 123 (condicion_booleana -> AND .)
    ENTERO          reduce using rule 123 (condicion_booleana -> AND .)
    DECIMAL         reduce using rule 123 (condicion_booleana -> AND .)
    LPAREN          reduce using rule 123 (condicion_booleana -> AND .)
    NOMBRE          reduce using rule 123 (condicion_booleana -> AND .)


state 287

    (124) condicion_booleana -> OR .

    CADENA          reduce using rule 124 (condicion_booleana -> OR .)
    BOOLEANO        reduce using rule 124 (condicion_booleana -> OR .)
    VARIABLE        reduce using rule 124 (condicion_booleana -> OR .)
    ENTERO          reduce using rule 124 (condicion_booleana -> OR .)
    DECIMAL         reduce using rule 124 (condicion_booleana -> OR .)
    LPAREN          reduce using rule 124 (condicion_booleana -> OR .)
    NOMBRE          reduce using rule 124 (condicion_booleana -> OR .)


state 288

    (125) condicion_booleana -> XOR .

    CADENA          reduce using rule 125 (condicion_booleana -> XOR .)
    BOOLEANO        reduce using rule 125 (condicion_booleana -> XOR .)
    VARIABLE        reduce using rule 125 (condicion_booleana -> XOR .)
    ENTERO          reduce using rule 125 (condicion_booleana -> XOR .)
    DECIMAL         reduce using rule 125 (condicion_booleana -> XOR .)
    LPAREN          reduce using rule 125 (condicion_booleana -> XOR .)
    NOMBRE          reduce using rule 125 (condicion_booleana -> XOR .)


state 289

    (126) condicion_booleana -> IS_EQUAL .

    CADENA          reduce using rule 126 (condicion_booleana -> IS_EQUAL .)
    BOOLEANO        reduce using rule 126 (condicion_booleana -> IS_EQUAL .)
    VARIABLE        reduce using rule 126 (condicion_booleana -> IS_EQUAL .)
    ENTERO          reduce using rule 126 (condicion_booleana -> IS_EQUAL .)
    DECIMAL         reduce using rule 126 (condicion_booleana -> IS_EQUAL .)
    LPAREN          reduce using rule 126 (condicion_booleana -> IS_EQUAL .)
    NOMBRE          reduce using rule 126 (condicion_booleana -> IS_EQUAL .)


state 290

    (127) condicion_booleana -> IS_NOT_EQUAL .

    CADENA          reduce using rule 127 (condicion_booleana -> IS_NOT_EQUAL .)
    BOOLEANO        reduce using rule 127 (condicion_booleana -> IS_NOT_EQUAL .)
    VARIABLE        reduce using rule 127 (condicion_booleana -> IS_NOT_EQUAL .)
    ENTERO          reduce using rule 127 (condicion_booleana -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 127 (condicion_booleana -> IS_NOT_EQUAL .)
    LPAREN          reduce using rule 127 (condicion_booleana -> IS_NOT_EQUAL .)
    NOMBRE          reduce using rule 127 (condicion_booleana -> IS_NOT_EQUAL .)


state 291

    (128) condicion_booleana -> IS_IDENTICAL .

    CADENA          reduce using rule 128 (condicion_booleana -> IS_IDENTICAL .)
    BOOLEANO        reduce using rule 128 (condicion_booleana -> IS_IDENTICAL .)
    VARIABLE        reduce using rule 128 (condicion_booleana -> IS_IDENTICAL .)
    ENTERO          reduce using rule 128 (condicion_booleana -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 128 (condicion_booleana -> IS_IDENTICAL .)
    LPAREN          reduce using rule 128 (condicion_booleana -> IS_IDENTICAL .)
    NOMBRE          reduce using rule 128 (condicion_booleana -> IS_IDENTICAL .)


state 292

    (129) condicion_booleana -> IS_NOT_IDENTICAL .

    CADENA          reduce using rule 129 (condicion_booleana -> IS_NOT_IDENTICAL .)
    BOOLEANO        reduce using rule 129 (condicion_booleana -> IS_NOT_IDENTICAL .)
    VARIABLE        reduce using rule 129 (condicion_booleana -> IS_NOT_IDENTICAL .)
    ENTERO          reduce using rule 129 (condicion_booleana -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 129 (condicion_booleana -> IS_NOT_IDENTICAL .)
    LPAREN          reduce using rule 129 (condicion_booleana -> IS_NOT_IDENTICAL .)
    NOMBRE          reduce using rule 129 (condicion_booleana -> IS_NOT_IDENTICAL .)


state 293

    (147) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (152) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (153) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (148) params_list -> . params_list COMMA param
    (149) params_list -> . param
    (150) params_list -> . empty
    (145) param -> . VARIABLE
    (146) param -> . asignacion
    (170) empty -> .
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 350
    VARIABLE        shift and go to state 199
    COMMA           reduce using rule 170 (empty -> .)
    VAR             shift and go to state 38
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76

  ! RPAREN          [ reduce using rule 170 (empty -> .) ]

    params_list                    shift and go to state 326
    empty                          shift and go to state 198
    param                          shift and go to state 197
    asignacion                     shift and go to state 200
    proteccion                     shift and go to state 131
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41

state 294

    (42) constante -> DEFINE LPAREN CADENA COMMA . valor RPAREN SEMI
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 351
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 295

    (43) constante -> DEFINE LPAREN NOMBRE COMMA . ARRAY RPAREN SEMI

    ARRAY           shift and go to state 352


state 296

    (208) bconcat -> CADENA CONCAT CADENA SEMI .

    $end            reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    SEMI            reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BREAK           reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    COMMA           reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    LPAREN          reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    CADENA          reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 208 (bconcat -> CADENA CONCAT CADENA SEMI .)


state 297

    (211) bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BREAK           reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    LPAREN          reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 211 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)


state 298

    (173) lectura -> READLINE LPAREN CADENA RPAREN . SEMI

    SEMI            shift and go to state 353


state 299

    (174) lectura -> READLINE LPAREN RPAREN SEMI .

    $end            reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 174 (lectura -> READLINE LPAREN RPAREN SEMI .)


state 300

    (65) condicion_else -> ELSE LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 354


state 301

    (64) condicion_elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE
    (78) condicion -> condicion . condicion_booleana condicion
    (79) condicion -> condicion . condicion_booleana comprobacion
    (123) condicion_booleana -> . AND
    (124) condicion_booleana -> . OR
    (125) condicion_booleana -> . XOR
    (126) condicion_booleana -> . IS_EQUAL
    (127) condicion_booleana -> . IS_NOT_EQUAL
    (128) condicion_booleana -> . IS_IDENTICAL
    (129) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 355
    AND             shift and go to state 286
    OR              shift and go to state 287
    XOR             shift and go to state 288
    IS_EQUAL        shift and go to state 289
    IS_NOT_EQUAL    shift and go to state 290
    IS_IDENTICAL    shift and go to state 291
    IS_NOT_IDENTICAL shift and go to state 292

    condicion_booleana             shift and go to state 304

state 302

    (76) condicion -> LPAREN VARIABLE . operadores valor RPAREN operador_logico valor
    (77) condicion -> LPAREN VARIABLE . operadores valor RPAREN condicion_booleana valor
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 356

state 303

    (96) bwhile -> WHILE LPAREN condicion RPAREN . LBRACE stc_bloque RBRACE
    (97) bwhile -> WHILE LPAREN condicion RPAREN . COLON stc_bloque
    (98) bwhile -> WHILE LPAREN condicion RPAREN . SEMI

    LBRACE          shift and go to state 357
    COLON           shift and go to state 358
    SEMI            shift and go to state 359


state 304

    (78) condicion -> condicion condicion_booleana . condicion
    (79) condicion -> condicion condicion_booleana . comprobacion
    (70) condicion -> . VARIABLE operador_logico VARIABLE
    (71) condicion -> . valor operador_logico valor
    (72) condicion -> . VARIABLE operador_logico valor
    (73) condicion -> . VARIABLE condicion_booleana VARIABLE
    (74) condicion -> . valor condicion_booleana valor
    (75) condicion -> . VARIABLE condicion_booleana valor
    (76) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (77) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (78) condicion -> . condicion condicion_booleana condicion
    (79) condicion -> . condicion condicion_booleana comprobacion
    (80) condicion -> . aumentoCasting
    (81) condicion -> . VARIABLE
    (187) comprobacion -> . NOMBRE LPAREN valor RPAREN
    (188) comprobacion -> . NOMBRE LPAREN VARIABLE RPAREN
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 236
    LPAREN          shift and go to state 234
    NOMBRE          shift and go to state 362
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    condicion                      shift and go to state 360
    comprobacion                   shift and go to state 361
    valor                          shift and go to state 237
    aumentoCasting                 shift and go to state 238
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 305

    (70) condicion -> VARIABLE operador_logico . VARIABLE
    (72) condicion -> VARIABLE operador_logico . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 363
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 364
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 306

    (73) condicion -> VARIABLE condicion_booleana . VARIABLE
    (75) condicion -> VARIABLE condicion_booleana . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 365
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 366
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 307

    (226) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (171) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI

    VARIABLE        shift and go to state 367
    NEW             shift and go to state 210


state 308

    (114) operador_logico -> SMALLER .

    VARIABLE        reduce using rule 114 (operador_logico -> SMALLER .)
    CADENA          reduce using rule 114 (operador_logico -> SMALLER .)
    BOOLEANO        reduce using rule 114 (operador_logico -> SMALLER .)
    ENTERO          reduce using rule 114 (operador_logico -> SMALLER .)
    DECIMAL         reduce using rule 114 (operador_logico -> SMALLER .)


state 309

    (115) operador_logico -> GREATER .

    VARIABLE        reduce using rule 115 (operador_logico -> GREATER .)
    CADENA          reduce using rule 115 (operador_logico -> GREATER .)
    BOOLEANO        reduce using rule 115 (operador_logico -> GREATER .)
    ENTERO          reduce using rule 115 (operador_logico -> GREATER .)
    DECIMAL         reduce using rule 115 (operador_logico -> GREATER .)


state 310

    (116) operador_logico -> IS_SMALLER_OR_EQUAL .

    VARIABLE        reduce using rule 116 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    CADENA          reduce using rule 116 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    BOOLEANO        reduce using rule 116 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    ENTERO          reduce using rule 116 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 116 (operador_logico -> IS_SMALLER_OR_EQUAL .)


state 311

    (117) operador_logico -> IS_GREATER_OR_EQUAL .

    VARIABLE        reduce using rule 117 (operador_logico -> IS_GREATER_OR_EQUAL .)
    CADENA          reduce using rule 117 (operador_logico -> IS_GREATER_OR_EQUAL .)
    BOOLEANO        reduce using rule 117 (operador_logico -> IS_GREATER_OR_EQUAL .)
    ENTERO          reduce using rule 117 (operador_logico -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 117 (operador_logico -> IS_GREATER_OR_EQUAL .)


state 312

    (71) condicion -> valor operador_logico . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 368
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 313

    (74) condicion -> valor condicion_booleana . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 369
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 314

    (100) bdo -> DO LBRACE cuerpo RBRACE . bwhile
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .

    WHILE           shift and go to state 49
    RBRACE          reduce using rule 99 (bwhile -> .)
    SEMI            reduce using rule 99 (bwhile -> .)
    $end            reduce using rule 99 (bwhile -> .)
    BREAK           reduce using rule 99 (bwhile -> .)

    bwhile                         shift and go to state 370

state 315

    (82) bfor -> FOR LPAREN asignacion condicion . SEMI for_incr RPAREN stc_bloque_def
    (78) condicion -> condicion . condicion_booleana condicion
    (79) condicion -> condicion . condicion_booleana comprobacion
    (123) condicion_booleana -> . AND
    (124) condicion_booleana -> . OR
    (125) condicion_booleana -> . XOR
    (126) condicion_booleana -> . IS_EQUAL
    (127) condicion_booleana -> . IS_NOT_EQUAL
    (128) condicion_booleana -> . IS_IDENTICAL
    (129) condicion_booleana -> . IS_NOT_IDENTICAL

    SEMI            shift and go to state 371
    AND             shift and go to state 286
    OR              shift and go to state 287
    XOR             shift and go to state 288
    IS_EQUAL        shift and go to state 289
    IS_NOT_EQUAL    shift and go to state 290
    IS_IDENTICAL    shift and go to state 291
    IS_NOT_IDENTICAL shift and go to state 292

    condicion_booleana             shift and go to state 304

state 316

    (95) bforeach -> FOREACH LPAREN VARIABLE AS . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 372


state 317

    (85) stc_bloque_def -> LBRACE stc_bloque . RBRACE
    (83) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 373
    SEMI            shift and go to state 374


state 318

    (86) stc_bloque_def -> LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 375


state 319

    (84) stc_bloque -> breturn .
    (24) cuerpo -> breturn .
    (165) breturn -> breturn . RBRACE

  ! reduce/reduce conflict for RBRACE resolved using rule 24 (cuerpo -> breturn .)
  ! shift/reduce conflict for RBRACE resolved as shift
    SEMI            reduce using rule 84 (stc_bloque -> breturn .)
    RBRACE          shift and go to state 79

  ! RBRACE          [ reduce using rule 84 (stc_bloque -> breturn .) ]
  ! RBRACE          [ reduce using rule 24 (cuerpo -> breturn .) ]


state 320

    (106) btry -> TRY LBRACE stc_bloque_def RBRACE . catches
    (107) catches -> . catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def
    (108) catches -> . empty
    (170) empty -> .

    CATCH           reduce using rule 170 (empty -> .)
    $end            reduce using rule 170 (empty -> .)
    RBRACE          reduce using rule 170 (empty -> .)
    SEMI            reduce using rule 170 (empty -> .)
    BREAK           reduce using rule 170 (empty -> .)

    catches                        shift and go to state 376
    empty                          shift and go to state 377

state 321

    (101) bswitch -> SWITCH LPAREN VARIABLE RPAREN . LBRACE innerSwitch RBRACE

    LBRACE          shift and go to state 378


state 322

    (155) brand -> RAND LPAREN ENTERO COMMA . ENTERO RPAREN SEMI

    ENTERO          shift and go to state 379


state 323

    (175) escribir -> FWRITE LPAREN NOMBRE COMMA . CADENA RPAREN SEMI

    CADENA          shift and go to state 380


state 324

    (176) btrim -> TRIM LPAREN NOMBRE LPAREN . NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 381


state 325

    (185) otros -> SMALLER DIVISION NOMBRE GREATER .

    $end            reduce using rule 185 (otros -> SMALLER DIVISION NOMBRE GREATER .)
    RBRACE          reduce using rule 185 (otros -> SMALLER DIVISION NOMBRE GREATER .)
    SEMI            reduce using rule 185 (otros -> SMALLER DIVISION NOMBRE GREATER .)
    BREAK           reduce using rule 185 (otros -> SMALLER DIVISION NOMBRE GREATER .)


state 326

    (147) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list . RPAREN stc_bloque_def
    (148) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 382
    COMMA           shift and go to state 268


state 327

    (152) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (153) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (151) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN . COLON VOID LBRACE empty RBRACE
    (85) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (86) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 384
    COLON           shift and go to state 385

    stc_bloque_def                 shift and go to state 383

state 328

    (62) condicion_if -> IF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE
    (63) condicion_if -> IF LPAREN condicion RPAREN . llamada_funcion
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI

    LBRACE          shift and go to state 386
    NOMBRE          shift and go to state 213

    llamada_funcion                shift and go to state 387

state 329

    (56) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET . SEMI

    SEMI            shift and go to state 388


state 330

    (134) operaciones_mat_par -> LPAREN valor operadores valor . RPAREN

    RPAREN          shift and go to state 389


state 331

    (135) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par . RPAREN

    RPAREN          shift and go to state 390


state 332

    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    EQUALS          shift and go to state 187


state 333

    (136) operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE . RPAREN
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 391
    EQUALS          shift and go to state 187


state 334

    (137) operaciones_mat_par -> LPAREN VARIABLE operadores valor . RPAREN operadores valor

    RPAREN          shift and go to state 392


state 335

    (138) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato . RPAREN
    (139) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato . RPAREN operadores tipoDato
    (44) valor -> tipoDato .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 393

  ! RPAREN          [ reduce using rule 44 (valor -> tipoDato .) ]


state 336

    (54) imprimir -> PRINT LPAREN valor RPAREN SEMI .

    $end            reduce using rule 54 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 54 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 54 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    BREAK           reduce using rule 54 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)


state 337

    (224) casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 224 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 224 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 224 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    BREAK           reduce using rule 224 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 338

    (154) llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .

    $end            reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    RBRACE          reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    SEMI            reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    BREAK           reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    RPAREN          reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    COMMA           reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    VARIABLE        reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    LPAREN          reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    CADENA          reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    BOOLEANO        reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    ENTERO          reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    DECIMAL         reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    ELSE            reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    ELSEIF          reduce using rule 154 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)


state 339

    (148) params_list -> params_list COMMA param .

    RPAREN          reduce using rule 148 (params_list -> params_list COMMA param .)
    COMMA           reduce using rule 148 (params_list -> params_list COMMA param .)


state 340

    (227) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE . operadores operaciones_mat_par SEMI
    (132) operaciones_mat -> VARIABLE operadores VARIABLE .
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SEMI            reduce using rule 132 (operaciones_mat -> VARIABLE operadores VARIABLE .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 394

state 341

    (226) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato . SEMI

    SEMI            shift and go to state 395


state 342

    (171) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 396


state 343

    (172) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 397


state 344

    (223) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 398


state 345

    (166) array_def -> ARRAY LPAREN RPAREN .

    SEMI            reduce using rule 166 (array_def -> ARRAY LPAREN RPAREN .)


state 346

    (167) array_def -> ARRAY LPAREN array_elmnt . RPAREN
    (168) array_elmnt -> array_elmnt . COMMA valor

    RPAREN          shift and go to state 399
    COMMA           shift and go to state 400


state 347

    (169) array_elmnt -> valor .

    RPAREN          reduce using rule 169 (array_elmnt -> valor .)
    COMMA           reduce using rule 169 (array_elmnt -> valor .)


state 348

    (213) bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE . SEMI

    SEMI            shift and go to state 401


state 349

    (228) aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .

    $end            reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    RBRACE          reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    SEMI            reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    BREAK           reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    RPAREN          reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    COMMA           reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    VARIABLE        reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    LPAREN          reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    CADENA          reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    BOOLEANO        reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    ENTERO          reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    DECIMAL         reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    AND             reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    OR              reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    XOR             reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_EQUAL        reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 228 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)


state 350

    (152) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (153) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (85) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (86) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 384

    stc_bloque_def                 shift and go to state 383

state 351

    (42) constante -> DEFINE LPAREN CADENA COMMA valor . RPAREN SEMI

    RPAREN          shift and go to state 402


state 352

    (43) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY . RPAREN SEMI

    RPAREN          shift and go to state 403


state 353

    (173) lectura -> READLINE LPAREN CADENA RPAREN SEMI .

    $end            reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    SEMI            reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BREAK           reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    COMMA           reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    CADENA          reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 173 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)


state 354

    (65) condicion_else -> ELSE LBRACE cuerpo RBRACE .

    $end            reduce using rule 65 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 65 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 65 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 65 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)


state 355

    (64) condicion_elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 404


state 356

    (76) condicion -> LPAREN VARIABLE operadores . valor RPAREN operador_logico valor
    (77) condicion -> LPAREN VARIABLE operadores . valor RPAREN condicion_booleana valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 405
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 357

    (96) bwhile -> WHILE LPAREN condicion RPAREN LBRACE . stc_bloque RBRACE
    (83) stc_bloque -> . stc_bloque SEMI cuerpo
    (84) stc_bloque -> . breturn
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (170) empty -> .

    RETURN          shift and go to state 68
    RBRACE          reduce using rule 170 (empty -> .)
    SEMI            reduce using rule 170 (empty -> .)

    stc_bloque                     shift and go to state 406
    breturn                        shift and go to state 407
    empty                          shift and go to state 67

state 358

    (97) bwhile -> WHILE LPAREN condicion RPAREN COLON . stc_bloque
    (83) stc_bloque -> . stc_bloque SEMI cuerpo
    (84) stc_bloque -> . breturn
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (170) empty -> .

    RETURN          shift and go to state 68
    RBRACE          reduce using rule 170 (empty -> .)
    SEMI            reduce using rule 170 (empty -> .)
    $end            reduce using rule 170 (empty -> .)
    BREAK           reduce using rule 170 (empty -> .)

    stc_bloque                     shift and go to state 408
    breturn                        shift and go to state 407
    empty                          shift and go to state 67

state 359

    (98) bwhile -> WHILE LPAREN condicion RPAREN SEMI .

    $end            reduce using rule 98 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)
    RBRACE          reduce using rule 98 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)
    SEMI            reduce using rule 98 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)
    BREAK           reduce using rule 98 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)


state 360

    (78) condicion -> condicion condicion_booleana condicion .
    (78) condicion -> condicion . condicion_booleana condicion
    (79) condicion -> condicion . condicion_booleana comprobacion
    (123) condicion_booleana -> . AND
    (124) condicion_booleana -> . OR
    (125) condicion_booleana -> . XOR
    (126) condicion_booleana -> . IS_EQUAL
    (127) condicion_booleana -> . IS_NOT_EQUAL
    (128) condicion_booleana -> . IS_IDENTICAL
    (129) condicion_booleana -> . IS_NOT_IDENTICAL

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IS_EQUAL resolved as shift
  ! shift/reduce conflict for IS_NOT_EQUAL resolved as shift
  ! shift/reduce conflict for IS_IDENTICAL resolved as shift
  ! shift/reduce conflict for IS_NOT_IDENTICAL resolved as shift
    RPAREN          reduce using rule 78 (condicion -> condicion condicion_booleana condicion .)
    SEMI            reduce using rule 78 (condicion -> condicion condicion_booleana condicion .)
    AND             shift and go to state 286
    OR              shift and go to state 287
    XOR             shift and go to state 288
    IS_EQUAL        shift and go to state 289
    IS_NOT_EQUAL    shift and go to state 290
    IS_IDENTICAL    shift and go to state 291
    IS_NOT_IDENTICAL shift and go to state 292

  ! AND             [ reduce using rule 78 (condicion -> condicion condicion_booleana condicion .) ]
  ! OR              [ reduce using rule 78 (condicion -> condicion condicion_booleana condicion .) ]
  ! XOR             [ reduce using rule 78 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_EQUAL        [ reduce using rule 78 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 78 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_IDENTICAL    [ reduce using rule 78 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 78 (condicion -> condicion condicion_booleana condicion .) ]

    condicion_booleana             shift and go to state 304

state 361

    (79) condicion -> condicion condicion_booleana comprobacion .

    RPAREN          reduce using rule 79 (condicion -> condicion condicion_booleana comprobacion .)
    AND             reduce using rule 79 (condicion -> condicion condicion_booleana comprobacion .)
    OR              reduce using rule 79 (condicion -> condicion condicion_booleana comprobacion .)
    XOR             reduce using rule 79 (condicion -> condicion condicion_booleana comprobacion .)
    IS_EQUAL        reduce using rule 79 (condicion -> condicion condicion_booleana comprobacion .)
    IS_NOT_EQUAL    reduce using rule 79 (condicion -> condicion condicion_booleana comprobacion .)
    IS_IDENTICAL    reduce using rule 79 (condicion -> condicion condicion_booleana comprobacion .)
    IS_NOT_IDENTICAL reduce using rule 79 (condicion -> condicion condicion_booleana comprobacion .)
    SEMI            reduce using rule 79 (condicion -> condicion condicion_booleana comprobacion .)


state 362

    (187) comprobacion -> NOMBRE . LPAREN valor RPAREN
    (188) comprobacion -> NOMBRE . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 409


state 363

    (70) condicion -> VARIABLE operador_logico VARIABLE .
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 70 (condicion -> VARIABLE operador_logico VARIABLE .)
    AND             reduce using rule 70 (condicion -> VARIABLE operador_logico VARIABLE .)
    OR              reduce using rule 70 (condicion -> VARIABLE operador_logico VARIABLE .)
    XOR             reduce using rule 70 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_EQUAL        reduce using rule 70 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 70 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_IDENTICAL    reduce using rule 70 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 70 (condicion -> VARIABLE operador_logico VARIABLE .)
    SEMI            reduce using rule 70 (condicion -> VARIABLE operador_logico VARIABLE .)
    EQUALS          shift and go to state 187


state 364

    (72) condicion -> VARIABLE operador_logico valor .

    RPAREN          reduce using rule 72 (condicion -> VARIABLE operador_logico valor .)
    AND             reduce using rule 72 (condicion -> VARIABLE operador_logico valor .)
    OR              reduce using rule 72 (condicion -> VARIABLE operador_logico valor .)
    XOR             reduce using rule 72 (condicion -> VARIABLE operador_logico valor .)
    IS_EQUAL        reduce using rule 72 (condicion -> VARIABLE operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 72 (condicion -> VARIABLE operador_logico valor .)
    IS_IDENTICAL    reduce using rule 72 (condicion -> VARIABLE operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 72 (condicion -> VARIABLE operador_logico valor .)
    SEMI            reduce using rule 72 (condicion -> VARIABLE operador_logico valor .)


state 365

    (73) condicion -> VARIABLE condicion_booleana VARIABLE .
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 73 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    AND             reduce using rule 73 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    OR              reduce using rule 73 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    XOR             reduce using rule 73 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_EQUAL        reduce using rule 73 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 73 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_IDENTICAL    reduce using rule 73 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 73 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    SEMI            reduce using rule 73 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    EQUALS          shift and go to state 187


state 366

    (75) condicion -> VARIABLE condicion_booleana valor .

    RPAREN          reduce using rule 75 (condicion -> VARIABLE condicion_booleana valor .)
    AND             reduce using rule 75 (condicion -> VARIABLE condicion_booleana valor .)
    OR              reduce using rule 75 (condicion -> VARIABLE condicion_booleana valor .)
    XOR             reduce using rule 75 (condicion -> VARIABLE condicion_booleana valor .)
    IS_EQUAL        reduce using rule 75 (condicion -> VARIABLE condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 75 (condicion -> VARIABLE condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 75 (condicion -> VARIABLE condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 75 (condicion -> VARIABLE condicion_booleana valor .)
    SEMI            reduce using rule 75 (condicion -> VARIABLE condicion_booleana valor .)


state 367

    (226) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores tipoDato SEMI
    (227) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores VARIABLE operadores operaciones_mat_par SEMI
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 410

state 368

    (71) condicion -> valor operador_logico valor .

    RPAREN          reduce using rule 71 (condicion -> valor operador_logico valor .)
    AND             reduce using rule 71 (condicion -> valor operador_logico valor .)
    OR              reduce using rule 71 (condicion -> valor operador_logico valor .)
    XOR             reduce using rule 71 (condicion -> valor operador_logico valor .)
    IS_EQUAL        reduce using rule 71 (condicion -> valor operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 71 (condicion -> valor operador_logico valor .)
    IS_IDENTICAL    reduce using rule 71 (condicion -> valor operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 71 (condicion -> valor operador_logico valor .)
    SEMI            reduce using rule 71 (condicion -> valor operador_logico valor .)


state 369

    (74) condicion -> valor condicion_booleana valor .

    RPAREN          reduce using rule 74 (condicion -> valor condicion_booleana valor .)
    AND             reduce using rule 74 (condicion -> valor condicion_booleana valor .)
    OR              reduce using rule 74 (condicion -> valor condicion_booleana valor .)
    XOR             reduce using rule 74 (condicion -> valor condicion_booleana valor .)
    IS_EQUAL        reduce using rule 74 (condicion -> valor condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 74 (condicion -> valor condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 74 (condicion -> valor condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 74 (condicion -> valor condicion_booleana valor .)
    SEMI            reduce using rule 74 (condicion -> valor condicion_booleana valor .)


state 370

    (100) bdo -> DO LBRACE cuerpo RBRACE bwhile .

    $end            reduce using rule 100 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    RBRACE          reduce using rule 100 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    SEMI            reduce using rule 100 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    BREAK           reduce using rule 100 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)


state 371

    (82) bfor -> FOR LPAREN asignacion condicion SEMI . for_incr RPAREN stc_bloque_def
    (87) for_incr -> . VARIABLE SUMA SUMA
    (88) for_incr -> . SUMA SUMA VARIABLE
    (89) for_incr -> . VARIABLE RESTA RESTA
    (90) for_incr -> . RESTA RESTA VARIABLE
    (91) for_incr -> . VARIABLE SUMA EQUALS numero
    (92) for_incr -> . VARIABLE RESTA EQUALS numero

    VARIABLE        shift and go to state 412
    SUMA            shift and go to state 413
    RESTA           shift and go to state 414

    for_incr                       shift and go to state 411

state 372

    (95) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 415


state 373

    (85) stc_bloque_def -> LBRACE stc_bloque RBRACE .

    RBRACE          reduce using rule 85 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    $end            reduce using rule 85 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 85 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    BREAK           reduce using rule 85 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    CATCH           reduce using rule 85 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)


state 374

    (83) stc_bloque -> stc_bloque SEMI . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (60) imprimir -> . ECHO VARIABLE SEMI
    (61) imprimir -> . PRINT VARIABLE SEMI
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (140) funciones -> . funcion_nparams
    (141) funciones -> . proteccion funcion_nparams
    (142) funciones -> . funcion_blank
    (143) funciones -> . proteccion funcion_blank
    (144) funciones -> . funcion_void
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (66) condicion_ifelse -> . condicion_if
    (67) condicion_ifelse -> . condicion_if condicion_else
    (68) condicion_ifelse -> . condicion_if condicion_elseif
    (69) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .
    (100) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (82) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (93) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (94) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (95) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (106) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (101) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON
    (179) bgoto -> . GOTO NOMBRE SEMI
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (180) bcortes -> . EXIT SEMI
    (181) bcortes -> . BREAK SEMI
    (182) bcortes -> . DEFAULT SEMI
    (183) bcortes -> . CONTINUE SEMI
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (184) otros -> . SMALLER NOMBRE GREATER
    (185) otros -> . SMALLER DIVISION NOMBRE GREATER
    (186) otros -> . NOMBRE COLON
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (177) comment -> . COMENTARIOS
    (178) comment -> . DOC_COMENTARIOS
    (223) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (224) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (189) simbolos -> . LPAREN RPAREN
    (190) simbolos -> . LPAREN
    (191) simbolos -> . RPAREN
    (192) simbolos -> . LBRACKET RBRACKET
    (193) simbolos -> . LBRACKET
    (194) simbolos -> . RBRACKET
    (195) simbolos -> . LBRACE RBRACE
    (196) simbolos -> . LBRACE
    (197) simbolos -> . RBRACE instrucciones
    (198) simbolos -> . OPEN_TAG CLOSE_TAG
    (199) simbolos -> . OPEN_TAG
    (200) simbolos -> . CLOSE_TAG
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (62) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (170) empty -> .

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
  ! reduce/reduce conflict for SEMI resolved using rule 99 (bwhile -> .)
  ! reduce/reduce conflict for $end resolved using rule 99 (bwhile -> .)
  ! shift/reduce conflict for BREAK resolved as shift
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    VARIABLE        shift and go to state 37
    VAR             shift and go to state 38
    NOMBRE          shift and go to state 34
    DEFINE          shift and go to state 45
    READLINE        shift and go to state 47
    WHILE           shift and go to state 49
    SEMI            reduce using rule 99 (bwhile -> .)
    $end            reduce using rule 99 (bwhile -> .)
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    SWITCH          shift and go to state 56
    CASE            shift and go to state 57
    GOTO            shift and go to state 58
    EXIT            shift and go to state 59
    BREAK           shift and go to state 60
    DEFAULT         shift and go to state 61
    CONTINUE        shift and go to state 62
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    SMALLER         shift and go to state 66
    RETURN          shift and go to state 68
    COMENTARIOS     shift and go to state 69
    DOC_COMENTARIOS shift and go to state 70
    LPAREN          shift and go to state 32
    CADENA          shift and go to state 46
    RPAREN          shift and go to state 33
    LBRACKET        shift and go to state 35
    RBRACKET        shift and go to state 36
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 71
    CLOSE_TAG       shift and go to state 72
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76
    FUNCTION        shift and go to state 77
    IF              shift and go to state 78

  ! RBRACE          [ reduce using rule 99 (bwhile -> .) ]
  ! BREAK           [ reduce using rule 99 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 170 (empty -> .) ]
  ! SEMI            [ reduce using rule 170 (empty -> .) ]
  ! $end            [ reduce using rule 170 (empty -> .) ]
  ! BREAK           [ reduce using rule 170 (empty -> .) ]

    cuerpo                         shift and go to state 416
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    proteccion                     shift and go to state 39
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41
    funcion_nparams                shift and go to state 42
    funcion_blank                  shift and go to state 43
    funcion_void                   shift and go to state 44
    condicion_if                   shift and go to state 48
    empty                          shift and go to state 67

state 375

    (86) stc_bloque_def -> LBRACE cuerpo RBRACE .

    RBRACE          reduce using rule 86 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    $end            reduce using rule 86 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 86 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 86 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    CATCH           reduce using rule 86 (stc_bloque_def -> LBRACE cuerpo RBRACE .)


state 376

    (106) btry -> TRY LBRACE stc_bloque_def RBRACE catches .
    (107) catches -> catches . CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    $end            reduce using rule 106 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    RBRACE          reduce using rule 106 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    SEMI            reduce using rule 106 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    BREAK           reduce using rule 106 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    CATCH           shift and go to state 417


state 377

    (108) catches -> empty .

    CATCH           reduce using rule 108 (catches -> empty .)
    $end            reduce using rule 108 (catches -> empty .)
    RBRACE          reduce using rule 108 (catches -> empty .)
    SEMI            reduce using rule 108 (catches -> empty .)
    BREAK           reduce using rule 108 (catches -> empty .)


state 378

    (101) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE . innerSwitch RBRACE
    (104) innerSwitch -> . bcase cuerpo BREAK SEMI
    (105) innerSwitch -> . bcase cuerpo BREAK SEMI innerSwitch
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON

    CASE            shift and go to state 57

    innerSwitch                    shift and go to state 418
    bcase                          shift and go to state 419

state 379

    (155) brand -> RAND LPAREN ENTERO COMMA ENTERO . RPAREN SEMI

    RPAREN          shift and go to state 420


state 380

    (175) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA . RPAREN SEMI

    RPAREN          shift and go to state 421


state 381

    (176) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE . RPAREN RPAREN SEMI

    RPAREN          shift and go to state 422


state 382

    (147) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN . stc_bloque_def
    (85) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (86) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 242

    stc_bloque_def                 shift and go to state 423

state 383

    (152) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .

    $end            reduce using rule 152 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 152 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    SEMI            reduce using rule 152 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    BREAK           reduce using rule 152 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)


state 384

    (153) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE . empty RBRACE
    (85) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (86) stc_bloque_def -> LBRACE . cuerpo RBRACE
    (170) empty -> .
    (83) stc_bloque -> . stc_bloque SEMI cuerpo
    (84) stc_bloque -> . breturn
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (60) imprimir -> . ECHO VARIABLE SEMI
    (61) imprimir -> . PRINT VARIABLE SEMI
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (140) funciones -> . funcion_nparams
    (141) funciones -> . proteccion funcion_nparams
    (142) funciones -> . funcion_blank
    (143) funciones -> . proteccion funcion_blank
    (144) funciones -> . funcion_void
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (66) condicion_ifelse -> . condicion_if
    (67) condicion_ifelse -> . condicion_if condicion_else
    (68) condicion_ifelse -> . condicion_if condicion_elseif
    (69) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .
    (100) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (82) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (93) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (94) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (95) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (106) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (101) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON
    (179) bgoto -> . GOTO NOMBRE SEMI
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (180) bcortes -> . EXIT SEMI
    (181) bcortes -> . BREAK SEMI
    (182) bcortes -> . DEFAULT SEMI
    (183) bcortes -> . CONTINUE SEMI
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (184) otros -> . SMALLER NOMBRE GREATER
    (185) otros -> . SMALLER DIVISION NOMBRE GREATER
    (186) otros -> . NOMBRE COLON
    (177) comment -> . COMENTARIOS
    (178) comment -> . DOC_COMENTARIOS
    (223) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (224) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (189) simbolos -> . LPAREN RPAREN
    (190) simbolos -> . LPAREN
    (191) simbolos -> . RPAREN
    (192) simbolos -> . LBRACKET RBRACKET
    (193) simbolos -> . LBRACKET
    (194) simbolos -> . RBRACKET
    (195) simbolos -> . LBRACE RBRACE
    (196) simbolos -> . LBRACE
    (197) simbolos -> . RBRACE instrucciones
    (198) simbolos -> . OPEN_TAG CLOSE_TAG
    (199) simbolos -> . OPEN_TAG
    (200) simbolos -> . CLOSE_TAG
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (62) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion

  ! reduce/reduce conflict for RBRACE resolved using rule 99 (bwhile -> .)
  ! shift/reduce conflict for RBRACE resolved as shift
    SEMI            reduce using rule 170 (empty -> .)
    RETURN          shift and go to state 68
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    VARIABLE        shift and go to state 37
    VAR             shift and go to state 38
    NOMBRE          shift and go to state 34
    DEFINE          shift and go to state 45
    READLINE        shift and go to state 47
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    SWITCH          shift and go to state 56
    CASE            shift and go to state 57
    GOTO            shift and go to state 58
    EXIT            shift and go to state 59
    BREAK           shift and go to state 60
    DEFAULT         shift and go to state 61
    CONTINUE        shift and go to state 62
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    SMALLER         shift and go to state 66
    COMENTARIOS     shift and go to state 69
    DOC_COMENTARIOS shift and go to state 70
    LPAREN          shift and go to state 32
    CADENA          shift and go to state 46
    RPAREN          shift and go to state 33
    LBRACKET        shift and go to state 35
    RBRACKET        shift and go to state 36
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 71
    CLOSE_TAG       shift and go to state 72
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76
    FUNCTION        shift and go to state 77
    IF              shift and go to state 78

  ! RBRACE          [ reduce using rule 170 (empty -> .) ]
  ! RBRACE          [ reduce using rule 99 (bwhile -> .) ]

    empty                          shift and go to state 424
    stc_bloque                     shift and go to state 317
    cuerpo                         shift and go to state 318
    breturn                        shift and go to state 319
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    proteccion                     shift and go to state 39
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41
    funcion_nparams                shift and go to state 42
    funcion_blank                  shift and go to state 43
    funcion_void                   shift and go to state 44
    condicion_if                   shift and go to state 48

state 385

    (151) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON . VOID LBRACE empty RBRACE

    VOID            shift and go to state 425


state 386

    (62) condicion_if -> IF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (60) imprimir -> . ECHO VARIABLE SEMI
    (61) imprimir -> . PRINT VARIABLE SEMI
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (140) funciones -> . funcion_nparams
    (141) funciones -> . proteccion funcion_nparams
    (142) funciones -> . funcion_blank
    (143) funciones -> . proteccion funcion_blank
    (144) funciones -> . funcion_void
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (66) condicion_ifelse -> . condicion_if
    (67) condicion_ifelse -> . condicion_if condicion_else
    (68) condicion_ifelse -> . condicion_if condicion_elseif
    (69) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .
    (100) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (82) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (93) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (94) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (95) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (106) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (101) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON
    (179) bgoto -> . GOTO NOMBRE SEMI
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (180) bcortes -> . EXIT SEMI
    (181) bcortes -> . BREAK SEMI
    (182) bcortes -> . DEFAULT SEMI
    (183) bcortes -> . CONTINUE SEMI
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (184) otros -> . SMALLER NOMBRE GREATER
    (185) otros -> . SMALLER DIVISION NOMBRE GREATER
    (186) otros -> . NOMBRE COLON
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (177) comment -> . COMENTARIOS
    (178) comment -> . DOC_COMENTARIOS
    (223) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (224) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (189) simbolos -> . LPAREN RPAREN
    (190) simbolos -> . LPAREN
    (191) simbolos -> . RPAREN
    (192) simbolos -> . LBRACKET RBRACKET
    (193) simbolos -> . LBRACKET
    (194) simbolos -> . RBRACKET
    (195) simbolos -> . LBRACE RBRACE
    (196) simbolos -> . LBRACE
    (197) simbolos -> . RBRACE instrucciones
    (198) simbolos -> . OPEN_TAG CLOSE_TAG
    (199) simbolos -> . OPEN_TAG
    (200) simbolos -> . CLOSE_TAG
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (62) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (170) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    VARIABLE        shift and go to state 37
    VAR             shift and go to state 38
    NOMBRE          shift and go to state 34
    DEFINE          shift and go to state 45
    READLINE        shift and go to state 47
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    SWITCH          shift and go to state 56
    CASE            shift and go to state 57
    GOTO            shift and go to state 58
    EXIT            shift and go to state 59
    BREAK           shift and go to state 60
    DEFAULT         shift and go to state 61
    CONTINUE        shift and go to state 62
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    SMALLER         shift and go to state 66
    RETURN          shift and go to state 68
    COMENTARIOS     shift and go to state 69
    DOC_COMENTARIOS shift and go to state 70
    LPAREN          shift and go to state 32
    CADENA          shift and go to state 46
    RPAREN          shift and go to state 33
    LBRACKET        shift and go to state 35
    RBRACKET        shift and go to state 36
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 71
    CLOSE_TAG       shift and go to state 72
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76
    FUNCTION        shift and go to state 77
    IF              shift and go to state 78

  ! RBRACE          [ reduce using rule 99 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 170 (empty -> .) ]

    cuerpo                         shift and go to state 426
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    proteccion                     shift and go to state 39
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41
    funcion_nparams                shift and go to state 42
    funcion_blank                  shift and go to state 43
    funcion_void                   shift and go to state 44
    condicion_if                   shift and go to state 48
    empty                          shift and go to state 67

state 387

    (63) condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .

    ELSE            reduce using rule 63 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    ELSEIF          reduce using rule 63 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    $end            reduce using rule 63 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    RBRACE          reduce using rule 63 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    SEMI            reduce using rule 63 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    BREAK           reduce using rule 63 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)


state 388

    (56) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .

    $end            reduce using rule 56 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    RBRACE          reduce using rule 56 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    SEMI            reduce using rule 56 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    BREAK           reduce using rule 56 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)


state 389

    (134) operaciones_mat_par -> LPAREN valor operadores valor RPAREN .

    SEMI            reduce using rule 134 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)
    RPAREN          reduce using rule 134 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)


state 390

    (135) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .

    SEMI            reduce using rule 135 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)
    RPAREN          reduce using rule 135 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)


state 391

    (136) operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .

    SEMI            reduce using rule 136 (operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .)
    RPAREN          reduce using rule 136 (operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .)


state 392

    (137) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN . operadores valor
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 427

state 393

    (138) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN .
    (139) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN . operadores tipoDato
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SEMI            reduce using rule 138 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN .)
    RPAREN          reduce using rule 138 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN .)
    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 428

state 394

    (227) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores . operaciones_mat_par SEMI
    (134) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (135) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (136) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (137) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (138) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (139) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato

    LPAREN          shift and go to state 93

    operaciones_mat_par            shift and go to state 429

state 395

    (226) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .

    $end            reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RBRACE          reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    SEMI            reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BREAK           reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RPAREN          reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    COMMA           reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    VARIABLE        reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    LPAREN          reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    CADENA          reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BOOLEANO        reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    ENTERO          reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    DECIMAL         reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    AND             reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    OR              reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    XOR             reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_EQUAL        reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_NOT_EQUAL    reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_IDENTICAL    reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_NOT_IDENTICAL reduce using rule 226 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)


state 396

    (171) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 430


state 397

    (172) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN . SEMI

    SEMI            shift and go to state 431


state 398

    (223) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 432


state 399

    (167) array_def -> ARRAY LPAREN array_elmnt RPAREN .

    SEMI            reduce using rule 167 (array_def -> ARRAY LPAREN array_elmnt RPAREN .)


state 400

    (168) array_elmnt -> array_elmnt COMMA . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 433
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 401

    (213) bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .

    $end            reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    RBRACE          reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    SEMI            reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    BREAK           reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    RPAREN          reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    COMMA           reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    VARIABLE        reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    LPAREN          reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    CADENA          reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    BOOLEANO        reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    ENTERO          reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    DECIMAL         reduce using rule 213 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)


state 402

    (42) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN . SEMI

    SEMI            shift and go to state 434


state 403

    (43) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN . SEMI

    SEMI            shift and go to state 435


state 404

    (64) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (60) imprimir -> . ECHO VARIABLE SEMI
    (61) imprimir -> . PRINT VARIABLE SEMI
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (140) funciones -> . funcion_nparams
    (141) funciones -> . proteccion funcion_nparams
    (142) funciones -> . funcion_blank
    (143) funciones -> . proteccion funcion_blank
    (144) funciones -> . funcion_void
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (66) condicion_ifelse -> . condicion_if
    (67) condicion_ifelse -> . condicion_if condicion_else
    (68) condicion_ifelse -> . condicion_if condicion_elseif
    (69) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .
    (100) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (82) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (93) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (94) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (95) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (106) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (101) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON
    (179) bgoto -> . GOTO NOMBRE SEMI
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (180) bcortes -> . EXIT SEMI
    (181) bcortes -> . BREAK SEMI
    (182) bcortes -> . DEFAULT SEMI
    (183) bcortes -> . CONTINUE SEMI
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (184) otros -> . SMALLER NOMBRE GREATER
    (185) otros -> . SMALLER DIVISION NOMBRE GREATER
    (186) otros -> . NOMBRE COLON
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (177) comment -> . COMENTARIOS
    (178) comment -> . DOC_COMENTARIOS
    (223) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (224) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (189) simbolos -> . LPAREN RPAREN
    (190) simbolos -> . LPAREN
    (191) simbolos -> . RPAREN
    (192) simbolos -> . LBRACKET RBRACKET
    (193) simbolos -> . LBRACKET
    (194) simbolos -> . RBRACKET
    (195) simbolos -> . LBRACE RBRACE
    (196) simbolos -> . LBRACE
    (197) simbolos -> . RBRACE instrucciones
    (198) simbolos -> . OPEN_TAG CLOSE_TAG
    (199) simbolos -> . OPEN_TAG
    (200) simbolos -> . CLOSE_TAG
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (62) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (170) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    VARIABLE        shift and go to state 37
    VAR             shift and go to state 38
    NOMBRE          shift and go to state 34
    DEFINE          shift and go to state 45
    READLINE        shift and go to state 47
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    SWITCH          shift and go to state 56
    CASE            shift and go to state 57
    GOTO            shift and go to state 58
    EXIT            shift and go to state 59
    BREAK           shift and go to state 60
    DEFAULT         shift and go to state 61
    CONTINUE        shift and go to state 62
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    SMALLER         shift and go to state 66
    RETURN          shift and go to state 68
    COMENTARIOS     shift and go to state 69
    DOC_COMENTARIOS shift and go to state 70
    LPAREN          shift and go to state 32
    CADENA          shift and go to state 46
    RPAREN          shift and go to state 33
    LBRACKET        shift and go to state 35
    RBRACKET        shift and go to state 36
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 71
    CLOSE_TAG       shift and go to state 72
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76
    FUNCTION        shift and go to state 77
    IF              shift and go to state 78

  ! RBRACE          [ reduce using rule 99 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 170 (empty -> .) ]

    cuerpo                         shift and go to state 436
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    proteccion                     shift and go to state 39
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41
    funcion_nparams                shift and go to state 42
    funcion_blank                  shift and go to state 43
    funcion_void                   shift and go to state 44
    condicion_if                   shift and go to state 48
    empty                          shift and go to state 67

state 405

    (76) condicion -> LPAREN VARIABLE operadores valor . RPAREN operador_logico valor
    (77) condicion -> LPAREN VARIABLE operadores valor . RPAREN condicion_booleana valor

    RPAREN          shift and go to state 437


state 406

    (96) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque . RBRACE
    (83) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 438
    SEMI            shift and go to state 374


state 407

    (84) stc_bloque -> breturn .
    (165) breturn -> breturn . RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    SEMI            reduce using rule 84 (stc_bloque -> breturn .)
    $end            reduce using rule 84 (stc_bloque -> breturn .)
    BREAK           reduce using rule 84 (stc_bloque -> breturn .)
    RBRACE          shift and go to state 79

  ! RBRACE          [ reduce using rule 84 (stc_bloque -> breturn .) ]


state 408

    (97) bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .
    (83) stc_bloque -> stc_bloque . SEMI cuerpo

  ! shift/reduce conflict for SEMI resolved as shift
    $end            reduce using rule 97 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    RBRACE          reduce using rule 97 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    BREAK           reduce using rule 97 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    SEMI            shift and go to state 374

  ! SEMI            [ reduce using rule 97 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .) ]


state 409

    (187) comprobacion -> NOMBRE LPAREN . valor RPAREN
    (188) comprobacion -> NOMBRE LPAREN . VARIABLE RPAREN
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 440
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 439
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 410

    (226) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . tipoDato SEMI
    (227) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . VARIABLE operadores operaciones_mat_par SEMI
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    VARIABLE        shift and go to state 441
    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    tipoDato                       shift and go to state 341
    numero                         shift and go to state 91

state 411

    (82) bfor -> FOR LPAREN asignacion condicion SEMI for_incr . RPAREN stc_bloque_def

    RPAREN          shift and go to state 442


state 412

    (87) for_incr -> VARIABLE . SUMA SUMA
    (89) for_incr -> VARIABLE . RESTA RESTA
    (91) for_incr -> VARIABLE . SUMA EQUALS numero
    (92) for_incr -> VARIABLE . RESTA EQUALS numero

    SUMA            shift and go to state 443
    RESTA           shift and go to state 444


state 413

    (88) for_incr -> SUMA . SUMA VARIABLE

    SUMA            shift and go to state 445


state 414

    (90) for_incr -> RESTA . RESTA VARIABLE

    RESTA           shift and go to state 446


state 415

    (95) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN . stc_bloque_def
    (85) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (86) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 242

    stc_bloque_def                 shift and go to state 447

state 416

    (83) stc_bloque -> stc_bloque SEMI cuerpo .

    RBRACE          reduce using rule 83 (stc_bloque -> stc_bloque SEMI cuerpo .)
    SEMI            reduce using rule 83 (stc_bloque -> stc_bloque SEMI cuerpo .)
    $end            reduce using rule 83 (stc_bloque -> stc_bloque SEMI cuerpo .)
    BREAK           reduce using rule 83 (stc_bloque -> stc_bloque SEMI cuerpo .)


state 417

    (107) catches -> catches CATCH . LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 448


state 418

    (101) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch . RBRACE

    RBRACE          shift and go to state 449


state 419

    (104) innerSwitch -> bcase . cuerpo BREAK SEMI
    (105) innerSwitch -> bcase . cuerpo BREAK SEMI innerSwitch
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (52) imprimir -> . ECHO valor SEMI
    (53) imprimir -> . PRINT valor SEMI
    (54) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (55) imprimir -> . PRINT bconcat
    (56) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (57) imprimir -> . ECHO bconcat
    (58) imprimir -> . ECHO operaciones_mat SEMI
    (59) imprimir -> . PRINT operaciones_mat SEMI
    (60) imprimir -> . ECHO VARIABLE SEMI
    (61) imprimir -> . PRINT VARIABLE SEMI
    (29) asignacion -> . VARIABLE EQUALS valor SEMI
    (30) asignacion -> . VAR asignacion
    (31) asignacion -> . proteccion asignacion
    (32) asignacion -> . VARIABLE EQUALS brand
    (33) asignacion -> . VARIABLE EQUALS escribir
    (34) asignacion -> . VARIABLE EQUALS btrim
    (35) asignacion -> . VARIABLE EQUALS lectura
    (36) asignacion -> . VARIABLE EQUALS bconcat
    (37) asignacion -> . asignacion_array
    (38) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (39) asignacion -> . aumentoCasting
    (40) asignacion -> . VARIABLE EQUALS llamada_funcion
    (140) funciones -> . funcion_nparams
    (141) funciones -> . proteccion funcion_nparams
    (142) funciones -> . funcion_blank
    (143) funciones -> . proteccion funcion_blank
    (144) funciones -> . funcion_void
    (154) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (42) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (43) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (173) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (174) lectura -> . READLINE LPAREN RPAREN SEMI
    (66) condicion_ifelse -> . condicion_if
    (67) condicion_ifelse -> . condicion_if condicion_else
    (68) condicion_ifelse -> . condicion_if condicion_elseif
    (69) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (96) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (97) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (98) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (99) bwhile -> .
    (100) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (82) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (93) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (94) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (95) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (106) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (101) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON
    (179) bgoto -> . GOTO NOMBRE SEMI
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (180) bcortes -> . EXIT SEMI
    (181) bcortes -> . BREAK SEMI
    (182) bcortes -> . DEFAULT SEMI
    (183) bcortes -> . CONTINUE SEMI
    (155) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (175) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (176) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (184) otros -> . SMALLER NOMBRE GREATER
    (185) otros -> . SMALLER DIVISION NOMBRE GREATER
    (186) otros -> . NOMBRE COLON
    (160) breturn -> . empty
    (161) breturn -> . RETURN SEMI
    (162) breturn -> . RETURN NULL SEMI
    (163) breturn -> . RETURN VARIABLE SEMI
    (164) breturn -> . RETURN BOOLEANO SEMI
    (165) breturn -> . breturn RBRACE
    (177) comment -> . COMENTARIOS
    (178) comment -> . DOC_COMENTARIOS
    (223) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (224) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (208) bconcat -> . CADENA CONCAT CADENA SEMI
    (209) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (210) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (211) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (212) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (213) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (189) simbolos -> . LPAREN RPAREN
    (190) simbolos -> . LPAREN
    (191) simbolos -> . RPAREN
    (192) simbolos -> . LBRACKET RBRACKET
    (193) simbolos -> . LBRACKET
    (194) simbolos -> . RBRACKET
    (195) simbolos -> . LBRACE RBRACE
    (196) simbolos -> . LBRACE
    (197) simbolos -> . RBRACE instrucciones
    (198) simbolos -> . OPEN_TAG CLOSE_TAG
    (199) simbolos -> . OPEN_TAG
    (200) simbolos -> . CLOSE_TAG
    (156) proteccion -> . PUBLIC
    (157) proteccion -> . PRIVATE
    (158) proteccion -> . PROTECTED
    (159) proteccion -> . STATIC
    (41) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (225) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (226) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (227) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (228) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (229) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (147) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (152) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (153) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (151) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (62) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (63) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (170) empty -> .

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    ECHO            shift and go to state 30
    PRINT           shift and go to state 31
    VARIABLE        shift and go to state 37
    VAR             shift and go to state 38
    NOMBRE          shift and go to state 34
    DEFINE          shift and go to state 45
    READLINE        shift and go to state 47
    WHILE           shift and go to state 49
    DO              shift and go to state 52
    FOR             shift and go to state 53
    FOREACH         shift and go to state 54
    TRY             shift and go to state 55
    SWITCH          shift and go to state 56
    CASE            shift and go to state 57
    GOTO            shift and go to state 58
    EXIT            shift and go to state 59
    BREAK           shift and go to state 60
    DEFAULT         shift and go to state 61
    CONTINUE        shift and go to state 62
    RAND            shift and go to state 63
    FWRITE          shift and go to state 64
    TRIM            shift and go to state 65
    SMALLER         shift and go to state 66
    RETURN          shift and go to state 68
    COMENTARIOS     shift and go to state 69
    DOC_COMENTARIOS shift and go to state 70
    LPAREN          shift and go to state 32
    CADENA          shift and go to state 46
    RPAREN          shift and go to state 33
    LBRACKET        shift and go to state 35
    RBRACKET        shift and go to state 36
    LBRACE          shift and go to state 50
    RBRACE          shift and go to state 51
    OPEN_TAG        shift and go to state 71
    CLOSE_TAG       shift and go to state 72
    PUBLIC          shift and go to state 73
    PRIVATE         shift and go to state 74
    PROTECTED       shift and go to state 75
    STATIC          shift and go to state 76
    FUNCTION        shift and go to state 77
    IF              shift and go to state 78

  ! BREAK           [ reduce using rule 99 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 170 (empty -> .) ]
  ! BREAK           [ reduce using rule 170 (empty -> .) ]

    bcase                          shift and go to state 16
    cuerpo                         shift and go to state 450
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    proteccion                     shift and go to state 39
    asignacion_array               shift and go to state 40
    aumentoCasting                 shift and go to state 41
    funcion_nparams                shift and go to state 42
    funcion_blank                  shift and go to state 43
    funcion_void                   shift and go to state 44
    condicion_if                   shift and go to state 48
    empty                          shift and go to state 67

state 420

    (155) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN . SEMI

    SEMI            shift and go to state 451


state 421

    (175) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN . SEMI

    SEMI            shift and go to state 452


state 422

    (176) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN . RPAREN SEMI

    RPAREN          shift and go to state 453


state 423

    (147) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .

    $end            reduce using rule 147 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 147 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    SEMI            reduce using rule 147 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    BREAK           reduce using rule 147 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)


state 424

    (153) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty . RBRACE
    (160) breturn -> empty .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 454
    SEMI            reduce using rule 160 (breturn -> empty .)

  ! RBRACE          [ reduce using rule 160 (breturn -> empty .) ]


state 425

    (151) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID . LBRACE empty RBRACE

    LBRACE          shift and go to state 455


state 426

    (62) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 456


state 427

    (137) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 457
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 428

    (139) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores . tipoDato
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    tipoDato                       shift and go to state 458
    numero                         shift and go to state 91

state 429

    (227) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par . SEMI

    SEMI            shift and go to state 459


state 430

    (171) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .

    $end            reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    AND             reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    OR              reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    XOR             reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 171 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)


state 431

    (172) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .

    $end            reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    AND             reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    OR              reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    XOR             reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 172 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)


state 432

    (223) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 223 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 223 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 223 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    BREAK           reduce using rule 223 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 433

    (168) array_elmnt -> array_elmnt COMMA valor .

    RPAREN          reduce using rule 168 (array_elmnt -> array_elmnt COMMA valor .)
    COMMA           reduce using rule 168 (array_elmnt -> array_elmnt COMMA valor .)


state 434

    (42) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .

    $end            reduce using rule 42 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    RBRACE          reduce using rule 42 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    SEMI            reduce using rule 42 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    BREAK           reduce using rule 42 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)


state 435

    (43) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .

    $end            reduce using rule 43 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    RBRACE          reduce using rule 43 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    SEMI            reduce using rule 43 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    BREAK           reduce using rule 43 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)


state 436

    (64) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 460


state 437

    (76) condicion -> LPAREN VARIABLE operadores valor RPAREN . operador_logico valor
    (77) condicion -> LPAREN VARIABLE operadores valor RPAREN . condicion_booleana valor
    (114) operador_logico -> . SMALLER
    (115) operador_logico -> . GREATER
    (116) operador_logico -> . IS_SMALLER_OR_EQUAL
    (117) operador_logico -> . IS_GREATER_OR_EQUAL
    (123) condicion_booleana -> . AND
    (124) condicion_booleana -> . OR
    (125) condicion_booleana -> . XOR
    (126) condicion_booleana -> . IS_EQUAL
    (127) condicion_booleana -> . IS_NOT_EQUAL
    (128) condicion_booleana -> . IS_IDENTICAL
    (129) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 308
    GREATER         shift and go to state 309
    IS_SMALLER_OR_EQUAL shift and go to state 310
    IS_GREATER_OR_EQUAL shift and go to state 311
    AND             shift and go to state 286
    OR              shift and go to state 287
    XOR             shift and go to state 288
    IS_EQUAL        shift and go to state 289
    IS_NOT_EQUAL    shift and go to state 290
    IS_IDENTICAL    shift and go to state 291
    IS_NOT_IDENTICAL shift and go to state 292

    operador_logico                shift and go to state 461
    condicion_booleana             shift and go to state 462

state 438

    (96) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .

    $end            reduce using rule 96 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    RBRACE          reduce using rule 96 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 96 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    BREAK           reduce using rule 96 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)


state 439

    (187) comprobacion -> NOMBRE LPAREN valor . RPAREN

    RPAREN          shift and go to state 463


state 440

    (188) comprobacion -> NOMBRE LPAREN VARIABLE . RPAREN
    (171) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 464
    EQUALS          shift and go to state 187


state 441

    (227) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE . operadores operaciones_mat_par SEMI
    (109) operadores -> . SUMA
    (110) operadores -> . RESTA
    (111) operadores -> . MULTIPLICACION
    (112) operadores -> . DIVISION
    (113) operadores -> . MODULO

    SUMA            shift and go to state 181
    RESTA           shift and go to state 182
    MULTIPLICACION  shift and go to state 126
    DIVISION        shift and go to state 127
    MODULO          shift and go to state 128

    operadores                     shift and go to state 394

state 442

    (82) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN . stc_bloque_def
    (85) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (86) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 242

    stc_bloque_def                 shift and go to state 465

state 443

    (87) for_incr -> VARIABLE SUMA . SUMA
    (91) for_incr -> VARIABLE SUMA . EQUALS numero

    SUMA            shift and go to state 466
    EQUALS          shift and go to state 467


state 444

    (89) for_incr -> VARIABLE RESTA . RESTA
    (92) for_incr -> VARIABLE RESTA . EQUALS numero

    RESTA           shift and go to state 468
    EQUALS          shift and go to state 469


state 445

    (88) for_incr -> SUMA SUMA . VARIABLE

    VARIABLE        shift and go to state 470


state 446

    (90) for_incr -> RESTA RESTA . VARIABLE

    VARIABLE        shift and go to state 471


state 447

    (95) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .

    $end            reduce using rule 95 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 95 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 95 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    BREAK           reduce using rule 95 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)


state 448

    (107) catches -> catches CATCH LPAREN . NOMBRE VARIABLE RPAREN stc_bloque_def

    NOMBRE          shift and go to state 472


state 449

    (101) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .

    $end            reduce using rule 101 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    RBRACE          reduce using rule 101 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    SEMI            reduce using rule 101 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    BREAK           reduce using rule 101 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)


state 450

    (104) innerSwitch -> bcase cuerpo . BREAK SEMI
    (105) innerSwitch -> bcase cuerpo . BREAK SEMI innerSwitch

    BREAK           shift and go to state 473


state 451

    (155) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .

    $end            reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RBRACE          reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    SEMI            reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BREAK           reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RPAREN          reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    COMMA           reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    VARIABLE        reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    LPAREN          reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    CADENA          reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BOOLEANO        reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    ENTERO          reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    DECIMAL         reduce using rule 155 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)


state 452

    (175) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .

    $end            reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    SEMI            reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BREAK           reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    COMMA           reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    CADENA          reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 175 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)


state 453

    (176) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN . SEMI

    SEMI            shift and go to state 474


state 454

    (153) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .

    $end            reduce using rule 153 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    RBRACE          reduce using rule 153 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    SEMI            reduce using rule 153 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    BREAK           reduce using rule 153 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)


state 455

    (151) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE . empty RBRACE
    (170) empty -> .

    RBRACE          reduce using rule 170 (empty -> .)

    empty                          shift and go to state 475

state 456

    (62) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 62 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    ELSEIF          reduce using rule 62 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 62 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 62 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 62 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 62 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 457

    (137) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .

    SEMI            reduce using rule 137 (operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .)
    RPAREN          reduce using rule 137 (operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .)


state 458

    (139) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato .

    SEMI            reduce using rule 139 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato .)
    RPAREN          reduce using rule 139 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato .)


state 459

    (227) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .

    $end            reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    RBRACE          reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    SEMI            reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    BREAK           reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    RPAREN          reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    COMMA           reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    VARIABLE        reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    LPAREN          reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    CADENA          reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    BOOLEANO        reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    ENTERO          reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    DECIMAL         reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    AND             reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    OR              reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    XOR             reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_EQUAL        reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_NOT_EQUAL    reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_IDENTICAL    reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_NOT_IDENTICAL reduce using rule 227 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)


state 460

    (64) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 64 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 64 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 64 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 64 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 64 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 461

    (76) condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 476
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 462

    (77) condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana . valor
    (44) valor -> . tipoDato
    (45) valor -> . bcolas
    (46) valor -> . bpila
    (47) tipoDato -> . numero
    (48) tipoDato -> . CADENA
    (49) tipoDato -> . BOOLEANO
    (171) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (172) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    CADENA          shift and go to state 190
    BOOLEANO        shift and go to state 92
    VARIABLE        shift and go to state 332
    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    valor                          shift and go to state 477
    tipoDato                       shift and go to state 86
    bcolas                         shift and go to state 87
    bpila                          shift and go to state 88
    numero                         shift and go to state 91

state 463

    (187) comprobacion -> NOMBRE LPAREN valor RPAREN .

    RPAREN          reduce using rule 187 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    AND             reduce using rule 187 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    OR              reduce using rule 187 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    XOR             reduce using rule 187 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_EQUAL        reduce using rule 187 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_NOT_EQUAL    reduce using rule 187 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_IDENTICAL    reduce using rule 187 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 187 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    SEMI            reduce using rule 187 (comprobacion -> NOMBRE LPAREN valor RPAREN .)


state 464

    (188) comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .

    RPAREN          reduce using rule 188 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 188 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 188 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    XOR             reduce using rule 188 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_EQUAL        reduce using rule 188 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_NOT_EQUAL    reduce using rule 188 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_IDENTICAL    reduce using rule 188 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 188 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    SEMI            reduce using rule 188 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)


state 465

    (82) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .

    $end            reduce using rule 82 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 82 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    SEMI            reduce using rule 82 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    BREAK           reduce using rule 82 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)


state 466

    (87) for_incr -> VARIABLE SUMA SUMA .

    RPAREN          reduce using rule 87 (for_incr -> VARIABLE SUMA SUMA .)


state 467

    (91) for_incr -> VARIABLE SUMA EQUALS . numero
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    numero                         shift and go to state 478

state 468

    (89) for_incr -> VARIABLE RESTA RESTA .

    RPAREN          reduce using rule 89 (for_incr -> VARIABLE RESTA RESTA .)


state 469

    (92) for_incr -> VARIABLE RESTA EQUALS . numero
    (50) numero -> . ENTERO
    (51) numero -> . DECIMAL

    ENTERO          shift and go to state 82
    DECIMAL         shift and go to state 94

    numero                         shift and go to state 479

state 470

    (88) for_incr -> SUMA SUMA VARIABLE .

    RPAREN          reduce using rule 88 (for_incr -> SUMA SUMA VARIABLE .)


state 471

    (90) for_incr -> RESTA RESTA VARIABLE .

    RPAREN          reduce using rule 90 (for_incr -> RESTA RESTA VARIABLE .)


state 472

    (107) catches -> catches CATCH LPAREN NOMBRE . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 480


state 473

    (104) innerSwitch -> bcase cuerpo BREAK . SEMI
    (105) innerSwitch -> bcase cuerpo BREAK . SEMI innerSwitch

    SEMI            shift and go to state 481


state 474

    (176) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .

    $end            reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    SEMI            reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BREAK           reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    COMMA           reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    CADENA          reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 176 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)


state 475

    (151) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty . RBRACE

    RBRACE          shift and go to state 482


state 476

    (76) condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .

    RPAREN          reduce using rule 76 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    AND             reduce using rule 76 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    OR              reduce using rule 76 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    XOR             reduce using rule 76 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_EQUAL        reduce using rule 76 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 76 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_IDENTICAL    reduce using rule 76 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 76 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    SEMI            reduce using rule 76 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)


state 477

    (77) condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .

    RPAREN          reduce using rule 77 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    AND             reduce using rule 77 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    OR              reduce using rule 77 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    XOR             reduce using rule 77 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_EQUAL        reduce using rule 77 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 77 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 77 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 77 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    SEMI            reduce using rule 77 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)


state 478

    (91) for_incr -> VARIABLE SUMA EQUALS numero .

    RPAREN          reduce using rule 91 (for_incr -> VARIABLE SUMA EQUALS numero .)


state 479

    (92) for_incr -> VARIABLE RESTA EQUALS numero .

    RPAREN          reduce using rule 92 (for_incr -> VARIABLE RESTA EQUALS numero .)


state 480

    (107) catches -> catches CATCH LPAREN NOMBRE VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 483


state 481

    (104) innerSwitch -> bcase cuerpo BREAK SEMI .
    (105) innerSwitch -> bcase cuerpo BREAK SEMI . innerSwitch
    (104) innerSwitch -> . bcase cuerpo BREAK SEMI
    (105) innerSwitch -> . bcase cuerpo BREAK SEMI innerSwitch
    (102) bcase -> . CASE ENTERO COLON
    (103) bcase -> . CASE CADENA COLON

    RBRACE          reduce using rule 104 (innerSwitch -> bcase cuerpo BREAK SEMI .)
    CASE            shift and go to state 57

    bcase                          shift and go to state 419
    innerSwitch                    shift and go to state 484

state 482

    (151) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .

    $end            reduce using rule 151 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    RBRACE          reduce using rule 151 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    SEMI            reduce using rule 151 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    BREAK           reduce using rule 151 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)


state 483

    (107) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN . stc_bloque_def
    (85) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (86) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 242

    stc_bloque_def                 shift and go to state 485

state 484

    (105) innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch .

    RBRACE          reduce using rule 105 (innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch .)


state 485

    (107) catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .

    CATCH           reduce using rule 107 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    $end            reduce using rule 107 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 107 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 107 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)
    BREAK           reduce using rule 107 (catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACE in state 0 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 25 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 50 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 155 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 155 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 232 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 232 resolved as shift
WARNING: shift/reduce conflict for AND in state 236 resolved as shift
WARNING: shift/reduce conflict for OR in state 236 resolved as shift
WARNING: shift/reduce conflict for XOR in state 236 resolved as shift
WARNING: shift/reduce conflict for IS_EQUAL in state 236 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_EQUAL in state 236 resolved as shift
WARNING: shift/reduce conflict for IS_IDENTICAL in state 236 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_IDENTICAL in state 236 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 242 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 242 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 256 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 293 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 319 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 335 resolved as shift
WARNING: shift/reduce conflict for AND in state 360 resolved as shift
WARNING: shift/reduce conflict for OR in state 360 resolved as shift
WARNING: shift/reduce conflict for XOR in state 360 resolved as shift
WARNING: shift/reduce conflict for IS_EQUAL in state 360 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_EQUAL in state 360 resolved as shift
WARNING: shift/reduce conflict for IS_IDENTICAL in state 360 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_IDENTICAL in state 360 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 374 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 374 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 374 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 374 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 384 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 386 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 386 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 404 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 404 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 407 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 408 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 419 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 419 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 419 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 424 resolved as shift
WARNING: reduce/reduce conflict in state 0 resolved using rule (bwhile -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 319 resolved using rule (cuerpo -> breturn)
WARNING: rejected rule (stc_bloque -> breturn) in state 319
WARNING: reduce/reduce conflict in state 374 resolved using rule (bwhile -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 374
WARNING: reduce/reduce conflict in state 384 resolved using rule (bwhile -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 384
