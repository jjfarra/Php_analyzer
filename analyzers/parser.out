Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> imprimir
Rule 2     cuerpo -> asignacion
Rule 3     cuerpo -> funciones
Rule 4     cuerpo -> llamada_funcion
Rule 5     cuerpo -> constante
Rule 6     cuerpo -> lectura
Rule 7     cuerpo -> condicion_ifelse
Rule 8     cuerpo -> bwhile
Rule 9     cuerpo -> bdo
Rule 10    cuerpo -> bfor
Rule 11    cuerpo -> incrementOp
Rule 12    cuerpo -> bforeach
Rule 13    cuerpo -> btry
Rule 14    cuerpo -> bswitch
Rule 15    cuerpo -> bcase
Rule 16    cuerpo -> bgoto
Rule 17    cuerpo -> bcolas
Rule 18    cuerpo -> bpila
Rule 19    cuerpo -> bcortes
Rule 20    cuerpo -> brand
Rule 21    cuerpo -> escribir
Rule 22    cuerpo -> btrim
Rule 23    cuerpo -> otros
Rule 24    cuerpo -> breturn
Rule 25    cuerpo -> comment
Rule 26    cuerpo -> casting
Rule 27    cuerpo -> bconcat
Rule 28    cuerpo -> simbolos
Rule 29    cuerpo -> funcionesCP_semi
Rule 30    cuerpo -> addpila
Rule 31    cuerpo -> addcola
Rule 32    cuerpo -> minuscola
Rule 33    cuerpo -> arraypop
Rule 34    cuerpo -> arraypush
Rule 35    cuerpo -> poppila
Rule 36    asignacion -> VARIABLE EQUALS valor SEMI
Rule 37    asignacion -> VAR asignacion
Rule 38    asignacion -> proteccion asignacion
Rule 39    asignacion -> VARIABLE EQUALS brand
Rule 40    asignacion -> VARIABLE EQUALS escribir
Rule 41    asignacion -> VARIABLE EQUALS btrim
Rule 42    asignacion -> VARIABLE EQUALS lectura
Rule 43    asignacion -> VARIABLE EQUALS bconcat
Rule 44    asignacion -> asignacion_array
Rule 45    asignacion -> VARIABLE EQUALS operaciones_mat SEMI
Rule 46    asignacion -> aumentoCasting
Rule 47    asignacion -> VARIABLE EQUALS llamada_funcion
Rule 48    asignacion -> VARIABLE EQUALS arrayvalues SEMI
Rule 49    asignacion -> VARIABLE EQUALS arraysearch SEMI
Rule 50    asignacion_array -> VARIABLE EQUALS array_def SEMI
Rule 51    valor -> tipoDato
Rule 52    valor -> bcolas
Rule 53    valor -> bpila
Rule 54    tipoDato -> numero
Rule 55    tipoDato -> CADENA
Rule 56    tipoDato -> BOOLEANO
Rule 57    numero -> ENTERO
Rule 58    numero -> DECIMAL
Rule 59    imprimir -> ECHO valor SEMI
Rule 60    imprimir -> PRINT valor SEMI
Rule 61    imprimir -> PRINT LPAREN valor RPAREN SEMI
Rule 62    imprimir -> PRINT bconcat
Rule 63    imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
Rule 64    imprimir -> ECHO bconcat
Rule 65    imprimir -> ECHO operaciones_mat SEMI
Rule 66    imprimir -> PRINT operaciones_mat SEMI
Rule 67    imprimir -> ECHO VARIABLE SEMI
Rule 68    imprimir -> PRINT VARIABLE SEMI
Rule 69    imprimir -> ECHO funcionesCP_semi
Rule 70    imprimir -> PRINT funcionesCP_semi
Rule 71    imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI
Rule 72    imprimir -> ECHO poppila
Rule 73    imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI
Rule 74    imprimir -> VAR_DUMP LPAREN arrayvalues RPAREN SEMI
Rule 75    imprimir -> PRINT_R LPAREN arraysearch RPAREN SEMI
Rule 76    imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI
Rule 77    imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI
Rule 78    condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 79    condicion_if -> IF LPAREN condicion RPAREN llamada_funcion
Rule 80    condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
Rule 81    condicion_else -> ELSE LBRACE cuerpo RBRACE
Rule 82    condicion_ifelse -> condicion_if
Rule 83    condicion_ifelse -> condicion_if condicion_else
Rule 84    condicion_ifelse -> condicion_if condicion_elseif
Rule 85    condicion_ifelse -> condicion_if condicion_elseif condicion_else
Rule 86    condicion -> VARIABLE operador_logico VARIABLE
Rule 87    condicion -> valor operador_logico valor
Rule 88    condicion -> VARIABLE operador_logico valor
Rule 89    condicion -> VARIABLE condicion_booleana VARIABLE
Rule 90    condicion -> valor condicion_booleana valor
Rule 91    condicion -> VARIABLE condicion_booleana valor
Rule 92    condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor
Rule 93    condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
Rule 94    condicion -> condicion condicion_booleana condicion
Rule 95    condicion -> condicion condicion_booleana comprobacion
Rule 96    condicion -> aumentoCasting
Rule 97    condicion -> VARIABLE
Rule 98    condicion -> funcionesCP
Rule 99    bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
Rule 100   stc_bloque -> stc_bloque SEMI cuerpo
Rule 101   stc_bloque -> breturn
Rule 102   stc_bloque_def -> LBRACE stc_bloque RBRACE
Rule 103   stc_bloque_def -> LBRACE cuerpo RBRACE
Rule 104   for_incr -> VARIABLE SUMA SUMA
Rule 105   for_incr -> SUMA SUMA VARIABLE
Rule 106   for_incr -> VARIABLE RESTA RESTA
Rule 107   for_incr -> RESTA RESTA VARIABLE
Rule 108   for_incr -> VARIABLE SUMA EQUALS numero
Rule 109   for_incr -> VARIABLE RESTA EQUALS numero
Rule 110   incrementOp -> VARIABLE SUMA SUMA SEMI
Rule 111   incrementOp -> VARIABLE RESTA RESTA SEMI
Rule 112   bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
Rule 113   bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
Rule 114   bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque
Rule 115   bwhile -> WHILE LPAREN condicion RPAREN SEMI
Rule 116   bwhile -> <empty>
Rule 117   bdo -> DO LBRACE cuerpo RBRACE bwhile
Rule 118   bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
Rule 119   bcase -> CASE ENTERO COLON
Rule 120   bcase -> CASE CADENA COLON
Rule 121   innerSwitch -> bcase cuerpo BREAK SEMI
Rule 122   innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch
Rule 123   btry -> TRY LBRACE stc_bloque_def RBRACE catches
Rule 124   catches -> catches CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def
Rule 125   catches -> empty
Rule 126   operadores -> SUMA
Rule 127   operadores -> RESTA
Rule 128   operadores -> MULTIPLICACION
Rule 129   operadores -> DIVISION
Rule 130   operadores -> MODULO
Rule 131   operador_logico -> SMALLER
Rule 132   operador_logico -> GREATER
Rule 133   operador_logico -> IS_SMALLER_OR_EQUAL
Rule 134   operador_logico -> IS_GREATER_OR_EQUAL
Rule 135   incrementos_mat -> MINUS_EQUAL
Rule 136   incrementos_mat -> MOD_EQUAL
Rule 137   incrementos_mat -> MUL_EQUAL
Rule 138   incrementos_mat -> PLUS_EQUAL
Rule 139   incrementos_mat -> DIV_EQUAL
Rule 140   condicion_booleana -> AND
Rule 141   condicion_booleana -> OR
Rule 142   condicion_booleana -> XOR
Rule 143   condicion_booleana -> IS_EQUAL
Rule 144   condicion_booleana -> IS_NOT_EQUAL
Rule 145   condicion_booleana -> IS_IDENTICAL
Rule 146   condicion_booleana -> IS_NOT_IDENTICAL
Rule 147   operaciones_mat -> valor operadores valor
Rule 148   operaciones_mat -> valor operadores operaciones_mat
Rule 149   operaciones_mat -> VARIABLE operadores VARIABLE
Rule 150   operaciones_mat -> operaciones_mat_par
Rule 151   operaciones_mat_par -> LPAREN valor operadores valor RPAREN
Rule 152   operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN
Rule 153   operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN
Rule 154   operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor
Rule 155   operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN
Rule 156   operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
Rule 157   funciones -> funcion_nparams
Rule 158   funciones -> proteccion funcion_nparams
Rule 159   funciones -> funcion_blank
Rule 160   funciones -> proteccion funcion_blank
Rule 161   funciones -> funcion_void
Rule 162   param -> VARIABLE
Rule 163   param -> asignacion
Rule 164   funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
Rule 165   params_list -> params_list COMMA param
Rule 166   params_list -> param
Rule 167   params_list -> empty
Rule 168   funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
Rule 169   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
Rule 170   funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
Rule 171   llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI
Rule 172   brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
Rule 173   proteccion -> PUBLIC
Rule 174   proteccion -> PRIVATE
Rule 175   proteccion -> PROTECTED
Rule 176   proteccion -> STATIC
Rule 177   breturn -> empty
Rule 178   breturn -> RETURN SEMI
Rule 179   breturn -> RETURN NULL SEMI
Rule 180   breturn -> RETURN VARIABLE SEMI
Rule 181   breturn -> RETURN BOOLEANO SEMI
Rule 182   breturn -> breturn RBRACE
Rule 183   array_def -> ARRAY LPAREN RPAREN
Rule 184   array_def -> ARRAY LPAREN array_elmnt RPAREN
Rule 185   array_elmnt -> array_elmnt COMMA valor
Rule 186   array_elmnt -> valor
Rule 187   empty -> <empty>
Rule 188   bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
Rule 189   lectura -> READLINE LPAREN CADENA RPAREN SEMI
Rule 190   lectura -> READLINE LPAREN RPAREN SEMI
Rule 191   escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
Rule 192   btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
Rule 193   comment -> COMENTARIOS
Rule 194   comment -> DOC_COMENTARIOS
Rule 195   bgoto -> GOTO NOMBRE SEMI
Rule 196   bcortes -> EXIT SEMI
Rule 197   bcortes -> BREAK SEMI
Rule 198   bcortes -> DEFAULT SEMI
Rule 199   bcortes -> CONTINUE SEMI
Rule 200   otros -> SMALLER NOMBRE GREATER
Rule 201   otros -> SMALLER DIVISION NOMBRE GREATER
Rule 202   otros -> NOMBRE COLON
Rule 203   comprobacion -> NOMBRE LPAREN valor RPAREN
Rule 204   comprobacion -> NOMBRE LPAREN VARIABLE RPAREN
Rule 205   simbolos -> LPAREN RPAREN
Rule 206   simbolos -> LPAREN
Rule 207   simbolos -> RPAREN
Rule 208   simbolos -> LBRACKET RBRACKET
Rule 209   simbolos -> LBRACKET
Rule 210   simbolos -> RBRACKET
Rule 211   simbolos -> LBRACE RBRACE
Rule 212   simbolos -> LBRACE
Rule 213   simbolos -> RBRACE instrucciones
Rule 214   simbolos -> OPEN_TAG CLOSE_TAG
Rule 215   simbolos -> OPEN_TAG
Rule 216   simbolos -> CLOSE_TAG
Rule 217   instrucciones -> condicion_else
Rule 218   instrucciones -> condicion_elseif
Rule 219   instrucciones -> bwhile
Rule 220   instrucciones -> bfor
Rule 221   instrucciones -> funciones
Rule 222   instrucciones -> bswitch
Rule 223   instrucciones -> bdo
Rule 224   instrucciones -> catches
Rule 225   bconcat -> CADENA CONCAT CADENA SEMI
Rule 226   bconcat -> VARIABLE CONCAT CADENA SEMI
Rule 227   bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI
Rule 228   bconcat -> CADENA CONCAT_EQUAL CADENA SEMI
Rule 229   bconcat -> VARIABLE CONCAT VARIABLE SEMI
Rule 230   bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
Rule 231   tiposCast -> STRING
Rule 232   tiposCast -> BOOL
Rule 233   tiposCast -> BOOLEAN
Rule 234   tiposCast -> DOUBLE
Rule 235   tiposCast -> FLOAT
Rule 236   tiposCast -> ARRAY
Rule 237   tiposCast -> OBJECT
Rule 238   tiposCast -> INTEGER
Rule 239   tiposCast -> INT
Rule 240   casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 241   casting -> LPAREN tiposCast RPAREN VARIABLE SEMI
Rule 242   aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI
Rule 243   aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
Rule 244   aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
Rule 245   aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor
Rule 246   aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI
Rule 247   bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
Rule 248   addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
Rule 249   addpila -> VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
Rule 250   poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI
Rule 251   funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN
Rule 252   funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN
Rule 253   funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN
Rule 254   funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN
Rule 255   funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN
Rule 256   funcionesCP_semi -> funcionesCP
Rule 257   funcionesCP_semi -> funcionesCP SEMI
Rule 258   addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
Rule 259   addcola -> VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
Rule 260   minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
Rule 261   minuscola -> VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
Rule 262   constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
Rule 263   constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
Rule 264   arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI
Rule 265   arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
Rule 266   arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI
Rule 267   arrayvalues -> ARRAY_VALUES LPAREN VARIABLE RPAREN
Rule 268   arraysearch -> ARRAY_SEARCH LPAREN valor COMMA VARIABLE RPAREN

Terminals, with rules where they appear

AND                  : 140
ARRAY                : 183 184 236 263
ARRAY_POP            : 264
ARRAY_PUSH           : 265 266
ARRAY_SEARCH         : 268
ARRAY_VALUES         : 267
AS                   : 112
BOOL                 : 232
BOOLEAN              : 233
BOOLEANO             : 56 181
BREAK                : 121 122 197
CADENA               : 55 120 189 191 225 225 226 227 228 228 230 262
CASE                 : 119 120
CATCH                : 124
CLOSE_TAG            : 214 216
COLON                : 114 119 120 168 202
COMENTARIOS          : 193
COMMA                : 71 165 172 185 191 262 263 265 266 268
CONCAT               : 225 226 229 230 230
CONCAT_EQUAL         : 227 228
CONTINUE             : 199
COUNT                : 253
CURRENT              : 255
DECIMAL              : 58
DEFAULT              : 198
DEFINE               : 262 263
DEQUEUE              : 260 261
DIVISION             : 129 201
DIV_EQUAL            : 139
DO                   : 117
DOC_COMENTARIOS      : 194
DOUBLE               : 234
ECHO                 : 59 63 64 65 67 69 71 72
ELSE                 : 81
ELSEIF               : 80
ENQUEUE              : 258 259
ENTERO               : 57 63 119 172 172
EQUALS               : 36 39 40 41 42 43 45 47 48 49 50 108 109 188 240 243 244 247
EXCEPTION            : 124
EXIT                 : 196
FLECHA               : 248 249 250 251 252 253 254 255 258 259 260 261
FLOAT                : 235
FOR                  : 99
FOREACH              : 112
FUNCTION             : 164 168 169 170
FWRITE               : 191
GOTO                 : 195
GREATER              : 132 200 201
IF                   : 78 79
INT                  : 239
INTEGER              : 238
IS_EQUAL             : 143
IS_GREATER_OR_EQUAL  : 134
IS_IDENTICAL         : 145
IS_NOT_EQUAL         : 144
IS_NOT_IDENTICAL     : 146
IS_SMALLER_OR_EQUAL  : 133
LBRACE               : 78 80 81 102 103 113 117 118 123 168 170 211 212
LBRACKET             : 63 208 209
LPAREN               : 61 73 74 75 76 77 78 79 80 92 93 99 112 113 114 115 118 124 151 152 153 154 155 156 164 168 169 170 171 172 183 184 188 189 190 191 192 192 203 204 205 206 240 241 247 248 249 250 251 252 253 254 255 258 259 260 261 262 263 264 265 266 267 268
MINUS_EQUAL          : 135
MODULO               : 130
MOD_EQUAL            : 136
MULTIPLICACION       : 128
MUL_EQUAL            : 137
NEW                  : 188 247
NEXT                 : 254
NOMBRE               : 63 71 164 168 169 170 171 191 192 192 195 200 201 202 203 204 263
NULL                 : 179
OBJECT               : 237
OPEN_TAG             : 214 215
OR                   : 141
PLUS_EQUAL           : 138
POP                  : 250
PRINT                : 60 61 62 66 68 70
PRINT_R              : 75 76 77
PRIVATE              : 174
PROTECTED            : 175
PUBLIC               : 173
PUSH                 : 248 249
RAND                 : 172
RBRACE               : 78 80 81 102 103 113 117 118 123 168 170 182 211 213
RBRACKET             : 63 208 210
READLINE             : 189 190
RESTA                : 106 106 107 107 109 111 111 127
RETURN               : 178 179 180 181
REWIND               : 251
RPAREN               : 61 73 74 75 76 77 78 79 80 92 93 99 112 113 114 115 118 124 151 152 153 154 155 156 164 168 169 170 171 172 183 184 188 189 190 191 192 192 203 204 205 207 240 241 247 248 249 250 251 252 253 254 255 258 259 260 261 262 263 264 265 266 267 268
SEMI                 : 36 45 48 49 50 59 60 61 63 65 66 67 68 71 73 74 75 76 77 99 100 110 111 115 121 122 171 172 178 179 180 181 188 189 190 191 192 195 196 197 198 199 225 226 227 228 229 230 240 241 242 243 244 246 247 248 249 250 257 258 259 260 261 262 263 264 265 266
SMALLER              : 131 200 201
SPLQUEUE             : 188
SPLSTACK             : 247
STATIC               : 176
STRING               : 231
SUMA                 : 104 104 105 105 108 110 110 126
SWITCH               : 118
TRIM                 : 192
TRY                  : 123
VALID                : 252
VAR                  : 37
VARIABLE             : 36 39 40 41 42 43 45 47 48 49 50 67 68 73 76 86 86 88 89 89 91 92 93 97 104 105 106 107 108 109 110 111 112 112 118 124 149 149 153 153 154 155 156 162 180 188 204 226 227 229 229 230 230 240 240 241 242 243 243 244 244 244 245 246 246 247 248 249 249 250 251 252 253 254 255 258 259 259 260 261 261 264 265 266 266 267 268
VAR_DUMP             : 73 74
VOID                 : 168
WHILE                : 113 114 115
XOR                  : 142
error                : 

Nonterminals, with rules where they appear

addcola              : 31
addpila              : 30
array_def            : 50
array_elmnt          : 184 185
arraypop             : 33
arraypush            : 34
arraysearch          : 49 75
arrayvalues          : 48 74 77
asignacion           : 2 37 38 99 163
asignacion_array     : 44
aumentoCasting       : 46 96
bcase                : 15 121 122
bcolas               : 17 52
bconcat              : 27 43 62 64
bcortes              : 19
bdo                  : 9 223
bfor                 : 10 220
bforeach             : 12
bgoto                : 16
bpila                : 18 53
brand                : 20 39
breturn              : 24 101 182
bswitch              : 14 222
btrim                : 22 41
btry                 : 13
bwhile               : 8 117 219
casting              : 26
catches              : 123 124 224
comment              : 25
comprobacion         : 95
condicion            : 78 79 80 94 94 95 99 113 114 115
condicion_booleana   : 89 90 91 93 94 95 245
condicion_else       : 83 85 217
condicion_elseif     : 84 85 218
condicion_if         : 82 83 84 85
condicion_ifelse     : 7
constante            : 5
cuerpo               : 78 80 81 100 103 117 121 122 0
empty                : 125 167 168 170 177
escribir             : 21 40
for_incr             : 99
funcion_blank        : 159 160
funcion_nparams      : 157 158
funcion_void         : 161
funciones            : 3 221
funcionesCP          : 98 256 257
funcionesCP_semi     : 29 69 70 71
imprimir             : 1
incrementOp          : 11
incrementos_mat      : 242 246
innerSwitch          : 118 122
instrucciones        : 213
lectura              : 6 42
llamada_funcion      : 4 47 79
minuscola            : 32
numero               : 54 108 109
operaciones_mat      : 45 65 66 148
operaciones_mat_par  : 150 152 244
operador_logico      : 86 87 88 92
operadores           : 92 93 147 148 149 151 152 153 154 154 155 156 156 243 244 244 245
otros                : 23
param                : 165 166
params_list          : 164 165 171
poppila              : 35 72
proteccion           : 38 158 160
simbolos             : 28
stc_bloque           : 100 102 113 114
stc_bloque_def       : 99 112 123 124 164 169
tipoDato             : 51 155 156 156 242 243 245
tiposCast            : 240 241
valor                : 36 59 60 61 87 87 88 90 90 91 92 92 93 93 147 147 148 151 151 152 154 154 185 186 203 245 248 258 260 262 265 268

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (59) imprimir -> . ECHO valor SEMI
    (60) imprimir -> . PRINT valor SEMI
    (61) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (62) imprimir -> . PRINT bconcat
    (63) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (64) imprimir -> . ECHO bconcat
    (65) imprimir -> . ECHO operaciones_mat SEMI
    (66) imprimir -> . PRINT operaciones_mat SEMI
    (67) imprimir -> . ECHO VARIABLE SEMI
    (68) imprimir -> . PRINT VARIABLE SEMI
    (69) imprimir -> . ECHO funcionesCP_semi
    (70) imprimir -> . PRINT funcionesCP_semi
    (71) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (72) imprimir -> . ECHO poppila
    (73) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . VAR_DUMP LPAREN arrayvalues RPAREN SEMI
    (75) imprimir -> . PRINT_R LPAREN arraysearch RPAREN SEMI
    (76) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (77) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (157) funciones -> . funcion_nparams
    (158) funciones -> . proteccion funcion_nparams
    (159) funciones -> . funcion_blank
    (160) funciones -> . proteccion funcion_blank
    (161) funciones -> . funcion_void
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (262) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (263) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) condicion_ifelse -> . condicion_if
    (83) condicion_ifelse -> . condicion_if condicion_else
    (84) condicion_ifelse -> . condicion_if condicion_elseif
    (85) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .
    (117) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (99) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (110) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (111) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (112) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (123) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (118) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON
    (195) bgoto -> . GOTO NOMBRE SEMI
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (196) bcortes -> . EXIT SEMI
    (197) bcortes -> . BREAK SEMI
    (198) bcortes -> . DEFAULT SEMI
    (199) bcortes -> . CONTINUE SEMI
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (200) otros -> . SMALLER NOMBRE GREATER
    (201) otros -> . SMALLER DIVISION NOMBRE GREATER
    (202) otros -> . NOMBRE COLON
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (193) comment -> . COMENTARIOS
    (194) comment -> . DOC_COMENTARIOS
    (240) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (241) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (205) simbolos -> . LPAREN RPAREN
    (206) simbolos -> . LPAREN
    (207) simbolos -> . RPAREN
    (208) simbolos -> . LBRACKET RBRACKET
    (209) simbolos -> . LBRACKET
    (210) simbolos -> . RBRACKET
    (211) simbolos -> . LBRACE RBRACE
    (212) simbolos -> . LBRACE
    (213) simbolos -> . RBRACE instrucciones
    (214) simbolos -> . OPEN_TAG CLOSE_TAG
    (215) simbolos -> . OPEN_TAG
    (216) simbolos -> . CLOSE_TAG
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (248) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> . VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (264) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (265) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI
    (250) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (78) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (187) empty -> .
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 116 (bwhile -> .)
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    $end            reduce using rule 116 (bwhile -> .)
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 187 (empty -> .) ]
  ! $end            [ reduce using rule 187 (empty -> .) ]

    cuerpo                         shift and go to state 1
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> imprimir .

    $end            reduce using rule 1 (cuerpo -> imprimir .)
    RBRACE          reduce using rule 1 (cuerpo -> imprimir .)
    SEMI            reduce using rule 1 (cuerpo -> imprimir .)
    BREAK           reduce using rule 1 (cuerpo -> imprimir .)


state 3

    (2) cuerpo -> asignacion .

    $end            reduce using rule 2 (cuerpo -> asignacion .)
    RBRACE          reduce using rule 2 (cuerpo -> asignacion .)
    SEMI            reduce using rule 2 (cuerpo -> asignacion .)
    BREAK           reduce using rule 2 (cuerpo -> asignacion .)


state 4

    (3) cuerpo -> funciones .

    $end            reduce using rule 3 (cuerpo -> funciones .)
    RBRACE          reduce using rule 3 (cuerpo -> funciones .)
    SEMI            reduce using rule 3 (cuerpo -> funciones .)
    BREAK           reduce using rule 3 (cuerpo -> funciones .)


state 5

    (4) cuerpo -> llamada_funcion .

    $end            reduce using rule 4 (cuerpo -> llamada_funcion .)
    RBRACE          reduce using rule 4 (cuerpo -> llamada_funcion .)
    SEMI            reduce using rule 4 (cuerpo -> llamada_funcion .)
    BREAK           reduce using rule 4 (cuerpo -> llamada_funcion .)


state 6

    (5) cuerpo -> constante .

    $end            reduce using rule 5 (cuerpo -> constante .)
    RBRACE          reduce using rule 5 (cuerpo -> constante .)
    SEMI            reduce using rule 5 (cuerpo -> constante .)
    BREAK           reduce using rule 5 (cuerpo -> constante .)


state 7

    (6) cuerpo -> lectura .

    $end            reduce using rule 6 (cuerpo -> lectura .)
    RBRACE          reduce using rule 6 (cuerpo -> lectura .)
    SEMI            reduce using rule 6 (cuerpo -> lectura .)
    BREAK           reduce using rule 6 (cuerpo -> lectura .)


state 8

    (7) cuerpo -> condicion_ifelse .

    $end            reduce using rule 7 (cuerpo -> condicion_ifelse .)
    RBRACE          reduce using rule 7 (cuerpo -> condicion_ifelse .)
    SEMI            reduce using rule 7 (cuerpo -> condicion_ifelse .)
    BREAK           reduce using rule 7 (cuerpo -> condicion_ifelse .)


state 9

    (8) cuerpo -> bwhile .

    $end            reduce using rule 8 (cuerpo -> bwhile .)
    RBRACE          reduce using rule 8 (cuerpo -> bwhile .)
    SEMI            reduce using rule 8 (cuerpo -> bwhile .)
    BREAK           reduce using rule 8 (cuerpo -> bwhile .)


state 10

    (9) cuerpo -> bdo .

    $end            reduce using rule 9 (cuerpo -> bdo .)
    RBRACE          reduce using rule 9 (cuerpo -> bdo .)
    SEMI            reduce using rule 9 (cuerpo -> bdo .)
    BREAK           reduce using rule 9 (cuerpo -> bdo .)


state 11

    (10) cuerpo -> bfor .

    $end            reduce using rule 10 (cuerpo -> bfor .)
    RBRACE          reduce using rule 10 (cuerpo -> bfor .)
    SEMI            reduce using rule 10 (cuerpo -> bfor .)
    BREAK           reduce using rule 10 (cuerpo -> bfor .)


state 12

    (11) cuerpo -> incrementOp .

    $end            reduce using rule 11 (cuerpo -> incrementOp .)
    RBRACE          reduce using rule 11 (cuerpo -> incrementOp .)
    SEMI            reduce using rule 11 (cuerpo -> incrementOp .)
    BREAK           reduce using rule 11 (cuerpo -> incrementOp .)


state 13

    (12) cuerpo -> bforeach .

    $end            reduce using rule 12 (cuerpo -> bforeach .)
    RBRACE          reduce using rule 12 (cuerpo -> bforeach .)
    SEMI            reduce using rule 12 (cuerpo -> bforeach .)
    BREAK           reduce using rule 12 (cuerpo -> bforeach .)


state 14

    (13) cuerpo -> btry .

    $end            reduce using rule 13 (cuerpo -> btry .)
    RBRACE          reduce using rule 13 (cuerpo -> btry .)
    SEMI            reduce using rule 13 (cuerpo -> btry .)
    BREAK           reduce using rule 13 (cuerpo -> btry .)


state 15

    (14) cuerpo -> bswitch .

    $end            reduce using rule 14 (cuerpo -> bswitch .)
    RBRACE          reduce using rule 14 (cuerpo -> bswitch .)
    SEMI            reduce using rule 14 (cuerpo -> bswitch .)
    BREAK           reduce using rule 14 (cuerpo -> bswitch .)


state 16

    (15) cuerpo -> bcase .

    $end            reduce using rule 15 (cuerpo -> bcase .)
    RBRACE          reduce using rule 15 (cuerpo -> bcase .)
    SEMI            reduce using rule 15 (cuerpo -> bcase .)
    BREAK           reduce using rule 15 (cuerpo -> bcase .)


state 17

    (16) cuerpo -> bgoto .

    $end            reduce using rule 16 (cuerpo -> bgoto .)
    RBRACE          reduce using rule 16 (cuerpo -> bgoto .)
    SEMI            reduce using rule 16 (cuerpo -> bgoto .)
    BREAK           reduce using rule 16 (cuerpo -> bgoto .)


state 18

    (17) cuerpo -> bcolas .

    $end            reduce using rule 17 (cuerpo -> bcolas .)
    RBRACE          reduce using rule 17 (cuerpo -> bcolas .)
    SEMI            reduce using rule 17 (cuerpo -> bcolas .)
    BREAK           reduce using rule 17 (cuerpo -> bcolas .)


state 19

    (18) cuerpo -> bpila .

    $end            reduce using rule 18 (cuerpo -> bpila .)
    RBRACE          reduce using rule 18 (cuerpo -> bpila .)
    SEMI            reduce using rule 18 (cuerpo -> bpila .)
    BREAK           reduce using rule 18 (cuerpo -> bpila .)


state 20

    (19) cuerpo -> bcortes .

    $end            reduce using rule 19 (cuerpo -> bcortes .)
    RBRACE          reduce using rule 19 (cuerpo -> bcortes .)
    SEMI            reduce using rule 19 (cuerpo -> bcortes .)
    BREAK           reduce using rule 19 (cuerpo -> bcortes .)


state 21

    (20) cuerpo -> brand .

    $end            reduce using rule 20 (cuerpo -> brand .)
    RBRACE          reduce using rule 20 (cuerpo -> brand .)
    SEMI            reduce using rule 20 (cuerpo -> brand .)
    BREAK           reduce using rule 20 (cuerpo -> brand .)


state 22

    (21) cuerpo -> escribir .

    $end            reduce using rule 21 (cuerpo -> escribir .)
    RBRACE          reduce using rule 21 (cuerpo -> escribir .)
    SEMI            reduce using rule 21 (cuerpo -> escribir .)
    BREAK           reduce using rule 21 (cuerpo -> escribir .)


state 23

    (22) cuerpo -> btrim .

    $end            reduce using rule 22 (cuerpo -> btrim .)
    RBRACE          reduce using rule 22 (cuerpo -> btrim .)
    SEMI            reduce using rule 22 (cuerpo -> btrim .)
    BREAK           reduce using rule 22 (cuerpo -> btrim .)


state 24

    (23) cuerpo -> otros .

    $end            reduce using rule 23 (cuerpo -> otros .)
    RBRACE          reduce using rule 23 (cuerpo -> otros .)
    SEMI            reduce using rule 23 (cuerpo -> otros .)
    BREAK           reduce using rule 23 (cuerpo -> otros .)


state 25

    (24) cuerpo -> breturn .
    (182) breturn -> breturn . RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    $end            reduce using rule 24 (cuerpo -> breturn .)
    SEMI            reduce using rule 24 (cuerpo -> breturn .)
    BREAK           reduce using rule 24 (cuerpo -> breturn .)
    RBRACE          shift and go to state 91

  ! RBRACE          [ reduce using rule 24 (cuerpo -> breturn .) ]


state 26

    (25) cuerpo -> comment .

    $end            reduce using rule 25 (cuerpo -> comment .)
    RBRACE          reduce using rule 25 (cuerpo -> comment .)
    SEMI            reduce using rule 25 (cuerpo -> comment .)
    BREAK           reduce using rule 25 (cuerpo -> comment .)


state 27

    (26) cuerpo -> casting .

    $end            reduce using rule 26 (cuerpo -> casting .)
    RBRACE          reduce using rule 26 (cuerpo -> casting .)
    SEMI            reduce using rule 26 (cuerpo -> casting .)
    BREAK           reduce using rule 26 (cuerpo -> casting .)


state 28

    (27) cuerpo -> bconcat .

    $end            reduce using rule 27 (cuerpo -> bconcat .)
    RBRACE          reduce using rule 27 (cuerpo -> bconcat .)
    SEMI            reduce using rule 27 (cuerpo -> bconcat .)
    BREAK           reduce using rule 27 (cuerpo -> bconcat .)


state 29

    (28) cuerpo -> simbolos .

    $end            reduce using rule 28 (cuerpo -> simbolos .)
    RBRACE          reduce using rule 28 (cuerpo -> simbolos .)
    SEMI            reduce using rule 28 (cuerpo -> simbolos .)
    BREAK           reduce using rule 28 (cuerpo -> simbolos .)


state 30

    (29) cuerpo -> funcionesCP_semi .

    $end            reduce using rule 29 (cuerpo -> funcionesCP_semi .)
    RBRACE          reduce using rule 29 (cuerpo -> funcionesCP_semi .)
    SEMI            reduce using rule 29 (cuerpo -> funcionesCP_semi .)
    BREAK           reduce using rule 29 (cuerpo -> funcionesCP_semi .)


state 31

    (30) cuerpo -> addpila .

    $end            reduce using rule 30 (cuerpo -> addpila .)
    RBRACE          reduce using rule 30 (cuerpo -> addpila .)
    SEMI            reduce using rule 30 (cuerpo -> addpila .)
    BREAK           reduce using rule 30 (cuerpo -> addpila .)


state 32

    (31) cuerpo -> addcola .

    $end            reduce using rule 31 (cuerpo -> addcola .)
    RBRACE          reduce using rule 31 (cuerpo -> addcola .)
    SEMI            reduce using rule 31 (cuerpo -> addcola .)
    BREAK           reduce using rule 31 (cuerpo -> addcola .)


state 33

    (32) cuerpo -> minuscola .

    $end            reduce using rule 32 (cuerpo -> minuscola .)
    RBRACE          reduce using rule 32 (cuerpo -> minuscola .)
    SEMI            reduce using rule 32 (cuerpo -> minuscola .)
    BREAK           reduce using rule 32 (cuerpo -> minuscola .)


state 34

    (33) cuerpo -> arraypop .

    $end            reduce using rule 33 (cuerpo -> arraypop .)
    RBRACE          reduce using rule 33 (cuerpo -> arraypop .)
    SEMI            reduce using rule 33 (cuerpo -> arraypop .)
    BREAK           reduce using rule 33 (cuerpo -> arraypop .)


state 35

    (34) cuerpo -> arraypush .

    $end            reduce using rule 34 (cuerpo -> arraypush .)
    RBRACE          reduce using rule 34 (cuerpo -> arraypush .)
    SEMI            reduce using rule 34 (cuerpo -> arraypush .)
    BREAK           reduce using rule 34 (cuerpo -> arraypush .)


state 36

    (35) cuerpo -> poppila .

    $end            reduce using rule 35 (cuerpo -> poppila .)
    RBRACE          reduce using rule 35 (cuerpo -> poppila .)
    SEMI            reduce using rule 35 (cuerpo -> poppila .)
    BREAK           reduce using rule 35 (cuerpo -> poppila .)


state 37

    (59) imprimir -> ECHO . valor SEMI
    (63) imprimir -> ECHO . NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (64) imprimir -> ECHO . bconcat
    (65) imprimir -> ECHO . operaciones_mat SEMI
    (67) imprimir -> ECHO . VARIABLE SEMI
    (69) imprimir -> ECHO . funcionesCP_semi
    (71) imprimir -> ECHO . funcionesCP_semi COMMA NOMBRE SEMI
    (72) imprimir -> ECHO . poppila
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (147) operaciones_mat -> . valor operadores valor
    (148) operaciones_mat -> . valor operadores operaciones_mat
    (149) operaciones_mat -> . VARIABLE operadores VARIABLE
    (150) operaciones_mat -> . operaciones_mat_par
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (250) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (151) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (152) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (156) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    NOMBRE          shift and go to state 93
    VARIABLE        shift and go to state 97
    CADENA          shift and go to state 103
    BOOLEANO        shift and go to state 107
    LPAREN          shift and go to state 105
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 92
    bconcat                        shift and go to state 95
    operaciones_mat                shift and go to state 96
    funcionesCP_semi               shift and go to state 98
    poppila                        shift and go to state 99
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    operaciones_mat_par            shift and go to state 104
    funcionesCP                    shift and go to state 82
    numero                         shift and go to state 106

state 38

    (60) imprimir -> PRINT . valor SEMI
    (61) imprimir -> PRINT . LPAREN valor RPAREN SEMI
    (62) imprimir -> PRINT . bconcat
    (66) imprimir -> PRINT . operaciones_mat SEMI
    (68) imprimir -> PRINT . VARIABLE SEMI
    (70) imprimir -> PRINT . funcionesCP_semi
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (147) operaciones_mat -> . valor operadores valor
    (148) operaciones_mat -> . valor operadores operaciones_mat
    (149) operaciones_mat -> . VARIABLE operadores VARIABLE
    (150) operaciones_mat -> . operaciones_mat_par
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (151) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (152) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (156) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    LPAREN          shift and go to state 110
    VARIABLE        shift and go to state 113
    CADENA          shift and go to state 103
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 109
    bconcat                        shift and go to state 111
    operaciones_mat                shift and go to state 112
    funcionesCP_semi               shift and go to state 114
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    operaciones_mat_par            shift and go to state 104
    funcionesCP                    shift and go to state 82
    numero                         shift and go to state 106

state 39

    (241) casting -> LPAREN . tiposCast RPAREN VARIABLE SEMI
    (205) simbolos -> LPAREN . RPAREN
    (206) simbolos -> LPAREN .
    (231) tiposCast -> . STRING
    (232) tiposCast -> . BOOL
    (233) tiposCast -> . BOOLEAN
    (234) tiposCast -> . DOUBLE
    (235) tiposCast -> . FLOAT
    (236) tiposCast -> . ARRAY
    (237) tiposCast -> . OBJECT
    (238) tiposCast -> . INTEGER
    (239) tiposCast -> . INT

    RPAREN          shift and go to state 116
    $end            reduce using rule 206 (simbolos -> LPAREN .)
    RBRACE          reduce using rule 206 (simbolos -> LPAREN .)
    SEMI            reduce using rule 206 (simbolos -> LPAREN .)
    BREAK           reduce using rule 206 (simbolos -> LPAREN .)
    STRING          shift and go to state 117
    BOOL            shift and go to state 118
    BOOLEAN         shift and go to state 119
    DOUBLE          shift and go to state 120
    FLOAT           shift and go to state 121
    ARRAY           shift and go to state 122
    OBJECT          shift and go to state 123
    INTEGER         shift and go to state 124
    INT             shift and go to state 125

    tiposCast                      shift and go to state 115

state 40

    (207) simbolos -> RPAREN .

    $end            reduce using rule 207 (simbolos -> RPAREN .)
    RBRACE          reduce using rule 207 (simbolos -> RPAREN .)
    SEMI            reduce using rule 207 (simbolos -> RPAREN .)
    BREAK           reduce using rule 207 (simbolos -> RPAREN .)


state 41

    (171) llamada_funcion -> NOMBRE . LPAREN params_list RPAREN SEMI
    (202) otros -> NOMBRE . COLON

    LPAREN          shift and go to state 126
    COLON           shift and go to state 127


state 42

    (208) simbolos -> LBRACKET . RBRACKET
    (209) simbolos -> LBRACKET .

    RBRACKET        shift and go to state 128
    $end            reduce using rule 209 (simbolos -> LBRACKET .)
    RBRACE          reduce using rule 209 (simbolos -> LBRACKET .)
    SEMI            reduce using rule 209 (simbolos -> LBRACKET .)
    BREAK           reduce using rule 209 (simbolos -> LBRACKET .)


state 43

    (210) simbolos -> RBRACKET .

    $end            reduce using rule 210 (simbolos -> RBRACKET .)
    RBRACE          reduce using rule 210 (simbolos -> RBRACKET .)
    SEMI            reduce using rule 210 (simbolos -> RBRACKET .)
    BREAK           reduce using rule 210 (simbolos -> RBRACKET .)


state 44

    (36) asignacion -> VARIABLE . EQUALS valor SEMI
    (39) asignacion -> VARIABLE . EQUALS brand
    (40) asignacion -> VARIABLE . EQUALS escribir
    (41) asignacion -> VARIABLE . EQUALS btrim
    (42) asignacion -> VARIABLE . EQUALS lectura
    (43) asignacion -> VARIABLE . EQUALS bconcat
    (45) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (47) asignacion -> VARIABLE . EQUALS llamada_funcion
    (48) asignacion -> VARIABLE . EQUALS arrayvalues SEMI
    (49) asignacion -> VARIABLE . EQUALS arraysearch SEMI
    (110) incrementOp -> VARIABLE . SUMA SUMA SEMI
    (111) incrementOp -> VARIABLE . RESTA RESTA SEMI
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (240) casting -> VARIABLE . EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (226) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (227) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (230) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (248) addpila -> VARIABLE . FLECHA PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> VARIABLE . FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> VARIABLE . FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> VARIABLE . FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> VARIABLE . FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> VARIABLE . FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (250) poppila -> VARIABLE . FLECHA POP LPAREN RPAREN SEMI
    (50) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (242) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (251) funcionesCP -> VARIABLE . FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> VARIABLE . FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> VARIABLE . FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> VARIABLE . FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> VARIABLE . FLECHA CURRENT LPAREN RPAREN
    (135) incrementos_mat -> . MINUS_EQUAL
    (136) incrementos_mat -> . MOD_EQUAL
    (137) incrementos_mat -> . MUL_EQUAL
    (138) incrementos_mat -> . PLUS_EQUAL
    (139) incrementos_mat -> . DIV_EQUAL
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    EQUALS          shift and go to state 129
    SUMA            shift and go to state 130
    RESTA           shift and go to state 131
    CONCAT          shift and go to state 132
    CONCAT_EQUAL    shift and go to state 133
    FLECHA          shift and go to state 134
    MINUS_EQUAL     shift and go to state 137
    MOD_EQUAL       shift and go to state 138
    MUL_EQUAL       shift and go to state 139
    PLUS_EQUAL      shift and go to state 140
    DIV_EQUAL       shift and go to state 141
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    incrementos_mat                shift and go to state 135
    operadores                     shift and go to state 136

state 45

    (73) imprimir -> VAR_DUMP . LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> VAR_DUMP . LPAREN arrayvalues RPAREN SEMI

    LPAREN          shift and go to state 145


state 46

    (75) imprimir -> PRINT_R . LPAREN arraysearch RPAREN SEMI
    (76) imprimir -> PRINT_R . LPAREN VARIABLE RPAREN SEMI
    (77) imprimir -> PRINT_R . LPAREN arrayvalues RPAREN SEMI

    LPAREN          shift and go to state 146


state 47

    (37) asignacion -> VAR . asignacion
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 148
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    asignacion                     shift and go to state 147
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 48

    (38) asignacion -> proteccion . asignacion
    (158) funciones -> proteccion . funcion_nparams
    (160) funciones -> proteccion . funcion_blank
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 148
    VAR             shift and go to state 47
    FUNCTION        shift and go to state 153
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    proteccion                     shift and go to state 149
    asignacion                     shift and go to state 150
    funcion_nparams                shift and go to state 151
    funcion_blank                  shift and go to state 152
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 49

    (44) asignacion -> asignacion_array .

    $end            reduce using rule 44 (asignacion -> asignacion_array .)
    RBRACE          reduce using rule 44 (asignacion -> asignacion_array .)
    SEMI            reduce using rule 44 (asignacion -> asignacion_array .)
    BREAK           reduce using rule 44 (asignacion -> asignacion_array .)
    RPAREN          reduce using rule 44 (asignacion -> asignacion_array .)
    COMMA           reduce using rule 44 (asignacion -> asignacion_array .)
    VARIABLE        reduce using rule 44 (asignacion -> asignacion_array .)
    LPAREN          reduce using rule 44 (asignacion -> asignacion_array .)
    CADENA          reduce using rule 44 (asignacion -> asignacion_array .)
    BOOLEANO        reduce using rule 44 (asignacion -> asignacion_array .)
    ENTERO          reduce using rule 44 (asignacion -> asignacion_array .)
    DECIMAL         reduce using rule 44 (asignacion -> asignacion_array .)


state 50

    (46) asignacion -> aumentoCasting .

    $end            reduce using rule 46 (asignacion -> aumentoCasting .)
    RBRACE          reduce using rule 46 (asignacion -> aumentoCasting .)
    SEMI            reduce using rule 46 (asignacion -> aumentoCasting .)
    BREAK           reduce using rule 46 (asignacion -> aumentoCasting .)
    RPAREN          reduce using rule 46 (asignacion -> aumentoCasting .)
    COMMA           reduce using rule 46 (asignacion -> aumentoCasting .)
    VARIABLE        reduce using rule 46 (asignacion -> aumentoCasting .)
    LPAREN          reduce using rule 46 (asignacion -> aumentoCasting .)
    CADENA          reduce using rule 46 (asignacion -> aumentoCasting .)
    BOOLEANO        reduce using rule 46 (asignacion -> aumentoCasting .)
    ENTERO          reduce using rule 46 (asignacion -> aumentoCasting .)
    DECIMAL         reduce using rule 46 (asignacion -> aumentoCasting .)


state 51

    (157) funciones -> funcion_nparams .

    $end            reduce using rule 157 (funciones -> funcion_nparams .)
    RBRACE          reduce using rule 157 (funciones -> funcion_nparams .)
    SEMI            reduce using rule 157 (funciones -> funcion_nparams .)
    BREAK           reduce using rule 157 (funciones -> funcion_nparams .)


state 52

    (159) funciones -> funcion_blank .

    $end            reduce using rule 159 (funciones -> funcion_blank .)
    RBRACE          reduce using rule 159 (funciones -> funcion_blank .)
    SEMI            reduce using rule 159 (funciones -> funcion_blank .)
    BREAK           reduce using rule 159 (funciones -> funcion_blank .)


state 53

    (161) funciones -> funcion_void .

    $end            reduce using rule 161 (funciones -> funcion_void .)
    RBRACE          reduce using rule 161 (funciones -> funcion_void .)
    SEMI            reduce using rule 161 (funciones -> funcion_void .)
    BREAK           reduce using rule 161 (funciones -> funcion_void .)


state 54

    (262) constante -> DEFINE . LPAREN CADENA COMMA valor RPAREN SEMI
    (263) constante -> DEFINE . LPAREN NOMBRE COMMA ARRAY RPAREN SEMI

    LPAREN          shift and go to state 154


state 55

    (225) bconcat -> CADENA . CONCAT CADENA SEMI
    (228) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI

    CONCAT          shift and go to state 155
    CONCAT_EQUAL    shift and go to state 156


state 56

    (189) lectura -> READLINE . LPAREN CADENA RPAREN SEMI
    (190) lectura -> READLINE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 157


state 57

    (82) condicion_ifelse -> condicion_if .
    (83) condicion_ifelse -> condicion_if . condicion_else
    (84) condicion_ifelse -> condicion_if . condicion_elseif
    (85) condicion_ifelse -> condicion_if . condicion_elseif condicion_else
    (81) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (80) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    $end            reduce using rule 82 (condicion_ifelse -> condicion_if .)
    RBRACE          reduce using rule 82 (condicion_ifelse -> condicion_if .)
    SEMI            reduce using rule 82 (condicion_ifelse -> condicion_if .)
    BREAK           reduce using rule 82 (condicion_ifelse -> condicion_if .)
    ELSE            shift and go to state 160
    ELSEIF          shift and go to state 161

    condicion_else                 shift and go to state 158
    condicion_elseif               shift and go to state 159

state 58

    (113) bwhile -> WHILE . LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> WHILE . LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> WHILE . LPAREN condicion RPAREN SEMI

    LPAREN          shift and go to state 162


state 59

    (211) simbolos -> LBRACE . RBRACE
    (212) simbolos -> LBRACE .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 163
    $end            reduce using rule 212 (simbolos -> LBRACE .)
    SEMI            reduce using rule 212 (simbolos -> LBRACE .)
    BREAK           reduce using rule 212 (simbolos -> LBRACE .)

  ! RBRACE          [ reduce using rule 212 (simbolos -> LBRACE .) ]


state 60

    (213) simbolos -> RBRACE . instrucciones
    (217) instrucciones -> . condicion_else
    (218) instrucciones -> . condicion_elseif
    (219) instrucciones -> . bwhile
    (220) instrucciones -> . bfor
    (221) instrucciones -> . funciones
    (222) instrucciones -> . bswitch
    (223) instrucciones -> . bdo
    (224) instrucciones -> . catches
    (81) condicion_else -> . ELSE LBRACE cuerpo RBRACE
    (80) condicion_elseif -> . ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .
    (99) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (157) funciones -> . funcion_nparams
    (158) funciones -> . proteccion funcion_nparams
    (159) funciones -> . funcion_blank
    (160) funciones -> . proteccion funcion_blank
    (161) funciones -> . funcion_void
    (118) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (117) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (124) catches -> . catches CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def
    (125) catches -> . empty
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (187) empty -> .

  ! reduce/reduce conflict for RBRACE resolved using rule 116 (bwhile -> .)
  ! reduce/reduce conflict for SEMI resolved using rule 116 (bwhile -> .)
  ! reduce/reduce conflict for $end resolved using rule 116 (bwhile -> .)
  ! reduce/reduce conflict for BREAK resolved using rule 116 (bwhile -> .)
    ELSE            shift and go to state 160
    ELSEIF          shift and go to state 161
    WHILE           shift and go to state 58
    RBRACE          reduce using rule 116 (bwhile -> .)
    SEMI            reduce using rule 116 (bwhile -> .)
    $end            reduce using rule 116 (bwhile -> .)
    BREAK           reduce using rule 116 (bwhile -> .)
    FOR             shift and go to state 62
    SWITCH          shift and go to state 65
    DO              shift and go to state 61
    FUNCTION        shift and go to state 89
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    CATCH           reduce using rule 187 (empty -> .)

  ! RBRACE          [ reduce using rule 187 (empty -> .) ]
  ! SEMI            [ reduce using rule 187 (empty -> .) ]
  ! $end            [ reduce using rule 187 (empty -> .) ]
  ! BREAK           [ reduce using rule 187 (empty -> .) ]

    instrucciones                  shift and go to state 164
    condicion_else                 shift and go to state 165
    condicion_elseif               shift and go to state 166
    bwhile                         shift and go to state 167
    bfor                           shift and go to state 168
    funciones                      shift and go to state 169
    bswitch                        shift and go to state 170
    bdo                            shift and go to state 171
    catches                        shift and go to state 172
    funcion_nparams                shift and go to state 51
    proteccion                     shift and go to state 173
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    empty                          shift and go to state 174

state 61

    (117) bdo -> DO . LBRACE cuerpo RBRACE bwhile

    LBRACE          shift and go to state 175


state 62

    (99) bfor -> FOR . LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def

    LPAREN          shift and go to state 176


state 63

    (112) bforeach -> FOREACH . LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 177


state 64

    (123) btry -> TRY . LBRACE stc_bloque_def RBRACE catches

    LBRACE          shift and go to state 178


state 65

    (118) bswitch -> SWITCH . LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE

    LPAREN          shift and go to state 179


state 66

    (119) bcase -> CASE . ENTERO COLON
    (120) bcase -> CASE . CADENA COLON

    ENTERO          shift and go to state 180
    CADENA          shift and go to state 181


state 67

    (195) bgoto -> GOTO . NOMBRE SEMI

    NOMBRE          shift and go to state 182


state 68

    (196) bcortes -> EXIT . SEMI

    SEMI            shift and go to state 183


state 69

    (197) bcortes -> BREAK . SEMI

    SEMI            shift and go to state 184


state 70

    (198) bcortes -> DEFAULT . SEMI

    SEMI            shift and go to state 185


state 71

    (199) bcortes -> CONTINUE . SEMI

    SEMI            shift and go to state 186


state 72

    (172) brand -> RAND . LPAREN ENTERO COMMA ENTERO RPAREN SEMI

    LPAREN          shift and go to state 187


state 73

    (191) escribir -> FWRITE . LPAREN NOMBRE COMMA CADENA RPAREN SEMI

    LPAREN          shift and go to state 188


state 74

    (192) btrim -> TRIM . LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 189


state 75

    (200) otros -> SMALLER . NOMBRE GREATER
    (201) otros -> SMALLER . DIVISION NOMBRE GREATER

    NOMBRE          shift and go to state 190
    DIVISION        shift and go to state 191


state 76

    (177) breturn -> empty .

    RBRACE          reduce using rule 177 (breturn -> empty .)
    $end            reduce using rule 177 (breturn -> empty .)
    SEMI            reduce using rule 177 (breturn -> empty .)
    BREAK           reduce using rule 177 (breturn -> empty .)


state 77

    (178) breturn -> RETURN . SEMI
    (179) breturn -> RETURN . NULL SEMI
    (180) breturn -> RETURN . VARIABLE SEMI
    (181) breturn -> RETURN . BOOLEANO SEMI

    SEMI            shift and go to state 192
    NULL            shift and go to state 193
    VARIABLE        shift and go to state 194
    BOOLEANO        shift and go to state 195


state 78

    (193) comment -> COMENTARIOS .

    $end            reduce using rule 193 (comment -> COMENTARIOS .)
    RBRACE          reduce using rule 193 (comment -> COMENTARIOS .)
    SEMI            reduce using rule 193 (comment -> COMENTARIOS .)
    BREAK           reduce using rule 193 (comment -> COMENTARIOS .)


state 79

    (194) comment -> DOC_COMENTARIOS .

    $end            reduce using rule 194 (comment -> DOC_COMENTARIOS .)
    RBRACE          reduce using rule 194 (comment -> DOC_COMENTARIOS .)
    SEMI            reduce using rule 194 (comment -> DOC_COMENTARIOS .)
    BREAK           reduce using rule 194 (comment -> DOC_COMENTARIOS .)


state 80

    (214) simbolos -> OPEN_TAG . CLOSE_TAG
    (215) simbolos -> OPEN_TAG .

    CLOSE_TAG       shift and go to state 196
    $end            reduce using rule 215 (simbolos -> OPEN_TAG .)
    RBRACE          reduce using rule 215 (simbolos -> OPEN_TAG .)
    SEMI            reduce using rule 215 (simbolos -> OPEN_TAG .)
    BREAK           reduce using rule 215 (simbolos -> OPEN_TAG .)


state 81

    (216) simbolos -> CLOSE_TAG .

    $end            reduce using rule 216 (simbolos -> CLOSE_TAG .)
    RBRACE          reduce using rule 216 (simbolos -> CLOSE_TAG .)
    SEMI            reduce using rule 216 (simbolos -> CLOSE_TAG .)
    BREAK           reduce using rule 216 (simbolos -> CLOSE_TAG .)


state 82

    (256) funcionesCP_semi -> funcionesCP .
    (257) funcionesCP_semi -> funcionesCP . SEMI

  ! shift/reduce conflict for SEMI resolved as shift
    $end            reduce using rule 256 (funcionesCP_semi -> funcionesCP .)
    COMMA           reduce using rule 256 (funcionesCP_semi -> funcionesCP .)
    RBRACE          reduce using rule 256 (funcionesCP_semi -> funcionesCP .)
    BREAK           reduce using rule 256 (funcionesCP_semi -> funcionesCP .)
    SEMI            shift and go to state 197

  ! SEMI            [ reduce using rule 256 (funcionesCP_semi -> funcionesCP .) ]


state 83

    (264) arraypop -> ARRAY_POP . LPAREN VARIABLE RPAREN SEMI

    LPAREN          shift and go to state 198


state 84

    (265) arraypush -> ARRAY_PUSH . LPAREN VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> ARRAY_PUSH . LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI

    LPAREN          shift and go to state 199


state 85

    (173) proteccion -> PUBLIC .

    VARIABLE        reduce using rule 173 (proteccion -> PUBLIC .)
    VAR             reduce using rule 173 (proteccion -> PUBLIC .)
    FUNCTION        reduce using rule 173 (proteccion -> PUBLIC .)
    PUBLIC          reduce using rule 173 (proteccion -> PUBLIC .)
    PRIVATE         reduce using rule 173 (proteccion -> PUBLIC .)
    PROTECTED       reduce using rule 173 (proteccion -> PUBLIC .)
    STATIC          reduce using rule 173 (proteccion -> PUBLIC .)


state 86

    (174) proteccion -> PRIVATE .

    VARIABLE        reduce using rule 174 (proteccion -> PRIVATE .)
    VAR             reduce using rule 174 (proteccion -> PRIVATE .)
    FUNCTION        reduce using rule 174 (proteccion -> PRIVATE .)
    PUBLIC          reduce using rule 174 (proteccion -> PRIVATE .)
    PRIVATE         reduce using rule 174 (proteccion -> PRIVATE .)
    PROTECTED       reduce using rule 174 (proteccion -> PRIVATE .)
    STATIC          reduce using rule 174 (proteccion -> PRIVATE .)


state 87

    (175) proteccion -> PROTECTED .

    VARIABLE        reduce using rule 175 (proteccion -> PROTECTED .)
    VAR             reduce using rule 175 (proteccion -> PROTECTED .)
    FUNCTION        reduce using rule 175 (proteccion -> PROTECTED .)
    PUBLIC          reduce using rule 175 (proteccion -> PROTECTED .)
    PRIVATE         reduce using rule 175 (proteccion -> PROTECTED .)
    PROTECTED       reduce using rule 175 (proteccion -> PROTECTED .)
    STATIC          reduce using rule 175 (proteccion -> PROTECTED .)


state 88

    (176) proteccion -> STATIC .

    VARIABLE        reduce using rule 176 (proteccion -> STATIC .)
    VAR             reduce using rule 176 (proteccion -> STATIC .)
    FUNCTION        reduce using rule 176 (proteccion -> STATIC .)
    PUBLIC          reduce using rule 176 (proteccion -> STATIC .)
    PRIVATE         reduce using rule 176 (proteccion -> STATIC .)
    PROTECTED       reduce using rule 176 (proteccion -> STATIC .)
    STATIC          reduce using rule 176 (proteccion -> STATIC .)


state 89

    (164) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> FUNCTION . NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    NOMBRE          shift and go to state 200


state 90

    (78) condicion_if -> IF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> IF . LPAREN condicion RPAREN llamada_funcion

    LPAREN          shift and go to state 201


state 91

    (182) breturn -> breturn RBRACE .

    RBRACE          reduce using rule 182 (breturn -> breturn RBRACE .)
    $end            reduce using rule 182 (breturn -> breturn RBRACE .)
    SEMI            reduce using rule 182 (breturn -> breturn RBRACE .)
    BREAK           reduce using rule 182 (breturn -> breturn RBRACE .)


state 92

    (59) imprimir -> ECHO valor . SEMI
    (147) operaciones_mat -> valor . operadores valor
    (148) operaciones_mat -> valor . operadores operaciones_mat
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SEMI            shift and go to state 202
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 203

state 93

    (63) imprimir -> ECHO NOMBRE . LBRACKET ENTERO RBRACKET SEMI

    LBRACKET        shift and go to state 206


state 94

    (57) numero -> ENTERO .

    SEMI            reduce using rule 57 (numero -> ENTERO .)
    SUMA            reduce using rule 57 (numero -> ENTERO .)
    RESTA           reduce using rule 57 (numero -> ENTERO .)
    MULTIPLICACION  reduce using rule 57 (numero -> ENTERO .)
    DIVISION        reduce using rule 57 (numero -> ENTERO .)
    MODULO          reduce using rule 57 (numero -> ENTERO .)
    RPAREN          reduce using rule 57 (numero -> ENTERO .)
    AND             reduce using rule 57 (numero -> ENTERO .)
    OR              reduce using rule 57 (numero -> ENTERO .)
    XOR             reduce using rule 57 (numero -> ENTERO .)
    IS_EQUAL        reduce using rule 57 (numero -> ENTERO .)
    IS_NOT_EQUAL    reduce using rule 57 (numero -> ENTERO .)
    IS_IDENTICAL    reduce using rule 57 (numero -> ENTERO .)
    IS_NOT_IDENTICAL reduce using rule 57 (numero -> ENTERO .)
    SMALLER         reduce using rule 57 (numero -> ENTERO .)
    GREATER         reduce using rule 57 (numero -> ENTERO .)
    IS_SMALLER_OR_EQUAL reduce using rule 57 (numero -> ENTERO .)
    IS_GREATER_OR_EQUAL reduce using rule 57 (numero -> ENTERO .)
    COMMA           reduce using rule 57 (numero -> ENTERO .)
    $end            reduce using rule 57 (numero -> ENTERO .)
    RBRACE          reduce using rule 57 (numero -> ENTERO .)
    BREAK           reduce using rule 57 (numero -> ENTERO .)
    VARIABLE        reduce using rule 57 (numero -> ENTERO .)
    LPAREN          reduce using rule 57 (numero -> ENTERO .)
    CADENA          reduce using rule 57 (numero -> ENTERO .)
    BOOLEANO        reduce using rule 57 (numero -> ENTERO .)
    ENTERO          reduce using rule 57 (numero -> ENTERO .)
    DECIMAL         reduce using rule 57 (numero -> ENTERO .)


state 95

    (64) imprimir -> ECHO bconcat .

    $end            reduce using rule 64 (imprimir -> ECHO bconcat .)
    RBRACE          reduce using rule 64 (imprimir -> ECHO bconcat .)
    SEMI            reduce using rule 64 (imprimir -> ECHO bconcat .)
    BREAK           reduce using rule 64 (imprimir -> ECHO bconcat .)


state 96

    (65) imprimir -> ECHO operaciones_mat . SEMI

    SEMI            shift and go to state 207


state 97

    (67) imprimir -> ECHO VARIABLE . SEMI
    (226) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (227) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (230) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (149) operaciones_mat -> VARIABLE . operadores VARIABLE
    (250) poppila -> VARIABLE . FLECHA POP LPAREN RPAREN SEMI
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (251) funcionesCP -> VARIABLE . FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> VARIABLE . FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> VARIABLE . FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> VARIABLE . FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> VARIABLE . FLECHA CURRENT LPAREN RPAREN
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SEMI            shift and go to state 208
    CONCAT          shift and go to state 132
    CONCAT_EQUAL    shift and go to state 133
    FLECHA          shift and go to state 210
    EQUALS          shift and go to state 211
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 209

state 98

    (69) imprimir -> ECHO funcionesCP_semi .
    (71) imprimir -> ECHO funcionesCP_semi . COMMA NOMBRE SEMI

    $end            reduce using rule 69 (imprimir -> ECHO funcionesCP_semi .)
    RBRACE          reduce using rule 69 (imprimir -> ECHO funcionesCP_semi .)
    SEMI            reduce using rule 69 (imprimir -> ECHO funcionesCP_semi .)
    BREAK           reduce using rule 69 (imprimir -> ECHO funcionesCP_semi .)
    COMMA           shift and go to state 212


state 99

    (72) imprimir -> ECHO poppila .

    $end            reduce using rule 72 (imprimir -> ECHO poppila .)
    RBRACE          reduce using rule 72 (imprimir -> ECHO poppila .)
    SEMI            reduce using rule 72 (imprimir -> ECHO poppila .)
    BREAK           reduce using rule 72 (imprimir -> ECHO poppila .)


state 100

    (51) valor -> tipoDato .

    SEMI            reduce using rule 51 (valor -> tipoDato .)
    SUMA            reduce using rule 51 (valor -> tipoDato .)
    RESTA           reduce using rule 51 (valor -> tipoDato .)
    MULTIPLICACION  reduce using rule 51 (valor -> tipoDato .)
    DIVISION        reduce using rule 51 (valor -> tipoDato .)
    MODULO          reduce using rule 51 (valor -> tipoDato .)
    RPAREN          reduce using rule 51 (valor -> tipoDato .)
    SMALLER         reduce using rule 51 (valor -> tipoDato .)
    GREATER         reduce using rule 51 (valor -> tipoDato .)
    IS_SMALLER_OR_EQUAL reduce using rule 51 (valor -> tipoDato .)
    IS_GREATER_OR_EQUAL reduce using rule 51 (valor -> tipoDato .)
    AND             reduce using rule 51 (valor -> tipoDato .)
    OR              reduce using rule 51 (valor -> tipoDato .)
    XOR             reduce using rule 51 (valor -> tipoDato .)
    IS_EQUAL        reduce using rule 51 (valor -> tipoDato .)
    IS_NOT_EQUAL    reduce using rule 51 (valor -> tipoDato .)
    IS_IDENTICAL    reduce using rule 51 (valor -> tipoDato .)
    IS_NOT_IDENTICAL reduce using rule 51 (valor -> tipoDato .)
    COMMA           reduce using rule 51 (valor -> tipoDato .)
    $end            reduce using rule 51 (valor -> tipoDato .)
    RBRACE          reduce using rule 51 (valor -> tipoDato .)
    BREAK           reduce using rule 51 (valor -> tipoDato .)
    VARIABLE        reduce using rule 51 (valor -> tipoDato .)
    LPAREN          reduce using rule 51 (valor -> tipoDato .)
    CADENA          reduce using rule 51 (valor -> tipoDato .)
    BOOLEANO        reduce using rule 51 (valor -> tipoDato .)
    ENTERO          reduce using rule 51 (valor -> tipoDato .)
    DECIMAL         reduce using rule 51 (valor -> tipoDato .)


state 101

    (52) valor -> bcolas .

    SEMI            reduce using rule 52 (valor -> bcolas .)
    SUMA            reduce using rule 52 (valor -> bcolas .)
    RESTA           reduce using rule 52 (valor -> bcolas .)
    MULTIPLICACION  reduce using rule 52 (valor -> bcolas .)
    DIVISION        reduce using rule 52 (valor -> bcolas .)
    MODULO          reduce using rule 52 (valor -> bcolas .)
    RPAREN          reduce using rule 52 (valor -> bcolas .)
    SMALLER         reduce using rule 52 (valor -> bcolas .)
    GREATER         reduce using rule 52 (valor -> bcolas .)
    IS_SMALLER_OR_EQUAL reduce using rule 52 (valor -> bcolas .)
    IS_GREATER_OR_EQUAL reduce using rule 52 (valor -> bcolas .)
    AND             reduce using rule 52 (valor -> bcolas .)
    OR              reduce using rule 52 (valor -> bcolas .)
    XOR             reduce using rule 52 (valor -> bcolas .)
    IS_EQUAL        reduce using rule 52 (valor -> bcolas .)
    IS_NOT_EQUAL    reduce using rule 52 (valor -> bcolas .)
    IS_IDENTICAL    reduce using rule 52 (valor -> bcolas .)
    IS_NOT_IDENTICAL reduce using rule 52 (valor -> bcolas .)
    COMMA           reduce using rule 52 (valor -> bcolas .)
    $end            reduce using rule 52 (valor -> bcolas .)
    RBRACE          reduce using rule 52 (valor -> bcolas .)
    BREAK           reduce using rule 52 (valor -> bcolas .)
    VARIABLE        reduce using rule 52 (valor -> bcolas .)
    LPAREN          reduce using rule 52 (valor -> bcolas .)
    CADENA          reduce using rule 52 (valor -> bcolas .)
    BOOLEANO        reduce using rule 52 (valor -> bcolas .)
    ENTERO          reduce using rule 52 (valor -> bcolas .)
    DECIMAL         reduce using rule 52 (valor -> bcolas .)


state 102

    (53) valor -> bpila .

    SEMI            reduce using rule 53 (valor -> bpila .)
    SUMA            reduce using rule 53 (valor -> bpila .)
    RESTA           reduce using rule 53 (valor -> bpila .)
    MULTIPLICACION  reduce using rule 53 (valor -> bpila .)
    DIVISION        reduce using rule 53 (valor -> bpila .)
    MODULO          reduce using rule 53 (valor -> bpila .)
    RPAREN          reduce using rule 53 (valor -> bpila .)
    SMALLER         reduce using rule 53 (valor -> bpila .)
    GREATER         reduce using rule 53 (valor -> bpila .)
    IS_SMALLER_OR_EQUAL reduce using rule 53 (valor -> bpila .)
    IS_GREATER_OR_EQUAL reduce using rule 53 (valor -> bpila .)
    AND             reduce using rule 53 (valor -> bpila .)
    OR              reduce using rule 53 (valor -> bpila .)
    XOR             reduce using rule 53 (valor -> bpila .)
    IS_EQUAL        reduce using rule 53 (valor -> bpila .)
    IS_NOT_EQUAL    reduce using rule 53 (valor -> bpila .)
    IS_IDENTICAL    reduce using rule 53 (valor -> bpila .)
    IS_NOT_IDENTICAL reduce using rule 53 (valor -> bpila .)
    COMMA           reduce using rule 53 (valor -> bpila .)
    $end            reduce using rule 53 (valor -> bpila .)
    RBRACE          reduce using rule 53 (valor -> bpila .)
    BREAK           reduce using rule 53 (valor -> bpila .)
    VARIABLE        reduce using rule 53 (valor -> bpila .)
    LPAREN          reduce using rule 53 (valor -> bpila .)
    CADENA          reduce using rule 53 (valor -> bpila .)
    BOOLEANO        reduce using rule 53 (valor -> bpila .)
    ENTERO          reduce using rule 53 (valor -> bpila .)
    DECIMAL         reduce using rule 53 (valor -> bpila .)


state 103

    (225) bconcat -> CADENA . CONCAT CADENA SEMI
    (228) bconcat -> CADENA . CONCAT_EQUAL CADENA SEMI
    (55) tipoDato -> CADENA .

    CONCAT          shift and go to state 155
    CONCAT_EQUAL    shift and go to state 156
    SEMI            reduce using rule 55 (tipoDato -> CADENA .)
    SUMA            reduce using rule 55 (tipoDato -> CADENA .)
    RESTA           reduce using rule 55 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 55 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 55 (tipoDato -> CADENA .)
    MODULO          reduce using rule 55 (tipoDato -> CADENA .)


state 104

    (150) operaciones_mat -> operaciones_mat_par .

    SEMI            reduce using rule 150 (operaciones_mat -> operaciones_mat_par .)


state 105

    (151) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (152) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (153) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN
    (156) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 214
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 213
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 106

    (54) tipoDato -> numero .

    SEMI            reduce using rule 54 (tipoDato -> numero .)
    SUMA            reduce using rule 54 (tipoDato -> numero .)
    RESTA           reduce using rule 54 (tipoDato -> numero .)
    MULTIPLICACION  reduce using rule 54 (tipoDato -> numero .)
    DIVISION        reduce using rule 54 (tipoDato -> numero .)
    MODULO          reduce using rule 54 (tipoDato -> numero .)
    RPAREN          reduce using rule 54 (tipoDato -> numero .)
    AND             reduce using rule 54 (tipoDato -> numero .)
    OR              reduce using rule 54 (tipoDato -> numero .)
    XOR             reduce using rule 54 (tipoDato -> numero .)
    IS_EQUAL        reduce using rule 54 (tipoDato -> numero .)
    IS_NOT_EQUAL    reduce using rule 54 (tipoDato -> numero .)
    IS_IDENTICAL    reduce using rule 54 (tipoDato -> numero .)
    IS_NOT_IDENTICAL reduce using rule 54 (tipoDato -> numero .)
    SMALLER         reduce using rule 54 (tipoDato -> numero .)
    GREATER         reduce using rule 54 (tipoDato -> numero .)
    IS_SMALLER_OR_EQUAL reduce using rule 54 (tipoDato -> numero .)
    IS_GREATER_OR_EQUAL reduce using rule 54 (tipoDato -> numero .)
    COMMA           reduce using rule 54 (tipoDato -> numero .)
    $end            reduce using rule 54 (tipoDato -> numero .)
    RBRACE          reduce using rule 54 (tipoDato -> numero .)
    BREAK           reduce using rule 54 (tipoDato -> numero .)
    VARIABLE        reduce using rule 54 (tipoDato -> numero .)
    LPAREN          reduce using rule 54 (tipoDato -> numero .)
    CADENA          reduce using rule 54 (tipoDato -> numero .)
    BOOLEANO        reduce using rule 54 (tipoDato -> numero .)
    ENTERO          reduce using rule 54 (tipoDato -> numero .)
    DECIMAL         reduce using rule 54 (tipoDato -> numero .)


state 107

    (56) tipoDato -> BOOLEANO .

    SEMI            reduce using rule 56 (tipoDato -> BOOLEANO .)
    SUMA            reduce using rule 56 (tipoDato -> BOOLEANO .)
    RESTA           reduce using rule 56 (tipoDato -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 56 (tipoDato -> BOOLEANO .)
    DIVISION        reduce using rule 56 (tipoDato -> BOOLEANO .)
    MODULO          reduce using rule 56 (tipoDato -> BOOLEANO .)
    RPAREN          reduce using rule 56 (tipoDato -> BOOLEANO .)
    AND             reduce using rule 56 (tipoDato -> BOOLEANO .)
    OR              reduce using rule 56 (tipoDato -> BOOLEANO .)
    XOR             reduce using rule 56 (tipoDato -> BOOLEANO .)
    IS_EQUAL        reduce using rule 56 (tipoDato -> BOOLEANO .)
    IS_NOT_EQUAL    reduce using rule 56 (tipoDato -> BOOLEANO .)
    IS_IDENTICAL    reduce using rule 56 (tipoDato -> BOOLEANO .)
    IS_NOT_IDENTICAL reduce using rule 56 (tipoDato -> BOOLEANO .)
    SMALLER         reduce using rule 56 (tipoDato -> BOOLEANO .)
    GREATER         reduce using rule 56 (tipoDato -> BOOLEANO .)
    IS_SMALLER_OR_EQUAL reduce using rule 56 (tipoDato -> BOOLEANO .)
    IS_GREATER_OR_EQUAL reduce using rule 56 (tipoDato -> BOOLEANO .)
    COMMA           reduce using rule 56 (tipoDato -> BOOLEANO .)
    $end            reduce using rule 56 (tipoDato -> BOOLEANO .)
    RBRACE          reduce using rule 56 (tipoDato -> BOOLEANO .)
    BREAK           reduce using rule 56 (tipoDato -> BOOLEANO .)
    VARIABLE        reduce using rule 56 (tipoDato -> BOOLEANO .)
    LPAREN          reduce using rule 56 (tipoDato -> BOOLEANO .)
    CADENA          reduce using rule 56 (tipoDato -> BOOLEANO .)
    BOOLEANO        reduce using rule 56 (tipoDato -> BOOLEANO .)
    ENTERO          reduce using rule 56 (tipoDato -> BOOLEANO .)
    DECIMAL         reduce using rule 56 (tipoDato -> BOOLEANO .)


state 108

    (58) numero -> DECIMAL .

    SEMI            reduce using rule 58 (numero -> DECIMAL .)
    SUMA            reduce using rule 58 (numero -> DECIMAL .)
    RESTA           reduce using rule 58 (numero -> DECIMAL .)
    MULTIPLICACION  reduce using rule 58 (numero -> DECIMAL .)
    DIVISION        reduce using rule 58 (numero -> DECIMAL .)
    MODULO          reduce using rule 58 (numero -> DECIMAL .)
    RPAREN          reduce using rule 58 (numero -> DECIMAL .)
    AND             reduce using rule 58 (numero -> DECIMAL .)
    OR              reduce using rule 58 (numero -> DECIMAL .)
    XOR             reduce using rule 58 (numero -> DECIMAL .)
    IS_EQUAL        reduce using rule 58 (numero -> DECIMAL .)
    IS_NOT_EQUAL    reduce using rule 58 (numero -> DECIMAL .)
    IS_IDENTICAL    reduce using rule 58 (numero -> DECIMAL .)
    IS_NOT_IDENTICAL reduce using rule 58 (numero -> DECIMAL .)
    SMALLER         reduce using rule 58 (numero -> DECIMAL .)
    GREATER         reduce using rule 58 (numero -> DECIMAL .)
    IS_SMALLER_OR_EQUAL reduce using rule 58 (numero -> DECIMAL .)
    IS_GREATER_OR_EQUAL reduce using rule 58 (numero -> DECIMAL .)
    COMMA           reduce using rule 58 (numero -> DECIMAL .)
    $end            reduce using rule 58 (numero -> DECIMAL .)
    RBRACE          reduce using rule 58 (numero -> DECIMAL .)
    BREAK           reduce using rule 58 (numero -> DECIMAL .)
    VARIABLE        reduce using rule 58 (numero -> DECIMAL .)
    LPAREN          reduce using rule 58 (numero -> DECIMAL .)
    CADENA          reduce using rule 58 (numero -> DECIMAL .)
    BOOLEANO        reduce using rule 58 (numero -> DECIMAL .)
    ENTERO          reduce using rule 58 (numero -> DECIMAL .)
    DECIMAL         reduce using rule 58 (numero -> DECIMAL .)


state 109

    (60) imprimir -> PRINT valor . SEMI
    (147) operaciones_mat -> valor . operadores valor
    (148) operaciones_mat -> valor . operadores operaciones_mat
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SEMI            shift and go to state 216
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 203

state 110

    (61) imprimir -> PRINT LPAREN . valor RPAREN SEMI
    (151) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (152) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (153) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN
    (156) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 214
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 217
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 111

    (62) imprimir -> PRINT bconcat .

    $end            reduce using rule 62 (imprimir -> PRINT bconcat .)
    RBRACE          reduce using rule 62 (imprimir -> PRINT bconcat .)
    SEMI            reduce using rule 62 (imprimir -> PRINT bconcat .)
    BREAK           reduce using rule 62 (imprimir -> PRINT bconcat .)


state 112

    (66) imprimir -> PRINT operaciones_mat . SEMI

    SEMI            shift and go to state 218


state 113

    (68) imprimir -> PRINT VARIABLE . SEMI
    (226) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (227) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (230) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (149) operaciones_mat -> VARIABLE . operadores VARIABLE
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (251) funcionesCP -> VARIABLE . FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> VARIABLE . FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> VARIABLE . FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> VARIABLE . FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> VARIABLE . FLECHA CURRENT LPAREN RPAREN
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SEMI            shift and go to state 219
    CONCAT          shift and go to state 132
    CONCAT_EQUAL    shift and go to state 133
    EQUALS          shift and go to state 211
    FLECHA          shift and go to state 220
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 209

state 114

    (70) imprimir -> PRINT funcionesCP_semi .

    $end            reduce using rule 70 (imprimir -> PRINT funcionesCP_semi .)
    RBRACE          reduce using rule 70 (imprimir -> PRINT funcionesCP_semi .)
    SEMI            reduce using rule 70 (imprimir -> PRINT funcionesCP_semi .)
    BREAK           reduce using rule 70 (imprimir -> PRINT funcionesCP_semi .)


state 115

    (241) casting -> LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 221


state 116

    (205) simbolos -> LPAREN RPAREN .

    $end            reduce using rule 205 (simbolos -> LPAREN RPAREN .)
    RBRACE          reduce using rule 205 (simbolos -> LPAREN RPAREN .)
    SEMI            reduce using rule 205 (simbolos -> LPAREN RPAREN .)
    BREAK           reduce using rule 205 (simbolos -> LPAREN RPAREN .)


state 117

    (231) tiposCast -> STRING .

    RPAREN          reduce using rule 231 (tiposCast -> STRING .)


state 118

    (232) tiposCast -> BOOL .

    RPAREN          reduce using rule 232 (tiposCast -> BOOL .)


state 119

    (233) tiposCast -> BOOLEAN .

    RPAREN          reduce using rule 233 (tiposCast -> BOOLEAN .)


state 120

    (234) tiposCast -> DOUBLE .

    RPAREN          reduce using rule 234 (tiposCast -> DOUBLE .)


state 121

    (235) tiposCast -> FLOAT .

    RPAREN          reduce using rule 235 (tiposCast -> FLOAT .)


state 122

    (236) tiposCast -> ARRAY .

    RPAREN          reduce using rule 236 (tiposCast -> ARRAY .)


state 123

    (237) tiposCast -> OBJECT .

    RPAREN          reduce using rule 237 (tiposCast -> OBJECT .)


state 124

    (238) tiposCast -> INTEGER .

    RPAREN          reduce using rule 238 (tiposCast -> INTEGER .)


state 125

    (239) tiposCast -> INT .

    RPAREN          reduce using rule 239 (tiposCast -> INT .)


state 126

    (171) llamada_funcion -> NOMBRE LPAREN . params_list RPAREN SEMI
    (165) params_list -> . params_list COMMA param
    (166) params_list -> . param
    (167) params_list -> . empty
    (162) param -> . VARIABLE
    (163) param -> . asignacion
    (187) empty -> .
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 225
    RPAREN          reduce using rule 187 (empty -> .)
    COMMA           reduce using rule 187 (empty -> .)
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    params_list                    shift and go to state 222
    param                          shift and go to state 223
    empty                          shift and go to state 224
    asignacion                     shift and go to state 226
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 127

    (202) otros -> NOMBRE COLON .

    $end            reduce using rule 202 (otros -> NOMBRE COLON .)
    RBRACE          reduce using rule 202 (otros -> NOMBRE COLON .)
    SEMI            reduce using rule 202 (otros -> NOMBRE COLON .)
    BREAK           reduce using rule 202 (otros -> NOMBRE COLON .)


state 128

    (208) simbolos -> LBRACKET RBRACKET .

    $end            reduce using rule 208 (simbolos -> LBRACKET RBRACKET .)
    RBRACE          reduce using rule 208 (simbolos -> LBRACKET RBRACKET .)
    SEMI            reduce using rule 208 (simbolos -> LBRACKET RBRACKET .)
    BREAK           reduce using rule 208 (simbolos -> LBRACKET RBRACKET .)


state 129

    (36) asignacion -> VARIABLE EQUALS . valor SEMI
    (39) asignacion -> VARIABLE EQUALS . brand
    (40) asignacion -> VARIABLE EQUALS . escribir
    (41) asignacion -> VARIABLE EQUALS . btrim
    (42) asignacion -> VARIABLE EQUALS . lectura
    (43) asignacion -> VARIABLE EQUALS . bconcat
    (45) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (47) asignacion -> VARIABLE EQUALS . llamada_funcion
    (48) asignacion -> VARIABLE EQUALS . arrayvalues SEMI
    (49) asignacion -> VARIABLE EQUALS . arraysearch SEMI
    (188) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI
    (240) casting -> VARIABLE EQUALS . LPAREN tiposCast RPAREN VARIABLE SEMI
    (50) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (243) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (147) operaciones_mat -> . valor operadores valor
    (148) operaciones_mat -> . valor operadores operaciones_mat
    (149) operaciones_mat -> . VARIABLE operadores VARIABLE
    (150) operaciones_mat -> . operaciones_mat_par
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (267) arrayvalues -> . ARRAY_VALUES LPAREN VARIABLE RPAREN
    (268) arraysearch -> . ARRAY_SEARCH LPAREN valor COMMA VARIABLE RPAREN
    (183) array_def -> . ARRAY LPAREN RPAREN
    (184) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (151) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (152) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (156) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    NEW             shift and go to state 238
    LPAREN          shift and go to state 239
    VARIABLE        shift and go to state 227
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    READLINE        shift and go to state 56
    CADENA          shift and go to state 103
    NOMBRE          shift and go to state 241
    ARRAY_VALUES    shift and go to state 242
    ARRAY_SEARCH    shift and go to state 243
    ARRAY           shift and go to state 244
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 228
    brand                          shift and go to state 229
    escribir                       shift and go to state 230
    btrim                          shift and go to state 231
    lectura                        shift and go to state 232
    bconcat                        shift and go to state 233
    operaciones_mat                shift and go to state 234
    llamada_funcion                shift and go to state 235
    arrayvalues                    shift and go to state 236
    arraysearch                    shift and go to state 237
    array_def                      shift and go to state 240
    tipoDato                       shift and go to state 100
    operaciones_mat_par            shift and go to state 104
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 130

    (110) incrementOp -> VARIABLE SUMA . SUMA SEMI
    (126) operadores -> SUMA .

    SUMA            shift and go to state 245
    CADENA          reduce using rule 126 (operadores -> SUMA .)
    BOOLEANO        reduce using rule 126 (operadores -> SUMA .)
    ENTERO          reduce using rule 126 (operadores -> SUMA .)
    DECIMAL         reduce using rule 126 (operadores -> SUMA .)


state 131

    (111) incrementOp -> VARIABLE RESTA . RESTA SEMI
    (127) operadores -> RESTA .

    RESTA           shift and go to state 246
    CADENA          reduce using rule 127 (operadores -> RESTA .)
    BOOLEANO        reduce using rule 127 (operadores -> RESTA .)
    ENTERO          reduce using rule 127 (operadores -> RESTA .)
    DECIMAL         reduce using rule 127 (operadores -> RESTA .)


state 132

    (226) bconcat -> VARIABLE CONCAT . CADENA SEMI
    (229) bconcat -> VARIABLE CONCAT . VARIABLE SEMI
    (230) bconcat -> VARIABLE CONCAT . CADENA CONCAT VARIABLE SEMI

    CADENA          shift and go to state 248
    VARIABLE        shift and go to state 247


state 133

    (227) bconcat -> VARIABLE CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 249


state 134

    (248) addpila -> VARIABLE FLECHA . PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> VARIABLE FLECHA . PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> VARIABLE FLECHA . ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> VARIABLE FLECHA . ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> VARIABLE FLECHA . DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> VARIABLE FLECHA . DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (250) poppila -> VARIABLE FLECHA . POP LPAREN RPAREN SEMI
    (251) funcionesCP -> VARIABLE FLECHA . REWIND LPAREN RPAREN
    (252) funcionesCP -> VARIABLE FLECHA . VALID LPAREN RPAREN
    (253) funcionesCP -> VARIABLE FLECHA . COUNT LPAREN RPAREN
    (254) funcionesCP -> VARIABLE FLECHA . NEXT LPAREN RPAREN
    (255) funcionesCP -> VARIABLE FLECHA . CURRENT LPAREN RPAREN

    PUSH            shift and go to state 250
    ENQUEUE         shift and go to state 251
    DEQUEUE         shift and go to state 252
    POP             shift and go to state 253
    REWIND          shift and go to state 254
    VALID           shift and go to state 255
    COUNT           shift and go to state 256
    NEXT            shift and go to state 257
    CURRENT         shift and go to state 258


state 135

    (242) aumentoCasting -> VARIABLE incrementos_mat . tipoDato SEMI
    (246) aumentoCasting -> VARIABLE incrementos_mat . VARIABLE SEMI
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 259
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 260
    numero                         shift and go to state 106

state 136

    (245) aumentoCasting -> VARIABLE operadores . tipoDato condicion_booleana valor
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 261
    numero                         shift and go to state 106

state 137

    (135) incrementos_mat -> MINUS_EQUAL .

    VARIABLE        reduce using rule 135 (incrementos_mat -> MINUS_EQUAL .)
    CADENA          reduce using rule 135 (incrementos_mat -> MINUS_EQUAL .)
    BOOLEANO        reduce using rule 135 (incrementos_mat -> MINUS_EQUAL .)
    ENTERO          reduce using rule 135 (incrementos_mat -> MINUS_EQUAL .)
    DECIMAL         reduce using rule 135 (incrementos_mat -> MINUS_EQUAL .)


state 138

    (136) incrementos_mat -> MOD_EQUAL .

    VARIABLE        reduce using rule 136 (incrementos_mat -> MOD_EQUAL .)
    CADENA          reduce using rule 136 (incrementos_mat -> MOD_EQUAL .)
    BOOLEANO        reduce using rule 136 (incrementos_mat -> MOD_EQUAL .)
    ENTERO          reduce using rule 136 (incrementos_mat -> MOD_EQUAL .)
    DECIMAL         reduce using rule 136 (incrementos_mat -> MOD_EQUAL .)


state 139

    (137) incrementos_mat -> MUL_EQUAL .

    VARIABLE        reduce using rule 137 (incrementos_mat -> MUL_EQUAL .)
    CADENA          reduce using rule 137 (incrementos_mat -> MUL_EQUAL .)
    BOOLEANO        reduce using rule 137 (incrementos_mat -> MUL_EQUAL .)
    ENTERO          reduce using rule 137 (incrementos_mat -> MUL_EQUAL .)
    DECIMAL         reduce using rule 137 (incrementos_mat -> MUL_EQUAL .)


state 140

    (138) incrementos_mat -> PLUS_EQUAL .

    VARIABLE        reduce using rule 138 (incrementos_mat -> PLUS_EQUAL .)
    CADENA          reduce using rule 138 (incrementos_mat -> PLUS_EQUAL .)
    BOOLEANO        reduce using rule 138 (incrementos_mat -> PLUS_EQUAL .)
    ENTERO          reduce using rule 138 (incrementos_mat -> PLUS_EQUAL .)
    DECIMAL         reduce using rule 138 (incrementos_mat -> PLUS_EQUAL .)


state 141

    (139) incrementos_mat -> DIV_EQUAL .

    VARIABLE        reduce using rule 139 (incrementos_mat -> DIV_EQUAL .)
    CADENA          reduce using rule 139 (incrementos_mat -> DIV_EQUAL .)
    BOOLEANO        reduce using rule 139 (incrementos_mat -> DIV_EQUAL .)
    ENTERO          reduce using rule 139 (incrementos_mat -> DIV_EQUAL .)
    DECIMAL         reduce using rule 139 (incrementos_mat -> DIV_EQUAL .)


state 142

    (128) operadores -> MULTIPLICACION .

    CADENA          reduce using rule 128 (operadores -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 128 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 128 (operadores -> MULTIPLICACION .)
    DECIMAL         reduce using rule 128 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 128 (operadores -> MULTIPLICACION .)
    LPAREN          reduce using rule 128 (operadores -> MULTIPLICACION .)


state 143

    (129) operadores -> DIVISION .

    CADENA          reduce using rule 129 (operadores -> DIVISION .)
    BOOLEANO        reduce using rule 129 (operadores -> DIVISION .)
    ENTERO          reduce using rule 129 (operadores -> DIVISION .)
    DECIMAL         reduce using rule 129 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 129 (operadores -> DIVISION .)
    LPAREN          reduce using rule 129 (operadores -> DIVISION .)


state 144

    (130) operadores -> MODULO .

    CADENA          reduce using rule 130 (operadores -> MODULO .)
    BOOLEANO        reduce using rule 130 (operadores -> MODULO .)
    ENTERO          reduce using rule 130 (operadores -> MODULO .)
    DECIMAL         reduce using rule 130 (operadores -> MODULO .)
    VARIABLE        reduce using rule 130 (operadores -> MODULO .)
    LPAREN          reduce using rule 130 (operadores -> MODULO .)


state 145

    (73) imprimir -> VAR_DUMP LPAREN . VARIABLE RPAREN SEMI
    (74) imprimir -> VAR_DUMP LPAREN . arrayvalues RPAREN SEMI
    (267) arrayvalues -> . ARRAY_VALUES LPAREN VARIABLE RPAREN

    VARIABLE        shift and go to state 262
    ARRAY_VALUES    shift and go to state 242

    arrayvalues                    shift and go to state 263

state 146

    (75) imprimir -> PRINT_R LPAREN . arraysearch RPAREN SEMI
    (76) imprimir -> PRINT_R LPAREN . VARIABLE RPAREN SEMI
    (77) imprimir -> PRINT_R LPAREN . arrayvalues RPAREN SEMI
    (268) arraysearch -> . ARRAY_SEARCH LPAREN valor COMMA VARIABLE RPAREN
    (267) arrayvalues -> . ARRAY_VALUES LPAREN VARIABLE RPAREN

    VARIABLE        shift and go to state 265
    ARRAY_SEARCH    shift and go to state 243
    ARRAY_VALUES    shift and go to state 242

    arraysearch                    shift and go to state 264
    arrayvalues                    shift and go to state 266

state 147

    (37) asignacion -> VAR asignacion .

    $end            reduce using rule 37 (asignacion -> VAR asignacion .)
    RBRACE          reduce using rule 37 (asignacion -> VAR asignacion .)
    SEMI            reduce using rule 37 (asignacion -> VAR asignacion .)
    BREAK           reduce using rule 37 (asignacion -> VAR asignacion .)
    RPAREN          reduce using rule 37 (asignacion -> VAR asignacion .)
    COMMA           reduce using rule 37 (asignacion -> VAR asignacion .)
    VARIABLE        reduce using rule 37 (asignacion -> VAR asignacion .)
    LPAREN          reduce using rule 37 (asignacion -> VAR asignacion .)
    CADENA          reduce using rule 37 (asignacion -> VAR asignacion .)
    BOOLEANO        reduce using rule 37 (asignacion -> VAR asignacion .)
    ENTERO          reduce using rule 37 (asignacion -> VAR asignacion .)
    DECIMAL         reduce using rule 37 (asignacion -> VAR asignacion .)


state 148

    (36) asignacion -> VARIABLE . EQUALS valor SEMI
    (39) asignacion -> VARIABLE . EQUALS brand
    (40) asignacion -> VARIABLE . EQUALS escribir
    (41) asignacion -> VARIABLE . EQUALS btrim
    (42) asignacion -> VARIABLE . EQUALS lectura
    (43) asignacion -> VARIABLE . EQUALS bconcat
    (45) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (47) asignacion -> VARIABLE . EQUALS llamada_funcion
    (48) asignacion -> VARIABLE . EQUALS arrayvalues SEMI
    (49) asignacion -> VARIABLE . EQUALS arraysearch SEMI
    (50) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (242) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (135) incrementos_mat -> . MINUS_EQUAL
    (136) incrementos_mat -> . MOD_EQUAL
    (137) incrementos_mat -> . MUL_EQUAL
    (138) incrementos_mat -> . PLUS_EQUAL
    (139) incrementos_mat -> . DIV_EQUAL
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    EQUALS          shift and go to state 267
    MINUS_EQUAL     shift and go to state 137
    MOD_EQUAL       shift and go to state 138
    MUL_EQUAL       shift and go to state 139
    PLUS_EQUAL      shift and go to state 140
    DIV_EQUAL       shift and go to state 141
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    incrementos_mat                shift and go to state 135
    operadores                     shift and go to state 136

state 149

    (38) asignacion -> proteccion . asignacion
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 148
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    proteccion                     shift and go to state 149
    asignacion                     shift and go to state 150
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 150

    (38) asignacion -> proteccion asignacion .

    $end            reduce using rule 38 (asignacion -> proteccion asignacion .)
    RBRACE          reduce using rule 38 (asignacion -> proteccion asignacion .)
    SEMI            reduce using rule 38 (asignacion -> proteccion asignacion .)
    BREAK           reduce using rule 38 (asignacion -> proteccion asignacion .)
    RPAREN          reduce using rule 38 (asignacion -> proteccion asignacion .)
    COMMA           reduce using rule 38 (asignacion -> proteccion asignacion .)
    VARIABLE        reduce using rule 38 (asignacion -> proteccion asignacion .)
    LPAREN          reduce using rule 38 (asignacion -> proteccion asignacion .)
    CADENA          reduce using rule 38 (asignacion -> proteccion asignacion .)
    BOOLEANO        reduce using rule 38 (asignacion -> proteccion asignacion .)
    ENTERO          reduce using rule 38 (asignacion -> proteccion asignacion .)
    DECIMAL         reduce using rule 38 (asignacion -> proteccion asignacion .)


state 151

    (158) funciones -> proteccion funcion_nparams .

    $end            reduce using rule 158 (funciones -> proteccion funcion_nparams .)
    RBRACE          reduce using rule 158 (funciones -> proteccion funcion_nparams .)
    SEMI            reduce using rule 158 (funciones -> proteccion funcion_nparams .)
    BREAK           reduce using rule 158 (funciones -> proteccion funcion_nparams .)


state 152

    (160) funciones -> proteccion funcion_blank .

    $end            reduce using rule 160 (funciones -> proteccion funcion_blank .)
    RBRACE          reduce using rule 160 (funciones -> proteccion funcion_blank .)
    SEMI            reduce using rule 160 (funciones -> proteccion funcion_blank .)
    BREAK           reduce using rule 160 (funciones -> proteccion funcion_blank .)


state 153

    (164) funcion_nparams -> FUNCTION . NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> FUNCTION . NOMBRE LPAREN RPAREN LBRACE empty RBRACE

    NOMBRE          shift and go to state 268


state 154

    (262) constante -> DEFINE LPAREN . CADENA COMMA valor RPAREN SEMI
    (263) constante -> DEFINE LPAREN . NOMBRE COMMA ARRAY RPAREN SEMI

    CADENA          shift and go to state 269
    NOMBRE          shift and go to state 270


state 155

    (225) bconcat -> CADENA CONCAT . CADENA SEMI

    CADENA          shift and go to state 271


state 156

    (228) bconcat -> CADENA CONCAT_EQUAL . CADENA SEMI

    CADENA          shift and go to state 272


state 157

    (189) lectura -> READLINE LPAREN . CADENA RPAREN SEMI
    (190) lectura -> READLINE LPAREN . RPAREN SEMI

    CADENA          shift and go to state 273
    RPAREN          shift and go to state 274


state 158

    (83) condicion_ifelse -> condicion_if condicion_else .

    $end            reduce using rule 83 (condicion_ifelse -> condicion_if condicion_else .)
    RBRACE          reduce using rule 83 (condicion_ifelse -> condicion_if condicion_else .)
    SEMI            reduce using rule 83 (condicion_ifelse -> condicion_if condicion_else .)
    BREAK           reduce using rule 83 (condicion_ifelse -> condicion_if condicion_else .)


state 159

    (84) condicion_ifelse -> condicion_if condicion_elseif .
    (85) condicion_ifelse -> condicion_if condicion_elseif . condicion_else
    (81) condicion_else -> . ELSE LBRACE cuerpo RBRACE

    $end            reduce using rule 84 (condicion_ifelse -> condicion_if condicion_elseif .)
    RBRACE          reduce using rule 84 (condicion_ifelse -> condicion_if condicion_elseif .)
    SEMI            reduce using rule 84 (condicion_ifelse -> condicion_if condicion_elseif .)
    BREAK           reduce using rule 84 (condicion_ifelse -> condicion_if condicion_elseif .)
    ELSE            shift and go to state 160

    condicion_else                 shift and go to state 275

state 160

    (81) condicion_else -> ELSE . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 276


state 161

    (80) condicion_elseif -> ELSEIF . LPAREN condicion RPAREN LBRACE cuerpo RBRACE

    LPAREN          shift and go to state 277


state 162

    (113) bwhile -> WHILE LPAREN . condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> WHILE LPAREN . condicion RPAREN COLON stc_bloque
    (115) bwhile -> WHILE LPAREN . condicion RPAREN SEMI
    (86) condicion -> . VARIABLE operador_logico VARIABLE
    (87) condicion -> . valor operador_logico valor
    (88) condicion -> . VARIABLE operador_logico valor
    (89) condicion -> . VARIABLE condicion_booleana VARIABLE
    (90) condicion -> . valor condicion_booleana valor
    (91) condicion -> . VARIABLE condicion_booleana valor
    (92) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (93) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (94) condicion -> . condicion condicion_booleana condicion
    (95) condicion -> . condicion condicion_booleana comprobacion
    (96) condicion -> . aumentoCasting
    (97) condicion -> . VARIABLE
    (98) condicion -> . funcionesCP
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 280
    LPAREN          shift and go to state 278
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    condicion                      shift and go to state 279
    valor                          shift and go to state 281
    aumentoCasting                 shift and go to state 282
    funcionesCP                    shift and go to state 283
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 163

    (211) simbolos -> LBRACE RBRACE .

    $end            reduce using rule 211 (simbolos -> LBRACE RBRACE .)
    RBRACE          reduce using rule 211 (simbolos -> LBRACE RBRACE .)
    SEMI            reduce using rule 211 (simbolos -> LBRACE RBRACE .)
    BREAK           reduce using rule 211 (simbolos -> LBRACE RBRACE .)


state 164

    (213) simbolos -> RBRACE instrucciones .

    $end            reduce using rule 213 (simbolos -> RBRACE instrucciones .)
    RBRACE          reduce using rule 213 (simbolos -> RBRACE instrucciones .)
    SEMI            reduce using rule 213 (simbolos -> RBRACE instrucciones .)
    BREAK           reduce using rule 213 (simbolos -> RBRACE instrucciones .)


state 165

    (217) instrucciones -> condicion_else .

    RBRACE          reduce using rule 217 (instrucciones -> condicion_else .)
    SEMI            reduce using rule 217 (instrucciones -> condicion_else .)
    $end            reduce using rule 217 (instrucciones -> condicion_else .)
    BREAK           reduce using rule 217 (instrucciones -> condicion_else .)


state 166

    (218) instrucciones -> condicion_elseif .

    RBRACE          reduce using rule 218 (instrucciones -> condicion_elseif .)
    SEMI            reduce using rule 218 (instrucciones -> condicion_elseif .)
    $end            reduce using rule 218 (instrucciones -> condicion_elseif .)
    BREAK           reduce using rule 218 (instrucciones -> condicion_elseif .)


state 167

    (219) instrucciones -> bwhile .

    RBRACE          reduce using rule 219 (instrucciones -> bwhile .)
    SEMI            reduce using rule 219 (instrucciones -> bwhile .)
    $end            reduce using rule 219 (instrucciones -> bwhile .)
    BREAK           reduce using rule 219 (instrucciones -> bwhile .)


state 168

    (220) instrucciones -> bfor .

    RBRACE          reduce using rule 220 (instrucciones -> bfor .)
    SEMI            reduce using rule 220 (instrucciones -> bfor .)
    $end            reduce using rule 220 (instrucciones -> bfor .)
    BREAK           reduce using rule 220 (instrucciones -> bfor .)


state 169

    (221) instrucciones -> funciones .

    RBRACE          reduce using rule 221 (instrucciones -> funciones .)
    SEMI            reduce using rule 221 (instrucciones -> funciones .)
    $end            reduce using rule 221 (instrucciones -> funciones .)
    BREAK           reduce using rule 221 (instrucciones -> funciones .)


state 170

    (222) instrucciones -> bswitch .

    RBRACE          reduce using rule 222 (instrucciones -> bswitch .)
    SEMI            reduce using rule 222 (instrucciones -> bswitch .)
    $end            reduce using rule 222 (instrucciones -> bswitch .)
    BREAK           reduce using rule 222 (instrucciones -> bswitch .)


state 171

    (223) instrucciones -> bdo .

    RBRACE          reduce using rule 223 (instrucciones -> bdo .)
    SEMI            reduce using rule 223 (instrucciones -> bdo .)
    $end            reduce using rule 223 (instrucciones -> bdo .)
    BREAK           reduce using rule 223 (instrucciones -> bdo .)


state 172

    (224) instrucciones -> catches .
    (124) catches -> catches . CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def

    RBRACE          reduce using rule 224 (instrucciones -> catches .)
    SEMI            reduce using rule 224 (instrucciones -> catches .)
    $end            reduce using rule 224 (instrucciones -> catches .)
    BREAK           reduce using rule 224 (instrucciones -> catches .)
    CATCH           shift and go to state 284


state 173

    (158) funciones -> proteccion . funcion_nparams
    (160) funciones -> proteccion . funcion_blank
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE

    FUNCTION        shift and go to state 153

    funcion_nparams                shift and go to state 151
    funcion_blank                  shift and go to state 152

state 174

    (125) catches -> empty .

    CATCH           reduce using rule 125 (catches -> empty .)
    RBRACE          reduce using rule 125 (catches -> empty .)
    SEMI            reduce using rule 125 (catches -> empty .)
    $end            reduce using rule 125 (catches -> empty .)
    BREAK           reduce using rule 125 (catches -> empty .)


state 175

    (117) bdo -> DO LBRACE . cuerpo RBRACE bwhile
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (59) imprimir -> . ECHO valor SEMI
    (60) imprimir -> . PRINT valor SEMI
    (61) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (62) imprimir -> . PRINT bconcat
    (63) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (64) imprimir -> . ECHO bconcat
    (65) imprimir -> . ECHO operaciones_mat SEMI
    (66) imprimir -> . PRINT operaciones_mat SEMI
    (67) imprimir -> . ECHO VARIABLE SEMI
    (68) imprimir -> . PRINT VARIABLE SEMI
    (69) imprimir -> . ECHO funcionesCP_semi
    (70) imprimir -> . PRINT funcionesCP_semi
    (71) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (72) imprimir -> . ECHO poppila
    (73) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . VAR_DUMP LPAREN arrayvalues RPAREN SEMI
    (75) imprimir -> . PRINT_R LPAREN arraysearch RPAREN SEMI
    (76) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (77) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (157) funciones -> . funcion_nparams
    (158) funciones -> . proteccion funcion_nparams
    (159) funciones -> . funcion_blank
    (160) funciones -> . proteccion funcion_blank
    (161) funciones -> . funcion_void
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (262) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (263) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) condicion_ifelse -> . condicion_if
    (83) condicion_ifelse -> . condicion_if condicion_else
    (84) condicion_ifelse -> . condicion_if condicion_elseif
    (85) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .
    (117) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (99) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (110) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (111) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (112) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (123) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (118) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON
    (195) bgoto -> . GOTO NOMBRE SEMI
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (196) bcortes -> . EXIT SEMI
    (197) bcortes -> . BREAK SEMI
    (198) bcortes -> . DEFAULT SEMI
    (199) bcortes -> . CONTINUE SEMI
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (200) otros -> . SMALLER NOMBRE GREATER
    (201) otros -> . SMALLER DIVISION NOMBRE GREATER
    (202) otros -> . NOMBRE COLON
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (193) comment -> . COMENTARIOS
    (194) comment -> . DOC_COMENTARIOS
    (240) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (241) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (205) simbolos -> . LPAREN RPAREN
    (206) simbolos -> . LPAREN
    (207) simbolos -> . RPAREN
    (208) simbolos -> . LBRACKET RBRACKET
    (209) simbolos -> . LBRACKET
    (210) simbolos -> . RBRACKET
    (211) simbolos -> . LBRACE RBRACE
    (212) simbolos -> . LBRACE
    (213) simbolos -> . RBRACE instrucciones
    (214) simbolos -> . OPEN_TAG CLOSE_TAG
    (215) simbolos -> . OPEN_TAG
    (216) simbolos -> . CLOSE_TAG
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (248) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> . VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (264) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (265) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI
    (250) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (78) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (187) empty -> .
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 116 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 187 (empty -> .) ]

    cuerpo                         shift and go to state 285
    bwhile                         shift and go to state 9
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 176

    (99) bfor -> FOR LPAREN . asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 148
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    asignacion                     shift and go to state 286
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 177

    (112) bforeach -> FOREACH LPAREN . VARIABLE AS VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 287


state 178

    (123) btry -> TRY LBRACE . stc_bloque_def RBRACE catches
    (102) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (103) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 288

    stc_bloque_def                 shift and go to state 289

state 179

    (118) bswitch -> SWITCH LPAREN . VARIABLE RPAREN LBRACE innerSwitch RBRACE

    VARIABLE        shift and go to state 290


state 180

    (119) bcase -> CASE ENTERO . COLON

    COLON           shift and go to state 291


state 181

    (120) bcase -> CASE CADENA . COLON

    COLON           shift and go to state 292


state 182

    (195) bgoto -> GOTO NOMBRE . SEMI

    SEMI            shift and go to state 293


state 183

    (196) bcortes -> EXIT SEMI .

    $end            reduce using rule 196 (bcortes -> EXIT SEMI .)
    RBRACE          reduce using rule 196 (bcortes -> EXIT SEMI .)
    SEMI            reduce using rule 196 (bcortes -> EXIT SEMI .)
    BREAK           reduce using rule 196 (bcortes -> EXIT SEMI .)


state 184

    (197) bcortes -> BREAK SEMI .

    $end            reduce using rule 197 (bcortes -> BREAK SEMI .)
    RBRACE          reduce using rule 197 (bcortes -> BREAK SEMI .)
    SEMI            reduce using rule 197 (bcortes -> BREAK SEMI .)
    BREAK           reduce using rule 197 (bcortes -> BREAK SEMI .)


state 185

    (198) bcortes -> DEFAULT SEMI .

    $end            reduce using rule 198 (bcortes -> DEFAULT SEMI .)
    RBRACE          reduce using rule 198 (bcortes -> DEFAULT SEMI .)
    SEMI            reduce using rule 198 (bcortes -> DEFAULT SEMI .)
    BREAK           reduce using rule 198 (bcortes -> DEFAULT SEMI .)


state 186

    (199) bcortes -> CONTINUE SEMI .

    $end            reduce using rule 199 (bcortes -> CONTINUE SEMI .)
    RBRACE          reduce using rule 199 (bcortes -> CONTINUE SEMI .)
    SEMI            reduce using rule 199 (bcortes -> CONTINUE SEMI .)
    BREAK           reduce using rule 199 (bcortes -> CONTINUE SEMI .)


state 187

    (172) brand -> RAND LPAREN . ENTERO COMMA ENTERO RPAREN SEMI

    ENTERO          shift and go to state 294


state 188

    (191) escribir -> FWRITE LPAREN . NOMBRE COMMA CADENA RPAREN SEMI

    NOMBRE          shift and go to state 295


state 189

    (192) btrim -> TRIM LPAREN . NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 296


state 190

    (200) otros -> SMALLER NOMBRE . GREATER

    GREATER         shift and go to state 297


state 191

    (201) otros -> SMALLER DIVISION . NOMBRE GREATER

    NOMBRE          shift and go to state 298


state 192

    (178) breturn -> RETURN SEMI .

    RBRACE          reduce using rule 178 (breturn -> RETURN SEMI .)
    $end            reduce using rule 178 (breturn -> RETURN SEMI .)
    SEMI            reduce using rule 178 (breturn -> RETURN SEMI .)
    BREAK           reduce using rule 178 (breturn -> RETURN SEMI .)


state 193

    (179) breturn -> RETURN NULL . SEMI

    SEMI            shift and go to state 299


state 194

    (180) breturn -> RETURN VARIABLE . SEMI

    SEMI            shift and go to state 300


state 195

    (181) breturn -> RETURN BOOLEANO . SEMI

    SEMI            shift and go to state 301


state 196

    (214) simbolos -> OPEN_TAG CLOSE_TAG .

    $end            reduce using rule 214 (simbolos -> OPEN_TAG CLOSE_TAG .)
    RBRACE          reduce using rule 214 (simbolos -> OPEN_TAG CLOSE_TAG .)
    SEMI            reduce using rule 214 (simbolos -> OPEN_TAG CLOSE_TAG .)
    BREAK           reduce using rule 214 (simbolos -> OPEN_TAG CLOSE_TAG .)


state 197

    (257) funcionesCP_semi -> funcionesCP SEMI .

    $end            reduce using rule 257 (funcionesCP_semi -> funcionesCP SEMI .)
    COMMA           reduce using rule 257 (funcionesCP_semi -> funcionesCP SEMI .)
    RBRACE          reduce using rule 257 (funcionesCP_semi -> funcionesCP SEMI .)
    SEMI            reduce using rule 257 (funcionesCP_semi -> funcionesCP SEMI .)
    BREAK           reduce using rule 257 (funcionesCP_semi -> funcionesCP SEMI .)


state 198

    (264) arraypop -> ARRAY_POP LPAREN . VARIABLE RPAREN SEMI

    VARIABLE        shift and go to state 302


state 199

    (265) arraypush -> ARRAY_PUSH LPAREN . VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> ARRAY_PUSH LPAREN . VARIABLE COMMA VARIABLE RPAREN SEMI

    VARIABLE        shift and go to state 303


state 200

    (164) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> FUNCTION NOMBRE . LPAREN RPAREN COLON VOID LBRACE empty RBRACE

    LPAREN          shift and go to state 304


state 201

    (78) condicion_if -> IF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> IF LPAREN . condicion RPAREN llamada_funcion
    (86) condicion -> . VARIABLE operador_logico VARIABLE
    (87) condicion -> . valor operador_logico valor
    (88) condicion -> . VARIABLE operador_logico valor
    (89) condicion -> . VARIABLE condicion_booleana VARIABLE
    (90) condicion -> . valor condicion_booleana valor
    (91) condicion -> . VARIABLE condicion_booleana valor
    (92) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (93) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (94) condicion -> . condicion condicion_booleana condicion
    (95) condicion -> . condicion condicion_booleana comprobacion
    (96) condicion -> . aumentoCasting
    (97) condicion -> . VARIABLE
    (98) condicion -> . funcionesCP
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 280
    LPAREN          shift and go to state 278
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    condicion                      shift and go to state 305
    valor                          shift and go to state 281
    aumentoCasting                 shift and go to state 282
    funcionesCP                    shift and go to state 283
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 202

    (59) imprimir -> ECHO valor SEMI .

    $end            reduce using rule 59 (imprimir -> ECHO valor SEMI .)
    RBRACE          reduce using rule 59 (imprimir -> ECHO valor SEMI .)
    SEMI            reduce using rule 59 (imprimir -> ECHO valor SEMI .)
    BREAK           reduce using rule 59 (imprimir -> ECHO valor SEMI .)


state 203

    (147) operaciones_mat -> valor operadores . valor
    (148) operaciones_mat -> valor operadores . operaciones_mat
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (147) operaciones_mat -> . valor operadores valor
    (148) operaciones_mat -> . valor operadores operaciones_mat
    (149) operaciones_mat -> . VARIABLE operadores VARIABLE
    (150) operaciones_mat -> . operaciones_mat_par
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (151) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (152) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (156) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 308
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    LPAREN          shift and go to state 105
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 306
    operaciones_mat                shift and go to state 307
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    operaciones_mat_par            shift and go to state 104
    numero                         shift and go to state 106

state 204

    (126) operadores -> SUMA .

    VARIABLE        reduce using rule 126 (operadores -> SUMA .)
    CADENA          reduce using rule 126 (operadores -> SUMA .)
    BOOLEANO        reduce using rule 126 (operadores -> SUMA .)
    LPAREN          reduce using rule 126 (operadores -> SUMA .)
    ENTERO          reduce using rule 126 (operadores -> SUMA .)
    DECIMAL         reduce using rule 126 (operadores -> SUMA .)


state 205

    (127) operadores -> RESTA .

    VARIABLE        reduce using rule 127 (operadores -> RESTA .)
    CADENA          reduce using rule 127 (operadores -> RESTA .)
    BOOLEANO        reduce using rule 127 (operadores -> RESTA .)
    LPAREN          reduce using rule 127 (operadores -> RESTA .)
    ENTERO          reduce using rule 127 (operadores -> RESTA .)
    DECIMAL         reduce using rule 127 (operadores -> RESTA .)


state 206

    (63) imprimir -> ECHO NOMBRE LBRACKET . ENTERO RBRACKET SEMI

    ENTERO          shift and go to state 309


state 207

    (65) imprimir -> ECHO operaciones_mat SEMI .

    $end            reduce using rule 65 (imprimir -> ECHO operaciones_mat SEMI .)
    RBRACE          reduce using rule 65 (imprimir -> ECHO operaciones_mat SEMI .)
    SEMI            reduce using rule 65 (imprimir -> ECHO operaciones_mat SEMI .)
    BREAK           reduce using rule 65 (imprimir -> ECHO operaciones_mat SEMI .)


state 208

    (67) imprimir -> ECHO VARIABLE SEMI .

    $end            reduce using rule 67 (imprimir -> ECHO VARIABLE SEMI .)
    RBRACE          reduce using rule 67 (imprimir -> ECHO VARIABLE SEMI .)
    SEMI            reduce using rule 67 (imprimir -> ECHO VARIABLE SEMI .)
    BREAK           reduce using rule 67 (imprimir -> ECHO VARIABLE SEMI .)


state 209

    (149) operaciones_mat -> VARIABLE operadores . VARIABLE

    VARIABLE        shift and go to state 310


state 210

    (250) poppila -> VARIABLE FLECHA . POP LPAREN RPAREN SEMI
    (251) funcionesCP -> VARIABLE FLECHA . REWIND LPAREN RPAREN
    (252) funcionesCP -> VARIABLE FLECHA . VALID LPAREN RPAREN
    (253) funcionesCP -> VARIABLE FLECHA . COUNT LPAREN RPAREN
    (254) funcionesCP -> VARIABLE FLECHA . NEXT LPAREN RPAREN
    (255) funcionesCP -> VARIABLE FLECHA . CURRENT LPAREN RPAREN

    POP             shift and go to state 253
    REWIND          shift and go to state 254
    VALID           shift and go to state 255
    COUNT           shift and go to state 256
    NEXT            shift and go to state 257
    CURRENT         shift and go to state 258


state 211

    (188) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI

    NEW             shift and go to state 238


state 212

    (71) imprimir -> ECHO funcionesCP_semi COMMA . NOMBRE SEMI

    NOMBRE          shift and go to state 311


state 213

    (151) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (152) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 312

state 214

    (153) operaciones_mat_par -> LPAREN VARIABLE . operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> LPAREN VARIABLE . operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> LPAREN VARIABLE . operadores tipoDato RPAREN
    (156) operaciones_mat_par -> LPAREN VARIABLE . operadores tipoDato RPAREN operadores tipoDato
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    EQUALS          shift and go to state 211
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 313

state 215

    (55) tipoDato -> CADENA .

    SUMA            reduce using rule 55 (tipoDato -> CADENA .)
    RESTA           reduce using rule 55 (tipoDato -> CADENA .)
    MULTIPLICACION  reduce using rule 55 (tipoDato -> CADENA .)
    DIVISION        reduce using rule 55 (tipoDato -> CADENA .)
    MODULO          reduce using rule 55 (tipoDato -> CADENA .)
    RPAREN          reduce using rule 55 (tipoDato -> CADENA .)
    SEMI            reduce using rule 55 (tipoDato -> CADENA .)
    AND             reduce using rule 55 (tipoDato -> CADENA .)
    OR              reduce using rule 55 (tipoDato -> CADENA .)
    XOR             reduce using rule 55 (tipoDato -> CADENA .)
    IS_EQUAL        reduce using rule 55 (tipoDato -> CADENA .)
    IS_NOT_EQUAL    reduce using rule 55 (tipoDato -> CADENA .)
    IS_IDENTICAL    reduce using rule 55 (tipoDato -> CADENA .)
    IS_NOT_IDENTICAL reduce using rule 55 (tipoDato -> CADENA .)
    SMALLER         reduce using rule 55 (tipoDato -> CADENA .)
    GREATER         reduce using rule 55 (tipoDato -> CADENA .)
    IS_SMALLER_OR_EQUAL reduce using rule 55 (tipoDato -> CADENA .)
    IS_GREATER_OR_EQUAL reduce using rule 55 (tipoDato -> CADENA .)
    COMMA           reduce using rule 55 (tipoDato -> CADENA .)
    $end            reduce using rule 55 (tipoDato -> CADENA .)
    RBRACE          reduce using rule 55 (tipoDato -> CADENA .)
    BREAK           reduce using rule 55 (tipoDato -> CADENA .)
    VARIABLE        reduce using rule 55 (tipoDato -> CADENA .)
    LPAREN          reduce using rule 55 (tipoDato -> CADENA .)
    CADENA          reduce using rule 55 (tipoDato -> CADENA .)
    BOOLEANO        reduce using rule 55 (tipoDato -> CADENA .)
    ENTERO          reduce using rule 55 (tipoDato -> CADENA .)
    DECIMAL         reduce using rule 55 (tipoDato -> CADENA .)


state 216

    (60) imprimir -> PRINT valor SEMI .

    $end            reduce using rule 60 (imprimir -> PRINT valor SEMI .)
    RBRACE          reduce using rule 60 (imprimir -> PRINT valor SEMI .)
    SEMI            reduce using rule 60 (imprimir -> PRINT valor SEMI .)
    BREAK           reduce using rule 60 (imprimir -> PRINT valor SEMI .)


state 217

    (61) imprimir -> PRINT LPAREN valor . RPAREN SEMI
    (151) operaciones_mat_par -> LPAREN valor . operadores valor RPAREN
    (152) operaciones_mat_par -> LPAREN valor . operadores operaciones_mat_par RPAREN
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    RPAREN          shift and go to state 314
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 312

state 218

    (66) imprimir -> PRINT operaciones_mat SEMI .

    $end            reduce using rule 66 (imprimir -> PRINT operaciones_mat SEMI .)
    RBRACE          reduce using rule 66 (imprimir -> PRINT operaciones_mat SEMI .)
    SEMI            reduce using rule 66 (imprimir -> PRINT operaciones_mat SEMI .)
    BREAK           reduce using rule 66 (imprimir -> PRINT operaciones_mat SEMI .)


state 219

    (68) imprimir -> PRINT VARIABLE SEMI .

    $end            reduce using rule 68 (imprimir -> PRINT VARIABLE SEMI .)
    RBRACE          reduce using rule 68 (imprimir -> PRINT VARIABLE SEMI .)
    SEMI            reduce using rule 68 (imprimir -> PRINT VARIABLE SEMI .)
    BREAK           reduce using rule 68 (imprimir -> PRINT VARIABLE SEMI .)


state 220

    (251) funcionesCP -> VARIABLE FLECHA . REWIND LPAREN RPAREN
    (252) funcionesCP -> VARIABLE FLECHA . VALID LPAREN RPAREN
    (253) funcionesCP -> VARIABLE FLECHA . COUNT LPAREN RPAREN
    (254) funcionesCP -> VARIABLE FLECHA . NEXT LPAREN RPAREN
    (255) funcionesCP -> VARIABLE FLECHA . CURRENT LPAREN RPAREN

    REWIND          shift and go to state 254
    VALID           shift and go to state 255
    COUNT           shift and go to state 256
    NEXT            shift and go to state 257
    CURRENT         shift and go to state 258


state 221

    (241) casting -> LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 315


state 222

    (171) llamada_funcion -> NOMBRE LPAREN params_list . RPAREN SEMI
    (165) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 316
    COMMA           shift and go to state 317


state 223

    (166) params_list -> param .

    RPAREN          reduce using rule 166 (params_list -> param .)
    COMMA           reduce using rule 166 (params_list -> param .)


state 224

    (167) params_list -> empty .

    RPAREN          reduce using rule 167 (params_list -> empty .)
    COMMA           reduce using rule 167 (params_list -> empty .)


state 225

    (162) param -> VARIABLE .
    (36) asignacion -> VARIABLE . EQUALS valor SEMI
    (39) asignacion -> VARIABLE . EQUALS brand
    (40) asignacion -> VARIABLE . EQUALS escribir
    (41) asignacion -> VARIABLE . EQUALS btrim
    (42) asignacion -> VARIABLE . EQUALS lectura
    (43) asignacion -> VARIABLE . EQUALS bconcat
    (45) asignacion -> VARIABLE . EQUALS operaciones_mat SEMI
    (47) asignacion -> VARIABLE . EQUALS llamada_funcion
    (48) asignacion -> VARIABLE . EQUALS arrayvalues SEMI
    (49) asignacion -> VARIABLE . EQUALS arraysearch SEMI
    (50) asignacion_array -> VARIABLE . EQUALS array_def SEMI
    (242) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (135) incrementos_mat -> . MINUS_EQUAL
    (136) incrementos_mat -> . MOD_EQUAL
    (137) incrementos_mat -> . MUL_EQUAL
    (138) incrementos_mat -> . PLUS_EQUAL
    (139) incrementos_mat -> . DIV_EQUAL
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    RPAREN          reduce using rule 162 (param -> VARIABLE .)
    COMMA           reduce using rule 162 (param -> VARIABLE .)
    EQUALS          shift and go to state 267
    MINUS_EQUAL     shift and go to state 137
    MOD_EQUAL       shift and go to state 138
    MUL_EQUAL       shift and go to state 139
    PLUS_EQUAL      shift and go to state 140
    DIV_EQUAL       shift and go to state 141
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    incrementos_mat                shift and go to state 135
    operadores                     shift and go to state 136

state 226

    (163) param -> asignacion .

    RPAREN          reduce using rule 163 (param -> asignacion .)
    COMMA           reduce using rule 163 (param -> asignacion .)


state 227

    (243) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores tipoDato SEMI
    (244) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores VARIABLE operadores operaciones_mat_par SEMI
    (226) bconcat -> VARIABLE . CONCAT CADENA SEMI
    (227) bconcat -> VARIABLE . CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> VARIABLE . CONCAT VARIABLE SEMI
    (230) bconcat -> VARIABLE . CONCAT CADENA CONCAT VARIABLE SEMI
    (149) operaciones_mat -> VARIABLE . operadores VARIABLE
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    CONCAT          shift and go to state 132
    CONCAT_EQUAL    shift and go to state 133
    EQUALS          shift and go to state 211
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 318

state 228

    (36) asignacion -> VARIABLE EQUALS valor . SEMI
    (147) operaciones_mat -> valor . operadores valor
    (148) operaciones_mat -> valor . operadores operaciones_mat
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SEMI            shift and go to state 319
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 203

state 229

    (39) asignacion -> VARIABLE EQUALS brand .

    $end            reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    RBRACE          reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    SEMI            reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    BREAK           reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    RPAREN          reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    COMMA           reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    VARIABLE        reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    LPAREN          reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    CADENA          reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    BOOLEANO        reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    ENTERO          reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)
    DECIMAL         reduce using rule 39 (asignacion -> VARIABLE EQUALS brand .)


state 230

    (40) asignacion -> VARIABLE EQUALS escribir .

    $end            reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    RBRACE          reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    SEMI            reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    BREAK           reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    RPAREN          reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    COMMA           reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    VARIABLE        reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    LPAREN          reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    CADENA          reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    BOOLEANO        reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    ENTERO          reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)
    DECIMAL         reduce using rule 40 (asignacion -> VARIABLE EQUALS escribir .)


state 231

    (41) asignacion -> VARIABLE EQUALS btrim .

    $end            reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    RBRACE          reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    SEMI            reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    BREAK           reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    RPAREN          reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    COMMA           reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    VARIABLE        reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    LPAREN          reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    CADENA          reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    BOOLEANO        reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    ENTERO          reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)
    DECIMAL         reduce using rule 41 (asignacion -> VARIABLE EQUALS btrim .)


state 232

    (42) asignacion -> VARIABLE EQUALS lectura .

    $end            reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    RBRACE          reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    SEMI            reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    BREAK           reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    RPAREN          reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    COMMA           reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    VARIABLE        reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    LPAREN          reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    CADENA          reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    BOOLEANO        reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    ENTERO          reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)
    DECIMAL         reduce using rule 42 (asignacion -> VARIABLE EQUALS lectura .)


state 233

    (43) asignacion -> VARIABLE EQUALS bconcat .

    $end            reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    RBRACE          reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    SEMI            reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    BREAK           reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    RPAREN          reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    COMMA           reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    VARIABLE        reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    LPAREN          reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    CADENA          reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    BOOLEANO        reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    ENTERO          reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)
    DECIMAL         reduce using rule 43 (asignacion -> VARIABLE EQUALS bconcat .)


state 234

    (45) asignacion -> VARIABLE EQUALS operaciones_mat . SEMI

    SEMI            shift and go to state 320


state 235

    (47) asignacion -> VARIABLE EQUALS llamada_funcion .

    $end            reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    RBRACE          reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    SEMI            reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    BREAK           reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    RPAREN          reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    COMMA           reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    VARIABLE        reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    LPAREN          reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    CADENA          reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    BOOLEANO        reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    ENTERO          reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)
    DECIMAL         reduce using rule 47 (asignacion -> VARIABLE EQUALS llamada_funcion .)


state 236

    (48) asignacion -> VARIABLE EQUALS arrayvalues . SEMI

    SEMI            shift and go to state 321


state 237

    (49) asignacion -> VARIABLE EQUALS arraysearch . SEMI

    SEMI            shift and go to state 322


state 238

    (188) bcolas -> VARIABLE EQUALS NEW . SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE EQUALS NEW . SPLSTACK LPAREN RPAREN SEMI

    SPLQUEUE        shift and go to state 323
    SPLSTACK        shift and go to state 324


state 239

    (240) casting -> VARIABLE EQUALS LPAREN . tiposCast RPAREN VARIABLE SEMI
    (151) operaciones_mat_par -> LPAREN . valor operadores valor RPAREN
    (152) operaciones_mat_par -> LPAREN . valor operadores operaciones_mat_par RPAREN
    (153) operaciones_mat_par -> LPAREN . VARIABLE operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> LPAREN . VARIABLE operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN
    (156) operaciones_mat_par -> LPAREN . VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (231) tiposCast -> . STRING
    (232) tiposCast -> . BOOL
    (233) tiposCast -> . BOOLEAN
    (234) tiposCast -> . DOUBLE
    (235) tiposCast -> . FLOAT
    (236) tiposCast -> . ARRAY
    (237) tiposCast -> . OBJECT
    (238) tiposCast -> . INTEGER
    (239) tiposCast -> . INT
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 214
    STRING          shift and go to state 117
    BOOL            shift and go to state 118
    BOOLEAN         shift and go to state 119
    DOUBLE          shift and go to state 120
    FLOAT           shift and go to state 121
    ARRAY           shift and go to state 122
    OBJECT          shift and go to state 123
    INTEGER         shift and go to state 124
    INT             shift and go to state 125
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tiposCast                      shift and go to state 325
    valor                          shift and go to state 213
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 240

    (50) asignacion_array -> VARIABLE EQUALS array_def . SEMI

    SEMI            shift and go to state 326


state 241

    (171) llamada_funcion -> NOMBRE . LPAREN params_list RPAREN SEMI

    LPAREN          shift and go to state 126


state 242

    (267) arrayvalues -> ARRAY_VALUES . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 327


state 243

    (268) arraysearch -> ARRAY_SEARCH . LPAREN valor COMMA VARIABLE RPAREN

    LPAREN          shift and go to state 328


state 244

    (183) array_def -> ARRAY . LPAREN RPAREN
    (184) array_def -> ARRAY . LPAREN array_elmnt RPAREN

    LPAREN          shift and go to state 329


state 245

    (110) incrementOp -> VARIABLE SUMA SUMA . SEMI

    SEMI            shift and go to state 330


state 246

    (111) incrementOp -> VARIABLE RESTA RESTA . SEMI

    SEMI            shift and go to state 331


state 247

    (229) bconcat -> VARIABLE CONCAT VARIABLE . SEMI

    SEMI            shift and go to state 332


state 248

    (226) bconcat -> VARIABLE CONCAT CADENA . SEMI
    (230) bconcat -> VARIABLE CONCAT CADENA . CONCAT VARIABLE SEMI

    SEMI            shift and go to state 334
    CONCAT          shift and go to state 333


state 249

    (227) bconcat -> VARIABLE CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 335


state 250

    (248) addpila -> VARIABLE FLECHA PUSH . LPAREN valor RPAREN SEMI
    (249) addpila -> VARIABLE FLECHA PUSH . LPAREN VARIABLE RPAREN SEMI

    LPAREN          shift and go to state 336


state 251

    (258) addcola -> VARIABLE FLECHA ENQUEUE . LPAREN valor RPAREN SEMI
    (259) addcola -> VARIABLE FLECHA ENQUEUE . LPAREN VARIABLE RPAREN SEMI

    LPAREN          shift and go to state 337


state 252

    (260) minuscola -> VARIABLE FLECHA DEQUEUE . LPAREN valor RPAREN SEMI
    (261) minuscola -> VARIABLE FLECHA DEQUEUE . LPAREN VARIABLE RPAREN SEMI

    LPAREN          shift and go to state 338


state 253

    (250) poppila -> VARIABLE FLECHA POP . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 339


state 254

    (251) funcionesCP -> VARIABLE FLECHA REWIND . LPAREN RPAREN

    LPAREN          shift and go to state 340


state 255

    (252) funcionesCP -> VARIABLE FLECHA VALID . LPAREN RPAREN

    LPAREN          shift and go to state 341


state 256

    (253) funcionesCP -> VARIABLE FLECHA COUNT . LPAREN RPAREN

    LPAREN          shift and go to state 342


state 257

    (254) funcionesCP -> VARIABLE FLECHA NEXT . LPAREN RPAREN

    LPAREN          shift and go to state 343


state 258

    (255) funcionesCP -> VARIABLE FLECHA CURRENT . LPAREN RPAREN

    LPAREN          shift and go to state 344


state 259

    (246) aumentoCasting -> VARIABLE incrementos_mat VARIABLE . SEMI

    SEMI            shift and go to state 345


state 260

    (242) aumentoCasting -> VARIABLE incrementos_mat tipoDato . SEMI

    SEMI            shift and go to state 346


state 261

    (245) aumentoCasting -> VARIABLE operadores tipoDato . condicion_booleana valor
    (140) condicion_booleana -> . AND
    (141) condicion_booleana -> . OR
    (142) condicion_booleana -> . XOR
    (143) condicion_booleana -> . IS_EQUAL
    (144) condicion_booleana -> . IS_NOT_EQUAL
    (145) condicion_booleana -> . IS_IDENTICAL
    (146) condicion_booleana -> . IS_NOT_IDENTICAL

    AND             shift and go to state 348
    OR              shift and go to state 349
    XOR             shift and go to state 350
    IS_EQUAL        shift and go to state 351
    IS_NOT_EQUAL    shift and go to state 352
    IS_IDENTICAL    shift and go to state 353
    IS_NOT_IDENTICAL shift and go to state 354

    condicion_booleana             shift and go to state 347

state 262

    (73) imprimir -> VAR_DUMP LPAREN VARIABLE . RPAREN SEMI

    RPAREN          shift and go to state 355


state 263

    (74) imprimir -> VAR_DUMP LPAREN arrayvalues . RPAREN SEMI

    RPAREN          shift and go to state 356


state 264

    (75) imprimir -> PRINT_R LPAREN arraysearch . RPAREN SEMI

    RPAREN          shift and go to state 357


state 265

    (76) imprimir -> PRINT_R LPAREN VARIABLE . RPAREN SEMI

    RPAREN          shift and go to state 358


state 266

    (77) imprimir -> PRINT_R LPAREN arrayvalues . RPAREN SEMI

    RPAREN          shift and go to state 359


state 267

    (36) asignacion -> VARIABLE EQUALS . valor SEMI
    (39) asignacion -> VARIABLE EQUALS . brand
    (40) asignacion -> VARIABLE EQUALS . escribir
    (41) asignacion -> VARIABLE EQUALS . btrim
    (42) asignacion -> VARIABLE EQUALS . lectura
    (43) asignacion -> VARIABLE EQUALS . bconcat
    (45) asignacion -> VARIABLE EQUALS . operaciones_mat SEMI
    (47) asignacion -> VARIABLE EQUALS . llamada_funcion
    (48) asignacion -> VARIABLE EQUALS . arrayvalues SEMI
    (49) asignacion -> VARIABLE EQUALS . arraysearch SEMI
    (50) asignacion_array -> VARIABLE EQUALS . array_def SEMI
    (243) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (147) operaciones_mat -> . valor operadores valor
    (148) operaciones_mat -> . valor operadores operaciones_mat
    (149) operaciones_mat -> . VARIABLE operadores VARIABLE
    (150) operaciones_mat -> . operaciones_mat_par
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (267) arrayvalues -> . ARRAY_VALUES LPAREN VARIABLE RPAREN
    (268) arraysearch -> . ARRAY_SEARCH LPAREN valor COMMA VARIABLE RPAREN
    (183) array_def -> . ARRAY LPAREN RPAREN
    (184) array_def -> . ARRAY LPAREN array_elmnt RPAREN
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (151) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (152) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (156) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 227
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    READLINE        shift and go to state 56
    CADENA          shift and go to state 103
    NOMBRE          shift and go to state 241
    ARRAY_VALUES    shift and go to state 242
    ARRAY_SEARCH    shift and go to state 243
    ARRAY           shift and go to state 244
    BOOLEANO        shift and go to state 107
    LPAREN          shift and go to state 105
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 228
    brand                          shift and go to state 229
    escribir                       shift and go to state 230
    btrim                          shift and go to state 231
    lectura                        shift and go to state 232
    bconcat                        shift and go to state 233
    operaciones_mat                shift and go to state 234
    llamada_funcion                shift and go to state 235
    arrayvalues                    shift and go to state 236
    arraysearch                    shift and go to state 237
    array_def                      shift and go to state 240
    tipoDato                       shift and go to state 100
    operaciones_mat_par            shift and go to state 104
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 268

    (164) funcion_nparams -> FUNCTION NOMBRE . LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> FUNCTION NOMBRE . LPAREN RPAREN LBRACE empty RBRACE

    LPAREN          shift and go to state 360


state 269

    (262) constante -> DEFINE LPAREN CADENA . COMMA valor RPAREN SEMI

    COMMA           shift and go to state 361


state 270

    (263) constante -> DEFINE LPAREN NOMBRE . COMMA ARRAY RPAREN SEMI

    COMMA           shift and go to state 362


state 271

    (225) bconcat -> CADENA CONCAT CADENA . SEMI

    SEMI            shift and go to state 363


state 272

    (228) bconcat -> CADENA CONCAT_EQUAL CADENA . SEMI

    SEMI            shift and go to state 364


state 273

    (189) lectura -> READLINE LPAREN CADENA . RPAREN SEMI

    RPAREN          shift and go to state 365


state 274

    (190) lectura -> READLINE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 366


state 275

    (85) condicion_ifelse -> condicion_if condicion_elseif condicion_else .

    $end            reduce using rule 85 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    RBRACE          reduce using rule 85 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    SEMI            reduce using rule 85 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)
    BREAK           reduce using rule 85 (condicion_ifelse -> condicion_if condicion_elseif condicion_else .)


state 276

    (81) condicion_else -> ELSE LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (59) imprimir -> . ECHO valor SEMI
    (60) imprimir -> . PRINT valor SEMI
    (61) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (62) imprimir -> . PRINT bconcat
    (63) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (64) imprimir -> . ECHO bconcat
    (65) imprimir -> . ECHO operaciones_mat SEMI
    (66) imprimir -> . PRINT operaciones_mat SEMI
    (67) imprimir -> . ECHO VARIABLE SEMI
    (68) imprimir -> . PRINT VARIABLE SEMI
    (69) imprimir -> . ECHO funcionesCP_semi
    (70) imprimir -> . PRINT funcionesCP_semi
    (71) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (72) imprimir -> . ECHO poppila
    (73) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . VAR_DUMP LPAREN arrayvalues RPAREN SEMI
    (75) imprimir -> . PRINT_R LPAREN arraysearch RPAREN SEMI
    (76) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (77) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (157) funciones -> . funcion_nparams
    (158) funciones -> . proteccion funcion_nparams
    (159) funciones -> . funcion_blank
    (160) funciones -> . proteccion funcion_blank
    (161) funciones -> . funcion_void
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (262) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (263) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) condicion_ifelse -> . condicion_if
    (83) condicion_ifelse -> . condicion_if condicion_else
    (84) condicion_ifelse -> . condicion_if condicion_elseif
    (85) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .
    (117) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (99) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (110) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (111) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (112) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (123) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (118) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON
    (195) bgoto -> . GOTO NOMBRE SEMI
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (196) bcortes -> . EXIT SEMI
    (197) bcortes -> . BREAK SEMI
    (198) bcortes -> . DEFAULT SEMI
    (199) bcortes -> . CONTINUE SEMI
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (200) otros -> . SMALLER NOMBRE GREATER
    (201) otros -> . SMALLER DIVISION NOMBRE GREATER
    (202) otros -> . NOMBRE COLON
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (193) comment -> . COMENTARIOS
    (194) comment -> . DOC_COMENTARIOS
    (240) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (241) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (205) simbolos -> . LPAREN RPAREN
    (206) simbolos -> . LPAREN
    (207) simbolos -> . RPAREN
    (208) simbolos -> . LBRACKET RBRACKET
    (209) simbolos -> . LBRACKET
    (210) simbolos -> . RBRACKET
    (211) simbolos -> . LBRACE RBRACE
    (212) simbolos -> . LBRACE
    (213) simbolos -> . RBRACE instrucciones
    (214) simbolos -> . OPEN_TAG CLOSE_TAG
    (215) simbolos -> . OPEN_TAG
    (216) simbolos -> . CLOSE_TAG
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (248) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> . VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (264) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (265) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI
    (250) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (78) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (187) empty -> .
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 116 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 187 (empty -> .) ]

    cuerpo                         shift and go to state 367
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 277

    (80) condicion_elseif -> ELSEIF LPAREN . condicion RPAREN LBRACE cuerpo RBRACE
    (86) condicion -> . VARIABLE operador_logico VARIABLE
    (87) condicion -> . valor operador_logico valor
    (88) condicion -> . VARIABLE operador_logico valor
    (89) condicion -> . VARIABLE condicion_booleana VARIABLE
    (90) condicion -> . valor condicion_booleana valor
    (91) condicion -> . VARIABLE condicion_booleana valor
    (92) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (93) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (94) condicion -> . condicion condicion_booleana condicion
    (95) condicion -> . condicion condicion_booleana comprobacion
    (96) condicion -> . aumentoCasting
    (97) condicion -> . VARIABLE
    (98) condicion -> . funcionesCP
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 280
    LPAREN          shift and go to state 278
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    condicion                      shift and go to state 368
    valor                          shift and go to state 281
    aumentoCasting                 shift and go to state 282
    funcionesCP                    shift and go to state 283
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 278

    (92) condicion -> LPAREN . VARIABLE operadores valor RPAREN operador_logico valor
    (93) condicion -> LPAREN . VARIABLE operadores valor RPAREN condicion_booleana valor

    VARIABLE        shift and go to state 369


state 279

    (113) bwhile -> WHILE LPAREN condicion . RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> WHILE LPAREN condicion . RPAREN COLON stc_bloque
    (115) bwhile -> WHILE LPAREN condicion . RPAREN SEMI
    (94) condicion -> condicion . condicion_booleana condicion
    (95) condicion -> condicion . condicion_booleana comprobacion
    (140) condicion_booleana -> . AND
    (141) condicion_booleana -> . OR
    (142) condicion_booleana -> . XOR
    (143) condicion_booleana -> . IS_EQUAL
    (144) condicion_booleana -> . IS_NOT_EQUAL
    (145) condicion_booleana -> . IS_IDENTICAL
    (146) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 370
    AND             shift and go to state 348
    OR              shift and go to state 349
    XOR             shift and go to state 350
    IS_EQUAL        shift and go to state 351
    IS_NOT_EQUAL    shift and go to state 352
    IS_IDENTICAL    shift and go to state 353
    IS_NOT_IDENTICAL shift and go to state 354

    condicion_booleana             shift and go to state 371

state 280

    (86) condicion -> VARIABLE . operador_logico VARIABLE
    (88) condicion -> VARIABLE . operador_logico valor
    (89) condicion -> VARIABLE . condicion_booleana VARIABLE
    (91) condicion -> VARIABLE . condicion_booleana valor
    (97) condicion -> VARIABLE .
    (242) aumentoCasting -> VARIABLE . incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> VARIABLE . EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> VARIABLE . operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> VARIABLE . incrementos_mat VARIABLE SEMI
    (251) funcionesCP -> VARIABLE . FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> VARIABLE . FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> VARIABLE . FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> VARIABLE . FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> VARIABLE . FLECHA CURRENT LPAREN RPAREN
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (131) operador_logico -> . SMALLER
    (132) operador_logico -> . GREATER
    (133) operador_logico -> . IS_SMALLER_OR_EQUAL
    (134) operador_logico -> . IS_GREATER_OR_EQUAL
    (140) condicion_booleana -> . AND
    (141) condicion_booleana -> . OR
    (142) condicion_booleana -> . XOR
    (143) condicion_booleana -> . IS_EQUAL
    (144) condicion_booleana -> . IS_NOT_EQUAL
    (145) condicion_booleana -> . IS_IDENTICAL
    (146) condicion_booleana -> . IS_NOT_IDENTICAL
    (135) incrementos_mat -> . MINUS_EQUAL
    (136) incrementos_mat -> . MOD_EQUAL
    (137) incrementos_mat -> . MUL_EQUAL
    (138) incrementos_mat -> . PLUS_EQUAL
    (139) incrementos_mat -> . DIV_EQUAL
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IS_EQUAL resolved as shift
  ! shift/reduce conflict for IS_NOT_EQUAL resolved as shift
  ! shift/reduce conflict for IS_IDENTICAL resolved as shift
  ! shift/reduce conflict for IS_NOT_IDENTICAL resolved as shift
    RPAREN          reduce using rule 97 (condicion -> VARIABLE .)
    SEMI            reduce using rule 97 (condicion -> VARIABLE .)
    EQUALS          shift and go to state 374
    FLECHA          shift and go to state 220
    SMALLER         shift and go to state 375
    GREATER         shift and go to state 376
    IS_SMALLER_OR_EQUAL shift and go to state 377
    IS_GREATER_OR_EQUAL shift and go to state 378
    AND             shift and go to state 348
    OR              shift and go to state 349
    XOR             shift and go to state 350
    IS_EQUAL        shift and go to state 351
    IS_NOT_EQUAL    shift and go to state 352
    IS_IDENTICAL    shift and go to state 353
    IS_NOT_IDENTICAL shift and go to state 354
    MINUS_EQUAL     shift and go to state 137
    MOD_EQUAL       shift and go to state 138
    MUL_EQUAL       shift and go to state 139
    PLUS_EQUAL      shift and go to state 140
    DIV_EQUAL       shift and go to state 141
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

  ! AND             [ reduce using rule 97 (condicion -> VARIABLE .) ]
  ! OR              [ reduce using rule 97 (condicion -> VARIABLE .) ]
  ! XOR             [ reduce using rule 97 (condicion -> VARIABLE .) ]
  ! IS_EQUAL        [ reduce using rule 97 (condicion -> VARIABLE .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 97 (condicion -> VARIABLE .) ]
  ! IS_IDENTICAL    [ reduce using rule 97 (condicion -> VARIABLE .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 97 (condicion -> VARIABLE .) ]

    operador_logico                shift and go to state 372
    condicion_booleana             shift and go to state 373
    incrementos_mat                shift and go to state 135
    operadores                     shift and go to state 136

state 281

    (87) condicion -> valor . operador_logico valor
    (90) condicion -> valor . condicion_booleana valor
    (131) operador_logico -> . SMALLER
    (132) operador_logico -> . GREATER
    (133) operador_logico -> . IS_SMALLER_OR_EQUAL
    (134) operador_logico -> . IS_GREATER_OR_EQUAL
    (140) condicion_booleana -> . AND
    (141) condicion_booleana -> . OR
    (142) condicion_booleana -> . XOR
    (143) condicion_booleana -> . IS_EQUAL
    (144) condicion_booleana -> . IS_NOT_EQUAL
    (145) condicion_booleana -> . IS_IDENTICAL
    (146) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 375
    GREATER         shift and go to state 376
    IS_SMALLER_OR_EQUAL shift and go to state 377
    IS_GREATER_OR_EQUAL shift and go to state 378
    AND             shift and go to state 348
    OR              shift and go to state 349
    XOR             shift and go to state 350
    IS_EQUAL        shift and go to state 351
    IS_NOT_EQUAL    shift and go to state 352
    IS_IDENTICAL    shift and go to state 353
    IS_NOT_IDENTICAL shift and go to state 354

    operador_logico                shift and go to state 379
    condicion_booleana             shift and go to state 380

state 282

    (96) condicion -> aumentoCasting .

    RPAREN          reduce using rule 96 (condicion -> aumentoCasting .)
    AND             reduce using rule 96 (condicion -> aumentoCasting .)
    OR              reduce using rule 96 (condicion -> aumentoCasting .)
    XOR             reduce using rule 96 (condicion -> aumentoCasting .)
    IS_EQUAL        reduce using rule 96 (condicion -> aumentoCasting .)
    IS_NOT_EQUAL    reduce using rule 96 (condicion -> aumentoCasting .)
    IS_IDENTICAL    reduce using rule 96 (condicion -> aumentoCasting .)
    IS_NOT_IDENTICAL reduce using rule 96 (condicion -> aumentoCasting .)
    SEMI            reduce using rule 96 (condicion -> aumentoCasting .)


state 283

    (98) condicion -> funcionesCP .

    RPAREN          reduce using rule 98 (condicion -> funcionesCP .)
    AND             reduce using rule 98 (condicion -> funcionesCP .)
    OR              reduce using rule 98 (condicion -> funcionesCP .)
    XOR             reduce using rule 98 (condicion -> funcionesCP .)
    IS_EQUAL        reduce using rule 98 (condicion -> funcionesCP .)
    IS_NOT_EQUAL    reduce using rule 98 (condicion -> funcionesCP .)
    IS_IDENTICAL    reduce using rule 98 (condicion -> funcionesCP .)
    IS_NOT_IDENTICAL reduce using rule 98 (condicion -> funcionesCP .)
    SEMI            reduce using rule 98 (condicion -> funcionesCP .)


state 284

    (124) catches -> catches CATCH . LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def

    LPAREN          shift and go to state 381


state 285

    (117) bdo -> DO LBRACE cuerpo . RBRACE bwhile

    RBRACE          shift and go to state 382


state 286

    (99) bfor -> FOR LPAREN asignacion . condicion SEMI for_incr RPAREN stc_bloque_def
    (86) condicion -> . VARIABLE operador_logico VARIABLE
    (87) condicion -> . valor operador_logico valor
    (88) condicion -> . VARIABLE operador_logico valor
    (89) condicion -> . VARIABLE condicion_booleana VARIABLE
    (90) condicion -> . valor condicion_booleana valor
    (91) condicion -> . VARIABLE condicion_booleana valor
    (92) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (93) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (94) condicion -> . condicion condicion_booleana condicion
    (95) condicion -> . condicion condicion_booleana comprobacion
    (96) condicion -> . aumentoCasting
    (97) condicion -> . VARIABLE
    (98) condicion -> . funcionesCP
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 280
    LPAREN          shift and go to state 278
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    condicion                      shift and go to state 383
    valor                          shift and go to state 281
    aumentoCasting                 shift and go to state 282
    funcionesCP                    shift and go to state 283
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 287

    (112) bforeach -> FOREACH LPAREN VARIABLE . AS VARIABLE RPAREN stc_bloque_def

    AS              shift and go to state 384


state 288

    (102) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (103) stc_bloque_def -> LBRACE . cuerpo RBRACE
    (100) stc_bloque -> . stc_bloque SEMI cuerpo
    (101) stc_bloque -> . breturn
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (59) imprimir -> . ECHO valor SEMI
    (60) imprimir -> . PRINT valor SEMI
    (61) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (62) imprimir -> . PRINT bconcat
    (63) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (64) imprimir -> . ECHO bconcat
    (65) imprimir -> . ECHO operaciones_mat SEMI
    (66) imprimir -> . PRINT operaciones_mat SEMI
    (67) imprimir -> . ECHO VARIABLE SEMI
    (68) imprimir -> . PRINT VARIABLE SEMI
    (69) imprimir -> . ECHO funcionesCP_semi
    (70) imprimir -> . PRINT funcionesCP_semi
    (71) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (72) imprimir -> . ECHO poppila
    (73) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . VAR_DUMP LPAREN arrayvalues RPAREN SEMI
    (75) imprimir -> . PRINT_R LPAREN arraysearch RPAREN SEMI
    (76) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (77) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (157) funciones -> . funcion_nparams
    (158) funciones -> . proteccion funcion_nparams
    (159) funciones -> . funcion_blank
    (160) funciones -> . proteccion funcion_blank
    (161) funciones -> . funcion_void
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (262) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (263) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) condicion_ifelse -> . condicion_if
    (83) condicion_ifelse -> . condicion_if condicion_else
    (84) condicion_ifelse -> . condicion_if condicion_elseif
    (85) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .
    (117) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (99) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (110) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (111) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (112) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (123) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (118) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON
    (195) bgoto -> . GOTO NOMBRE SEMI
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (196) bcortes -> . EXIT SEMI
    (197) bcortes -> . BREAK SEMI
    (198) bcortes -> . DEFAULT SEMI
    (199) bcortes -> . CONTINUE SEMI
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (200) otros -> . SMALLER NOMBRE GREATER
    (201) otros -> . SMALLER DIVISION NOMBRE GREATER
    (202) otros -> . NOMBRE COLON
    (193) comment -> . COMENTARIOS
    (194) comment -> . DOC_COMENTARIOS
    (240) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (241) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (205) simbolos -> . LPAREN RPAREN
    (206) simbolos -> . LPAREN
    (207) simbolos -> . RPAREN
    (208) simbolos -> . LBRACKET RBRACKET
    (209) simbolos -> . LBRACKET
    (210) simbolos -> . RBRACKET
    (211) simbolos -> . LBRACE RBRACE
    (212) simbolos -> . LBRACE
    (213) simbolos -> . RBRACE instrucciones
    (214) simbolos -> . OPEN_TAG CLOSE_TAG
    (215) simbolos -> . OPEN_TAG
    (216) simbolos -> . CLOSE_TAG
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (248) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> . VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (264) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (265) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI
    (250) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (187) empty -> .
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (78) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    RETURN          shift and go to state 77
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    SEMI            reduce using rule 187 (empty -> .)
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 116 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 187 (empty -> .) ]

    stc_bloque                     shift and go to state 385
    cuerpo                         shift and go to state 386
    breturn                        shift and go to state 387
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    empty                          shift and go to state 76
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    funcionesCP                    shift and go to state 82

state 289

    (123) btry -> TRY LBRACE stc_bloque_def . RBRACE catches

    RBRACE          shift and go to state 388


state 290

    (118) bswitch -> SWITCH LPAREN VARIABLE . RPAREN LBRACE innerSwitch RBRACE

    RPAREN          shift and go to state 389


state 291

    (119) bcase -> CASE ENTERO COLON .

    $end            reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    RBRACE          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    SEMI            reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    BREAK           reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    ECHO            reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    PRINT           reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    VAR_DUMP        reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    PRINT_R         reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    VARIABLE        reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    VAR             reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    NOMBRE          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    DEFINE          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    READLINE        reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    WHILE           reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    DO              reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    FOR             reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    FOREACH         reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    TRY             reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    SWITCH          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    CASE            reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    GOTO            reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    EXIT            reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    DEFAULT         reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    CONTINUE        reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    RAND            reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    FWRITE          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    TRIM            reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    SMALLER         reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    RETURN          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    COMENTARIOS     reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    DOC_COMENTARIOS reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    LPAREN          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    CADENA          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    RPAREN          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    LBRACKET        reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    RBRACKET        reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    LBRACE          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    OPEN_TAG        reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    CLOSE_TAG       reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    ARRAY_POP       reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    ARRAY_PUSH      reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    PUBLIC          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    PRIVATE         reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    PROTECTED       reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    STATIC          reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    FUNCTION        reduce using rule 119 (bcase -> CASE ENTERO COLON .)
    IF              reduce using rule 119 (bcase -> CASE ENTERO COLON .)


state 292

    (120) bcase -> CASE CADENA COLON .

    $end            reduce using rule 120 (bcase -> CASE CADENA COLON .)
    RBRACE          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    SEMI            reduce using rule 120 (bcase -> CASE CADENA COLON .)
    BREAK           reduce using rule 120 (bcase -> CASE CADENA COLON .)
    ECHO            reduce using rule 120 (bcase -> CASE CADENA COLON .)
    PRINT           reduce using rule 120 (bcase -> CASE CADENA COLON .)
    VAR_DUMP        reduce using rule 120 (bcase -> CASE CADENA COLON .)
    PRINT_R         reduce using rule 120 (bcase -> CASE CADENA COLON .)
    VARIABLE        reduce using rule 120 (bcase -> CASE CADENA COLON .)
    VAR             reduce using rule 120 (bcase -> CASE CADENA COLON .)
    NOMBRE          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    DEFINE          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    READLINE        reduce using rule 120 (bcase -> CASE CADENA COLON .)
    WHILE           reduce using rule 120 (bcase -> CASE CADENA COLON .)
    DO              reduce using rule 120 (bcase -> CASE CADENA COLON .)
    FOR             reduce using rule 120 (bcase -> CASE CADENA COLON .)
    FOREACH         reduce using rule 120 (bcase -> CASE CADENA COLON .)
    TRY             reduce using rule 120 (bcase -> CASE CADENA COLON .)
    SWITCH          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    CASE            reduce using rule 120 (bcase -> CASE CADENA COLON .)
    GOTO            reduce using rule 120 (bcase -> CASE CADENA COLON .)
    EXIT            reduce using rule 120 (bcase -> CASE CADENA COLON .)
    DEFAULT         reduce using rule 120 (bcase -> CASE CADENA COLON .)
    CONTINUE        reduce using rule 120 (bcase -> CASE CADENA COLON .)
    RAND            reduce using rule 120 (bcase -> CASE CADENA COLON .)
    FWRITE          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    TRIM            reduce using rule 120 (bcase -> CASE CADENA COLON .)
    SMALLER         reduce using rule 120 (bcase -> CASE CADENA COLON .)
    RETURN          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    COMENTARIOS     reduce using rule 120 (bcase -> CASE CADENA COLON .)
    DOC_COMENTARIOS reduce using rule 120 (bcase -> CASE CADENA COLON .)
    LPAREN          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    CADENA          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    RPAREN          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    LBRACKET        reduce using rule 120 (bcase -> CASE CADENA COLON .)
    RBRACKET        reduce using rule 120 (bcase -> CASE CADENA COLON .)
    LBRACE          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    OPEN_TAG        reduce using rule 120 (bcase -> CASE CADENA COLON .)
    CLOSE_TAG       reduce using rule 120 (bcase -> CASE CADENA COLON .)
    ARRAY_POP       reduce using rule 120 (bcase -> CASE CADENA COLON .)
    ARRAY_PUSH      reduce using rule 120 (bcase -> CASE CADENA COLON .)
    PUBLIC          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    PRIVATE         reduce using rule 120 (bcase -> CASE CADENA COLON .)
    PROTECTED       reduce using rule 120 (bcase -> CASE CADENA COLON .)
    STATIC          reduce using rule 120 (bcase -> CASE CADENA COLON .)
    FUNCTION        reduce using rule 120 (bcase -> CASE CADENA COLON .)
    IF              reduce using rule 120 (bcase -> CASE CADENA COLON .)


state 293

    (195) bgoto -> GOTO NOMBRE SEMI .

    $end            reduce using rule 195 (bgoto -> GOTO NOMBRE SEMI .)
    RBRACE          reduce using rule 195 (bgoto -> GOTO NOMBRE SEMI .)
    SEMI            reduce using rule 195 (bgoto -> GOTO NOMBRE SEMI .)
    BREAK           reduce using rule 195 (bgoto -> GOTO NOMBRE SEMI .)


state 294

    (172) brand -> RAND LPAREN ENTERO . COMMA ENTERO RPAREN SEMI

    COMMA           shift and go to state 390


state 295

    (191) escribir -> FWRITE LPAREN NOMBRE . COMMA CADENA RPAREN SEMI

    COMMA           shift and go to state 391


state 296

    (192) btrim -> TRIM LPAREN NOMBRE . LPAREN NOMBRE RPAREN RPAREN SEMI

    LPAREN          shift and go to state 392


state 297

    (200) otros -> SMALLER NOMBRE GREATER .

    $end            reduce using rule 200 (otros -> SMALLER NOMBRE GREATER .)
    RBRACE          reduce using rule 200 (otros -> SMALLER NOMBRE GREATER .)
    SEMI            reduce using rule 200 (otros -> SMALLER NOMBRE GREATER .)
    BREAK           reduce using rule 200 (otros -> SMALLER NOMBRE GREATER .)


state 298

    (201) otros -> SMALLER DIVISION NOMBRE . GREATER

    GREATER         shift and go to state 393


state 299

    (179) breturn -> RETURN NULL SEMI .

    RBRACE          reduce using rule 179 (breturn -> RETURN NULL SEMI .)
    $end            reduce using rule 179 (breturn -> RETURN NULL SEMI .)
    SEMI            reduce using rule 179 (breturn -> RETURN NULL SEMI .)
    BREAK           reduce using rule 179 (breturn -> RETURN NULL SEMI .)


state 300

    (180) breturn -> RETURN VARIABLE SEMI .

    RBRACE          reduce using rule 180 (breturn -> RETURN VARIABLE SEMI .)
    $end            reduce using rule 180 (breturn -> RETURN VARIABLE SEMI .)
    SEMI            reduce using rule 180 (breturn -> RETURN VARIABLE SEMI .)
    BREAK           reduce using rule 180 (breturn -> RETURN VARIABLE SEMI .)


state 301

    (181) breturn -> RETURN BOOLEANO SEMI .

    RBRACE          reduce using rule 181 (breturn -> RETURN BOOLEANO SEMI .)
    $end            reduce using rule 181 (breturn -> RETURN BOOLEANO SEMI .)
    SEMI            reduce using rule 181 (breturn -> RETURN BOOLEANO SEMI .)
    BREAK           reduce using rule 181 (breturn -> RETURN BOOLEANO SEMI .)


state 302

    (264) arraypop -> ARRAY_POP LPAREN VARIABLE . RPAREN SEMI

    RPAREN          shift and go to state 394


state 303

    (265) arraypush -> ARRAY_PUSH LPAREN VARIABLE . COMMA valor RPAREN SEMI
    (266) arraypush -> ARRAY_PUSH LPAREN VARIABLE . COMMA VARIABLE RPAREN SEMI

    COMMA           shift and go to state 395


state 304

    (164) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (169) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (170) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (168) funcion_void -> FUNCTION NOMBRE LPAREN . RPAREN COLON VOID LBRACE empty RBRACE
    (165) params_list -> . params_list COMMA param
    (166) params_list -> . param
    (167) params_list -> . empty
    (162) param -> . VARIABLE
    (163) param -> . asignacion
    (187) empty -> .
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 397
    VARIABLE        shift and go to state 225
    COMMA           reduce using rule 187 (empty -> .)
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

  ! RPAREN          [ reduce using rule 187 (empty -> .) ]

    params_list                    shift and go to state 396
    empty                          shift and go to state 224
    param                          shift and go to state 223
    asignacion                     shift and go to state 226
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 305

    (78) condicion_if -> IF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> IF LPAREN condicion . RPAREN llamada_funcion
    (94) condicion -> condicion . condicion_booleana condicion
    (95) condicion -> condicion . condicion_booleana comprobacion
    (140) condicion_booleana -> . AND
    (141) condicion_booleana -> . OR
    (142) condicion_booleana -> . XOR
    (143) condicion_booleana -> . IS_EQUAL
    (144) condicion_booleana -> . IS_NOT_EQUAL
    (145) condicion_booleana -> . IS_IDENTICAL
    (146) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 398
    AND             shift and go to state 348
    OR              shift and go to state 349
    XOR             shift and go to state 350
    IS_EQUAL        shift and go to state 351
    IS_NOT_EQUAL    shift and go to state 352
    IS_IDENTICAL    shift and go to state 353
    IS_NOT_IDENTICAL shift and go to state 354

    condicion_booleana             shift and go to state 371

state 306

    (147) operaciones_mat -> valor operadores valor .
    (147) operaciones_mat -> valor . operadores valor
    (148) operaciones_mat -> valor . operadores operaciones_mat
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SEMI            reduce using rule 147 (operaciones_mat -> valor operadores valor .)
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 203

state 307

    (148) operaciones_mat -> valor operadores operaciones_mat .

    SEMI            reduce using rule 148 (operaciones_mat -> valor operadores operaciones_mat .)


state 308

    (149) operaciones_mat -> VARIABLE . operadores VARIABLE
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    EQUALS          shift and go to state 211
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 209

state 309

    (63) imprimir -> ECHO NOMBRE LBRACKET ENTERO . RBRACKET SEMI

    RBRACKET        shift and go to state 399


state 310

    (149) operaciones_mat -> VARIABLE operadores VARIABLE .

    SEMI            reduce using rule 149 (operaciones_mat -> VARIABLE operadores VARIABLE .)


state 311

    (71) imprimir -> ECHO funcionesCP_semi COMMA NOMBRE . SEMI

    SEMI            shift and go to state 400


state 312

    (151) operaciones_mat_par -> LPAREN valor operadores . valor RPAREN
    (152) operaciones_mat_par -> LPAREN valor operadores . operaciones_mat_par RPAREN
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (151) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (152) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (156) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    LPAREN          shift and go to state 105
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 401
    operaciones_mat_par            shift and go to state 402
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 313

    (153) operaciones_mat_par -> LPAREN VARIABLE operadores . VARIABLE RPAREN
    (154) operaciones_mat_par -> LPAREN VARIABLE operadores . valor RPAREN operadores valor
    (155) operaciones_mat_par -> LPAREN VARIABLE operadores . tipoDato RPAREN
    (156) operaciones_mat_par -> LPAREN VARIABLE operadores . tipoDato RPAREN operadores tipoDato
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 404
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 405
    tipoDato                       shift and go to state 406
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 314

    (61) imprimir -> PRINT LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 407


state 315

    (241) casting -> LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 408


state 316

    (171) llamada_funcion -> NOMBRE LPAREN params_list RPAREN . SEMI

    SEMI            shift and go to state 409


state 317

    (165) params_list -> params_list COMMA . param
    (162) param -> . VARIABLE
    (163) param -> . asignacion
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

    VARIABLE        shift and go to state 225
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

    param                          shift and go to state 410
    asignacion                     shift and go to state 226
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 318

    (243) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . tipoDato SEMI
    (244) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . VARIABLE operadores operaciones_mat_par SEMI
    (149) operaciones_mat -> VARIABLE operadores . VARIABLE
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 411
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 412
    numero                         shift and go to state 106

state 319

    (36) asignacion -> VARIABLE EQUALS valor SEMI .

    $end            reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RBRACE          reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    SEMI            reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BREAK           reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    RPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    COMMA           reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    VARIABLE        reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    LPAREN          reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    CADENA          reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    BOOLEANO        reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    ENTERO          reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)
    DECIMAL         reduce using rule 36 (asignacion -> VARIABLE EQUALS valor SEMI .)


state 320

    (45) asignacion -> VARIABLE EQUALS operaciones_mat SEMI .

    $end            reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RBRACE          reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    SEMI            reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BREAK           reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    RPAREN          reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    COMMA           reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    VARIABLE        reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    LPAREN          reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    CADENA          reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    BOOLEANO        reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    ENTERO          reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)
    DECIMAL         reduce using rule 45 (asignacion -> VARIABLE EQUALS operaciones_mat SEMI .)


state 321

    (48) asignacion -> VARIABLE EQUALS arrayvalues SEMI .

    $end            reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    RBRACE          reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    SEMI            reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    BREAK           reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    RPAREN          reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    COMMA           reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    VARIABLE        reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    LPAREN          reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    CADENA          reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    BOOLEANO        reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    ENTERO          reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)
    DECIMAL         reduce using rule 48 (asignacion -> VARIABLE EQUALS arrayvalues SEMI .)


state 322

    (49) asignacion -> VARIABLE EQUALS arraysearch SEMI .

    $end            reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    RBRACE          reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    SEMI            reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    BREAK           reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    RPAREN          reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    COMMA           reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    VARIABLE        reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    LPAREN          reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    CADENA          reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    BOOLEANO        reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    ENTERO          reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)
    DECIMAL         reduce using rule 49 (asignacion -> VARIABLE EQUALS arraysearch SEMI .)


state 323

    (188) bcolas -> VARIABLE EQUALS NEW SPLQUEUE . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 413


state 324

    (247) bpila -> VARIABLE EQUALS NEW SPLSTACK . LPAREN RPAREN SEMI

    LPAREN          shift and go to state 414


state 325

    (240) casting -> VARIABLE EQUALS LPAREN tiposCast . RPAREN VARIABLE SEMI

    RPAREN          shift and go to state 415


state 326

    (50) asignacion_array -> VARIABLE EQUALS array_def SEMI .

    $end            reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RBRACE          reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    SEMI            reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BREAK           reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    RPAREN          reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    COMMA           reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    VARIABLE        reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    LPAREN          reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    CADENA          reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    BOOLEANO        reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    ENTERO          reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)
    DECIMAL         reduce using rule 50 (asignacion_array -> VARIABLE EQUALS array_def SEMI .)


state 327

    (267) arrayvalues -> ARRAY_VALUES LPAREN . VARIABLE RPAREN

    VARIABLE        shift and go to state 416


state 328

    (268) arraysearch -> ARRAY_SEARCH LPAREN . valor COMMA VARIABLE RPAREN
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 417
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 329

    (183) array_def -> ARRAY LPAREN . RPAREN
    (184) array_def -> ARRAY LPAREN . array_elmnt RPAREN
    (185) array_elmnt -> . array_elmnt COMMA valor
    (186) array_elmnt -> . valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    RPAREN          shift and go to state 418
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    array_elmnt                    shift and go to state 419
    valor                          shift and go to state 420
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 330

    (110) incrementOp -> VARIABLE SUMA SUMA SEMI .

    $end            reduce using rule 110 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    RBRACE          reduce using rule 110 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    SEMI            reduce using rule 110 (incrementOp -> VARIABLE SUMA SUMA SEMI .)
    BREAK           reduce using rule 110 (incrementOp -> VARIABLE SUMA SUMA SEMI .)


state 331

    (111) incrementOp -> VARIABLE RESTA RESTA SEMI .

    $end            reduce using rule 111 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    RBRACE          reduce using rule 111 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    SEMI            reduce using rule 111 (incrementOp -> VARIABLE RESTA RESTA SEMI .)
    BREAK           reduce using rule 111 (incrementOp -> VARIABLE RESTA RESTA SEMI .)


state 332

    (229) bconcat -> VARIABLE CONCAT VARIABLE SEMI .

    $end            reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RBRACE          reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    SEMI            reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BREAK           reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    RPAREN          reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    COMMA           reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    VARIABLE        reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    LPAREN          reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    CADENA          reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    BOOLEANO        reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    ENTERO          reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)
    DECIMAL         reduce using rule 229 (bconcat -> VARIABLE CONCAT VARIABLE SEMI .)


state 333

    (230) bconcat -> VARIABLE CONCAT CADENA CONCAT . VARIABLE SEMI

    VARIABLE        shift and go to state 421


state 334

    (226) bconcat -> VARIABLE CONCAT CADENA SEMI .

    $end            reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    SEMI            reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BREAK           reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    COMMA           reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    LPAREN          reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    CADENA          reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 226 (bconcat -> VARIABLE CONCAT CADENA SEMI .)


state 335

    (227) bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BREAK           reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    LPAREN          reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 227 (bconcat -> VARIABLE CONCAT_EQUAL CADENA SEMI .)


state 336

    (248) addpila -> VARIABLE FLECHA PUSH LPAREN . valor RPAREN SEMI
    (249) addpila -> VARIABLE FLECHA PUSH LPAREN . VARIABLE RPAREN SEMI
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 422
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 423
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 337

    (258) addcola -> VARIABLE FLECHA ENQUEUE LPAREN . valor RPAREN SEMI
    (259) addcola -> VARIABLE FLECHA ENQUEUE LPAREN . VARIABLE RPAREN SEMI
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 424
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 425
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 338

    (260) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN . valor RPAREN SEMI
    (261) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN . VARIABLE RPAREN SEMI
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 426
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 427
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 339

    (250) poppila -> VARIABLE FLECHA POP LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 428


state 340

    (251) funcionesCP -> VARIABLE FLECHA REWIND LPAREN . RPAREN

    RPAREN          shift and go to state 429


state 341

    (252) funcionesCP -> VARIABLE FLECHA VALID LPAREN . RPAREN

    RPAREN          shift and go to state 430


state 342

    (253) funcionesCP -> VARIABLE FLECHA COUNT LPAREN . RPAREN

    RPAREN          shift and go to state 431


state 343

    (254) funcionesCP -> VARIABLE FLECHA NEXT LPAREN . RPAREN

    RPAREN          shift and go to state 432


state 344

    (255) funcionesCP -> VARIABLE FLECHA CURRENT LPAREN . RPAREN

    RPAREN          shift and go to state 433


state 345

    (246) aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .

    $end            reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    RBRACE          reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    SEMI            reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    BREAK           reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    RPAREN          reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    COMMA           reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    VARIABLE        reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    LPAREN          reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    CADENA          reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    BOOLEANO        reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    ENTERO          reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    DECIMAL         reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    AND             reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    OR              reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    XOR             reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_EQUAL        reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_NOT_EQUAL    reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_IDENTICAL    reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)
    IS_NOT_IDENTICAL reduce using rule 246 (aumentoCasting -> VARIABLE incrementos_mat VARIABLE SEMI .)


state 346

    (242) aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .

    $end            reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RBRACE          reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    SEMI            reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BREAK           reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    RPAREN          reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    COMMA           reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    VARIABLE        reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    LPAREN          reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    CADENA          reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    BOOLEANO        reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    ENTERO          reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    DECIMAL         reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    AND             reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    OR              reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    XOR             reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_EQUAL        reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_NOT_EQUAL    reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_IDENTICAL    reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)
    IS_NOT_IDENTICAL reduce using rule 242 (aumentoCasting -> VARIABLE incrementos_mat tipoDato SEMI .)


state 347

    (245) aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana . valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 100
    valor                          shift and go to state 434
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 348

    (140) condicion_booleana -> AND .

    CADENA          reduce using rule 140 (condicion_booleana -> AND .)
    BOOLEANO        reduce using rule 140 (condicion_booleana -> AND .)
    VARIABLE        reduce using rule 140 (condicion_booleana -> AND .)
    ENTERO          reduce using rule 140 (condicion_booleana -> AND .)
    DECIMAL         reduce using rule 140 (condicion_booleana -> AND .)
    LPAREN          reduce using rule 140 (condicion_booleana -> AND .)
    NOMBRE          reduce using rule 140 (condicion_booleana -> AND .)


state 349

    (141) condicion_booleana -> OR .

    CADENA          reduce using rule 141 (condicion_booleana -> OR .)
    BOOLEANO        reduce using rule 141 (condicion_booleana -> OR .)
    VARIABLE        reduce using rule 141 (condicion_booleana -> OR .)
    ENTERO          reduce using rule 141 (condicion_booleana -> OR .)
    DECIMAL         reduce using rule 141 (condicion_booleana -> OR .)
    LPAREN          reduce using rule 141 (condicion_booleana -> OR .)
    NOMBRE          reduce using rule 141 (condicion_booleana -> OR .)


state 350

    (142) condicion_booleana -> XOR .

    CADENA          reduce using rule 142 (condicion_booleana -> XOR .)
    BOOLEANO        reduce using rule 142 (condicion_booleana -> XOR .)
    VARIABLE        reduce using rule 142 (condicion_booleana -> XOR .)
    ENTERO          reduce using rule 142 (condicion_booleana -> XOR .)
    DECIMAL         reduce using rule 142 (condicion_booleana -> XOR .)
    LPAREN          reduce using rule 142 (condicion_booleana -> XOR .)
    NOMBRE          reduce using rule 142 (condicion_booleana -> XOR .)


state 351

    (143) condicion_booleana -> IS_EQUAL .

    CADENA          reduce using rule 143 (condicion_booleana -> IS_EQUAL .)
    BOOLEANO        reduce using rule 143 (condicion_booleana -> IS_EQUAL .)
    VARIABLE        reduce using rule 143 (condicion_booleana -> IS_EQUAL .)
    ENTERO          reduce using rule 143 (condicion_booleana -> IS_EQUAL .)
    DECIMAL         reduce using rule 143 (condicion_booleana -> IS_EQUAL .)
    LPAREN          reduce using rule 143 (condicion_booleana -> IS_EQUAL .)
    NOMBRE          reduce using rule 143 (condicion_booleana -> IS_EQUAL .)


state 352

    (144) condicion_booleana -> IS_NOT_EQUAL .

    CADENA          reduce using rule 144 (condicion_booleana -> IS_NOT_EQUAL .)
    BOOLEANO        reduce using rule 144 (condicion_booleana -> IS_NOT_EQUAL .)
    VARIABLE        reduce using rule 144 (condicion_booleana -> IS_NOT_EQUAL .)
    ENTERO          reduce using rule 144 (condicion_booleana -> IS_NOT_EQUAL .)
    DECIMAL         reduce using rule 144 (condicion_booleana -> IS_NOT_EQUAL .)
    LPAREN          reduce using rule 144 (condicion_booleana -> IS_NOT_EQUAL .)
    NOMBRE          reduce using rule 144 (condicion_booleana -> IS_NOT_EQUAL .)


state 353

    (145) condicion_booleana -> IS_IDENTICAL .

    CADENA          reduce using rule 145 (condicion_booleana -> IS_IDENTICAL .)
    BOOLEANO        reduce using rule 145 (condicion_booleana -> IS_IDENTICAL .)
    VARIABLE        reduce using rule 145 (condicion_booleana -> IS_IDENTICAL .)
    ENTERO          reduce using rule 145 (condicion_booleana -> IS_IDENTICAL .)
    DECIMAL         reduce using rule 145 (condicion_booleana -> IS_IDENTICAL .)
    LPAREN          reduce using rule 145 (condicion_booleana -> IS_IDENTICAL .)
    NOMBRE          reduce using rule 145 (condicion_booleana -> IS_IDENTICAL .)


state 354

    (146) condicion_booleana -> IS_NOT_IDENTICAL .

    CADENA          reduce using rule 146 (condicion_booleana -> IS_NOT_IDENTICAL .)
    BOOLEANO        reduce using rule 146 (condicion_booleana -> IS_NOT_IDENTICAL .)
    VARIABLE        reduce using rule 146 (condicion_booleana -> IS_NOT_IDENTICAL .)
    ENTERO          reduce using rule 146 (condicion_booleana -> IS_NOT_IDENTICAL .)
    DECIMAL         reduce using rule 146 (condicion_booleana -> IS_NOT_IDENTICAL .)
    LPAREN          reduce using rule 146 (condicion_booleana -> IS_NOT_IDENTICAL .)
    NOMBRE          reduce using rule 146 (condicion_booleana -> IS_NOT_IDENTICAL .)


state 355

    (73) imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN . SEMI

    SEMI            shift and go to state 435


state 356

    (74) imprimir -> VAR_DUMP LPAREN arrayvalues RPAREN . SEMI

    SEMI            shift and go to state 436


state 357

    (75) imprimir -> PRINT_R LPAREN arraysearch RPAREN . SEMI

    SEMI            shift and go to state 437


state 358

    (76) imprimir -> PRINT_R LPAREN VARIABLE RPAREN . SEMI

    SEMI            shift and go to state 438


state 359

    (77) imprimir -> PRINT_R LPAREN arrayvalues RPAREN . SEMI

    SEMI            shift and go to state 439


state 360

    (164) funcion_nparams -> FUNCTION NOMBRE LPAREN . params_list RPAREN stc_bloque_def
    (169) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN stc_bloque_def
    (170) funcion_blank -> FUNCTION NOMBRE LPAREN . RPAREN LBRACE empty RBRACE
    (165) params_list -> . params_list COMMA param
    (166) params_list -> . param
    (167) params_list -> . empty
    (162) param -> . VARIABLE
    (163) param -> . asignacion
    (187) empty -> .
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 440
    VARIABLE        shift and go to state 225
    COMMA           reduce using rule 187 (empty -> .)
    VAR             shift and go to state 47
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88

  ! RPAREN          [ reduce using rule 187 (empty -> .) ]

    params_list                    shift and go to state 396
    empty                          shift and go to state 224
    param                          shift and go to state 223
    asignacion                     shift and go to state 226
    proteccion                     shift and go to state 149
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50

state 361

    (262) constante -> DEFINE LPAREN CADENA COMMA . valor RPAREN SEMI
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 441
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 362

    (263) constante -> DEFINE LPAREN NOMBRE COMMA . ARRAY RPAREN SEMI

    ARRAY           shift and go to state 442


state 363

    (225) bconcat -> CADENA CONCAT CADENA SEMI .

    $end            reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RBRACE          reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    SEMI            reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BREAK           reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    RPAREN          reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    COMMA           reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    VARIABLE        reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    LPAREN          reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    CADENA          reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    BOOLEANO        reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    ENTERO          reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)
    DECIMAL         reduce using rule 225 (bconcat -> CADENA CONCAT CADENA SEMI .)


state 364

    (228) bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .

    $end            reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RBRACE          reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    SEMI            reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BREAK           reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    RPAREN          reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    COMMA           reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    VARIABLE        reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    LPAREN          reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    CADENA          reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    BOOLEANO        reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    ENTERO          reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)
    DECIMAL         reduce using rule 228 (bconcat -> CADENA CONCAT_EQUAL CADENA SEMI .)


state 365

    (189) lectura -> READLINE LPAREN CADENA RPAREN . SEMI

    SEMI            shift and go to state 443


state 366

    (190) lectura -> READLINE LPAREN RPAREN SEMI .

    $end            reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 190 (lectura -> READLINE LPAREN RPAREN SEMI .)


state 367

    (81) condicion_else -> ELSE LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 444


state 368

    (80) condicion_elseif -> ELSEIF LPAREN condicion . RPAREN LBRACE cuerpo RBRACE
    (94) condicion -> condicion . condicion_booleana condicion
    (95) condicion -> condicion . condicion_booleana comprobacion
    (140) condicion_booleana -> . AND
    (141) condicion_booleana -> . OR
    (142) condicion_booleana -> . XOR
    (143) condicion_booleana -> . IS_EQUAL
    (144) condicion_booleana -> . IS_NOT_EQUAL
    (145) condicion_booleana -> . IS_IDENTICAL
    (146) condicion_booleana -> . IS_NOT_IDENTICAL

    RPAREN          shift and go to state 445
    AND             shift and go to state 348
    OR              shift and go to state 349
    XOR             shift and go to state 350
    IS_EQUAL        shift and go to state 351
    IS_NOT_EQUAL    shift and go to state 352
    IS_IDENTICAL    shift and go to state 353
    IS_NOT_IDENTICAL shift and go to state 354

    condicion_booleana             shift and go to state 371

state 369

    (92) condicion -> LPAREN VARIABLE . operadores valor RPAREN operador_logico valor
    (93) condicion -> LPAREN VARIABLE . operadores valor RPAREN condicion_booleana valor
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 446

state 370

    (113) bwhile -> WHILE LPAREN condicion RPAREN . LBRACE stc_bloque RBRACE
    (114) bwhile -> WHILE LPAREN condicion RPAREN . COLON stc_bloque
    (115) bwhile -> WHILE LPAREN condicion RPAREN . SEMI

    LBRACE          shift and go to state 447
    COLON           shift and go to state 448
    SEMI            shift and go to state 449


state 371

    (94) condicion -> condicion condicion_booleana . condicion
    (95) condicion -> condicion condicion_booleana . comprobacion
    (86) condicion -> . VARIABLE operador_logico VARIABLE
    (87) condicion -> . valor operador_logico valor
    (88) condicion -> . VARIABLE operador_logico valor
    (89) condicion -> . VARIABLE condicion_booleana VARIABLE
    (90) condicion -> . valor condicion_booleana valor
    (91) condicion -> . VARIABLE condicion_booleana valor
    (92) condicion -> . LPAREN VARIABLE operadores valor RPAREN operador_logico valor
    (93) condicion -> . LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor
    (94) condicion -> . condicion condicion_booleana condicion
    (95) condicion -> . condicion condicion_booleana comprobacion
    (96) condicion -> . aumentoCasting
    (97) condicion -> . VARIABLE
    (98) condicion -> . funcionesCP
    (203) comprobacion -> . NOMBRE LPAREN valor RPAREN
    (204) comprobacion -> . NOMBRE LPAREN VARIABLE RPAREN
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 280
    LPAREN          shift and go to state 278
    NOMBRE          shift and go to state 452
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    condicion                      shift and go to state 450
    comprobacion                   shift and go to state 451
    valor                          shift and go to state 281
    aumentoCasting                 shift and go to state 282
    funcionesCP                    shift and go to state 283
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 372

    (86) condicion -> VARIABLE operador_logico . VARIABLE
    (88) condicion -> VARIABLE operador_logico . valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 453
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 454
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 373

    (89) condicion -> VARIABLE condicion_booleana . VARIABLE
    (91) condicion -> VARIABLE condicion_booleana . valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 455
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 456
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 374

    (243) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> VARIABLE EQUALS . VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (188) bcolas -> VARIABLE EQUALS . NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE EQUALS . NEW SPLSTACK LPAREN RPAREN SEMI

    VARIABLE        shift and go to state 457
    NEW             shift and go to state 238


state 375

    (131) operador_logico -> SMALLER .

    VARIABLE        reduce using rule 131 (operador_logico -> SMALLER .)
    CADENA          reduce using rule 131 (operador_logico -> SMALLER .)
    BOOLEANO        reduce using rule 131 (operador_logico -> SMALLER .)
    ENTERO          reduce using rule 131 (operador_logico -> SMALLER .)
    DECIMAL         reduce using rule 131 (operador_logico -> SMALLER .)


state 376

    (132) operador_logico -> GREATER .

    VARIABLE        reduce using rule 132 (operador_logico -> GREATER .)
    CADENA          reduce using rule 132 (operador_logico -> GREATER .)
    BOOLEANO        reduce using rule 132 (operador_logico -> GREATER .)
    ENTERO          reduce using rule 132 (operador_logico -> GREATER .)
    DECIMAL         reduce using rule 132 (operador_logico -> GREATER .)


state 377

    (133) operador_logico -> IS_SMALLER_OR_EQUAL .

    VARIABLE        reduce using rule 133 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    CADENA          reduce using rule 133 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    BOOLEANO        reduce using rule 133 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    ENTERO          reduce using rule 133 (operador_logico -> IS_SMALLER_OR_EQUAL .)
    DECIMAL         reduce using rule 133 (operador_logico -> IS_SMALLER_OR_EQUAL .)


state 378

    (134) operador_logico -> IS_GREATER_OR_EQUAL .

    VARIABLE        reduce using rule 134 (operador_logico -> IS_GREATER_OR_EQUAL .)
    CADENA          reduce using rule 134 (operador_logico -> IS_GREATER_OR_EQUAL .)
    BOOLEANO        reduce using rule 134 (operador_logico -> IS_GREATER_OR_EQUAL .)
    ENTERO          reduce using rule 134 (operador_logico -> IS_GREATER_OR_EQUAL .)
    DECIMAL         reduce using rule 134 (operador_logico -> IS_GREATER_OR_EQUAL .)


state 379

    (87) condicion -> valor operador_logico . valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 458
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 380

    (90) condicion -> valor condicion_booleana . valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 459
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 381

    (124) catches -> catches CATCH LPAREN . EXCEPTION VARIABLE RPAREN stc_bloque_def

    EXCEPTION       shift and go to state 460


state 382

    (117) bdo -> DO LBRACE cuerpo RBRACE . bwhile
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .

    WHILE           shift and go to state 58
    RBRACE          reduce using rule 116 (bwhile -> .)
    SEMI            reduce using rule 116 (bwhile -> .)
    $end            reduce using rule 116 (bwhile -> .)
    BREAK           reduce using rule 116 (bwhile -> .)

    bwhile                         shift and go to state 461

state 383

    (99) bfor -> FOR LPAREN asignacion condicion . SEMI for_incr RPAREN stc_bloque_def
    (94) condicion -> condicion . condicion_booleana condicion
    (95) condicion -> condicion . condicion_booleana comprobacion
    (140) condicion_booleana -> . AND
    (141) condicion_booleana -> . OR
    (142) condicion_booleana -> . XOR
    (143) condicion_booleana -> . IS_EQUAL
    (144) condicion_booleana -> . IS_NOT_EQUAL
    (145) condicion_booleana -> . IS_IDENTICAL
    (146) condicion_booleana -> . IS_NOT_IDENTICAL

    SEMI            shift and go to state 462
    AND             shift and go to state 348
    OR              shift and go to state 349
    XOR             shift and go to state 350
    IS_EQUAL        shift and go to state 351
    IS_NOT_EQUAL    shift and go to state 352
    IS_IDENTICAL    shift and go to state 353
    IS_NOT_IDENTICAL shift and go to state 354

    condicion_booleana             shift and go to state 371

state 384

    (112) bforeach -> FOREACH LPAREN VARIABLE AS . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 463


state 385

    (102) stc_bloque_def -> LBRACE stc_bloque . RBRACE
    (100) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 464
    SEMI            shift and go to state 465


state 386

    (103) stc_bloque_def -> LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 466


state 387

    (101) stc_bloque -> breturn .
    (24) cuerpo -> breturn .
    (182) breturn -> breturn . RBRACE

  ! reduce/reduce conflict for RBRACE resolved using rule 24 (cuerpo -> breturn .)
  ! shift/reduce conflict for RBRACE resolved as shift
    SEMI            reduce using rule 101 (stc_bloque -> breturn .)
    RBRACE          shift and go to state 91

  ! RBRACE          [ reduce using rule 101 (stc_bloque -> breturn .) ]
  ! RBRACE          [ reduce using rule 24 (cuerpo -> breturn .) ]


state 388

    (123) btry -> TRY LBRACE stc_bloque_def RBRACE . catches
    (124) catches -> . catches CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def
    (125) catches -> . empty
    (187) empty -> .

    CATCH           reduce using rule 187 (empty -> .)
    $end            reduce using rule 187 (empty -> .)
    RBRACE          reduce using rule 187 (empty -> .)
    SEMI            reduce using rule 187 (empty -> .)
    BREAK           reduce using rule 187 (empty -> .)

    catches                        shift and go to state 467
    empty                          shift and go to state 174

state 389

    (118) bswitch -> SWITCH LPAREN VARIABLE RPAREN . LBRACE innerSwitch RBRACE

    LBRACE          shift and go to state 468


state 390

    (172) brand -> RAND LPAREN ENTERO COMMA . ENTERO RPAREN SEMI

    ENTERO          shift and go to state 469


state 391

    (191) escribir -> FWRITE LPAREN NOMBRE COMMA . CADENA RPAREN SEMI

    CADENA          shift and go to state 470


state 392

    (192) btrim -> TRIM LPAREN NOMBRE LPAREN . NOMBRE RPAREN RPAREN SEMI

    NOMBRE          shift and go to state 471


state 393

    (201) otros -> SMALLER DIVISION NOMBRE GREATER .

    $end            reduce using rule 201 (otros -> SMALLER DIVISION NOMBRE GREATER .)
    RBRACE          reduce using rule 201 (otros -> SMALLER DIVISION NOMBRE GREATER .)
    SEMI            reduce using rule 201 (otros -> SMALLER DIVISION NOMBRE GREATER .)
    BREAK           reduce using rule 201 (otros -> SMALLER DIVISION NOMBRE GREATER .)


state 394

    (264) arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN . SEMI

    SEMI            shift and go to state 472


state 395

    (265) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA . valor RPAREN SEMI
    (266) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA . VARIABLE RPAREN SEMI
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 473
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 474
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 396

    (164) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list . RPAREN stc_bloque_def
    (165) params_list -> params_list . COMMA param

    RPAREN          shift and go to state 475
    COMMA           shift and go to state 317


state 397

    (169) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (170) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (168) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN . COLON VOID LBRACE empty RBRACE
    (102) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (103) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 477
    COLON           shift and go to state 478

    stc_bloque_def                 shift and go to state 476

state 398

    (78) condicion_if -> IF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE
    (79) condicion_if -> IF LPAREN condicion RPAREN . llamada_funcion
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI

    LBRACE          shift and go to state 479
    NOMBRE          shift and go to state 241

    llamada_funcion                shift and go to state 480

state 399

    (63) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET . SEMI

    SEMI            shift and go to state 481


state 400

    (71) imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI .

    $end            reduce using rule 71 (imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI .)
    RBRACE          reduce using rule 71 (imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI .)
    SEMI            reduce using rule 71 (imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI .)
    BREAK           reduce using rule 71 (imprimir -> ECHO funcionesCP_semi COMMA NOMBRE SEMI .)


state 401

    (151) operaciones_mat_par -> LPAREN valor operadores valor . RPAREN

    RPAREN          shift and go to state 482


state 402

    (152) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par . RPAREN

    RPAREN          shift and go to state 483


state 403

    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    EQUALS          shift and go to state 211


state 404

    (153) operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE . RPAREN
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 484
    EQUALS          shift and go to state 211


state 405

    (154) operaciones_mat_par -> LPAREN VARIABLE operadores valor . RPAREN operadores valor

    RPAREN          shift and go to state 485


state 406

    (155) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato . RPAREN
    (156) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato . RPAREN operadores tipoDato
    (51) valor -> tipoDato .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 486

  ! RPAREN          [ reduce using rule 51 (valor -> tipoDato .) ]


state 407

    (61) imprimir -> PRINT LPAREN valor RPAREN SEMI .

    $end            reduce using rule 61 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 61 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 61 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)
    BREAK           reduce using rule 61 (imprimir -> PRINT LPAREN valor RPAREN SEMI .)


state 408

    (241) casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 241 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 241 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 241 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)
    BREAK           reduce using rule 241 (casting -> LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 409

    (171) llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .

    $end            reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    RBRACE          reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    SEMI            reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    BREAK           reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    RPAREN          reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    COMMA           reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    VARIABLE        reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    LPAREN          reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    CADENA          reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    BOOLEANO        reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    ENTERO          reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    DECIMAL         reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    ELSE            reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)
    ELSEIF          reduce using rule 171 (llamada_funcion -> NOMBRE LPAREN params_list RPAREN SEMI .)


state 410

    (165) params_list -> params_list COMMA param .

    RPAREN          reduce using rule 165 (params_list -> params_list COMMA param .)
    COMMA           reduce using rule 165 (params_list -> params_list COMMA param .)


state 411

    (244) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE . operadores operaciones_mat_par SEMI
    (149) operaciones_mat -> VARIABLE operadores VARIABLE .
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SEMI            reduce using rule 149 (operaciones_mat -> VARIABLE operadores VARIABLE .)
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 487

state 412

    (243) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato . SEMI

    SEMI            shift and go to state 488


state 413

    (188) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 489


state 414

    (247) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN . RPAREN SEMI

    RPAREN          shift and go to state 490


state 415

    (240) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN . VARIABLE SEMI

    VARIABLE        shift and go to state 491


state 416

    (267) arrayvalues -> ARRAY_VALUES LPAREN VARIABLE . RPAREN

    RPAREN          shift and go to state 492


state 417

    (268) arraysearch -> ARRAY_SEARCH LPAREN valor . COMMA VARIABLE RPAREN

    COMMA           shift and go to state 493


state 418

    (183) array_def -> ARRAY LPAREN RPAREN .

    SEMI            reduce using rule 183 (array_def -> ARRAY LPAREN RPAREN .)


state 419

    (184) array_def -> ARRAY LPAREN array_elmnt . RPAREN
    (185) array_elmnt -> array_elmnt . COMMA valor

    RPAREN          shift and go to state 494
    COMMA           shift and go to state 495


state 420

    (186) array_elmnt -> valor .

    RPAREN          reduce using rule 186 (array_elmnt -> valor .)
    COMMA           reduce using rule 186 (array_elmnt -> valor .)


state 421

    (230) bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE . SEMI

    SEMI            shift and go to state 496


state 422

    (249) addpila -> VARIABLE FLECHA PUSH LPAREN VARIABLE . RPAREN SEMI
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 497
    EQUALS          shift and go to state 211


state 423

    (248) addpila -> VARIABLE FLECHA PUSH LPAREN valor . RPAREN SEMI

    RPAREN          shift and go to state 498


state 424

    (259) addcola -> VARIABLE FLECHA ENQUEUE LPAREN VARIABLE . RPAREN SEMI
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 499
    EQUALS          shift and go to state 211


state 425

    (258) addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor . RPAREN SEMI

    RPAREN          shift and go to state 500


state 426

    (261) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN VARIABLE . RPAREN SEMI
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 501
    EQUALS          shift and go to state 211


state 427

    (260) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor . RPAREN SEMI

    RPAREN          shift and go to state 502


state 428

    (250) poppila -> VARIABLE FLECHA POP LPAREN RPAREN . SEMI

    SEMI            shift and go to state 503


state 429

    (251) funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .

    SEMI            reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    $end            reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    COMMA           reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    RBRACE          reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    BREAK           reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    RPAREN          reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    AND             reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    OR              reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    XOR             reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    IS_EQUAL        reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 251 (funcionesCP -> VARIABLE FLECHA REWIND LPAREN RPAREN .)


state 430

    (252) funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .

    SEMI            reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    $end            reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    COMMA           reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    RBRACE          reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    BREAK           reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    RPAREN          reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    AND             reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    OR              reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    XOR             reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    IS_EQUAL        reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 252 (funcionesCP -> VARIABLE FLECHA VALID LPAREN RPAREN .)


state 431

    (253) funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .

    SEMI            reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    $end            reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    COMMA           reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    RBRACE          reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    BREAK           reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    RPAREN          reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    AND             reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    OR              reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    XOR             reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    IS_EQUAL        reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 253 (funcionesCP -> VARIABLE FLECHA COUNT LPAREN RPAREN .)


state 432

    (254) funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .

    SEMI            reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    $end            reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    COMMA           reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    RBRACE          reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    BREAK           reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    RPAREN          reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    AND             reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    OR              reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    XOR             reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    IS_EQUAL        reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 254 (funcionesCP -> VARIABLE FLECHA NEXT LPAREN RPAREN .)


state 433

    (255) funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .

    SEMI            reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    $end            reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    COMMA           reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    RBRACE          reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    BREAK           reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    RPAREN          reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    AND             reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    OR              reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    XOR             reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    IS_EQUAL        reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    IS_NOT_EQUAL    reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    IS_IDENTICAL    reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 255 (funcionesCP -> VARIABLE FLECHA CURRENT LPAREN RPAREN .)


state 434

    (245) aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .

    $end            reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    RBRACE          reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    SEMI            reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    BREAK           reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    RPAREN          reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    COMMA           reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    VARIABLE        reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    LPAREN          reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    CADENA          reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    BOOLEANO        reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    ENTERO          reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    DECIMAL         reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    AND             reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    OR              reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    XOR             reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_EQUAL        reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 245 (aumentoCasting -> VARIABLE operadores tipoDato condicion_booleana valor .)


state 435

    (73) imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI .

    $end            reduce using rule 73 (imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI .)
    RBRACE          reduce using rule 73 (imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI .)
    SEMI            reduce using rule 73 (imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI .)
    BREAK           reduce using rule 73 (imprimir -> VAR_DUMP LPAREN VARIABLE RPAREN SEMI .)


state 436

    (74) imprimir -> VAR_DUMP LPAREN arrayvalues RPAREN SEMI .

    $end            reduce using rule 74 (imprimir -> VAR_DUMP LPAREN arrayvalues RPAREN SEMI .)
    RBRACE          reduce using rule 74 (imprimir -> VAR_DUMP LPAREN arrayvalues RPAREN SEMI .)
    SEMI            reduce using rule 74 (imprimir -> VAR_DUMP LPAREN arrayvalues RPAREN SEMI .)
    BREAK           reduce using rule 74 (imprimir -> VAR_DUMP LPAREN arrayvalues RPAREN SEMI .)


state 437

    (75) imprimir -> PRINT_R LPAREN arraysearch RPAREN SEMI .

    $end            reduce using rule 75 (imprimir -> PRINT_R LPAREN arraysearch RPAREN SEMI .)
    RBRACE          reduce using rule 75 (imprimir -> PRINT_R LPAREN arraysearch RPAREN SEMI .)
    SEMI            reduce using rule 75 (imprimir -> PRINT_R LPAREN arraysearch RPAREN SEMI .)
    BREAK           reduce using rule 75 (imprimir -> PRINT_R LPAREN arraysearch RPAREN SEMI .)


state 438

    (76) imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI .

    $end            reduce using rule 76 (imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI .)
    RBRACE          reduce using rule 76 (imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI .)
    SEMI            reduce using rule 76 (imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI .)
    BREAK           reduce using rule 76 (imprimir -> PRINT_R LPAREN VARIABLE RPAREN SEMI .)


state 439

    (77) imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI .

    $end            reduce using rule 77 (imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI .)
    RBRACE          reduce using rule 77 (imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI .)
    SEMI            reduce using rule 77 (imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI .)
    BREAK           reduce using rule 77 (imprimir -> PRINT_R LPAREN arrayvalues RPAREN SEMI .)


state 440

    (169) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . stc_bloque_def
    (170) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN . LBRACE empty RBRACE
    (102) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (103) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 477

    stc_bloque_def                 shift and go to state 476

state 441

    (262) constante -> DEFINE LPAREN CADENA COMMA valor . RPAREN SEMI

    RPAREN          shift and go to state 504


state 442

    (263) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY . RPAREN SEMI

    RPAREN          shift and go to state 505


state 443

    (189) lectura -> READLINE LPAREN CADENA RPAREN SEMI .

    $end            reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    SEMI            reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BREAK           reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    COMMA           reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    CADENA          reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 189 (lectura -> READLINE LPAREN CADENA RPAREN SEMI .)


state 444

    (81) condicion_else -> ELSE LBRACE cuerpo RBRACE .

    $end            reduce using rule 81 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 81 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 81 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 81 (condicion_else -> ELSE LBRACE cuerpo RBRACE .)


state 445

    (80) condicion_elseif -> ELSEIF LPAREN condicion RPAREN . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 506


state 446

    (92) condicion -> LPAREN VARIABLE operadores . valor RPAREN operador_logico valor
    (93) condicion -> LPAREN VARIABLE operadores . valor RPAREN condicion_booleana valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 507
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 447

    (113) bwhile -> WHILE LPAREN condicion RPAREN LBRACE . stc_bloque RBRACE
    (100) stc_bloque -> . stc_bloque SEMI cuerpo
    (101) stc_bloque -> . breturn
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (187) empty -> .

    RETURN          shift and go to state 77
    RBRACE          reduce using rule 187 (empty -> .)
    SEMI            reduce using rule 187 (empty -> .)

    stc_bloque                     shift and go to state 508
    breturn                        shift and go to state 509
    empty                          shift and go to state 76

state 448

    (114) bwhile -> WHILE LPAREN condicion RPAREN COLON . stc_bloque
    (100) stc_bloque -> . stc_bloque SEMI cuerpo
    (101) stc_bloque -> . breturn
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (187) empty -> .

    RETURN          shift and go to state 77
    RBRACE          reduce using rule 187 (empty -> .)
    SEMI            reduce using rule 187 (empty -> .)
    $end            reduce using rule 187 (empty -> .)
    BREAK           reduce using rule 187 (empty -> .)

    stc_bloque                     shift and go to state 510
    breturn                        shift and go to state 509
    empty                          shift and go to state 76

state 449

    (115) bwhile -> WHILE LPAREN condicion RPAREN SEMI .

    $end            reduce using rule 115 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)
    RBRACE          reduce using rule 115 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)
    SEMI            reduce using rule 115 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)
    BREAK           reduce using rule 115 (bwhile -> WHILE LPAREN condicion RPAREN SEMI .)


state 450

    (94) condicion -> condicion condicion_booleana condicion .
    (94) condicion -> condicion . condicion_booleana condicion
    (95) condicion -> condicion . condicion_booleana comprobacion
    (140) condicion_booleana -> . AND
    (141) condicion_booleana -> . OR
    (142) condicion_booleana -> . XOR
    (143) condicion_booleana -> . IS_EQUAL
    (144) condicion_booleana -> . IS_NOT_EQUAL
    (145) condicion_booleana -> . IS_IDENTICAL
    (146) condicion_booleana -> . IS_NOT_IDENTICAL

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for IS_EQUAL resolved as shift
  ! shift/reduce conflict for IS_NOT_EQUAL resolved as shift
  ! shift/reduce conflict for IS_IDENTICAL resolved as shift
  ! shift/reduce conflict for IS_NOT_IDENTICAL resolved as shift
    RPAREN          reduce using rule 94 (condicion -> condicion condicion_booleana condicion .)
    SEMI            reduce using rule 94 (condicion -> condicion condicion_booleana condicion .)
    AND             shift and go to state 348
    OR              shift and go to state 349
    XOR             shift and go to state 350
    IS_EQUAL        shift and go to state 351
    IS_NOT_EQUAL    shift and go to state 352
    IS_IDENTICAL    shift and go to state 353
    IS_NOT_IDENTICAL shift and go to state 354

  ! AND             [ reduce using rule 94 (condicion -> condicion condicion_booleana condicion .) ]
  ! OR              [ reduce using rule 94 (condicion -> condicion condicion_booleana condicion .) ]
  ! XOR             [ reduce using rule 94 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_EQUAL        [ reduce using rule 94 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_NOT_EQUAL    [ reduce using rule 94 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_IDENTICAL    [ reduce using rule 94 (condicion -> condicion condicion_booleana condicion .) ]
  ! IS_NOT_IDENTICAL [ reduce using rule 94 (condicion -> condicion condicion_booleana condicion .) ]

    condicion_booleana             shift and go to state 371

state 451

    (95) condicion -> condicion condicion_booleana comprobacion .

    RPAREN          reduce using rule 95 (condicion -> condicion condicion_booleana comprobacion .)
    AND             reduce using rule 95 (condicion -> condicion condicion_booleana comprobacion .)
    OR              reduce using rule 95 (condicion -> condicion condicion_booleana comprobacion .)
    XOR             reduce using rule 95 (condicion -> condicion condicion_booleana comprobacion .)
    IS_EQUAL        reduce using rule 95 (condicion -> condicion condicion_booleana comprobacion .)
    IS_NOT_EQUAL    reduce using rule 95 (condicion -> condicion condicion_booleana comprobacion .)
    IS_IDENTICAL    reduce using rule 95 (condicion -> condicion condicion_booleana comprobacion .)
    IS_NOT_IDENTICAL reduce using rule 95 (condicion -> condicion condicion_booleana comprobacion .)
    SEMI            reduce using rule 95 (condicion -> condicion condicion_booleana comprobacion .)


state 452

    (203) comprobacion -> NOMBRE . LPAREN valor RPAREN
    (204) comprobacion -> NOMBRE . LPAREN VARIABLE RPAREN

    LPAREN          shift and go to state 511


state 453

    (86) condicion -> VARIABLE operador_logico VARIABLE .
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 86 (condicion -> VARIABLE operador_logico VARIABLE .)
    AND             reduce using rule 86 (condicion -> VARIABLE operador_logico VARIABLE .)
    OR              reduce using rule 86 (condicion -> VARIABLE operador_logico VARIABLE .)
    XOR             reduce using rule 86 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_EQUAL        reduce using rule 86 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 86 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_IDENTICAL    reduce using rule 86 (condicion -> VARIABLE operador_logico VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 86 (condicion -> VARIABLE operador_logico VARIABLE .)
    SEMI            reduce using rule 86 (condicion -> VARIABLE operador_logico VARIABLE .)
    EQUALS          shift and go to state 211


state 454

    (88) condicion -> VARIABLE operador_logico valor .

    RPAREN          reduce using rule 88 (condicion -> VARIABLE operador_logico valor .)
    AND             reduce using rule 88 (condicion -> VARIABLE operador_logico valor .)
    OR              reduce using rule 88 (condicion -> VARIABLE operador_logico valor .)
    XOR             reduce using rule 88 (condicion -> VARIABLE operador_logico valor .)
    IS_EQUAL        reduce using rule 88 (condicion -> VARIABLE operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 88 (condicion -> VARIABLE operador_logico valor .)
    IS_IDENTICAL    reduce using rule 88 (condicion -> VARIABLE operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 88 (condicion -> VARIABLE operador_logico valor .)
    SEMI            reduce using rule 88 (condicion -> VARIABLE operador_logico valor .)


state 455

    (89) condicion -> VARIABLE condicion_booleana VARIABLE .
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          reduce using rule 89 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    AND             reduce using rule 89 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    OR              reduce using rule 89 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    XOR             reduce using rule 89 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_EQUAL        reduce using rule 89 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_NOT_EQUAL    reduce using rule 89 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_IDENTICAL    reduce using rule 89 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    IS_NOT_IDENTICAL reduce using rule 89 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    SEMI            reduce using rule 89 (condicion -> VARIABLE condicion_booleana VARIABLE .)
    EQUALS          shift and go to state 211


state 456

    (91) condicion -> VARIABLE condicion_booleana valor .

    RPAREN          reduce using rule 91 (condicion -> VARIABLE condicion_booleana valor .)
    AND             reduce using rule 91 (condicion -> VARIABLE condicion_booleana valor .)
    OR              reduce using rule 91 (condicion -> VARIABLE condicion_booleana valor .)
    XOR             reduce using rule 91 (condicion -> VARIABLE condicion_booleana valor .)
    IS_EQUAL        reduce using rule 91 (condicion -> VARIABLE condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 91 (condicion -> VARIABLE condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 91 (condicion -> VARIABLE condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 91 (condicion -> VARIABLE condicion_booleana valor .)
    SEMI            reduce using rule 91 (condicion -> VARIABLE condicion_booleana valor .)


state 457

    (243) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores tipoDato SEMI
    (244) aumentoCasting -> VARIABLE EQUALS VARIABLE . operadores VARIABLE operadores operaciones_mat_par SEMI
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 512

state 458

    (87) condicion -> valor operador_logico valor .

    RPAREN          reduce using rule 87 (condicion -> valor operador_logico valor .)
    AND             reduce using rule 87 (condicion -> valor operador_logico valor .)
    OR              reduce using rule 87 (condicion -> valor operador_logico valor .)
    XOR             reduce using rule 87 (condicion -> valor operador_logico valor .)
    IS_EQUAL        reduce using rule 87 (condicion -> valor operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 87 (condicion -> valor operador_logico valor .)
    IS_IDENTICAL    reduce using rule 87 (condicion -> valor operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 87 (condicion -> valor operador_logico valor .)
    SEMI            reduce using rule 87 (condicion -> valor operador_logico valor .)


state 459

    (90) condicion -> valor condicion_booleana valor .

    RPAREN          reduce using rule 90 (condicion -> valor condicion_booleana valor .)
    AND             reduce using rule 90 (condicion -> valor condicion_booleana valor .)
    OR              reduce using rule 90 (condicion -> valor condicion_booleana valor .)
    XOR             reduce using rule 90 (condicion -> valor condicion_booleana valor .)
    IS_EQUAL        reduce using rule 90 (condicion -> valor condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 90 (condicion -> valor condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 90 (condicion -> valor condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 90 (condicion -> valor condicion_booleana valor .)
    SEMI            reduce using rule 90 (condicion -> valor condicion_booleana valor .)


state 460

    (124) catches -> catches CATCH LPAREN EXCEPTION . VARIABLE RPAREN stc_bloque_def

    VARIABLE        shift and go to state 513


state 461

    (117) bdo -> DO LBRACE cuerpo RBRACE bwhile .

    $end            reduce using rule 117 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    RBRACE          reduce using rule 117 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    SEMI            reduce using rule 117 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)
    BREAK           reduce using rule 117 (bdo -> DO LBRACE cuerpo RBRACE bwhile .)


state 462

    (99) bfor -> FOR LPAREN asignacion condicion SEMI . for_incr RPAREN stc_bloque_def
    (104) for_incr -> . VARIABLE SUMA SUMA
    (105) for_incr -> . SUMA SUMA VARIABLE
    (106) for_incr -> . VARIABLE RESTA RESTA
    (107) for_incr -> . RESTA RESTA VARIABLE
    (108) for_incr -> . VARIABLE SUMA EQUALS numero
    (109) for_incr -> . VARIABLE RESTA EQUALS numero

    VARIABLE        shift and go to state 515
    SUMA            shift and go to state 516
    RESTA           shift and go to state 517

    for_incr                       shift and go to state 514

state 463

    (112) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 518


state 464

    (102) stc_bloque_def -> LBRACE stc_bloque RBRACE .

    RBRACE          reduce using rule 102 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    $end            reduce using rule 102 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 102 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    BREAK           reduce using rule 102 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)
    CATCH           reduce using rule 102 (stc_bloque_def -> LBRACE stc_bloque RBRACE .)


state 465

    (100) stc_bloque -> stc_bloque SEMI . cuerpo
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (59) imprimir -> . ECHO valor SEMI
    (60) imprimir -> . PRINT valor SEMI
    (61) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (62) imprimir -> . PRINT bconcat
    (63) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (64) imprimir -> . ECHO bconcat
    (65) imprimir -> . ECHO operaciones_mat SEMI
    (66) imprimir -> . PRINT operaciones_mat SEMI
    (67) imprimir -> . ECHO VARIABLE SEMI
    (68) imprimir -> . PRINT VARIABLE SEMI
    (69) imprimir -> . ECHO funcionesCP_semi
    (70) imprimir -> . PRINT funcionesCP_semi
    (71) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (72) imprimir -> . ECHO poppila
    (73) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . VAR_DUMP LPAREN arrayvalues RPAREN SEMI
    (75) imprimir -> . PRINT_R LPAREN arraysearch RPAREN SEMI
    (76) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (77) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (157) funciones -> . funcion_nparams
    (158) funciones -> . proteccion funcion_nparams
    (159) funciones -> . funcion_blank
    (160) funciones -> . proteccion funcion_blank
    (161) funciones -> . funcion_void
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (262) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (263) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) condicion_ifelse -> . condicion_if
    (83) condicion_ifelse -> . condicion_if condicion_else
    (84) condicion_ifelse -> . condicion_if condicion_elseif
    (85) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .
    (117) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (99) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (110) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (111) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (112) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (123) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (118) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON
    (195) bgoto -> . GOTO NOMBRE SEMI
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (196) bcortes -> . EXIT SEMI
    (197) bcortes -> . BREAK SEMI
    (198) bcortes -> . DEFAULT SEMI
    (199) bcortes -> . CONTINUE SEMI
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (200) otros -> . SMALLER NOMBRE GREATER
    (201) otros -> . SMALLER DIVISION NOMBRE GREATER
    (202) otros -> . NOMBRE COLON
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (193) comment -> . COMENTARIOS
    (194) comment -> . DOC_COMENTARIOS
    (240) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (241) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (205) simbolos -> . LPAREN RPAREN
    (206) simbolos -> . LPAREN
    (207) simbolos -> . RPAREN
    (208) simbolos -> . LBRACKET RBRACKET
    (209) simbolos -> . LBRACKET
    (210) simbolos -> . RBRACKET
    (211) simbolos -> . LBRACE RBRACE
    (212) simbolos -> . LBRACE
    (213) simbolos -> . RBRACE instrucciones
    (214) simbolos -> . OPEN_TAG CLOSE_TAG
    (215) simbolos -> . OPEN_TAG
    (216) simbolos -> . CLOSE_TAG
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (248) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> . VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (264) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (265) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI
    (250) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (78) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (187) empty -> .
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
  ! reduce/reduce conflict for SEMI resolved using rule 116 (bwhile -> .)
  ! reduce/reduce conflict for $end resolved using rule 116 (bwhile -> .)
  ! shift/reduce conflict for BREAK resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    SEMI            reduce using rule 116 (bwhile -> .)
    $end            reduce using rule 116 (bwhile -> .)
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 116 (bwhile -> .) ]
  ! BREAK           [ reduce using rule 116 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 187 (empty -> .) ]
  ! SEMI            [ reduce using rule 187 (empty -> .) ]
  ! $end            [ reduce using rule 187 (empty -> .) ]
  ! BREAK           [ reduce using rule 187 (empty -> .) ]

    cuerpo                         shift and go to state 519
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 466

    (103) stc_bloque_def -> LBRACE cuerpo RBRACE .

    RBRACE          reduce using rule 103 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    $end            reduce using rule 103 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 103 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 103 (stc_bloque_def -> LBRACE cuerpo RBRACE .)
    CATCH           reduce using rule 103 (stc_bloque_def -> LBRACE cuerpo RBRACE .)


state 467

    (123) btry -> TRY LBRACE stc_bloque_def RBRACE catches .
    (124) catches -> catches . CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def

    $end            reduce using rule 123 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    RBRACE          reduce using rule 123 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    SEMI            reduce using rule 123 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    BREAK           reduce using rule 123 (btry -> TRY LBRACE stc_bloque_def RBRACE catches .)
    CATCH           shift and go to state 284


state 468

    (118) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE . innerSwitch RBRACE
    (121) innerSwitch -> . bcase cuerpo BREAK SEMI
    (122) innerSwitch -> . bcase cuerpo BREAK SEMI innerSwitch
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON

    CASE            shift and go to state 66

    innerSwitch                    shift and go to state 520
    bcase                          shift and go to state 521

state 469

    (172) brand -> RAND LPAREN ENTERO COMMA ENTERO . RPAREN SEMI

    RPAREN          shift and go to state 522


state 470

    (191) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA . RPAREN SEMI

    RPAREN          shift and go to state 523


state 471

    (192) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE . RPAREN RPAREN SEMI

    RPAREN          shift and go to state 524


state 472

    (264) arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI .

    $end            reduce using rule 264 (arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI .)
    RBRACE          reduce using rule 264 (arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI .)
    SEMI            reduce using rule 264 (arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI .)
    BREAK           reduce using rule 264 (arraypop -> ARRAY_POP LPAREN VARIABLE RPAREN SEMI .)


state 473

    (266) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE . RPAREN SEMI
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 525
    EQUALS          shift and go to state 211


state 474

    (265) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor . RPAREN SEMI

    RPAREN          shift and go to state 526


state 475

    (164) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN . stc_bloque_def
    (102) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (103) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 288

    stc_bloque_def                 shift and go to state 527

state 476

    (169) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .

    $end            reduce using rule 169 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 169 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    SEMI            reduce using rule 169 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)
    BREAK           reduce using rule 169 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def .)


state 477

    (170) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE . empty RBRACE
    (102) stc_bloque_def -> LBRACE . stc_bloque RBRACE
    (103) stc_bloque_def -> LBRACE . cuerpo RBRACE
    (187) empty -> .
    (100) stc_bloque -> . stc_bloque SEMI cuerpo
    (101) stc_bloque -> . breturn
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (59) imprimir -> . ECHO valor SEMI
    (60) imprimir -> . PRINT valor SEMI
    (61) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (62) imprimir -> . PRINT bconcat
    (63) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (64) imprimir -> . ECHO bconcat
    (65) imprimir -> . ECHO operaciones_mat SEMI
    (66) imprimir -> . PRINT operaciones_mat SEMI
    (67) imprimir -> . ECHO VARIABLE SEMI
    (68) imprimir -> . PRINT VARIABLE SEMI
    (69) imprimir -> . ECHO funcionesCP_semi
    (70) imprimir -> . PRINT funcionesCP_semi
    (71) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (72) imprimir -> . ECHO poppila
    (73) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . VAR_DUMP LPAREN arrayvalues RPAREN SEMI
    (75) imprimir -> . PRINT_R LPAREN arraysearch RPAREN SEMI
    (76) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (77) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (157) funciones -> . funcion_nparams
    (158) funciones -> . proteccion funcion_nparams
    (159) funciones -> . funcion_blank
    (160) funciones -> . proteccion funcion_blank
    (161) funciones -> . funcion_void
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (262) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (263) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) condicion_ifelse -> . condicion_if
    (83) condicion_ifelse -> . condicion_if condicion_else
    (84) condicion_ifelse -> . condicion_if condicion_elseif
    (85) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .
    (117) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (99) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (110) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (111) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (112) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (123) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (118) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON
    (195) bgoto -> . GOTO NOMBRE SEMI
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (196) bcortes -> . EXIT SEMI
    (197) bcortes -> . BREAK SEMI
    (198) bcortes -> . DEFAULT SEMI
    (199) bcortes -> . CONTINUE SEMI
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (200) otros -> . SMALLER NOMBRE GREATER
    (201) otros -> . SMALLER DIVISION NOMBRE GREATER
    (202) otros -> . NOMBRE COLON
    (193) comment -> . COMENTARIOS
    (194) comment -> . DOC_COMENTARIOS
    (240) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (241) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (205) simbolos -> . LPAREN RPAREN
    (206) simbolos -> . LPAREN
    (207) simbolos -> . RPAREN
    (208) simbolos -> . LBRACKET RBRACKET
    (209) simbolos -> . LBRACKET
    (210) simbolos -> . RBRACKET
    (211) simbolos -> . LBRACE RBRACE
    (212) simbolos -> . LBRACE
    (213) simbolos -> . RBRACE instrucciones
    (214) simbolos -> . OPEN_TAG CLOSE_TAG
    (215) simbolos -> . OPEN_TAG
    (216) simbolos -> . CLOSE_TAG
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (248) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> . VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (264) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (265) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI
    (250) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (78) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! reduce/reduce conflict for RBRACE resolved using rule 116 (bwhile -> .)
  ! shift/reduce conflict for RBRACE resolved as shift
    SEMI            reduce using rule 187 (empty -> .)
    RETURN          shift and go to state 77
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 187 (empty -> .) ]
  ! RBRACE          [ reduce using rule 116 (bwhile -> .) ]

    empty                          shift and go to state 528
    stc_bloque                     shift and go to state 385
    cuerpo                         shift and go to state 386
    breturn                        shift and go to state 387
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    funcionesCP                    shift and go to state 82

state 478

    (168) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON . VOID LBRACE empty RBRACE

    VOID            shift and go to state 529


state 479

    (78) condicion_if -> IF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (59) imprimir -> . ECHO valor SEMI
    (60) imprimir -> . PRINT valor SEMI
    (61) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (62) imprimir -> . PRINT bconcat
    (63) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (64) imprimir -> . ECHO bconcat
    (65) imprimir -> . ECHO operaciones_mat SEMI
    (66) imprimir -> . PRINT operaciones_mat SEMI
    (67) imprimir -> . ECHO VARIABLE SEMI
    (68) imprimir -> . PRINT VARIABLE SEMI
    (69) imprimir -> . ECHO funcionesCP_semi
    (70) imprimir -> . PRINT funcionesCP_semi
    (71) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (72) imprimir -> . ECHO poppila
    (73) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . VAR_DUMP LPAREN arrayvalues RPAREN SEMI
    (75) imprimir -> . PRINT_R LPAREN arraysearch RPAREN SEMI
    (76) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (77) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (157) funciones -> . funcion_nparams
    (158) funciones -> . proteccion funcion_nparams
    (159) funciones -> . funcion_blank
    (160) funciones -> . proteccion funcion_blank
    (161) funciones -> . funcion_void
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (262) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (263) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) condicion_ifelse -> . condicion_if
    (83) condicion_ifelse -> . condicion_if condicion_else
    (84) condicion_ifelse -> . condicion_if condicion_elseif
    (85) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .
    (117) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (99) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (110) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (111) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (112) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (123) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (118) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON
    (195) bgoto -> . GOTO NOMBRE SEMI
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (196) bcortes -> . EXIT SEMI
    (197) bcortes -> . BREAK SEMI
    (198) bcortes -> . DEFAULT SEMI
    (199) bcortes -> . CONTINUE SEMI
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (200) otros -> . SMALLER NOMBRE GREATER
    (201) otros -> . SMALLER DIVISION NOMBRE GREATER
    (202) otros -> . NOMBRE COLON
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (193) comment -> . COMENTARIOS
    (194) comment -> . DOC_COMENTARIOS
    (240) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (241) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (205) simbolos -> . LPAREN RPAREN
    (206) simbolos -> . LPAREN
    (207) simbolos -> . RPAREN
    (208) simbolos -> . LBRACKET RBRACKET
    (209) simbolos -> . LBRACKET
    (210) simbolos -> . RBRACKET
    (211) simbolos -> . LBRACE RBRACE
    (212) simbolos -> . LBRACE
    (213) simbolos -> . RBRACE instrucciones
    (214) simbolos -> . OPEN_TAG CLOSE_TAG
    (215) simbolos -> . OPEN_TAG
    (216) simbolos -> . CLOSE_TAG
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (248) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> . VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (264) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (265) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI
    (250) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (78) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (187) empty -> .
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 116 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 187 (empty -> .) ]

    cuerpo                         shift and go to state 530
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 480

    (79) condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .

    ELSE            reduce using rule 79 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    ELSEIF          reduce using rule 79 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    $end            reduce using rule 79 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    RBRACE          reduce using rule 79 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    SEMI            reduce using rule 79 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)
    BREAK           reduce using rule 79 (condicion_if -> IF LPAREN condicion RPAREN llamada_funcion .)


state 481

    (63) imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .

    $end            reduce using rule 63 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    RBRACE          reduce using rule 63 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    SEMI            reduce using rule 63 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)
    BREAK           reduce using rule 63 (imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI .)


state 482

    (151) operaciones_mat_par -> LPAREN valor operadores valor RPAREN .

    SEMI            reduce using rule 151 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)
    RPAREN          reduce using rule 151 (operaciones_mat_par -> LPAREN valor operadores valor RPAREN .)


state 483

    (152) operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .

    SEMI            reduce using rule 152 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)
    RPAREN          reduce using rule 152 (operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN .)


state 484

    (153) operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .

    SEMI            reduce using rule 153 (operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .)
    RPAREN          reduce using rule 153 (operaciones_mat_par -> LPAREN VARIABLE operadores VARIABLE RPAREN .)


state 485

    (154) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN . operadores valor
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 531

state 486

    (155) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN .
    (156) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN . operadores tipoDato
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SEMI            reduce using rule 155 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN .)
    RPAREN          reduce using rule 155 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN .)
    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 532

state 487

    (244) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores . operaciones_mat_par SEMI
    (151) operaciones_mat_par -> . LPAREN valor operadores valor RPAREN
    (152) operaciones_mat_par -> . LPAREN valor operadores operaciones_mat_par RPAREN
    (153) operaciones_mat_par -> . LPAREN VARIABLE operadores VARIABLE RPAREN
    (154) operaciones_mat_par -> . LPAREN VARIABLE operadores valor RPAREN operadores valor
    (155) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN
    (156) operaciones_mat_par -> . LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato

    LPAREN          shift and go to state 105

    operaciones_mat_par            shift and go to state 533

state 488

    (243) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .

    $end            reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RBRACE          reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    SEMI            reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BREAK           reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    RPAREN          reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    COMMA           reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    VARIABLE        reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    LPAREN          reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    CADENA          reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    BOOLEANO        reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    ENTERO          reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    DECIMAL         reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    AND             reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    OR              reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    XOR             reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_EQUAL        reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_NOT_EQUAL    reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_IDENTICAL    reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)
    IS_NOT_IDENTICAL reduce using rule 243 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores tipoDato SEMI .)


state 489

    (188) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN . SEMI

    SEMI            shift and go to state 534


state 490

    (247) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN . SEMI

    SEMI            shift and go to state 535


state 491

    (240) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE . SEMI

    SEMI            shift and go to state 536


state 492

    (267) arrayvalues -> ARRAY_VALUES LPAREN VARIABLE RPAREN .

    SEMI            reduce using rule 267 (arrayvalues -> ARRAY_VALUES LPAREN VARIABLE RPAREN .)
    RPAREN          reduce using rule 267 (arrayvalues -> ARRAY_VALUES LPAREN VARIABLE RPAREN .)


state 493

    (268) arraysearch -> ARRAY_SEARCH LPAREN valor COMMA . VARIABLE RPAREN

    VARIABLE        shift and go to state 537


state 494

    (184) array_def -> ARRAY LPAREN array_elmnt RPAREN .

    SEMI            reduce using rule 184 (array_def -> ARRAY LPAREN array_elmnt RPAREN .)


state 495

    (185) array_elmnt -> array_elmnt COMMA . valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 538
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 496

    (230) bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .

    $end            reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    RBRACE          reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    SEMI            reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    BREAK           reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    RPAREN          reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    COMMA           reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    VARIABLE        reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    LPAREN          reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    CADENA          reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    BOOLEANO        reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    ENTERO          reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)
    DECIMAL         reduce using rule 230 (bconcat -> VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI .)


state 497

    (249) addpila -> VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN . SEMI

    SEMI            shift and go to state 539


state 498

    (248) addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 540


state 499

    (259) addcola -> VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN . SEMI

    SEMI            shift and go to state 541


state 500

    (258) addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 542


state 501

    (261) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN . SEMI

    SEMI            shift and go to state 543


state 502

    (260) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN . SEMI

    SEMI            shift and go to state 544


state 503

    (250) poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI .

    $end            reduce using rule 250 (poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 250 (poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 250 (poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 250 (poppila -> VARIABLE FLECHA POP LPAREN RPAREN SEMI .)


state 504

    (262) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN . SEMI

    SEMI            shift and go to state 545


state 505

    (263) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN . SEMI

    SEMI            shift and go to state 546


state 506

    (80) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE . cuerpo RBRACE
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (59) imprimir -> . ECHO valor SEMI
    (60) imprimir -> . PRINT valor SEMI
    (61) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (62) imprimir -> . PRINT bconcat
    (63) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (64) imprimir -> . ECHO bconcat
    (65) imprimir -> . ECHO operaciones_mat SEMI
    (66) imprimir -> . PRINT operaciones_mat SEMI
    (67) imprimir -> . ECHO VARIABLE SEMI
    (68) imprimir -> . PRINT VARIABLE SEMI
    (69) imprimir -> . ECHO funcionesCP_semi
    (70) imprimir -> . PRINT funcionesCP_semi
    (71) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (72) imprimir -> . ECHO poppila
    (73) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . VAR_DUMP LPAREN arrayvalues RPAREN SEMI
    (75) imprimir -> . PRINT_R LPAREN arraysearch RPAREN SEMI
    (76) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (77) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (157) funciones -> . funcion_nparams
    (158) funciones -> . proteccion funcion_nparams
    (159) funciones -> . funcion_blank
    (160) funciones -> . proteccion funcion_blank
    (161) funciones -> . funcion_void
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (262) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (263) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) condicion_ifelse -> . condicion_if
    (83) condicion_ifelse -> . condicion_if condicion_else
    (84) condicion_ifelse -> . condicion_if condicion_elseif
    (85) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .
    (117) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (99) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (110) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (111) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (112) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (123) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (118) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON
    (195) bgoto -> . GOTO NOMBRE SEMI
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (196) bcortes -> . EXIT SEMI
    (197) bcortes -> . BREAK SEMI
    (198) bcortes -> . DEFAULT SEMI
    (199) bcortes -> . CONTINUE SEMI
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (200) otros -> . SMALLER NOMBRE GREATER
    (201) otros -> . SMALLER DIVISION NOMBRE GREATER
    (202) otros -> . NOMBRE COLON
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (193) comment -> . COMENTARIOS
    (194) comment -> . DOC_COMENTARIOS
    (240) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (241) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (205) simbolos -> . LPAREN RPAREN
    (206) simbolos -> . LPAREN
    (207) simbolos -> . RPAREN
    (208) simbolos -> . LBRACKET RBRACKET
    (209) simbolos -> . LBRACKET
    (210) simbolos -> . RBRACKET
    (211) simbolos -> . LBRACE RBRACE
    (212) simbolos -> . LBRACE
    (213) simbolos -> . RBRACE instrucciones
    (214) simbolos -> . OPEN_TAG CLOSE_TAG
    (215) simbolos -> . OPEN_TAG
    (216) simbolos -> . CLOSE_TAG
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (248) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> . VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (264) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (265) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI
    (250) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (78) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (187) empty -> .
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! RBRACE          [ reduce using rule 116 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 187 (empty -> .) ]

    cuerpo                         shift and go to state 547
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bcase                          shift and go to state 16
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 507

    (92) condicion -> LPAREN VARIABLE operadores valor . RPAREN operador_logico valor
    (93) condicion -> LPAREN VARIABLE operadores valor . RPAREN condicion_booleana valor

    RPAREN          shift and go to state 548


state 508

    (113) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque . RBRACE
    (100) stc_bloque -> stc_bloque . SEMI cuerpo

    RBRACE          shift and go to state 549
    SEMI            shift and go to state 465


state 509

    (101) stc_bloque -> breturn .
    (182) breturn -> breturn . RBRACE

  ! shift/reduce conflict for RBRACE resolved as shift
    SEMI            reduce using rule 101 (stc_bloque -> breturn .)
    $end            reduce using rule 101 (stc_bloque -> breturn .)
    BREAK           reduce using rule 101 (stc_bloque -> breturn .)
    RBRACE          shift and go to state 91

  ! RBRACE          [ reduce using rule 101 (stc_bloque -> breturn .) ]


state 510

    (114) bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .
    (100) stc_bloque -> stc_bloque . SEMI cuerpo

  ! shift/reduce conflict for SEMI resolved as shift
    $end            reduce using rule 114 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    RBRACE          reduce using rule 114 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    BREAK           reduce using rule 114 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .)
    SEMI            shift and go to state 465

  ! SEMI            [ reduce using rule 114 (bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque .) ]


state 511

    (203) comprobacion -> NOMBRE LPAREN . valor RPAREN
    (204) comprobacion -> NOMBRE LPAREN . VARIABLE RPAREN
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 551
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 550
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 512

    (243) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . tipoDato SEMI
    (244) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores . VARIABLE operadores operaciones_mat_par SEMI
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    VARIABLE        shift and go to state 552
    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 412
    numero                         shift and go to state 106

state 513

    (124) catches -> catches CATCH LPAREN EXCEPTION VARIABLE . RPAREN stc_bloque_def

    RPAREN          shift and go to state 553


state 514

    (99) bfor -> FOR LPAREN asignacion condicion SEMI for_incr . RPAREN stc_bloque_def

    RPAREN          shift and go to state 554


state 515

    (104) for_incr -> VARIABLE . SUMA SUMA
    (106) for_incr -> VARIABLE . RESTA RESTA
    (108) for_incr -> VARIABLE . SUMA EQUALS numero
    (109) for_incr -> VARIABLE . RESTA EQUALS numero

    SUMA            shift and go to state 555
    RESTA           shift and go to state 556


state 516

    (105) for_incr -> SUMA . SUMA VARIABLE

    SUMA            shift and go to state 557


state 517

    (107) for_incr -> RESTA . RESTA VARIABLE

    RESTA           shift and go to state 558


state 518

    (112) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN . stc_bloque_def
    (102) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (103) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 288

    stc_bloque_def                 shift and go to state 559

state 519

    (100) stc_bloque -> stc_bloque SEMI cuerpo .

    RBRACE          reduce using rule 100 (stc_bloque -> stc_bloque SEMI cuerpo .)
    SEMI            reduce using rule 100 (stc_bloque -> stc_bloque SEMI cuerpo .)
    $end            reduce using rule 100 (stc_bloque -> stc_bloque SEMI cuerpo .)
    BREAK           reduce using rule 100 (stc_bloque -> stc_bloque SEMI cuerpo .)


state 520

    (118) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch . RBRACE

    RBRACE          shift and go to state 560


state 521

    (121) innerSwitch -> bcase . cuerpo BREAK SEMI
    (122) innerSwitch -> bcase . cuerpo BREAK SEMI innerSwitch
    (1) cuerpo -> . imprimir
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . funciones
    (4) cuerpo -> . llamada_funcion
    (5) cuerpo -> . constante
    (6) cuerpo -> . lectura
    (7) cuerpo -> . condicion_ifelse
    (8) cuerpo -> . bwhile
    (9) cuerpo -> . bdo
    (10) cuerpo -> . bfor
    (11) cuerpo -> . incrementOp
    (12) cuerpo -> . bforeach
    (13) cuerpo -> . btry
    (14) cuerpo -> . bswitch
    (15) cuerpo -> . bcase
    (16) cuerpo -> . bgoto
    (17) cuerpo -> . bcolas
    (18) cuerpo -> . bpila
    (19) cuerpo -> . bcortes
    (20) cuerpo -> . brand
    (21) cuerpo -> . escribir
    (22) cuerpo -> . btrim
    (23) cuerpo -> . otros
    (24) cuerpo -> . breturn
    (25) cuerpo -> . comment
    (26) cuerpo -> . casting
    (27) cuerpo -> . bconcat
    (28) cuerpo -> . simbolos
    (29) cuerpo -> . funcionesCP_semi
    (30) cuerpo -> . addpila
    (31) cuerpo -> . addcola
    (32) cuerpo -> . minuscola
    (33) cuerpo -> . arraypop
    (34) cuerpo -> . arraypush
    (35) cuerpo -> . poppila
    (59) imprimir -> . ECHO valor SEMI
    (60) imprimir -> . PRINT valor SEMI
    (61) imprimir -> . PRINT LPAREN valor RPAREN SEMI
    (62) imprimir -> . PRINT bconcat
    (63) imprimir -> . ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI
    (64) imprimir -> . ECHO bconcat
    (65) imprimir -> . ECHO operaciones_mat SEMI
    (66) imprimir -> . PRINT operaciones_mat SEMI
    (67) imprimir -> . ECHO VARIABLE SEMI
    (68) imprimir -> . PRINT VARIABLE SEMI
    (69) imprimir -> . ECHO funcionesCP_semi
    (70) imprimir -> . PRINT funcionesCP_semi
    (71) imprimir -> . ECHO funcionesCP_semi COMMA NOMBRE SEMI
    (72) imprimir -> . ECHO poppila
    (73) imprimir -> . VAR_DUMP LPAREN VARIABLE RPAREN SEMI
    (74) imprimir -> . VAR_DUMP LPAREN arrayvalues RPAREN SEMI
    (75) imprimir -> . PRINT_R LPAREN arraysearch RPAREN SEMI
    (76) imprimir -> . PRINT_R LPAREN VARIABLE RPAREN SEMI
    (77) imprimir -> . PRINT_R LPAREN arrayvalues RPAREN SEMI
    (36) asignacion -> . VARIABLE EQUALS valor SEMI
    (37) asignacion -> . VAR asignacion
    (38) asignacion -> . proteccion asignacion
    (39) asignacion -> . VARIABLE EQUALS brand
    (40) asignacion -> . VARIABLE EQUALS escribir
    (41) asignacion -> . VARIABLE EQUALS btrim
    (42) asignacion -> . VARIABLE EQUALS lectura
    (43) asignacion -> . VARIABLE EQUALS bconcat
    (44) asignacion -> . asignacion_array
    (45) asignacion -> . VARIABLE EQUALS operaciones_mat SEMI
    (46) asignacion -> . aumentoCasting
    (47) asignacion -> . VARIABLE EQUALS llamada_funcion
    (48) asignacion -> . VARIABLE EQUALS arrayvalues SEMI
    (49) asignacion -> . VARIABLE EQUALS arraysearch SEMI
    (157) funciones -> . funcion_nparams
    (158) funciones -> . proteccion funcion_nparams
    (159) funciones -> . funcion_blank
    (160) funciones -> . proteccion funcion_blank
    (161) funciones -> . funcion_void
    (171) llamada_funcion -> . NOMBRE LPAREN params_list RPAREN SEMI
    (262) constante -> . DEFINE LPAREN CADENA COMMA valor RPAREN SEMI
    (263) constante -> . DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI
    (189) lectura -> . READLINE LPAREN CADENA RPAREN SEMI
    (190) lectura -> . READLINE LPAREN RPAREN SEMI
    (82) condicion_ifelse -> . condicion_if
    (83) condicion_ifelse -> . condicion_if condicion_else
    (84) condicion_ifelse -> . condicion_if condicion_elseif
    (85) condicion_ifelse -> . condicion_if condicion_elseif condicion_else
    (113) bwhile -> . WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE
    (114) bwhile -> . WHILE LPAREN condicion RPAREN COLON stc_bloque
    (115) bwhile -> . WHILE LPAREN condicion RPAREN SEMI
    (116) bwhile -> .
    (117) bdo -> . DO LBRACE cuerpo RBRACE bwhile
    (99) bfor -> . FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def
    (110) incrementOp -> . VARIABLE SUMA SUMA SEMI
    (111) incrementOp -> . VARIABLE RESTA RESTA SEMI
    (112) bforeach -> . FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def
    (123) btry -> . TRY LBRACE stc_bloque_def RBRACE catches
    (118) bswitch -> . SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON
    (195) bgoto -> . GOTO NOMBRE SEMI
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (196) bcortes -> . EXIT SEMI
    (197) bcortes -> . BREAK SEMI
    (198) bcortes -> . DEFAULT SEMI
    (199) bcortes -> . CONTINUE SEMI
    (172) brand -> . RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI
    (191) escribir -> . FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI
    (192) btrim -> . TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI
    (200) otros -> . SMALLER NOMBRE GREATER
    (201) otros -> . SMALLER DIVISION NOMBRE GREATER
    (202) otros -> . NOMBRE COLON
    (177) breturn -> . empty
    (178) breturn -> . RETURN SEMI
    (179) breturn -> . RETURN NULL SEMI
    (180) breturn -> . RETURN VARIABLE SEMI
    (181) breturn -> . RETURN BOOLEANO SEMI
    (182) breturn -> . breturn RBRACE
    (193) comment -> . COMENTARIOS
    (194) comment -> . DOC_COMENTARIOS
    (240) casting -> . VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI
    (241) casting -> . LPAREN tiposCast RPAREN VARIABLE SEMI
    (225) bconcat -> . CADENA CONCAT CADENA SEMI
    (226) bconcat -> . VARIABLE CONCAT CADENA SEMI
    (227) bconcat -> . VARIABLE CONCAT_EQUAL CADENA SEMI
    (228) bconcat -> . CADENA CONCAT_EQUAL CADENA SEMI
    (229) bconcat -> . VARIABLE CONCAT VARIABLE SEMI
    (230) bconcat -> . VARIABLE CONCAT CADENA CONCAT VARIABLE SEMI
    (205) simbolos -> . LPAREN RPAREN
    (206) simbolos -> . LPAREN
    (207) simbolos -> . RPAREN
    (208) simbolos -> . LBRACKET RBRACKET
    (209) simbolos -> . LBRACKET
    (210) simbolos -> . RBRACKET
    (211) simbolos -> . LBRACE RBRACE
    (212) simbolos -> . LBRACE
    (213) simbolos -> . RBRACE instrucciones
    (214) simbolos -> . OPEN_TAG CLOSE_TAG
    (215) simbolos -> . OPEN_TAG
    (216) simbolos -> . CLOSE_TAG
    (256) funcionesCP_semi -> . funcionesCP
    (257) funcionesCP_semi -> . funcionesCP SEMI
    (248) addpila -> . VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI
    (249) addpila -> . VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI
    (258) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI
    (259) addcola -> . VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI
    (260) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI
    (261) minuscola -> . VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI
    (264) arraypop -> . ARRAY_POP LPAREN VARIABLE RPAREN SEMI
    (265) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI
    (266) arraypush -> . ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI
    (250) poppila -> . VARIABLE FLECHA POP LPAREN RPAREN SEMI
    (173) proteccion -> . PUBLIC
    (174) proteccion -> . PRIVATE
    (175) proteccion -> . PROTECTED
    (176) proteccion -> . STATIC
    (50) asignacion_array -> . VARIABLE EQUALS array_def SEMI
    (242) aumentoCasting -> . VARIABLE incrementos_mat tipoDato SEMI
    (243) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores tipoDato SEMI
    (244) aumentoCasting -> . VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI
    (245) aumentoCasting -> . VARIABLE operadores tipoDato condicion_booleana valor
    (246) aumentoCasting -> . VARIABLE incrementos_mat VARIABLE SEMI
    (164) funcion_nparams -> . FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def
    (169) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def
    (170) funcion_blank -> . FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE
    (168) funcion_void -> . FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE
    (78) condicion_if -> . IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE
    (79) condicion_if -> . IF LPAREN condicion RPAREN llamada_funcion
    (187) empty -> .
    (251) funcionesCP -> . VARIABLE FLECHA REWIND LPAREN RPAREN
    (252) funcionesCP -> . VARIABLE FLECHA VALID LPAREN RPAREN
    (253) funcionesCP -> . VARIABLE FLECHA COUNT LPAREN RPAREN
    (254) funcionesCP -> . VARIABLE FLECHA NEXT LPAREN RPAREN
    (255) funcionesCP -> . VARIABLE FLECHA CURRENT LPAREN RPAREN

  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
    ECHO            shift and go to state 37
    PRINT           shift and go to state 38
    VAR_DUMP        shift and go to state 45
    PRINT_R         shift and go to state 46
    VARIABLE        shift and go to state 44
    VAR             shift and go to state 47
    NOMBRE          shift and go to state 41
    DEFINE          shift and go to state 54
    READLINE        shift and go to state 56
    WHILE           shift and go to state 58
    DO              shift and go to state 61
    FOR             shift and go to state 62
    FOREACH         shift and go to state 63
    TRY             shift and go to state 64
    SWITCH          shift and go to state 65
    CASE            shift and go to state 66
    GOTO            shift and go to state 67
    EXIT            shift and go to state 68
    BREAK           shift and go to state 69
    DEFAULT         shift and go to state 70
    CONTINUE        shift and go to state 71
    RAND            shift and go to state 72
    FWRITE          shift and go to state 73
    TRIM            shift and go to state 74
    SMALLER         shift and go to state 75
    RETURN          shift and go to state 77
    COMENTARIOS     shift and go to state 78
    DOC_COMENTARIOS shift and go to state 79
    LPAREN          shift and go to state 39
    CADENA          shift and go to state 55
    RPAREN          shift and go to state 40
    LBRACKET        shift and go to state 42
    RBRACKET        shift and go to state 43
    LBRACE          shift and go to state 59
    RBRACE          shift and go to state 60
    OPEN_TAG        shift and go to state 80
    CLOSE_TAG       shift and go to state 81
    ARRAY_POP       shift and go to state 83
    ARRAY_PUSH      shift and go to state 84
    PUBLIC          shift and go to state 85
    PRIVATE         shift and go to state 86
    PROTECTED       shift and go to state 87
    STATIC          shift and go to state 88
    FUNCTION        shift and go to state 89
    IF              shift and go to state 90

  ! BREAK           [ reduce using rule 116 (bwhile -> .) ]
  ! RBRACE          [ reduce using rule 187 (empty -> .) ]
  ! BREAK           [ reduce using rule 187 (empty -> .) ]

    bcase                          shift and go to state 16
    cuerpo                         shift and go to state 561
    imprimir                       shift and go to state 2
    asignacion                     shift and go to state 3
    funciones                      shift and go to state 4
    llamada_funcion                shift and go to state 5
    constante                      shift and go to state 6
    lectura                        shift and go to state 7
    condicion_ifelse               shift and go to state 8
    bwhile                         shift and go to state 9
    bdo                            shift and go to state 10
    bfor                           shift and go to state 11
    incrementOp                    shift and go to state 12
    bforeach                       shift and go to state 13
    btry                           shift and go to state 14
    bswitch                        shift and go to state 15
    bgoto                          shift and go to state 17
    bcolas                         shift and go to state 18
    bpila                          shift and go to state 19
    bcortes                        shift and go to state 20
    brand                          shift and go to state 21
    escribir                       shift and go to state 22
    btrim                          shift and go to state 23
    otros                          shift and go to state 24
    breturn                        shift and go to state 25
    comment                        shift and go to state 26
    casting                        shift and go to state 27
    bconcat                        shift and go to state 28
    simbolos                       shift and go to state 29
    funcionesCP_semi               shift and go to state 30
    addpila                        shift and go to state 31
    addcola                        shift and go to state 32
    minuscola                      shift and go to state 33
    arraypop                       shift and go to state 34
    arraypush                      shift and go to state 35
    poppila                        shift and go to state 36
    proteccion                     shift and go to state 48
    asignacion_array               shift and go to state 49
    aumentoCasting                 shift and go to state 50
    funcion_nparams                shift and go to state 51
    funcion_blank                  shift and go to state 52
    funcion_void                   shift and go to state 53
    condicion_if                   shift and go to state 57
    empty                          shift and go to state 76
    funcionesCP                    shift and go to state 82

state 522

    (172) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN . SEMI

    SEMI            shift and go to state 562


state 523

    (191) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN . SEMI

    SEMI            shift and go to state 563


state 524

    (192) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN . RPAREN SEMI

    RPAREN          shift and go to state 564


state 525

    (266) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN . SEMI

    SEMI            shift and go to state 565


state 526

    (265) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN . SEMI

    SEMI            shift and go to state 566


state 527

    (164) funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .

    $end            reduce using rule 164 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 164 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    SEMI            reduce using rule 164 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)
    BREAK           reduce using rule 164 (funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def .)


state 528

    (170) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty . RBRACE
    (177) breturn -> empty .

  ! shift/reduce conflict for RBRACE resolved as shift
    RBRACE          shift and go to state 567
    SEMI            reduce using rule 177 (breturn -> empty .)

  ! RBRACE          [ reduce using rule 177 (breturn -> empty .) ]


state 529

    (168) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID . LBRACE empty RBRACE

    LBRACE          shift and go to state 568


state 530

    (78) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 569


state 531

    (154) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores . valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 570
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 532

    (156) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores . tipoDato
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    tipoDato                       shift and go to state 571
    numero                         shift and go to state 106

state 533

    (244) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par . SEMI

    SEMI            shift and go to state 572


state 534

    (188) bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .

    $end            reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    AND             reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    OR              reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    XOR             reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 188 (bcolas -> VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI .)


state 535

    (247) bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .

    $end            reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SEMI            reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SUMA            reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RESTA           reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MULTIPLICACION  reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    DIVISION        reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    MODULO          reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    SMALLER         reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    GREATER         reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_SMALLER_OR_EQUAL reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_GREATER_OR_EQUAL reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    AND             reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    OR              reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    XOR             reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_EQUAL        reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_EQUAL    reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_IDENTICAL    reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    IS_NOT_IDENTICAL reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    COMMA           reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    BREAK           reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    CADENA          reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 247 (bpila -> VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI .)


state 536

    (240) casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .

    $end            reduce using rule 240 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    RBRACE          reduce using rule 240 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    SEMI            reduce using rule 240 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)
    BREAK           reduce using rule 240 (casting -> VARIABLE EQUALS LPAREN tiposCast RPAREN VARIABLE SEMI .)


state 537

    (268) arraysearch -> ARRAY_SEARCH LPAREN valor COMMA VARIABLE . RPAREN

    RPAREN          shift and go to state 573


state 538

    (185) array_elmnt -> array_elmnt COMMA valor .

    RPAREN          reduce using rule 185 (array_elmnt -> array_elmnt COMMA valor .)
    COMMA           reduce using rule 185 (array_elmnt -> array_elmnt COMMA valor .)


state 539

    (249) addpila -> VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI .

    $end            reduce using rule 249 (addpila -> VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI .)
    RBRACE          reduce using rule 249 (addpila -> VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI .)
    SEMI            reduce using rule 249 (addpila -> VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI .)
    BREAK           reduce using rule 249 (addpila -> VARIABLE FLECHA PUSH LPAREN VARIABLE RPAREN SEMI .)


state 540

    (248) addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI .

    $end            reduce using rule 248 (addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 248 (addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 248 (addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI .)
    BREAK           reduce using rule 248 (addpila -> VARIABLE FLECHA PUSH LPAREN valor RPAREN SEMI .)


state 541

    (259) addcola -> VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI .

    $end            reduce using rule 259 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI .)
    RBRACE          reduce using rule 259 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI .)
    SEMI            reduce using rule 259 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI .)
    BREAK           reduce using rule 259 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN VARIABLE RPAREN SEMI .)


state 542

    (258) addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI .

    $end            reduce using rule 258 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 258 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 258 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI .)
    BREAK           reduce using rule 258 (addcola -> VARIABLE FLECHA ENQUEUE LPAREN valor RPAREN SEMI .)


state 543

    (261) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI .

    $end            reduce using rule 261 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI .)
    RBRACE          reduce using rule 261 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI .)
    SEMI            reduce using rule 261 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI .)
    BREAK           reduce using rule 261 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN VARIABLE RPAREN SEMI .)


state 544

    (260) minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI .

    $end            reduce using rule 260 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI .)
    RBRACE          reduce using rule 260 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI .)
    SEMI            reduce using rule 260 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI .)
    BREAK           reduce using rule 260 (minuscola -> VARIABLE FLECHA DEQUEUE LPAREN valor RPAREN SEMI .)


state 545

    (262) constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .

    $end            reduce using rule 262 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    RBRACE          reduce using rule 262 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    SEMI            reduce using rule 262 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)
    BREAK           reduce using rule 262 (constante -> DEFINE LPAREN CADENA COMMA valor RPAREN SEMI .)


state 546

    (263) constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .

    $end            reduce using rule 263 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    RBRACE          reduce using rule 263 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    SEMI            reduce using rule 263 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)
    BREAK           reduce using rule 263 (constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI .)


state 547

    (80) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo . RBRACE

    RBRACE          shift and go to state 574


state 548

    (92) condicion -> LPAREN VARIABLE operadores valor RPAREN . operador_logico valor
    (93) condicion -> LPAREN VARIABLE operadores valor RPAREN . condicion_booleana valor
    (131) operador_logico -> . SMALLER
    (132) operador_logico -> . GREATER
    (133) operador_logico -> . IS_SMALLER_OR_EQUAL
    (134) operador_logico -> . IS_GREATER_OR_EQUAL
    (140) condicion_booleana -> . AND
    (141) condicion_booleana -> . OR
    (142) condicion_booleana -> . XOR
    (143) condicion_booleana -> . IS_EQUAL
    (144) condicion_booleana -> . IS_NOT_EQUAL
    (145) condicion_booleana -> . IS_IDENTICAL
    (146) condicion_booleana -> . IS_NOT_IDENTICAL

    SMALLER         shift and go to state 375
    GREATER         shift and go to state 376
    IS_SMALLER_OR_EQUAL shift and go to state 377
    IS_GREATER_OR_EQUAL shift and go to state 378
    AND             shift and go to state 348
    OR              shift and go to state 349
    XOR             shift and go to state 350
    IS_EQUAL        shift and go to state 351
    IS_NOT_EQUAL    shift and go to state 352
    IS_IDENTICAL    shift and go to state 353
    IS_NOT_IDENTICAL shift and go to state 354

    operador_logico                shift and go to state 575
    condicion_booleana             shift and go to state 576

state 549

    (113) bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .

    $end            reduce using rule 113 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    RBRACE          reduce using rule 113 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    SEMI            reduce using rule 113 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)
    BREAK           reduce using rule 113 (bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE .)


state 550

    (203) comprobacion -> NOMBRE LPAREN valor . RPAREN

    RPAREN          shift and go to state 577


state 551

    (204) comprobacion -> NOMBRE LPAREN VARIABLE . RPAREN
    (188) bcolas -> VARIABLE . EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> VARIABLE . EQUALS NEW SPLSTACK LPAREN RPAREN SEMI

    RPAREN          shift and go to state 578
    EQUALS          shift and go to state 211


state 552

    (244) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE . operadores operaciones_mat_par SEMI
    (126) operadores -> . SUMA
    (127) operadores -> . RESTA
    (128) operadores -> . MULTIPLICACION
    (129) operadores -> . DIVISION
    (130) operadores -> . MODULO

    SUMA            shift and go to state 204
    RESTA           shift and go to state 205
    MULTIPLICACION  shift and go to state 142
    DIVISION        shift and go to state 143
    MODULO          shift and go to state 144

    operadores                     shift and go to state 487

state 553

    (124) catches -> catches CATCH LPAREN EXCEPTION VARIABLE RPAREN . stc_bloque_def
    (102) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (103) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 288

    stc_bloque_def                 shift and go to state 579

state 554

    (99) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN . stc_bloque_def
    (102) stc_bloque_def -> . LBRACE stc_bloque RBRACE
    (103) stc_bloque_def -> . LBRACE cuerpo RBRACE

    LBRACE          shift and go to state 288

    stc_bloque_def                 shift and go to state 580

state 555

    (104) for_incr -> VARIABLE SUMA . SUMA
    (108) for_incr -> VARIABLE SUMA . EQUALS numero

    SUMA            shift and go to state 581
    EQUALS          shift and go to state 582


state 556

    (106) for_incr -> VARIABLE RESTA . RESTA
    (109) for_incr -> VARIABLE RESTA . EQUALS numero

    RESTA           shift and go to state 583
    EQUALS          shift and go to state 584


state 557

    (105) for_incr -> SUMA SUMA . VARIABLE

    VARIABLE        shift and go to state 585


state 558

    (107) for_incr -> RESTA RESTA . VARIABLE

    VARIABLE        shift and go to state 586


state 559

    (112) bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .

    $end            reduce using rule 112 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 112 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 112 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)
    BREAK           reduce using rule 112 (bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def .)


state 560

    (118) bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .

    $end            reduce using rule 118 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    RBRACE          reduce using rule 118 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    SEMI            reduce using rule 118 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)
    BREAK           reduce using rule 118 (bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE .)


state 561

    (121) innerSwitch -> bcase cuerpo . BREAK SEMI
    (122) innerSwitch -> bcase cuerpo . BREAK SEMI innerSwitch

    BREAK           shift and go to state 587


state 562

    (172) brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .

    $end            reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RBRACE          reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    SEMI            reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BREAK           reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    RPAREN          reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    COMMA           reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    VARIABLE        reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    LPAREN          reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    CADENA          reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    BOOLEANO        reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    ENTERO          reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)
    DECIMAL         reduce using rule 172 (brand -> RAND LPAREN ENTERO COMMA ENTERO RPAREN SEMI .)


state 563

    (191) escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .

    $end            reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RBRACE          reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    SEMI            reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BREAK           reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    RPAREN          reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    COMMA           reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    VARIABLE        reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    LPAREN          reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    CADENA          reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    BOOLEANO        reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    ENTERO          reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)
    DECIMAL         reduce using rule 191 (escribir -> FWRITE LPAREN NOMBRE COMMA CADENA RPAREN SEMI .)


state 564

    (192) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN . SEMI

    SEMI            shift and go to state 588


state 565

    (266) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI .

    $end            reduce using rule 266 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI .)
    RBRACE          reduce using rule 266 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI .)
    SEMI            reduce using rule 266 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI .)
    BREAK           reduce using rule 266 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA VARIABLE RPAREN SEMI .)


state 566

    (265) arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI .

    $end            reduce using rule 265 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI .)
    RBRACE          reduce using rule 265 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI .)
    SEMI            reduce using rule 265 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI .)
    BREAK           reduce using rule 265 (arraypush -> ARRAY_PUSH LPAREN VARIABLE COMMA valor RPAREN SEMI .)


state 567

    (170) funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .

    $end            reduce using rule 170 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    RBRACE          reduce using rule 170 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    SEMI            reduce using rule 170 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)
    BREAK           reduce using rule 170 (funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE .)


state 568

    (168) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE . empty RBRACE
    (187) empty -> .

    RBRACE          reduce using rule 187 (empty -> .)

    empty                          shift and go to state 589

state 569

    (78) condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 78 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    ELSEIF          reduce using rule 78 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 78 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 78 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 78 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 78 (condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 570

    (154) operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .

    SEMI            reduce using rule 154 (operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .)
    RPAREN          reduce using rule 154 (operaciones_mat_par -> LPAREN VARIABLE operadores valor RPAREN operadores valor .)


state 571

    (156) operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato .

    SEMI            reduce using rule 156 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato .)
    RPAREN          reduce using rule 156 (operaciones_mat_par -> LPAREN VARIABLE operadores tipoDato RPAREN operadores tipoDato .)


state 572

    (244) aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .

    $end            reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    RBRACE          reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    SEMI            reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    BREAK           reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    RPAREN          reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    COMMA           reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    VARIABLE        reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    LPAREN          reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    CADENA          reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    BOOLEANO        reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    ENTERO          reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    DECIMAL         reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    AND             reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    OR              reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    XOR             reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_EQUAL        reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_NOT_EQUAL    reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_IDENTICAL    reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)
    IS_NOT_IDENTICAL reduce using rule 244 (aumentoCasting -> VARIABLE EQUALS VARIABLE operadores VARIABLE operadores operaciones_mat_par SEMI .)


state 573

    (268) arraysearch -> ARRAY_SEARCH LPAREN valor COMMA VARIABLE RPAREN .

    SEMI            reduce using rule 268 (arraysearch -> ARRAY_SEARCH LPAREN valor COMMA VARIABLE RPAREN .)
    RPAREN          reduce using rule 268 (arraysearch -> ARRAY_SEARCH LPAREN valor COMMA VARIABLE RPAREN .)


state 574

    (80) condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .

    ELSE            reduce using rule 80 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    $end            reduce using rule 80 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    RBRACE          reduce using rule 80 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    SEMI            reduce using rule 80 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)
    BREAK           reduce using rule 80 (condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE .)


state 575

    (92) condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico . valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 590
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 576

    (93) condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana . valor
    (51) valor -> . tipoDato
    (52) valor -> . bcolas
    (53) valor -> . bpila
    (54) tipoDato -> . numero
    (55) tipoDato -> . CADENA
    (56) tipoDato -> . BOOLEANO
    (188) bcolas -> . VARIABLE EQUALS NEW SPLQUEUE LPAREN RPAREN SEMI
    (247) bpila -> . VARIABLE EQUALS NEW SPLSTACK LPAREN RPAREN SEMI
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    CADENA          shift and go to state 215
    BOOLEANO        shift and go to state 107
    VARIABLE        shift and go to state 403
    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    valor                          shift and go to state 591
    tipoDato                       shift and go to state 100
    bcolas                         shift and go to state 101
    bpila                          shift and go to state 102
    numero                         shift and go to state 106

state 577

    (203) comprobacion -> NOMBRE LPAREN valor RPAREN .

    RPAREN          reduce using rule 203 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    AND             reduce using rule 203 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    OR              reduce using rule 203 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    XOR             reduce using rule 203 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_EQUAL        reduce using rule 203 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_NOT_EQUAL    reduce using rule 203 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_IDENTICAL    reduce using rule 203 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 203 (comprobacion -> NOMBRE LPAREN valor RPAREN .)
    SEMI            reduce using rule 203 (comprobacion -> NOMBRE LPAREN valor RPAREN .)


state 578

    (204) comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .

    RPAREN          reduce using rule 204 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    AND             reduce using rule 204 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    OR              reduce using rule 204 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    XOR             reduce using rule 204 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_EQUAL        reduce using rule 204 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_NOT_EQUAL    reduce using rule 204 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_IDENTICAL    reduce using rule 204 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    IS_NOT_IDENTICAL reduce using rule 204 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)
    SEMI            reduce using rule 204 (comprobacion -> NOMBRE LPAREN VARIABLE RPAREN .)


state 579

    (124) catches -> catches CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def .

    CATCH           reduce using rule 124 (catches -> catches CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 124 (catches -> catches CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def .)
    SEMI            reduce using rule 124 (catches -> catches CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def .)
    $end            reduce using rule 124 (catches -> catches CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def .)
    BREAK           reduce using rule 124 (catches -> catches CATCH LPAREN EXCEPTION VARIABLE RPAREN stc_bloque_def .)


state 580

    (99) bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .

    $end            reduce using rule 99 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    RBRACE          reduce using rule 99 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    SEMI            reduce using rule 99 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)
    BREAK           reduce using rule 99 (bfor -> FOR LPAREN asignacion condicion SEMI for_incr RPAREN stc_bloque_def .)


state 581

    (104) for_incr -> VARIABLE SUMA SUMA .

    RPAREN          reduce using rule 104 (for_incr -> VARIABLE SUMA SUMA .)


state 582

    (108) for_incr -> VARIABLE SUMA EQUALS . numero
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    numero                         shift and go to state 592

state 583

    (106) for_incr -> VARIABLE RESTA RESTA .

    RPAREN          reduce using rule 106 (for_incr -> VARIABLE RESTA RESTA .)


state 584

    (109) for_incr -> VARIABLE RESTA EQUALS . numero
    (57) numero -> . ENTERO
    (58) numero -> . DECIMAL

    ENTERO          shift and go to state 94
    DECIMAL         shift and go to state 108

    numero                         shift and go to state 593

state 585

    (105) for_incr -> SUMA SUMA VARIABLE .

    RPAREN          reduce using rule 105 (for_incr -> SUMA SUMA VARIABLE .)


state 586

    (107) for_incr -> RESTA RESTA VARIABLE .

    RPAREN          reduce using rule 107 (for_incr -> RESTA RESTA VARIABLE .)


state 587

    (121) innerSwitch -> bcase cuerpo BREAK . SEMI
    (122) innerSwitch -> bcase cuerpo BREAK . SEMI innerSwitch

    SEMI            shift and go to state 594


state 588

    (192) btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .

    $end            reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RBRACE          reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    SEMI            reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BREAK           reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    RPAREN          reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    COMMA           reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    VARIABLE        reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    LPAREN          reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    CADENA          reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    BOOLEANO        reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    ENTERO          reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)
    DECIMAL         reduce using rule 192 (btrim -> TRIM LPAREN NOMBRE LPAREN NOMBRE RPAREN RPAREN SEMI .)


state 589

    (168) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty . RBRACE

    RBRACE          shift and go to state 595


state 590

    (92) condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .

    RPAREN          reduce using rule 92 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    AND             reduce using rule 92 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    OR              reduce using rule 92 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    XOR             reduce using rule 92 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_EQUAL        reduce using rule 92 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_NOT_EQUAL    reduce using rule 92 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_IDENTICAL    reduce using rule 92 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    IS_NOT_IDENTICAL reduce using rule 92 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)
    SEMI            reduce using rule 92 (condicion -> LPAREN VARIABLE operadores valor RPAREN operador_logico valor .)


state 591

    (93) condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .

    RPAREN          reduce using rule 93 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    AND             reduce using rule 93 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    OR              reduce using rule 93 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    XOR             reduce using rule 93 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_EQUAL        reduce using rule 93 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_NOT_EQUAL    reduce using rule 93 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_IDENTICAL    reduce using rule 93 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    IS_NOT_IDENTICAL reduce using rule 93 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)
    SEMI            reduce using rule 93 (condicion -> LPAREN VARIABLE operadores valor RPAREN condicion_booleana valor .)


state 592

    (108) for_incr -> VARIABLE SUMA EQUALS numero .

    RPAREN          reduce using rule 108 (for_incr -> VARIABLE SUMA EQUALS numero .)


state 593

    (109) for_incr -> VARIABLE RESTA EQUALS numero .

    RPAREN          reduce using rule 109 (for_incr -> VARIABLE RESTA EQUALS numero .)


state 594

    (121) innerSwitch -> bcase cuerpo BREAK SEMI .
    (122) innerSwitch -> bcase cuerpo BREAK SEMI . innerSwitch
    (121) innerSwitch -> . bcase cuerpo BREAK SEMI
    (122) innerSwitch -> . bcase cuerpo BREAK SEMI innerSwitch
    (119) bcase -> . CASE ENTERO COLON
    (120) bcase -> . CASE CADENA COLON

    RBRACE          reduce using rule 121 (innerSwitch -> bcase cuerpo BREAK SEMI .)
    CASE            shift and go to state 66

    bcase                          shift and go to state 521
    innerSwitch                    shift and go to state 596

state 595

    (168) funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .

    $end            reduce using rule 168 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    RBRACE          reduce using rule 168 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    SEMI            reduce using rule 168 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)
    BREAK           reduce using rule 168 (funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE .)


state 596

    (122) innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch .

    RBRACE          reduce using rule 122 (innerSwitch -> bcase cuerpo BREAK SEMI innerSwitch .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACE in state 0 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 25 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 59 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 82 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 175 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 175 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 276 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 276 resolved as shift
WARNING: shift/reduce conflict for AND in state 280 resolved as shift
WARNING: shift/reduce conflict for OR in state 280 resolved as shift
WARNING: shift/reduce conflict for XOR in state 280 resolved as shift
WARNING: shift/reduce conflict for IS_EQUAL in state 280 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_EQUAL in state 280 resolved as shift
WARNING: shift/reduce conflict for IS_IDENTICAL in state 280 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_IDENTICAL in state 280 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 288 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 288 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 304 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 360 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 387 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 406 resolved as shift
WARNING: shift/reduce conflict for AND in state 450 resolved as shift
WARNING: shift/reduce conflict for OR in state 450 resolved as shift
WARNING: shift/reduce conflict for XOR in state 450 resolved as shift
WARNING: shift/reduce conflict for IS_EQUAL in state 450 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_EQUAL in state 450 resolved as shift
WARNING: shift/reduce conflict for IS_IDENTICAL in state 450 resolved as shift
WARNING: shift/reduce conflict for IS_NOT_IDENTICAL in state 450 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 465 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 465 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 465 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 465 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 477 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 479 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 479 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 506 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 506 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 509 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 510 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 521 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 521 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 521 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 528 resolved as shift
WARNING: reduce/reduce conflict in state 0 resolved using rule (bwhile -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 60 resolved using rule (bwhile -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 60
WARNING: reduce/reduce conflict in state 387 resolved using rule (cuerpo -> breturn)
WARNING: rejected rule (stc_bloque -> breturn) in state 387
WARNING: reduce/reduce conflict in state 465 resolved using rule (bwhile -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 465
WARNING: reduce/reduce conflict in state 477 resolved using rule (bwhile -> <empty>)
WARNING: rejected rule (empty -> <empty>) in state 477
