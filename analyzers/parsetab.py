
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY AS AT BOOL BOOLEAN_NOT BREAK CASE CATCH CLASS CLASS_C CLOSE_TAG COLON COMENTARIOS COMMA CONCAT CONSTANT_ENCAPSED_STRING CONTINUE CURLY_OPEN DECIMAL DEFAULT DEFINE DIR DIVISION DIV_EQUAL DO DOC_COMENTARIOS DOUBLE ECHO ELSE ELSEIF ENCAPSED_AND_WHITESPACE ENTERO EQUALS EXIT FALSE FILE FLOAT FOR FOREACH FUNCTION FUNC_C GLOBAL GOTO GREATER HALT_COMPILER IF INT IS_EQUAL IS_GREATER_OR_EQUAL IS_IDENTICAL IS_NOT_EQUAL IS_NOT_IDENTICAL IS_SMALLER_OR_EQUAL LBRACE LBRACKET LINE LPAREN METHOD_C MINUS_EQUAL MODULO MOD_EQUAL MULTIPLICACION MUL_EQUAL NEW NOMBRE NOT NS_C NS_SEPARATOR NULL NUM_STRING OBJECT OPEN_TAG OR PLUS_EQUAL PRINT PRIVATE PROTECTED PUBLIC RBRACE RBRACKET READLINE REQUIRE RESTA RETURN RPAREN SEMI SMALLER STATIC STRING SUMA SWITCH TRUE TRY VAR VARIABLE VOID WHILE XORcuerpo : imprimir\n            | asignacion\n            | asignacion_array\n            | funciones\n            | constante\n            | lectura\n            | operadores\n            | operador_logico\n            | condicion_booleana\n            | bwhile\n            | bfor\n            | bforeach\n            | btry\n            | operaciones_mat_par\n            | condicion_ifelse \n  imprimir : ECHO valor SEMI\n            | PRINT valor SEMI\n            | PRINT LPAREN valor RPAREN SEMI\n            | ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI\n  valor : numero\n            | VARIABLE\n            | STRING\n            | NOMBRE\n  numero : ENTERO\n          | DECIMALoperadores : SUMA \n                  | RESTA\n                  | MULTIPLICACION\n                  | DIVISION\n                  | MODULO\n  operador_logico :  SMALLER\n                        | GREATER\n                        | IS_SMALLER_OR_EQUAL\n                        | IS_GREATER_OR_EQUAL\n  condicion_if :  IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE\n  condicion_elseif :  ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE\n  condicion_else :  ELSE LBRACE cuerpo RBRACE\n  condicion_ifelse :  condicion_if\n                      | condicion_if condicion_else\n                      | condicion_if condicion_elseif\n                      | condicion_if condicion_elseif condicion_else\n  condicion_booleana :  AND\n                        | OR\n                        | XOR\n                        | IS_EQUAL\n                        | IS_NOT_EQUAL\n                        | IS_IDENTICAL\n                        | IS_NOT_IDENTICAL\n                        | BOOLEAN_NOT\n  operaciones_mat :  valor operadores valor\n                        | valor operadores operaciones_mat\n                       \n  operaciones_mat_par :  LPAREN valor operadores valor RPAREN\n                          |  LPAREN valor operadores operaciones_mat_par RPAREN\n  asignacion : VARIABLE EQUALS valor SEMIasignacion_array : VARIABLE EQUALS array_def SEMIconstante : DEFINE LPAREN STRING COMMA valor RPAREN SEMI\n          | DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMIlectura : READLINE LPAREN STRING RPAREN SEMI\n          | READLINE LPAREN RPAREN SEMIproteccion : PUBLIC\n          | PRIVATE\n          | PROTECTED\n          | STATIC\n  funciones : funcion_nparams\n              | proteccion funcion_nparams\n              | funcion_opreturn\n              | proteccion funcion_opreturn\n              | funcion_blank\n              | proteccion funcion_blank\n  param : VARIABLE\n          | asignacionfuncion_nparams : FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_defparams_list : params_list COMMA param\n                      | param funcion_opreturn : FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def\n   funcion_blank : FUNCTION NOMBRE LPAREN  RPAREN stc_bloque_def\n                    | FUNCTION NOMBRE LPAREN  RPAREN LBRACE empty RBRACE\n   condicion : VARIABLE operador_logico VARIABLE\n            | valor operador_logico valor       \n   bwhile : WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE \n  | WHILE LPAREN condicion RPAREN COLON stc_bloque  \n   bswitch : SWITCH LPARENbfor : FOR LPAREN asignacion SEMI condicion SEMI for_incr RPAREN stc_bloque_defstc_bloque : stc_bloque cuerpo\n        | empty\n        | RETURN\n        stc_bloque_def : LBRACE stc_bloque RBRACEfor_incr : VARIABLE SUMA SUMA\n          | SUMA SUMA VARIABLE\n          | VARIABLE RESTA RESTA\n          | RESTA RESTA VARIABLE\n          | VARIABLE SUMA EQUALS numero\n          | VARIABLE RESTA EQUALS numerobforeach :  FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_defarray_def : ARRAY LPAREN RPAREN \n          | ARRAY LPAREN array_elmnt RPARENarray_elmnt : valor\n            | emptybtry : TRY LBRACE stc_bloque_def RBRACE catchescatches : catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def\n          | emptyempty : '
    
_lr_action_items = {'ECHO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[17,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,17,-54,-55,-59,17,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,17,-19,17,17,17,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[18,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,18,-54,-55,-59,18,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,18,-19,18,18,18,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,63,66,67,68,69,72,73,74,76,77,81,82,84,86,100,102,103,104,105,111,112,113,114,117,119,120,121,122,123,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,160,161,162,163,164,168,169,170,173,174,176,178,179,180,185,188,189,193,194,195,196,197,208,],[20,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,59,59,59,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,59,59,-65,-67,-69,95,98,99,-39,-40,95,-16,-17,59,-102,-41,20,95,133,-54,-55,59,59,-59,149,59,95,59,152,20,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,133,-76,-102,20,-19,20,20,182,20,-72,-85,-56,-57,-80,-94,-77,-35,202,203,204,-36,-83,-100,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[25,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,25,-54,-55,-59,25,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,25,-19,25,25,25,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'READLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[26,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,26,-54,-55,-59,26,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,26,-19,26,26,26,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'SUMA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,57,58,59,60,61,64,65,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,170,173,174,176,178,179,180,182,183,185,188,189,191,196,197,208,],[27,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-24,-20,-21,-22,-25,-23,27,-65,-67,-69,-39,-40,-16,-17,-102,-41,27,-54,-55,-59,27,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,27,-19,27,27,183,27,-72,-85,-56,-57,-80,191,193,-94,-77,-35,198,-36,-83,-100,]),'RESTA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,57,58,59,60,61,64,65,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,170,173,174,176,178,179,180,182,184,185,188,189,192,196,197,208,],[28,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-24,-20,-21,-22,-25,-23,28,-65,-67,-69,-39,-40,-16,-17,-102,-41,28,-54,-55,-59,28,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,28,-19,28,28,184,28,-72,-85,-56,-57,-80,192,194,-94,-77,-35,200,-36,-83,-100,]),'MULTIPLICACION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,57,58,59,60,61,64,65,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[29,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-24,-20,-21,-22,-25,-23,29,-65,-67,-69,-39,-40,-16,-17,-102,-41,29,-54,-55,-59,29,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,29,-19,29,29,29,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'DIVISION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,57,58,59,60,61,64,65,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[30,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-24,-20,-21,-22,-25,-23,30,-65,-67,-69,-39,-40,-16,-17,-102,-41,30,-54,-55,-59,30,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,30,-19,30,30,30,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'MODULO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,57,58,59,60,61,64,65,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[31,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-24,-20,-21,-22,-25,-23,31,-65,-67,-69,-39,-40,-16,-17,-102,-41,31,-54,-55,-59,31,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,31,-19,31,31,31,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'SMALLER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,57,58,60,61,64,67,68,69,76,77,82,84,95,96,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[32,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-24,-20,-22,-25,-23,-65,-67,-69,-39,-40,-16,-17,32,32,-102,-41,32,-54,-55,-59,32,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,32,-19,32,32,32,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'GREATER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,57,58,60,61,64,67,68,69,76,77,82,84,95,96,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[33,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-24,-20,-22,-25,-23,-65,-67,-69,-39,-40,-16,-17,33,33,-102,-41,33,-54,-55,-59,33,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,33,-19,33,33,33,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'IS_SMALLER_OR_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,57,58,60,61,64,67,68,69,76,77,82,84,95,96,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[34,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-24,-20,-22,-25,-23,-65,-67,-69,-39,-40,-16,-17,34,34,-102,-41,34,-54,-55,-59,34,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,34,-19,34,34,34,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'IS_GREATER_OR_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,57,58,60,61,64,67,68,69,76,77,82,84,95,96,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[35,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-24,-20,-22,-25,-23,-65,-67,-69,-39,-40,-16,-17,35,35,-102,-41,35,-54,-55,-59,35,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,35,-19,35,35,35,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'AND':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[36,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,36,-54,-55,-59,36,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,36,-19,36,36,36,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'OR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[37,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,37,-54,-55,-59,37,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,37,-19,37,37,37,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'XOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[38,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,38,-54,-55,-59,38,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,38,-19,38,38,38,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'IS_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[39,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,39,-54,-55,-59,39,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,39,-19,39,39,39,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'IS_NOT_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[40,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,40,-54,-55,-59,40,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,40,-19,40,40,40,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'IS_IDENTICAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[41,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,41,-54,-55,-59,41,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,41,-19,41,41,41,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'IS_NOT_IDENTICAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[42,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,42,-54,-55,-59,42,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,42,-19,42,42,42,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'BOOLEAN_NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[43,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,43,-54,-55,-59,43,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,43,-19,43,43,43,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[44,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,44,-54,-55,-59,44,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,44,-19,44,44,44,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[45,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,45,-54,-55,-59,45,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,45,-19,45,45,45,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'FOREACH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[46,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,46,-54,-55,-59,46,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,46,-19,46,46,46,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'TRY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[47,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,47,-54,-55,-59,47,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,47,-19,47,47,47,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,54,67,68,69,76,77,79,80,82,84,86,89,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,172,173,174,176,178,179,180,185,188,189,196,197,208,],[19,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,63,-64,-66,-68,70,71,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,72,73,74,-38,81,-65,-67,-69,-39,-40,104,105,-16,-17,19,113,-102,-41,19,-54,-55,-59,19,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,19,-19,19,19,186,19,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,50,51,52,53,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[49,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,49,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-60,-61,-62,-63,-65,-67,-69,-39,-40,-16,-17,-102,-41,49,-54,-55,-59,49,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,49,-19,49,49,49,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'PUBLIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[50,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,50,-54,-55,-59,50,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,50,-19,50,50,50,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'PRIVATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[51,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,51,-54,-55,-59,51,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,51,-19,51,51,51,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'PROTECTED':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[52,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,52,-54,-55,-59,52,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,52,-19,52,52,52,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'STATIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[53,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,53,-54,-55,-59,53,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,53,-19,53,53,53,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,102,103,111,112,117,124,125,126,127,137,138,139,146,147,148,153,154,155,156,157,161,162,163,164,168,169,173,174,176,178,179,180,185,188,189,196,197,208,],[54,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,-41,54,-54,-55,-59,54,-85,-86,-102,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,54,-19,54,54,54,-72,-85,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,102,111,112,117,125,126,127,137,138,139,146,148,153,154,155,156,157,161,164,169,174,178,179,180,185,188,189,196,197,208,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-41,-54,-55,-59,-85,-86,-102,-18,-52,-53,-58,-102,-87,-84,-99,-101,-37,-76,-19,-81,-72,-56,-57,-80,-94,-77,-35,-36,-83,-100,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,21,23,24,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,48,67,68,69,76,77,82,84,100,101,102,111,112,117,124,125,126,127,128,137,138,139,146,147,148,153,154,155,156,157,161,162,164,168,169,174,176,177,178,179,180,185,187,188,189,196,197,208,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-64,-66,-68,-26,-27,-28,-29,-30,-31,-32,-33,-34,-42,-43,-44,-45,-46,-47,-48,-49,-38,-65,-67,-69,-39,-40,-16,-17,-102,127,-41,-54,-55,-59,153,-85,-86,-102,157,-18,-52,-53,-58,-102,-102,-87,-84,-99,-101,-37,-76,-102,-19,180,-81,-72,188,189,-56,-57,-80,-94,196,-77,-35,-36,-83,-100,]),'NOMBRE':([17,18,19,27,28,29,30,31,32,33,34,35,49,63,66,70,72,81,86,104,113,114,120,121,122,186,],[56,64,64,-26,-27,-28,-29,-30,-31,-32,-33,-34,80,64,64,91,64,64,64,64,64,64,64,64,64,195,]),'STRING':([17,18,19,27,28,29,30,31,32,33,34,35,63,66,70,71,72,81,86,104,113,114,120,121,122,],[60,60,60,-26,-27,-28,-29,-30,-31,-32,-33,-34,60,60,90,92,60,60,60,60,60,60,60,60,60,]),'ENTERO':([17,18,19,27,28,29,30,31,32,33,34,35,63,66,72,81,83,86,104,113,114,120,121,122,199,201,],[57,57,57,-26,-27,-28,-29,-30,-31,-32,-33,-34,57,57,57,57,107,57,57,57,57,57,57,57,57,57,]),'DECIMAL':([17,18,19,27,28,29,30,31,32,33,34,35,63,66,72,81,86,104,113,114,120,121,122,199,201,],[61,61,61,-26,-27,-28,-29,-30,-31,-32,-33,-34,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'EQUALS':([20,98,133,191,192,],[66,122,122,199,201,]),'LBRACE':([47,75,78,118,131,135,158,159,171,190,207,],[75,100,103,147,162,163,173,100,100,100,100,]),'ELSE':([48,77,189,196,],[78,78,-35,-36,]),'ELSEIF':([48,189,],[79,-35,]),'SEMI':([55,56,57,58,59,60,61,62,64,87,88,93,97,108,111,116,136,140,149,150,151,165,166,167,],[82,-23,-24,-20,-21,-22,-25,84,-23,111,112,117,121,137,-54,146,164,-95,-78,-79,170,-96,178,179,]),'LBRACKET':([56,],[83,]),'RPAREN':([57,58,59,60,61,64,71,85,92,94,105,106,109,110,111,113,129,130,132,133,134,138,139,141,142,143,144,145,149,150,152,175,181,198,200,202,203,204,205,206,],[-24,-20,-21,-22,-25,-23,93,108,116,118,131,135,138,139,-54,140,158,159,-74,-70,-71,-52,-53,165,-97,-98,166,167,-78,-79,171,-73,190,-88,-90,-89,-91,207,-92,-93,]),'ARRAY':([66,115,],[89,145,]),'COMMA':([90,91,111,130,132,133,134,175,],[114,115,-54,160,-74,-70,-71,-73,]),'AS':([99,],[123,]),'RETURN':([100,147,148,162,],[126,126,126,126,]),'RBRACKET':([107,],[136,]),'COLON':([118,],[148,]),'CATCH':([127,153,155,156,208,],[-102,-87,172,-101,-100,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,103,124,163,168,169,173,],[1,128,154,177,154,154,187,]),'imprimir':([0,103,124,163,168,169,173,],[2,2,2,2,2,2,2,]),'asignacion':([0,73,103,105,124,160,163,168,169,173,],[3,97,3,134,3,134,3,3,3,3,]),'asignacion_array':([0,103,124,163,168,169,173,],[4,4,4,4,4,4,4,]),'funciones':([0,103,124,163,168,169,173,],[5,5,5,5,5,5,5,]),'constante':([0,103,124,163,168,169,173,],[6,6,6,6,6,6,6,]),'lectura':([0,103,124,163,168,169,173,],[7,7,7,7,7,7,7,]),'operadores':([0,65,103,124,163,168,169,173,],[8,86,8,8,8,8,8,8,]),'operador_logico':([0,95,96,103,124,163,168,169,173,],[9,119,120,9,9,9,9,9,9,]),'condicion_booleana':([0,103,124,163,168,169,173,],[10,10,10,10,10,10,10,]),'bwhile':([0,103,124,163,168,169,173,],[11,11,11,11,11,11,11,]),'bfor':([0,103,124,163,168,169,173,],[12,12,12,12,12,12,12,]),'bforeach':([0,103,124,163,168,169,173,],[13,13,13,13,13,13,13,]),'btry':([0,103,124,163,168,169,173,],[14,14,14,14,14,14,14,]),'operaciones_mat_par':([0,86,103,124,163,168,169,173,],[15,110,15,15,15,15,15,15,]),'condicion_ifelse':([0,103,124,163,168,169,173,],[16,16,16,16,16,16,16,]),'funcion_nparams':([0,22,103,124,163,168,169,173,],[21,67,21,21,21,21,21,21,]),'proteccion':([0,103,124,163,168,169,173,],[22,22,22,22,22,22,22,]),'funcion_opreturn':([0,22,103,124,163,168,169,173,],[23,68,23,23,23,23,23,23,]),'funcion_blank':([0,22,103,124,163,168,169,173,],[24,69,24,24,24,24,24,24,]),'condicion_if':([0,103,124,163,168,169,173,],[48,48,48,48,48,48,48,]),'valor':([17,18,19,63,66,72,81,86,104,113,114,120,121,122,],[55,62,65,85,87,96,96,109,96,142,144,150,96,87,]),'numero':([17,18,19,63,66,72,81,86,104,113,114,120,121,122,199,201,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,205,206,]),'condicion_else':([48,77,],[76,102,]),'condicion_elseif':([48,],[77,]),'array_def':([66,],[88,]),'condicion':([72,81,104,121,],[94,106,129,151,]),'stc_bloque_def':([75,131,159,171,190,207,],[101,161,174,185,197,208,]),'stc_bloque':([100,147,148,162,],[124,168,169,124,]),'empty':([100,113,127,147,148,162,],[125,143,156,125,125,176,]),'params_list':([105,],[130,]),'param':([105,160,],[132,175,]),'array_elmnt':([113,],[141,]),'catches':([127,],[155,]),'for_incr':([170,],[181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> imprimir','cuerpo',1,'p_cuerpo','sintactico.py',7),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',8),
  ('cuerpo -> asignacion_array','cuerpo',1,'p_cuerpo','sintactico.py',9),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',10),
  ('cuerpo -> constante','cuerpo',1,'p_cuerpo','sintactico.py',11),
  ('cuerpo -> lectura','cuerpo',1,'p_cuerpo','sintactico.py',12),
  ('cuerpo -> operadores','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> operador_logico','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> condicion_booleana','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> bwhile','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> bfor','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> bforeach','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> btry','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> operaciones_mat_par','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> condicion_ifelse','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('imprimir -> ECHO valor SEMI','imprimir',3,'p_imprimir','sintactico.py',26),
  ('imprimir -> PRINT valor SEMI','imprimir',3,'p_imprimir','sintactico.py',27),
  ('imprimir -> PRINT LPAREN valor RPAREN SEMI','imprimir',5,'p_imprimir','sintactico.py',28),
  ('imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI','imprimir',6,'p_imprimir','sintactico.py',29),
  ('valor -> numero','valor',1,'p_valor','sintactico.py',34),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',35),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',36),
  ('valor -> NOMBRE','valor',1,'p_valor','sintactico.py',37),
  ('numero -> ENTERO','numero',1,'p_numero','sintactico.py',41),
  ('numero -> DECIMAL','numero',1,'p_numero','sintactico.py',42),
  ('operadores -> SUMA','operadores',1,'p_operadores','sintactico.py',45),
  ('operadores -> RESTA','operadores',1,'p_operadores','sintactico.py',46),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',47),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',48),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',49),
  ('operador_logico -> SMALLER','operador_logico',1,'p_operador_logico','sintactico.py',54),
  ('operador_logico -> GREATER','operador_logico',1,'p_operador_logico','sintactico.py',55),
  ('operador_logico -> IS_SMALLER_OR_EQUAL','operador_logico',1,'p_operador_logico','sintactico.py',56),
  ('operador_logico -> IS_GREATER_OR_EQUAL','operador_logico',1,'p_operador_logico','sintactico.py',57),
  ('condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE','condicion_if',7,'p_condicion_if','sintactico.py',60),
  ('condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE','condicion_elseif',7,'p_condicion_elseif','sintactico.py',63),
  ('condicion_else -> ELSE LBRACE cuerpo RBRACE','condicion_else',4,'p_condicion_else','sintactico.py',66),
  ('condicion_ifelse -> condicion_if','condicion_ifelse',1,'p_condicion_ifelse','sintactico.py',69),
  ('condicion_ifelse -> condicion_if condicion_else','condicion_ifelse',2,'p_condicion_ifelse','sintactico.py',70),
  ('condicion_ifelse -> condicion_if condicion_elseif','condicion_ifelse',2,'p_condicion_ifelse','sintactico.py',71),
  ('condicion_ifelse -> condicion_if condicion_elseif condicion_else','condicion_ifelse',3,'p_condicion_ifelse','sintactico.py',72),
  ('condicion_booleana -> AND','condicion_booleana',1,'p_condicion_boolena','sintactico.py',75),
  ('condicion_booleana -> OR','condicion_booleana',1,'p_condicion_boolena','sintactico.py',76),
  ('condicion_booleana -> XOR','condicion_booleana',1,'p_condicion_boolena','sintactico.py',77),
  ('condicion_booleana -> IS_EQUAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',78),
  ('condicion_booleana -> IS_NOT_EQUAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',79),
  ('condicion_booleana -> IS_IDENTICAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',80),
  ('condicion_booleana -> IS_NOT_IDENTICAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',81),
  ('condicion_booleana -> BOOLEAN_NOT','condicion_booleana',1,'p_condicion_boolena','sintactico.py',82),
  ('operaciones_mat -> valor operadores valor','operaciones_mat',3,'p_operaciones_mat','sintactico.py',87),
  ('operaciones_mat -> valor operadores operaciones_mat','operaciones_mat',3,'p_operaciones_mat','sintactico.py',88),
  ('operaciones_mat_par -> LPAREN valor operadores valor RPAREN','operaciones_mat_par',5,'p_operaciones_mat_par','sintactico.py',93),
  ('operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN','operaciones_mat_par',5,'p_operaciones_mat_par','sintactico.py',94),
  ('asignacion -> VARIABLE EQUALS valor SEMI','asignacion',4,'p_asignacion','sintactico.py',98),
  ('asignacion_array -> VARIABLE EQUALS array_def SEMI','asignacion_array',4,'p_asignacion_array','sintactico.py',103),
  ('constante -> DEFINE LPAREN STRING COMMA valor RPAREN SEMI','constante',7,'p_constante','sintactico.py',106),
  ('constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI','constante',7,'p_constante','sintactico.py',107),
  ('lectura -> READLINE LPAREN STRING RPAREN SEMI','lectura',5,'p_lectura','sintactico.py',111),
  ('lectura -> READLINE LPAREN RPAREN SEMI','lectura',4,'p_lectura','sintactico.py',112),
  ('proteccion -> PUBLIC','proteccion',1,'p_proteccion','sintactico.py',115),
  ('proteccion -> PRIVATE','proteccion',1,'p_proteccion','sintactico.py',116),
  ('proteccion -> PROTECTED','proteccion',1,'p_proteccion','sintactico.py',117),
  ('proteccion -> STATIC','proteccion',1,'p_proteccion','sintactico.py',118),
  ('funciones -> funcion_nparams','funciones',1,'p_funciones','sintactico.py',122),
  ('funciones -> proteccion funcion_nparams','funciones',2,'p_funciones','sintactico.py',123),
  ('funciones -> funcion_opreturn','funciones',1,'p_funciones','sintactico.py',124),
  ('funciones -> proteccion funcion_opreturn','funciones',2,'p_funciones','sintactico.py',125),
  ('funciones -> funcion_blank','funciones',1,'p_funciones','sintactico.py',126),
  ('funciones -> proteccion funcion_blank','funciones',2,'p_funciones','sintactico.py',127),
  ('param -> VARIABLE','param',1,'p_param','sintactico.py',131),
  ('param -> asignacion','param',1,'p_param','sintactico.py',132),
  ('funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def','funcion_nparams',6,'p_funcion_nparams','sintactico.py',135),
  ('params_list -> params_list COMMA param','params_list',3,'p_params_list','sintactico.py',138),
  ('params_list -> param','params_list',1,'p_params_list','sintactico.py',139),
  ('funcion_opreturn -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def','funcion_opreturn',6,'p_funcion_opreturn','sintactico.py',142),
  ('funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def','funcion_blank',5,'p_funcion_blank','sintactico.py',145),
  ('funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE','funcion_blank',7,'p_funcion_blank','sintactico.py',146),
  ('condicion -> VARIABLE operador_logico VARIABLE','condicion',3,'p_condicion','sintactico.py',152),
  ('condicion -> valor operador_logico valor','condicion',3,'p_condicion','sintactico.py',153),
  ('bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE','bwhile',7,'p_bwhile','sintactico.py',157),
  ('bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque','bwhile',6,'p_bwhile','sintactico.py',158),
  ('bswitch -> SWITCH LPAREN','bswitch',2,'p_bswitch','sintactico.py',161),
  ('bfor -> FOR LPAREN asignacion SEMI condicion SEMI for_incr RPAREN stc_bloque_def','bfor',9,'p_bfor','sintactico.py',165),
  ('stc_bloque -> stc_bloque cuerpo','stc_bloque',2,'p_stc_bloque','sintactico.py',168),
  ('stc_bloque -> empty','stc_bloque',1,'p_stc_bloque','sintactico.py',169),
  ('stc_bloque -> RETURN','stc_bloque',1,'p_stc_bloque','sintactico.py',170),
  ('stc_bloque_def -> LBRACE stc_bloque RBRACE','stc_bloque_def',3,'p_stc_bloque_def','sintactico.py',174),
  ('for_incr -> VARIABLE SUMA SUMA','for_incr',3,'p_for_incr','sintactico.py',177),
  ('for_incr -> SUMA SUMA VARIABLE','for_incr',3,'p_for_incr','sintactico.py',178),
  ('for_incr -> VARIABLE RESTA RESTA','for_incr',3,'p_for_incr','sintactico.py',179),
  ('for_incr -> RESTA RESTA VARIABLE','for_incr',3,'p_for_incr','sintactico.py',180),
  ('for_incr -> VARIABLE SUMA EQUALS numero','for_incr',4,'p_for_incr','sintactico.py',181),
  ('for_incr -> VARIABLE RESTA EQUALS numero','for_incr',4,'p_for_incr','sintactico.py',182),
  ('bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def','bforeach',7,'p_bforeach','sintactico.py',185),
  ('array_def -> ARRAY LPAREN RPAREN','array_def',3,'p_array_def','sintactico.py',188),
  ('array_def -> ARRAY LPAREN array_elmnt RPAREN','array_def',4,'p_array_def','sintactico.py',189),
  ('array_elmnt -> valor','array_elmnt',1,'p_array_elmnt','sintactico.py',191),
  ('array_elmnt -> empty','array_elmnt',1,'p_array_elmnt','sintactico.py',192),
  ('btry -> TRY LBRACE stc_bloque_def RBRACE catches','btry',5,'p_btry','sintactico.py',195),
  ('catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def','catches',7,'p_catches','sintactico.py',198),
  ('catches -> empty','catches',1,'p_catches','sintactico.py',199),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',202),
]
