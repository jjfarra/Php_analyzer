
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY AS BOOL BOOLEAN_NOT BREAK CASE CATCH CLOSE_TAG COLON COMENTARIOS COMMA CONCAT CONTINUE CURLY_OPEN DECIMAL DEFAULT DEFINE DIVISION DIV_EQUAL DO DOC_COMENTARIOS DOUBLE ECHO ELSE ELSEIF ENTERO EQUALS EXIT FALSE FLOAT FOR FOREACH FUNCTION GOTO GREATER IF INT IS_EQUAL IS_GREATER_OR_EQUAL IS_IDENTICAL IS_NOT_EQUAL IS_NOT_IDENTICAL IS_SMALLER_OR_EQUAL LBRACE LBRACKET LPAREN MINUS_EQUAL MODULO MOD_EQUAL MULTIPLICACION MUL_EQUAL NOMBRE NOT NULL OPEN_TAG OR PLUS_EQUAL PRINT PRIVATE PROTECTED PUBLIC RBRACE RBRACKET READLINE REQUIRE RESTA RETURN RPAREN SEMI SMALLER STATIC STRING SUMA SWITCH TRUE TRY VAR VARIABLE VOID WHILE XOR queuecuerpo : imprimir\n            | asignacion\n            | asignacion_array\n            | funciones\n            | constante\n            | lectura\n            | operadores\n            | operador_logico\n            | condicion_booleana\n            | bwhile\n            | bdo\n            | bfor\n            | bforeach\n            | btry\n            | operaciones_mat_par\n            | condicion_ifelse \n            | bswitch\n            | bgoto\n  cuerpo_general : cuerpoform : OPEN_TAG cuerpo_general CLOSE_TAGimprimir : ECHO valor SEMI\n            | PRINT valor SEMI\n            | PRINT LPAREN valor RPAREN SEMI\n            | ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI\n  valor : numero\n            | VARIABLE\n            | STRING\n            | NOMBRE\n  numero : ENTERO\n          | DECIMAL\n  operadores : SUMA \n                  | RESTA\n                  | MULTIPLICACION\n                  | DIVISION\n                  | MODULO\n  operador_logico :  SMALLER\n                        | GREATER\n                        | IS_SMALLER_OR_EQUAL\n                        | IS_GREATER_OR_EQUAL\n  condicion_if :  IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE\n  condicion_elseif :  ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE\n  condicion_else :  ELSE LBRACE cuerpo RBRACE\n  condicion_ifelse :  condicion_if\n                      | condicion_if condicion_else\n                      | condicion_if condicion_elseif\n                      | condicion_if condicion_elseif condicion_else\n  condicion_booleana :  AND\n                        | OR\n                        | XOR\n                        | IS_EQUAL\n                        | IS_NOT_EQUAL\n                        | IS_IDENTICAL\n                        | IS_NOT_IDENTICAL\n                        | BOOLEAN_NOT\n  operaciones_mat :  valor operadores valor\n                        | valor operadores operaciones_mat\n                       \n  operaciones_mat_par :  LPAREN valor operadores valor RPAREN\n                          |  LPAREN valor operadores operaciones_mat_par RPAREN\n  asignacion : VARIABLE EQUALS valor SEMI\n                | VAR asignacion\n                | proteccion asignacion\n  asignacion_array : VARIABLE EQUALS array_def SEMIconstante : DEFINE LPAREN STRING COMMA valor RPAREN SEMI\n          | DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMIlectura : READLINE LPAREN STRING RPAREN SEMI\n          | READLINE LPAREN RPAREN SEMIproteccion : PUBLIC\n          | PRIVATE\n          | PROTECTED\n          | STATIC\n  funciones : funcion_nparams\n              | proteccion funcion_nparams\n              | funcion_opreturn\n              | proteccion funcion_opreturn\n              | funcion_blank\n              | proteccion funcion_blank\n              | funcion_void\n  param : VARIABLE\n          | asignacionfuncion_nparams : FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_defparams_list : params_list COMMA param\n                      | param funcion_opreturn : FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def\n  funcion_void : FUNCTION NOMBRE LPAREN  RPAREN COLON VOID LBRACE empty RBRACE funcion_blank : FUNCTION NOMBRE LPAREN  RPAREN stc_bloque_def\n                    | FUNCTION NOMBRE LPAREN  RPAREN LBRACE empty RBRACE\n   condicion : VARIABLE operador_logico VARIABLE\n            | valor operador_logico valor       \n   bwhile : WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE \n  | WHILE LPAREN condicion RPAREN COLON stc_bloque  \n   bdo : DO LBRACE cuerpo RBRACE bwhile \n   bswitch : SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE innerSwitch : CASE ENTERO COLON cuerpo BREAK SEMI\n    | CASE ENTERO COLON cuerpo BREAK SEMI innerSwitch \n   colas : \n  bfor : FOR LPAREN asignacion SEMI condicion SEMI for_incr RPAREN stc_bloque_defstc_bloque : stc_bloque cuerpo\n        | empty\n        | RETURN\n        | RETURN NULL\n        stc_bloque_def : LBRACE stc_bloque RBRACEfor_incr : VARIABLE SUMA SUMA\n          | SUMA SUMA VARIABLE\n          | VARIABLE RESTA RESTA\n          | RESTA RESTA VARIABLE\n          | VARIABLE SUMA EQUALS numero\n          | VARIABLE RESTA EQUALS numerobforeach :  FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_defarray_def : ARRAY LPAREN RPAREN \n          | ARRAY LPAREN array_elmnt RPARENarray_elmnt : valor\n            | emptybtry : TRY LBRACE stc_bloque_def RBRACE catchescatches : catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def\n          | emptyempty : bgoto : GOTO NOMBRE SEMI'
    
_lr_action_items = {'ECHO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[20,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,20,-44,-45,-21,-22,-116,-46,20,-117,-59,-62,-66,20,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,20,-24,20,20,20,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,20,-96,-84,-114,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[21,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,21,-44,-45,-21,-22,-116,-46,21,-117,-59,-62,-66,21,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,21,-24,21,21,21,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,21,-96,-84,-114,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,57,58,59,60,71,74,75,77,78,79,80,81,85,86,87,88,90,91,94,97,98,100,102,106,118,120,121,122,124,125,131,132,133,134,135,138,140,141,143,144,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,186,187,188,190,191,195,196,197,200,203,205,208,209,210,215,218,220,222,226,227,228,229,230,232,241,246,],[23,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,67,67,67,76,76,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-67,-68,-69,-70,67,67,-60,76,-61,-72,-74,-76,113,23,76,117,-44,-45,123,113,-21,-22,67,67,-116,-46,23,113,-117,155,-59,-62,67,155,67,-66,172,67,113,176,23,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,155,-85,-116,23,-24,23,23,212,23,-80,-98,-63,-64,-89,-108,-92,-86,-40,237,238,239,-41,23,-96,-84,-114,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,57,58,59,60,75,77,78,79,80,81,86,87,90,91,98,100,118,120,121,124,125,131,132,134,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,186,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[24,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,24,24,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-67,-68,-69,-70,-60,24,-61,-72,-74,-76,24,24,-44,-45,-21,-22,-116,-46,24,-117,24,-59,-62,24,-66,24,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,24,-85,-116,24,-24,24,24,24,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,24,-96,-84,-114,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[30,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,30,-44,-45,-21,-22,-116,-46,30,-117,-59,-62,-66,30,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,30,-24,30,30,30,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,30,-96,-84,-114,]),'READLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[31,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,31,-44,-45,-21,-22,-116,-46,31,-117,-59,-62,-66,31,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,31,-24,31,31,31,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,31,-96,-84,-114,]),'SUMA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,65,66,67,68,69,72,73,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,197,200,203,205,208,209,210,212,213,215,218,220,222,224,229,230,232,241,246,],[32,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-26,-27,-30,-28,32,-60,-61,-72,-74,-76,32,-44,-45,-21,-22,-116,-46,32,-117,-59,-62,-66,32,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,32,-24,32,32,213,32,-80,-98,-63,-64,-89,224,226,-108,-92,-86,-40,233,-41,32,-96,-84,-114,]),'RESTA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,65,66,67,68,69,72,73,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,197,200,203,205,208,209,210,212,214,215,218,220,222,225,229,230,232,241,246,],[33,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-26,-27,-30,-28,33,-60,-61,-72,-74,-76,33,-44,-45,-21,-22,-116,-46,33,-117,-59,-62,-66,33,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,33,-24,33,33,214,33,-80,-98,-63,-64,-89,225,227,-108,-92,-86,-40,235,-41,33,-96,-84,-114,]),'MULTIPLICACION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,65,66,67,68,69,72,73,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[34,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-26,-27,-30,-28,34,-60,-61,-72,-74,-76,34,-44,-45,-21,-22,-116,-46,34,-117,-59,-62,-66,34,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,34,-24,34,34,34,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,34,-96,-84,-114,]),'DIVISION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,65,66,67,68,69,72,73,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[35,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-26,-27,-30,-28,35,-60,-61,-72,-74,-76,35,-44,-45,-21,-22,-116,-46,35,-117,-59,-62,-66,35,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,35,-24,35,35,35,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,35,-96,-84,-114,]),'MODULO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,65,66,67,68,69,72,73,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[36,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-26,-27,-30,-28,36,-60,-61,-72,-74,-76,36,-44,-45,-21,-22,-116,-46,36,-117,-59,-62,-66,36,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,36,-24,36,36,36,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,36,-96,-84,-114,]),'SMALLER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,65,66,68,69,72,75,78,79,80,81,86,90,91,98,100,113,114,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[37,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-27,-30,-28,-60,-61,-72,-74,-76,37,-44,-45,-21,-22,37,37,-116,-46,37,-117,-59,-62,-66,37,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,37,-24,37,37,37,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,37,-96,-84,-114,]),'GREATER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,65,66,68,69,72,75,78,79,80,81,86,90,91,98,100,113,114,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[38,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-27,-30,-28,-60,-61,-72,-74,-76,38,-44,-45,-21,-22,38,38,-116,-46,38,-117,-59,-62,-66,38,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,38,-24,38,38,38,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,38,-96,-84,-114,]),'IS_SMALLER_OR_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,65,66,68,69,72,75,78,79,80,81,86,90,91,98,100,113,114,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[39,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-27,-30,-28,-60,-61,-72,-74,-76,39,-44,-45,-21,-22,39,39,-116,-46,39,-117,-59,-62,-66,39,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,39,-24,39,39,39,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,39,-96,-84,-114,]),'IS_GREATER_OR_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,65,66,68,69,72,75,78,79,80,81,86,90,91,98,100,113,114,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[40,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-27,-30,-28,-60,-61,-72,-74,-76,40,-44,-45,-21,-22,40,40,-116,-46,40,-117,-59,-62,-66,40,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,40,-24,40,40,40,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,40,-96,-84,-114,]),'AND':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[41,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,41,-44,-45,-21,-22,-116,-46,41,-117,-59,-62,-66,41,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,41,-24,41,41,41,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,41,-96,-84,-114,]),'OR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[42,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,42,-44,-45,-21,-22,-116,-46,42,-117,-59,-62,-66,42,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,42,-24,42,42,42,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,42,-96,-84,-114,]),'XOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[43,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,43,-44,-45,-21,-22,-116,-46,43,-117,-59,-62,-66,43,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,43,-24,43,43,43,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,43,-96,-84,-114,]),'IS_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[44,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,44,-44,-45,-21,-22,-116,-46,44,-117,-59,-62,-66,44,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,44,-24,44,44,44,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,44,-96,-84,-114,]),'IS_NOT_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[45,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,45,-44,-45,-21,-22,-116,-46,45,-117,-59,-62,-66,45,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,45,-24,45,45,45,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,45,-96,-84,-114,]),'IS_IDENTICAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[46,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,46,-44,-45,-21,-22,-116,-46,46,-117,-59,-62,-66,46,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,46,-24,46,46,46,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,46,-96,-84,-114,]),'IS_NOT_IDENTICAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[47,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,47,-44,-45,-21,-22,-116,-46,47,-117,-59,-62,-66,47,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,47,-24,47,47,47,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,47,-96,-84,-114,]),'BOOLEAN_NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[48,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,48,-44,-45,-21,-22,-116,-46,48,-117,-59,-62,-66,48,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,48,-24,48,48,48,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,48,-96,-84,-114,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,142,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[49,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,49,-44,-45,-21,-22,-116,-46,49,-117,-59,-62,-66,49,49,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,49,-24,49,49,49,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,49,-96,-84,-114,]),'DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[50,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,50,-44,-45,-21,-22,-116,-46,50,-117,-59,-62,-66,50,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,50,-24,50,50,50,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,50,-96,-84,-114,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[51,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,51,-44,-45,-21,-22,-116,-46,51,-117,-59,-62,-66,51,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,51,-24,51,51,51,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,51,-96,-84,-114,]),'FOREACH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[52,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,52,-44,-45,-21,-22,-116,-46,52,-117,-59,-62,-66,52,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,52,-24,52,52,52,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,52,-96,-84,-114,]),'TRY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[53,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,53,-44,-45,-21,-22,-116,-46,53,-117,-59,-62,-66,53,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,53,-24,53,53,53,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,53,-96,-84,-114,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,51,52,54,55,62,75,78,79,80,81,86,90,91,93,96,98,100,102,105,107,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,199,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[22,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,71,-71,-73,-75,-77,83,84,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,85,87,88,-43,94,97,-60,-61,-72,-74,-76,22,-44,-45,122,125,-21,-22,22,133,134,-116,-46,22,-117,-59,-62,-66,22,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,22,-24,22,22,216,22,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,22,-96,-84,-114,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[55,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,55,-44,-45,-21,-22,-116,-46,55,-117,-59,-62,-66,55,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,55,-24,55,55,55,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,55,-96,-84,-114,]),'GOTO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[56,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,56,-44,-45,-21,-22,-116,-46,56,-117,-59,-62,-66,56,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,56,-24,56,56,56,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,56,-96,-84,-114,]),'PUBLIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,57,58,59,60,75,77,78,79,80,81,86,87,90,91,98,100,118,120,121,124,125,131,132,134,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,186,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[57,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,57,57,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-67,-68,-69,-70,-60,57,-61,-72,-74,-76,57,57,-44,-45,-21,-22,-116,-46,57,-117,57,-59,-62,57,-66,57,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,57,-85,-116,57,-24,57,57,57,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,57,-96,-84,-114,]),'PRIVATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,57,58,59,60,75,77,78,79,80,81,86,87,90,91,98,100,118,120,121,124,125,131,132,134,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,186,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[58,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,58,58,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-67,-68,-69,-70,-60,58,-61,-72,-74,-76,58,58,-44,-45,-21,-22,-116,-46,58,-117,58,-59,-62,58,-66,58,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,58,-85,-116,58,-24,58,58,58,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,58,-96,-84,-114,]),'PROTECTED':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,57,58,59,60,75,77,78,79,80,81,86,87,90,91,98,100,118,120,121,124,125,131,132,134,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,186,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[59,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,59,59,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-67,-68,-69,-70,-60,59,-61,-72,-74,-76,59,59,-44,-45,-21,-22,-116,-46,59,-117,59,-59,-62,59,-66,59,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,59,-85,-116,59,-24,59,59,59,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,59,-96,-84,-114,]),'STATIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,57,58,59,60,75,77,78,79,80,81,86,87,90,91,98,100,118,120,121,124,125,131,132,134,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,186,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[60,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,60,60,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-67,-68,-69,-70,-60,60,-61,-72,-74,-76,60,60,-44,-45,-21,-22,-116,-46,60,-117,60,-59,-62,60,-66,60,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,60,-85,-116,60,-24,60,60,60,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,60,-96,-84,-114,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,25,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,57,58,59,60,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[61,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,82,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-67,-68,-69,-70,-60,-61,-72,-74,-76,61,-44,-45,-21,-22,-116,-46,61,-117,-59,-62,-66,61,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,61,-24,61,61,61,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,61,-96,-84,-114,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,86,90,91,98,100,118,120,121,124,131,132,138,145,146,147,148,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,190,191,195,196,200,203,205,208,209,210,215,218,220,222,229,230,232,241,246,],[62,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,62,-44,-45,-21,-22,-116,-46,62,-117,-59,-62,-66,62,-98,-99,-116,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,62,-24,62,62,62,-80,-98,-63,-64,-89,-108,-92,-86,-40,-41,62,-96,-84,-114,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,90,91,98,100,120,124,131,132,138,146,147,148,159,160,161,169,171,174,177,178,179,180,181,182,187,191,196,203,208,209,210,215,218,220,222,229,232,241,246,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,-44,-45,-21,-22,-46,-117,-59,-62,-66,-98,-99,-116,-23,-57,-58,-65,-116,-91,-101,-97,-100,-113,-115,-42,-85,-24,-90,-80,-63,-64,-89,-108,-92,-86,-40,-41,-96,-84,-114,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,90,91,98,100,115,118,119,120,124,131,132,138,145,146,147,148,149,159,160,161,169,170,171,174,177,178,179,180,181,182,187,188,191,195,196,201,203,205,207,208,209,210,215,217,218,220,221,222,229,231,232,241,246,247,248,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,-44,-45,-21,-22,142,-116,148,-46,-117,-59,-62,-66,177,-98,-99,-116,182,-23,-57,-58,-65,-116,-116,-91,-101,-97,-100,-113,-115,-42,-85,-116,-24,210,-90,218,-80,220,222,-63,-64,-89,-108,229,-92,-86,-116,-40,-41,241,-96,-84,-114,-93,-94,]),'BREAK':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,54,75,78,79,80,81,90,91,98,100,120,124,131,132,138,146,147,148,159,160,161,169,171,174,177,178,179,180,181,182,187,191,196,203,208,209,210,215,218,220,222,229,232,240,241,246,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-71,-73,-75,-77,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-60,-61,-72,-74,-76,-44,-45,-21,-22,-46,-117,-59,-62,-66,-98,-99,-116,-23,-57,-58,-65,-116,-91,-101,-97,-100,-113,-115,-42,-85,-24,-90,-80,-63,-64,-89,-108,-92,-86,-40,-41,-96,245,-84,-114,]),'NOMBRE':([20,21,22,32,33,34,35,36,37,38,39,40,56,61,71,74,82,83,85,97,102,106,122,133,135,141,143,216,],[64,72,72,-31,-32,-33,-34,-35,-36,-37,-38,-39,95,96,72,72,107,109,72,72,72,72,72,72,72,72,72,228,]),'STRING':([20,21,22,32,33,34,35,36,37,38,39,40,71,74,83,84,85,97,102,106,122,133,135,141,143,],[68,68,68,-31,-32,-33,-34,-35,-36,-37,-38,-39,68,68,108,110,68,68,68,68,68,68,68,68,68,]),'ENTERO':([20,21,22,32,33,34,35,36,37,38,39,40,71,74,85,97,99,102,106,122,133,135,141,143,202,234,236,],[65,65,65,-31,-32,-33,-34,-35,-36,-37,-38,-39,65,65,65,65,127,65,65,65,65,65,65,65,219,65,65,]),'DECIMAL':([20,21,22,32,33,34,35,36,37,38,39,40,71,74,85,97,102,106,122,133,135,141,143,234,236,],[69,69,69,-31,-32,-33,-34,-35,-36,-37,-38,-39,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'EQUALS':([23,76,155,224,225,],[74,106,106,234,236,]),'LBRACE':([50,53,89,92,139,151,153,157,166,183,185,198,206,223,244,],[86,89,118,121,170,184,188,190,188,200,118,118,221,118,118,]),'ELSE':([54,91,222,229,],[92,92,-40,-41,]),'ELSEIF':([54,222,],[93,-40,]),'SEMI':([63,64,65,66,67,68,69,70,72,75,78,95,103,104,111,116,128,131,137,158,162,172,173,175,192,193,194,245,],[98,-28,-29,-25,-26,-27,-30,100,-28,-60,-61,124,131,132,138,143,159,-59,169,191,-109,-87,-88,197,-110,208,209,247,]),'LBRACKET':([64,],[99,]),'RPAREN':([65,66,67,68,69,72,75,78,84,101,110,112,123,125,126,129,130,131,133,134,150,152,154,155,156,160,161,163,164,165,167,168,172,173,176,204,211,233,235,237,238,239,242,243,],[-29,-25,-26,-27,-30,-28,-60,-61,111,128,137,139,151,153,157,160,161,-59,162,166,183,185,-82,-78,-79,-57,-58,192,-111,-112,193,194,-87,-88,198,-81,223,-102,-104,-103,-105,244,-106,-107,]),'ARRAY':([74,136,],[105,168,]),'COMMA':([75,78,108,109,131,152,154,155,156,204,],[-60,-61,135,136,-59,186,-82,-78,-79,-81,]),'AS':([117,],[144,]),'RETURN':([118,170,171,188,],[147,147,147,147,]),'RBRACKET':([127,],[158,]),'COLON':([139,153,219,],[171,189,230,]),'NULL':([147,],[179,]),'CATCH':([148,177,180,181,246,],[-116,-101,199,-115,-114,]),'CASE':([184,247,],[202,202,]),'VOID':([189,],[206,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,86,121,145,190,195,196,200,230,],[1,115,149,178,207,178,178,217,240,]),'imprimir':([0,86,121,145,190,195,196,200,230,],[2,2,2,2,2,2,2,2,2,]),'asignacion':([0,24,25,77,86,87,121,125,134,145,186,190,195,196,200,230,],[3,75,78,78,3,116,3,156,156,3,156,3,3,3,3,3,]),'asignacion_array':([0,86,121,145,190,195,196,200,230,],[4,4,4,4,4,4,4,4,4,]),'funciones':([0,86,121,145,190,195,196,200,230,],[5,5,5,5,5,5,5,5,5,]),'constante':([0,86,121,145,190,195,196,200,230,],[6,6,6,6,6,6,6,6,6,]),'lectura':([0,86,121,145,190,195,196,200,230,],[7,7,7,7,7,7,7,7,7,]),'operadores':([0,73,86,121,145,190,195,196,200,230,],[8,102,8,8,8,8,8,8,8,8,]),'operador_logico':([0,86,113,114,121,145,190,195,196,200,230,],[9,9,140,141,9,9,9,9,9,9,9,]),'condicion_booleana':([0,86,121,145,190,195,196,200,230,],[10,10,10,10,10,10,10,10,10,]),'bwhile':([0,86,121,142,145,190,195,196,200,230,],[11,11,11,174,11,11,11,11,11,11,]),'bdo':([0,86,121,145,190,195,196,200,230,],[12,12,12,12,12,12,12,12,12,]),'bfor':([0,86,121,145,190,195,196,200,230,],[13,13,13,13,13,13,13,13,13,]),'bforeach':([0,86,121,145,190,195,196,200,230,],[14,14,14,14,14,14,14,14,14,]),'btry':([0,86,121,145,190,195,196,200,230,],[15,15,15,15,15,15,15,15,15,]),'operaciones_mat_par':([0,86,102,121,145,190,195,196,200,230,],[16,16,130,16,16,16,16,16,16,16,]),'condicion_ifelse':([0,86,121,145,190,195,196,200,230,],[17,17,17,17,17,17,17,17,17,]),'bswitch':([0,86,121,145,190,195,196,200,230,],[18,18,18,18,18,18,18,18,18,]),'bgoto':([0,86,121,145,190,195,196,200,230,],[19,19,19,19,19,19,19,19,19,]),'proteccion':([0,24,25,77,86,87,121,125,134,145,186,190,195,196,200,230,],[25,77,77,77,25,77,25,77,77,25,77,25,25,25,25,25,]),'funcion_nparams':([0,25,86,121,145,190,195,196,200,230,],[26,79,26,26,26,26,26,26,26,26,]),'funcion_opreturn':([0,25,86,121,145,190,195,196,200,230,],[27,80,27,27,27,27,27,27,27,27,]),'funcion_blank':([0,25,86,121,145,190,195,196,200,230,],[28,81,28,28,28,28,28,28,28,28,]),'funcion_void':([0,86,121,145,190,195,196,200,230,],[29,29,29,29,29,29,29,29,29,]),'condicion_if':([0,86,121,145,190,195,196,200,230,],[54,54,54,54,54,54,54,54,54,]),'valor':([20,21,22,71,74,85,97,102,106,122,133,135,141,143,],[63,70,73,101,103,114,114,129,103,114,164,167,173,114,]),'numero':([20,21,22,71,74,85,97,102,106,122,133,135,141,143,234,236,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,242,243,]),'condicion_else':([54,91,],[90,120,]),'condicion_elseif':([54,],[91,]),'array_def':([74,],[104,]),'condicion':([85,97,122,143,],[112,126,150,175,]),'stc_bloque_def':([89,153,166,185,198,223,244,],[119,187,187,203,215,232,246,]),'stc_bloque':([118,170,171,188,],[145,195,196,145,]),'empty':([118,133,148,170,171,188,221,],[146,165,181,146,146,205,231,]),'params_list':([125,134,],[152,152,]),'param':([125,134,186,],[154,154,204,]),'array_elmnt':([133,],[163,]),'catches':([148,],[180,]),'innerSwitch':([184,247,],[201,248,]),'for_incr':([197,],[211,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> imprimir','cuerpo',1,'p_cuerpo','sintactico.py',8),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',9),
  ('cuerpo -> asignacion_array','cuerpo',1,'p_cuerpo','sintactico.py',10),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',11),
  ('cuerpo -> constante','cuerpo',1,'p_cuerpo','sintactico.py',12),
  ('cuerpo -> lectura','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> operadores','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> operador_logico','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> condicion_booleana','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> bwhile','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> bdo','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> bfor','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> bforeach','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> btry','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> operaciones_mat_par','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> condicion_ifelse','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> bswitch','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> bgoto','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo_general -> cuerpo','cuerpo_general',1,'p_cuerpo_general','sintactico.py',29),
  ('form -> OPEN_TAG cuerpo_general CLOSE_TAG','form',3,'p_form','sintactico.py',31),
  ('imprimir -> ECHO valor SEMI','imprimir',3,'p_imprimir','sintactico.py',34),
  ('imprimir -> PRINT valor SEMI','imprimir',3,'p_imprimir','sintactico.py',35),
  ('imprimir -> PRINT LPAREN valor RPAREN SEMI','imprimir',5,'p_imprimir','sintactico.py',36),
  ('imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI','imprimir',6,'p_imprimir','sintactico.py',37),
  ('valor -> numero','valor',1,'p_valor','sintactico.py',42),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',43),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',44),
  ('valor -> NOMBRE','valor',1,'p_valor','sintactico.py',45),
  ('numero -> ENTERO','numero',1,'p_numero','sintactico.py',49),
  ('numero -> DECIMAL','numero',1,'p_numero','sintactico.py',50),
  ('operadores -> SUMA','operadores',1,'p_operadores','sintactico.py',54),
  ('operadores -> RESTA','operadores',1,'p_operadores','sintactico.py',55),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',56),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',57),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',58),
  ('operador_logico -> SMALLER','operador_logico',1,'p_operador_logico','sintactico.py',63),
  ('operador_logico -> GREATER','operador_logico',1,'p_operador_logico','sintactico.py',64),
  ('operador_logico -> IS_SMALLER_OR_EQUAL','operador_logico',1,'p_operador_logico','sintactico.py',65),
  ('operador_logico -> IS_GREATER_OR_EQUAL','operador_logico',1,'p_operador_logico','sintactico.py',66),
  ('condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE','condicion_if',7,'p_condicion_if','sintactico.py',69),
  ('condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE','condicion_elseif',7,'p_condicion_elseif','sintactico.py',73),
  ('condicion_else -> ELSE LBRACE cuerpo RBRACE','condicion_else',4,'p_condicion_else','sintactico.py',77),
  ('condicion_ifelse -> condicion_if','condicion_ifelse',1,'p_condicion_ifelse','sintactico.py',81),
  ('condicion_ifelse -> condicion_if condicion_else','condicion_ifelse',2,'p_condicion_ifelse','sintactico.py',82),
  ('condicion_ifelse -> condicion_if condicion_elseif','condicion_ifelse',2,'p_condicion_ifelse','sintactico.py',83),
  ('condicion_ifelse -> condicion_if condicion_elseif condicion_else','condicion_ifelse',3,'p_condicion_ifelse','sintactico.py',84),
  ('condicion_booleana -> AND','condicion_booleana',1,'p_condicion_boolena','sintactico.py',87),
  ('condicion_booleana -> OR','condicion_booleana',1,'p_condicion_boolena','sintactico.py',88),
  ('condicion_booleana -> XOR','condicion_booleana',1,'p_condicion_boolena','sintactico.py',89),
  ('condicion_booleana -> IS_EQUAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',90),
  ('condicion_booleana -> IS_NOT_EQUAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',91),
  ('condicion_booleana -> IS_IDENTICAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',92),
  ('condicion_booleana -> IS_NOT_IDENTICAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',93),
  ('condicion_booleana -> BOOLEAN_NOT','condicion_booleana',1,'p_condicion_boolena','sintactico.py',94),
  ('operaciones_mat -> valor operadores valor','operaciones_mat',3,'p_operaciones_mat','sintactico.py',99),
  ('operaciones_mat -> valor operadores operaciones_mat','operaciones_mat',3,'p_operaciones_mat','sintactico.py',100),
  ('operaciones_mat_par -> LPAREN valor operadores valor RPAREN','operaciones_mat_par',5,'p_operaciones_mat_par','sintactico.py',105),
  ('operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN','operaciones_mat_par',5,'p_operaciones_mat_par','sintactico.py',106),
  ('asignacion -> VARIABLE EQUALS valor SEMI','asignacion',4,'p_asignacion','sintactico.py',110),
  ('asignacion -> VAR asignacion','asignacion',2,'p_asignacion','sintactico.py',111),
  ('asignacion -> proteccion asignacion','asignacion',2,'p_asignacion','sintactico.py',112),
  ('asignacion_array -> VARIABLE EQUALS array_def SEMI','asignacion_array',4,'p_asignacion_array','sintactico.py',118),
  ('constante -> DEFINE LPAREN STRING COMMA valor RPAREN SEMI','constante',7,'p_constante','sintactico.py',121),
  ('constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI','constante',7,'p_constante','sintactico.py',122),
  ('lectura -> READLINE LPAREN STRING RPAREN SEMI','lectura',5,'p_lectura','sintactico.py',126),
  ('lectura -> READLINE LPAREN RPAREN SEMI','lectura',4,'p_lectura','sintactico.py',127),
  ('proteccion -> PUBLIC','proteccion',1,'p_proteccion','sintactico.py',130),
  ('proteccion -> PRIVATE','proteccion',1,'p_proteccion','sintactico.py',131),
  ('proteccion -> PROTECTED','proteccion',1,'p_proteccion','sintactico.py',132),
  ('proteccion -> STATIC','proteccion',1,'p_proteccion','sintactico.py',133),
  ('funciones -> funcion_nparams','funciones',1,'p_funciones','sintactico.py',137),
  ('funciones -> proteccion funcion_nparams','funciones',2,'p_funciones','sintactico.py',138),
  ('funciones -> funcion_opreturn','funciones',1,'p_funciones','sintactico.py',139),
  ('funciones -> proteccion funcion_opreturn','funciones',2,'p_funciones','sintactico.py',140),
  ('funciones -> funcion_blank','funciones',1,'p_funciones','sintactico.py',141),
  ('funciones -> proteccion funcion_blank','funciones',2,'p_funciones','sintactico.py',142),
  ('funciones -> funcion_void','funciones',1,'p_funciones','sintactico.py',143),
  ('param -> VARIABLE','param',1,'p_param','sintactico.py',147),
  ('param -> asignacion','param',1,'p_param','sintactico.py',148),
  ('funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def','funcion_nparams',6,'p_funcion_nparams','sintactico.py',151),
  ('params_list -> params_list COMMA param','params_list',3,'p_params_list','sintactico.py',154),
  ('params_list -> param','params_list',1,'p_params_list','sintactico.py',155),
  ('funcion_opreturn -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def','funcion_opreturn',6,'p_funcion_opreturn','sintactico.py',158),
  ('funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE','funcion_void',9,'p_funcion_void','sintactico.py',161),
  ('funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def','funcion_blank',5,'p_funcion_blank','sintactico.py',164),
  ('funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE','funcion_blank',7,'p_funcion_blank','sintactico.py',165),
  ('condicion -> VARIABLE operador_logico VARIABLE','condicion',3,'p_condicion','sintactico.py',171),
  ('condicion -> valor operador_logico valor','condicion',3,'p_condicion','sintactico.py',172),
  ('bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE','bwhile',7,'p_bwhile','sintactico.py',176),
  ('bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque','bwhile',6,'p_bwhile','sintactico.py',177),
  ('bdo -> DO LBRACE cuerpo RBRACE bwhile','bdo',5,'p_bdo','sintactico.py',180),
  ('bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE','bswitch',7,'p_bswitch','sintactico.py',183),
  ('innerSwitch -> CASE ENTERO COLON cuerpo BREAK SEMI','innerSwitch',6,'p_innerSwitch','sintactico.py',186),
  ('innerSwitch -> CASE ENTERO COLON cuerpo BREAK SEMI innerSwitch','innerSwitch',7,'p_innerSwitch','sintactico.py',187),
  ('colas -> <empty>','colas',0,'p_colas','sintactico.py',190),
  ('bfor -> FOR LPAREN asignacion SEMI condicion SEMI for_incr RPAREN stc_bloque_def','bfor',9,'p_bfor','sintactico.py',195),
  ('stc_bloque -> stc_bloque cuerpo','stc_bloque',2,'p_stc_bloque','sintactico.py',198),
  ('stc_bloque -> empty','stc_bloque',1,'p_stc_bloque','sintactico.py',199),
  ('stc_bloque -> RETURN','stc_bloque',1,'p_stc_bloque','sintactico.py',200),
  ('stc_bloque -> RETURN NULL','stc_bloque',2,'p_stc_bloque','sintactico.py',201),
  ('stc_bloque_def -> LBRACE stc_bloque RBRACE','stc_bloque_def',3,'p_stc_bloque_def','sintactico.py',205),
  ('for_incr -> VARIABLE SUMA SUMA','for_incr',3,'p_for_incr','sintactico.py',208),
  ('for_incr -> SUMA SUMA VARIABLE','for_incr',3,'p_for_incr','sintactico.py',209),
  ('for_incr -> VARIABLE RESTA RESTA','for_incr',3,'p_for_incr','sintactico.py',210),
  ('for_incr -> RESTA RESTA VARIABLE','for_incr',3,'p_for_incr','sintactico.py',211),
  ('for_incr -> VARIABLE SUMA EQUALS numero','for_incr',4,'p_for_incr','sintactico.py',212),
  ('for_incr -> VARIABLE RESTA EQUALS numero','for_incr',4,'p_for_incr','sintactico.py',213),
  ('bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def','bforeach',7,'p_bforeach','sintactico.py',216),
  ('array_def -> ARRAY LPAREN RPAREN','array_def',3,'p_array_def','sintactico.py',219),
  ('array_def -> ARRAY LPAREN array_elmnt RPAREN','array_def',4,'p_array_def','sintactico.py',220),
  ('array_elmnt -> valor','array_elmnt',1,'p_array_elmnt','sintactico.py',223),
  ('array_elmnt -> empty','array_elmnt',1,'p_array_elmnt','sintactico.py',224),
  ('btry -> TRY LBRACE stc_bloque_def RBRACE catches','btry',5,'p_btry','sintactico.py',227),
  ('catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def','catches',7,'p_catches','sintactico.py',230),
  ('catches -> empty','catches',1,'p_catches','sintactico.py',231),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',234),
  ('bgoto -> GOTO NOMBRE SEMI','bgoto',3,'p_bgoto','sintactico.py',237),
]
