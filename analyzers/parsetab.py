
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY AS BOOL BOOLEAN_NOT BREAK CASE CATCH CLOSE_TAG COLON COMENTARIOS COMMA CONCAT CONTINUE CURLY_OPEN DECIMAL DEFAULT DEFINE DIVISION DIV_EQUAL DO DOC_COMENTARIOS DOUBLE ECHO ELSE ELSEIF ENTERO EQUALS EXIT FALSE FLOAT FOR FOREACH FUNCTION GOTO GREATER IF INT IS_EQUAL IS_GREATER_OR_EQUAL IS_IDENTICAL IS_NOT_EQUAL IS_NOT_IDENTICAL IS_SMALLER_OR_EQUAL LBRACE LBRACKET LPAREN MINUS_EQUAL MODULO MOD_EQUAL MULTIPLICACION MUL_EQUAL NOMBRE NOT NULL OPEN_TAG OR PLUS_EQUAL PRINT PRIVATE PROTECTED PUBLIC RBRACE RBRACKET READLINE REQUIRE RESTA RETURN RPAREN SEMI SMALLER STATIC STRING SUMA SWITCH TRUE TRY VAR VARIABLE VOID WHILE XORcuerpo : imprimir\n            | asignacion\n            | asignacion_array\n            | funciones\n            | constante\n            | lectura\n            | operadores\n            | operador_logico\n            | condicion_booleana\n            | bwhile\n            | bdo\n            | bfor\n            | bforeach\n            | btry\n            | operaciones_mat_par\n            | condicion_ifelse \n            | bswitch\n            | bgoto\n  cuerpo_general : cuerpoform : OPEN_TAG cuerpo_general CLOSE_TAGimprimir : ECHO valor SEMI\n            | PRINT valor SEMI\n            | PRINT LPAREN valor RPAREN SEMI\n            | ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI\n  valor : numero\n            | VARIABLE\n            | STRING\n            | NOMBRE\n  numero : ENTERO\n          | DECIMAL\n  operadores : SUMA \n                  | RESTA\n                  | MULTIPLICACION\n                  | DIVISION\n                  | MODULO\n  operador_logico :  SMALLER\n                        | GREATER\n                        | IS_SMALLER_OR_EQUAL\n                        | IS_GREATER_OR_EQUAL\n  condicion_if :  IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE\n  condicion_elseif :  ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE\n  condicion_else :  ELSE LBRACE cuerpo RBRACE\n  condicion_ifelse :  condicion_if\n                      | condicion_if condicion_else\n                      | condicion_if condicion_elseif\n                      | condicion_if condicion_elseif condicion_else\n  condicion_booleana :  AND\n                        | OR\n                        | XOR\n                        | IS_EQUAL\n                        | IS_NOT_EQUAL\n                        | IS_IDENTICAL\n                        | IS_NOT_IDENTICAL\n                        | BOOLEAN_NOT\n  operaciones_mat :  valor operadores valor\n                        | valor operadores operaciones_mat\n                       \n  operaciones_mat_par :  LPAREN valor operadores valor RPAREN\n                          |  LPAREN valor operadores operaciones_mat_par RPAREN\n  asignacion : VARIABLE EQUALS valor SEMIasignacion_array : VARIABLE EQUALS array_def SEMIconstante : DEFINE LPAREN STRING COMMA valor RPAREN SEMI\n          | DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMIlectura : READLINE LPAREN STRING RPAREN SEMI\n          | READLINE LPAREN RPAREN SEMIproteccion : PUBLIC\n          | PRIVATE\n          | PROTECTED\n          | STATIC\n  funciones : funcion_nparams\n              | proteccion funcion_nparams\n              | funcion_opreturn\n              | proteccion funcion_opreturn\n              | funcion_blank\n              | proteccion funcion_blank\n              | funcion_void\n  param : VARIABLE\n          | asignacionfuncion_nparams : FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_defparams_list : params_list COMMA param\n                      | param funcion_opreturn : FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def\n  funcion_void : FUNCTION NOMBRE LPAREN  RPAREN COLON VOID LBRACE empty RBRACE funcion_blank : FUNCTION NOMBRE LPAREN  RPAREN stc_bloque_def\n                    | FUNCTION NOMBRE LPAREN  RPAREN LBRACE empty RBRACE\n   condicion : VARIABLE operador_logico VARIABLE\n            | valor operador_logico valor       \n   bwhile : WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE \n  | WHILE LPAREN condicion RPAREN COLON stc_bloque  \n   bdo : DO LBRACE cuerpo RBRACE bwhile \n   bswitch : SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE innerSwitch : CASE ENTERO COLON cuerpo BREAK SEMI\n    | CASE ENTERO COLON cuerpo BREAK SEMI innerSwitch \n  bfor : FOR LPAREN asignacion SEMI condicion SEMI for_incr RPAREN stc_bloque_defstc_bloque : stc_bloque cuerpo\n        | empty\n        | RETURN\n        | RETURN NULL\n        stc_bloque_def : LBRACE stc_bloque RBRACEfor_incr : VARIABLE SUMA SUMA\n          | SUMA SUMA VARIABLE\n          | VARIABLE RESTA RESTA\n          | RESTA RESTA VARIABLE\n          | VARIABLE SUMA EQUALS numero\n          | VARIABLE RESTA EQUALS numerobforeach :  FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_defarray_def : ARRAY LPAREN RPAREN \n          | ARRAY LPAREN array_elmnt RPARENarray_elmnt : valor\n            | emptybtry : TRY LBRACE stc_bloque_def RBRACE catchescatches : catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def\n          | emptyempty : bgoto : GOTO NOMBRE SEMI'
    
_lr_action_items = {'ECHO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[20,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,20,-44,-45,-21,-22,-113,-46,20,-114,-59,-60,-64,20,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,20,-24,20,20,20,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,20,-93,-82,-111,]),'PRINT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[21,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,21,-44,-45,-21,-22,-113,-46,21,-114,-59,-60,-64,21,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,21,-24,21,21,21,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,21,-93,-82,-111,]),'VARIABLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,70,73,74,75,76,80,81,82,83,85,86,89,92,93,95,97,113,115,116,117,119,120,126,127,128,129,130,133,135,136,138,139,140,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,182,183,184,186,187,191,192,193,196,199,201,204,205,206,211,214,216,218,222,223,224,225,226,228,237,242,],[23,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,66,66,66,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,66,66,-70,-72,-74,107,23,111,112,-44,-45,118,107,-21,-22,66,-113,-46,23,107,-114,151,-59,-60,66,151,66,-64,168,66,107,66,172,23,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,151,-83,-113,23,-24,23,23,208,23,-78,-95,-61,-62,-87,-105,-90,-84,-40,233,234,235,-41,23,-93,-82,-111,]),'DEFINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[29,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,29,-44,-45,-21,-22,-113,-46,29,-114,-59,-60,-64,29,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,29,-24,29,29,29,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,29,-93,-82,-111,]),'READLINE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[30,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,30,-44,-45,-21,-22,-113,-46,30,-114,-59,-60,-64,30,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,30,-24,30,30,30,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,30,-93,-82,-111,]),'SUMA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,64,65,66,67,68,71,72,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,193,196,199,201,204,205,206,208,209,211,214,216,218,220,225,226,228,237,242,],[31,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-26,-27,-30,-28,31,-70,-72,-74,31,-44,-45,-21,-22,-113,-46,31,-114,-59,-60,-64,31,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,31,-24,31,31,209,31,-78,-95,-61,-62,-87,220,222,-105,-90,-84,-40,229,-41,31,-93,-82,-111,]),'RESTA':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,64,65,66,67,68,71,72,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,193,196,199,201,204,205,206,208,210,211,214,216,218,221,225,226,228,237,242,],[32,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-26,-27,-30,-28,32,-70,-72,-74,32,-44,-45,-21,-22,-113,-46,32,-114,-59,-60,-64,32,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,32,-24,32,32,210,32,-78,-95,-61,-62,-87,221,223,-105,-90,-84,-40,231,-41,32,-93,-82,-111,]),'MULTIPLICACION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,64,65,66,67,68,71,72,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[33,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-26,-27,-30,-28,33,-70,-72,-74,33,-44,-45,-21,-22,-113,-46,33,-114,-59,-60,-64,33,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,33,-24,33,33,33,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,33,-93,-82,-111,]),'DIVISION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,64,65,66,67,68,71,72,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[34,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-26,-27,-30,-28,34,-70,-72,-74,34,-44,-45,-21,-22,-113,-46,34,-114,-59,-60,-64,34,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,34,-24,34,34,34,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,34,-93,-82,-111,]),'MODULO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,64,65,66,67,68,71,72,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[35,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-26,-27,-30,-28,35,-70,-72,-74,35,-44,-45,-21,-22,-113,-46,35,-114,-59,-60,-64,35,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,35,-24,35,35,35,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,35,-93,-82,-111,]),'SMALLER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,64,65,67,68,71,74,75,76,81,85,86,93,95,107,108,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[36,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-27,-30,-28,-70,-72,-74,36,-44,-45,-21,-22,36,36,-113,-46,36,-114,-59,-60,-64,36,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,36,-24,36,36,36,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,36,-93,-82,-111,]),'GREATER':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,64,65,67,68,71,74,75,76,81,85,86,93,95,107,108,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[37,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-27,-30,-28,-70,-72,-74,37,-44,-45,-21,-22,37,37,-113,-46,37,-114,-59,-60,-64,37,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,37,-24,37,37,37,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,37,-93,-82,-111,]),'IS_SMALLER_OR_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,64,65,67,68,71,74,75,76,81,85,86,93,95,107,108,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[38,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-27,-30,-28,-70,-72,-74,38,-44,-45,-21,-22,38,38,-113,-46,38,-114,-59,-60,-64,38,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,38,-24,38,38,38,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,38,-93,-82,-111,]),'IS_GREATER_OR_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,64,65,67,68,71,74,75,76,81,85,86,93,95,107,108,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[39,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-29,-25,-27,-30,-28,-70,-72,-74,39,-44,-45,-21,-22,39,39,-113,-46,39,-114,-59,-60,-64,39,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,39,-24,39,39,39,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,39,-93,-82,-111,]),'AND':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[40,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,40,-44,-45,-21,-22,-113,-46,40,-114,-59,-60,-64,40,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,40,-24,40,40,40,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,40,-93,-82,-111,]),'OR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[41,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,41,-44,-45,-21,-22,-113,-46,41,-114,-59,-60,-64,41,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,41,-24,41,41,41,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,41,-93,-82,-111,]),'XOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[42,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,42,-44,-45,-21,-22,-113,-46,42,-114,-59,-60,-64,42,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,42,-24,42,42,42,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,42,-93,-82,-111,]),'IS_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[43,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,43,-44,-45,-21,-22,-113,-46,43,-114,-59,-60,-64,43,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,43,-24,43,43,43,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,43,-93,-82,-111,]),'IS_NOT_EQUAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[44,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,44,-44,-45,-21,-22,-113,-46,44,-114,-59,-60,-64,44,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,44,-24,44,44,44,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,44,-93,-82,-111,]),'IS_IDENTICAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[45,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,45,-44,-45,-21,-22,-113,-46,45,-114,-59,-60,-64,45,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,45,-24,45,45,45,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,45,-93,-82,-111,]),'IS_NOT_IDENTICAL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[46,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,46,-44,-45,-21,-22,-113,-46,46,-114,-59,-60,-64,46,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,46,-24,46,46,46,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,46,-93,-82,-111,]),'BOOLEAN_NOT':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[47,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,47,-44,-45,-21,-22,-113,-46,47,-114,-59,-60,-64,47,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,47,-24,47,47,47,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,47,-93,-82,-111,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,137,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[48,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,48,-44,-45,-21,-22,-113,-46,48,-114,-59,-60,-64,48,48,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,48,-24,48,48,48,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,48,-93,-82,-111,]),'DO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[49,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,49,-44,-45,-21,-22,-113,-46,49,-114,-59,-60,-64,49,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,49,-24,49,49,49,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,49,-93,-82,-111,]),'FOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[50,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,50,-44,-45,-21,-22,-113,-46,50,-114,-59,-60,-64,50,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,50,-24,50,50,50,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,50,-93,-82,-111,]),'FOREACH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[51,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,51,-44,-45,-21,-22,-113,-46,51,-114,-59,-60,-64,51,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,51,-24,51,51,51,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,51,-93,-82,-111,]),'TRY':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[52,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,52,-44,-45,-21,-22,-113,-46,52,-114,-59,-60,-64,52,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,52,-24,52,52,52,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,52,-93,-82,-111,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,53,54,61,74,75,76,81,85,86,88,91,93,95,97,100,101,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,195,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[22,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,70,-69,-71,-73,-75,78,79,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,80,82,83,-43,89,92,-70,-72,-74,22,-44,-45,117,120,-21,-22,22,128,129,-113,-46,22,-114,-59,-60,-64,22,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,22,-24,22,22,212,22,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,22,-93,-82,-111,]),'SWITCH':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[54,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,54,-44,-45,-21,-22,-113,-46,54,-114,-59,-60,-64,54,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,54,-24,54,54,54,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,54,-93,-82,-111,]),'GOTO':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[55,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,55,-44,-45,-21,-22,-113,-46,55,-114,-59,-60,-64,55,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,55,-24,55,55,55,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,55,-93,-82,-111,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,57,58,59,60,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[56,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,77,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-65,-66,-67,-68,-70,-72,-74,56,-44,-45,-21,-22,-113,-46,56,-114,-59,-60,-64,56,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,56,-24,56,56,56,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,56,-93,-82,-111,]),'PUBLIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[57,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,57,-44,-45,-21,-22,-113,-46,57,-114,-59,-60,-64,57,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,57,-24,57,57,57,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,57,-93,-82,-111,]),'PRIVATE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[58,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,58,-44,-45,-21,-22,-113,-46,58,-114,-59,-60,-64,58,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,58,-24,58,58,58,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,58,-93,-82,-111,]),'PROTECTED':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[59,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,59,-44,-45,-21,-22,-113,-46,59,-114,-59,-60,-64,59,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,59,-24,59,59,59,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,59,-93,-82,-111,]),'STATIC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[60,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,60,-44,-45,-21,-22,-113,-46,60,-114,-59,-60,-64,60,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,60,-24,60,60,60,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,60,-93,-82,-111,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,81,85,86,93,95,113,115,116,119,126,127,133,141,142,143,144,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,186,187,191,192,196,199,201,204,205,206,211,214,216,218,225,226,228,237,242,],[61,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,61,-44,-45,-21,-22,-113,-46,61,-114,-59,-60,-64,61,-95,-96,-113,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,61,-24,61,61,61,-78,-95,-61,-62,-87,-105,-90,-84,-40,-41,61,-93,-82,-111,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,85,86,93,95,115,119,126,127,133,142,143,144,155,156,157,165,167,170,173,174,175,176,177,178,183,187,192,199,204,205,206,211,214,216,218,225,228,237,242,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,-44,-45,-21,-22,-46,-114,-59,-60,-64,-95,-96,-113,-23,-57,-58,-63,-113,-89,-98,-94,-97,-110,-112,-42,-83,-24,-88,-78,-61,-62,-87,-105,-90,-84,-40,-41,-93,-82,-111,]),'RBRACE':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,85,86,93,95,109,113,114,115,119,126,127,133,141,142,143,144,145,155,156,157,165,166,167,170,173,174,175,176,177,178,183,184,187,191,192,197,199,201,203,204,205,206,211,213,214,216,217,218,225,227,228,237,242,243,244,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,-44,-45,-21,-22,137,-113,144,-46,-114,-59,-60,-64,173,-95,-96,-113,178,-23,-57,-58,-63,-113,-113,-89,-98,-94,-97,-110,-112,-42,-83,-113,-24,206,-88,214,-78,216,218,-61,-62,-87,-105,225,-90,-84,-113,-40,-41,237,-93,-82,-111,-91,-92,]),'BREAK':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,24,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,53,74,75,76,85,86,93,95,115,119,126,127,133,142,143,144,155,156,157,165,167,170,173,174,175,176,177,178,183,187,192,199,204,205,206,211,214,216,218,225,228,236,237,242,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-69,-71,-73,-75,-31,-32,-33,-34,-35,-36,-37,-38,-39,-47,-48,-49,-50,-51,-52,-53,-54,-43,-70,-72,-74,-44,-45,-21,-22,-46,-114,-59,-60,-64,-95,-96,-113,-23,-57,-58,-63,-113,-89,-98,-94,-97,-110,-112,-42,-83,-24,-88,-78,-61,-62,-87,-105,-90,-84,-40,-41,-93,241,-82,-111,]),'NOMBRE':([20,21,22,31,32,33,34,35,36,37,38,39,55,56,70,73,77,78,80,92,97,117,128,130,136,138,139,212,],[63,71,71,-31,-32,-33,-34,-35,-36,-37,-38,-39,90,91,71,71,101,103,71,71,71,71,71,71,71,71,71,224,]),'STRING':([20,21,22,31,32,33,34,35,36,37,38,39,70,73,78,79,80,92,97,117,128,130,136,138,139,],[67,67,67,-31,-32,-33,-34,-35,-36,-37,-38,-39,67,67,102,104,67,67,67,67,67,67,67,67,67,]),'ENTERO':([20,21,22,31,32,33,34,35,36,37,38,39,70,73,80,92,94,97,117,128,130,136,138,139,198,230,232,],[64,64,64,-31,-32,-33,-34,-35,-36,-37,-38,-39,64,64,64,64,122,64,64,64,64,64,64,64,215,64,64,]),'DECIMAL':([20,21,22,31,32,33,34,35,36,37,38,39,70,73,80,92,97,117,128,130,136,138,139,230,232,],[68,68,68,-31,-32,-33,-34,-35,-36,-37,-38,-39,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'EQUALS':([23,111,151,220,221,],[73,139,139,230,232,]),'LBRACE':([49,52,84,87,134,147,149,153,162,179,181,194,202,219,240,],[81,84,113,116,166,180,184,186,184,196,113,113,217,113,113,]),'ELSE':([53,86,218,225,],[87,87,-40,-41,]),'ELSEIF':([53,218,],[88,-40,]),'SEMI':([62,63,64,65,66,67,68,69,71,90,98,99,105,110,123,126,132,154,158,168,169,171,188,189,190,241,],[93,-28,-29,-25,-26,-27,-30,95,-28,119,126,127,133,138,155,-59,165,187,-106,-85,-86,193,-107,204,205,243,]),'LBRACKET':([63,],[94,]),'RPAREN':([64,65,66,67,68,71,79,96,104,106,118,120,121,124,125,126,128,129,146,148,150,151,152,156,157,159,160,161,163,164,168,169,172,200,207,229,231,233,234,235,238,239,],[-29,-25,-26,-27,-30,-28,105,123,132,134,147,149,153,156,157,-59,158,162,179,181,-80,-76,-77,-57,-58,188,-108,-109,189,190,-85,-86,194,-79,219,-99,-101,-100,-102,240,-103,-104,]),'ARRAY':([73,131,],[100,164,]),'COMMA':([102,103,126,148,150,151,152,200,],[130,131,-59,182,-80,-76,-77,-79,]),'AS':([112,],[140,]),'RETURN':([113,166,167,184,],[143,143,143,143,]),'RBRACKET':([122,],[154,]),'COLON':([134,149,215,],[167,185,226,]),'NULL':([143,],[175,]),'CATCH':([144,173,176,177,242,],[-113,-98,195,-112,-111,]),'CASE':([180,243,],[198,198,]),'VOID':([185,],[202,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,81,116,141,186,191,192,196,226,],[1,109,145,174,203,174,174,213,236,]),'imprimir':([0,81,116,141,186,191,192,196,226,],[2,2,2,2,2,2,2,2,2,]),'asignacion':([0,81,82,116,120,129,141,182,186,191,192,196,226,],[3,3,110,3,152,152,3,152,3,3,3,3,3,]),'asignacion_array':([0,81,116,141,186,191,192,196,226,],[4,4,4,4,4,4,4,4,4,]),'funciones':([0,81,116,141,186,191,192,196,226,],[5,5,5,5,5,5,5,5,5,]),'constante':([0,81,116,141,186,191,192,196,226,],[6,6,6,6,6,6,6,6,6,]),'lectura':([0,81,116,141,186,191,192,196,226,],[7,7,7,7,7,7,7,7,7,]),'operadores':([0,72,81,116,141,186,191,192,196,226,],[8,97,8,8,8,8,8,8,8,8,]),'operador_logico':([0,81,107,108,116,141,186,191,192,196,226,],[9,9,135,136,9,9,9,9,9,9,9,]),'condicion_booleana':([0,81,116,141,186,191,192,196,226,],[10,10,10,10,10,10,10,10,10,]),'bwhile':([0,81,116,137,141,186,191,192,196,226,],[11,11,11,170,11,11,11,11,11,11,]),'bdo':([0,81,116,141,186,191,192,196,226,],[12,12,12,12,12,12,12,12,12,]),'bfor':([0,81,116,141,186,191,192,196,226,],[13,13,13,13,13,13,13,13,13,]),'bforeach':([0,81,116,141,186,191,192,196,226,],[14,14,14,14,14,14,14,14,14,]),'btry':([0,81,116,141,186,191,192,196,226,],[15,15,15,15,15,15,15,15,15,]),'operaciones_mat_par':([0,81,97,116,141,186,191,192,196,226,],[16,16,125,16,16,16,16,16,16,16,]),'condicion_ifelse':([0,81,116,141,186,191,192,196,226,],[17,17,17,17,17,17,17,17,17,]),'bswitch':([0,81,116,141,186,191,192,196,226,],[18,18,18,18,18,18,18,18,18,]),'bgoto':([0,81,116,141,186,191,192,196,226,],[19,19,19,19,19,19,19,19,19,]),'funcion_nparams':([0,25,81,116,141,186,191,192,196,226,],[24,74,24,24,24,24,24,24,24,24,]),'proteccion':([0,81,116,141,186,191,192,196,226,],[25,25,25,25,25,25,25,25,25,]),'funcion_opreturn':([0,25,81,116,141,186,191,192,196,226,],[26,75,26,26,26,26,26,26,26,26,]),'funcion_blank':([0,25,81,116,141,186,191,192,196,226,],[27,76,27,27,27,27,27,27,27,27,]),'funcion_void':([0,81,116,141,186,191,192,196,226,],[28,28,28,28,28,28,28,28,28,]),'condicion_if':([0,81,116,141,186,191,192,196,226,],[53,53,53,53,53,53,53,53,53,]),'valor':([20,21,22,70,73,80,92,97,117,128,130,136,138,139,],[62,69,72,96,98,108,108,124,108,160,163,169,108,98,]),'numero':([20,21,22,70,73,80,92,97,117,128,130,136,138,139,230,232,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,238,239,]),'condicion_else':([53,86,],[85,115,]),'condicion_elseif':([53,],[86,]),'array_def':([73,],[99,]),'condicion':([80,92,117,138,],[106,121,146,171,]),'stc_bloque_def':([84,149,162,181,194,219,240,],[114,183,183,199,211,228,242,]),'stc_bloque':([113,166,167,184,],[141,191,192,141,]),'empty':([113,128,144,166,167,184,217,],[142,161,177,142,142,201,227,]),'params_list':([120,129,],[148,148,]),'param':([120,129,182,],[150,150,200,]),'array_elmnt':([128,],[159,]),'catches':([144,],[176,]),'innerSwitch':([180,243,],[197,244,]),'for_incr':([193,],[207,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> imprimir','cuerpo',1,'p_cuerpo','sintactico.py',8),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',9),
  ('cuerpo -> asignacion_array','cuerpo',1,'p_cuerpo','sintactico.py',10),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',11),
  ('cuerpo -> constante','cuerpo',1,'p_cuerpo','sintactico.py',12),
  ('cuerpo -> lectura','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> operadores','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> operador_logico','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> condicion_booleana','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> bwhile','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> bdo','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> bfor','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> bforeach','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> btry','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> operaciones_mat_par','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> condicion_ifelse','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> bswitch','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> bgoto','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo_general -> cuerpo','cuerpo_general',1,'p_cuerpo_general','sintactico.py',29),
  ('form -> OPEN_TAG cuerpo_general CLOSE_TAG','form',3,'p_form','sintactico.py',31),
  ('imprimir -> ECHO valor SEMI','imprimir',3,'p_imprimir','sintactico.py',34),
  ('imprimir -> PRINT valor SEMI','imprimir',3,'p_imprimir','sintactico.py',35),
  ('imprimir -> PRINT LPAREN valor RPAREN SEMI','imprimir',5,'p_imprimir','sintactico.py',36),
  ('imprimir -> ECHO NOMBRE LBRACKET ENTERO RBRACKET SEMI','imprimir',6,'p_imprimir','sintactico.py',37),
  ('valor -> numero','valor',1,'p_valor','sintactico.py',42),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',43),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',44),
  ('valor -> NOMBRE','valor',1,'p_valor','sintactico.py',45),
  ('numero -> ENTERO','numero',1,'p_numero','sintactico.py',49),
  ('numero -> DECIMAL','numero',1,'p_numero','sintactico.py',50),
  ('operadores -> SUMA','operadores',1,'p_operadores','sintactico.py',54),
  ('operadores -> RESTA','operadores',1,'p_operadores','sintactico.py',55),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',56),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',57),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',58),
  ('operador_logico -> SMALLER','operador_logico',1,'p_operador_logico','sintactico.py',63),
  ('operador_logico -> GREATER','operador_logico',1,'p_operador_logico','sintactico.py',64),
  ('operador_logico -> IS_SMALLER_OR_EQUAL','operador_logico',1,'p_operador_logico','sintactico.py',65),
  ('operador_logico -> IS_GREATER_OR_EQUAL','operador_logico',1,'p_operador_logico','sintactico.py',66),
  ('condicion_if -> IF LPAREN condicion RPAREN LBRACE cuerpo RBRACE','condicion_if',7,'p_condicion_if','sintactico.py',69),
  ('condicion_elseif -> ELSEIF LPAREN condicion RPAREN LBRACE cuerpo RBRACE','condicion_elseif',7,'p_condicion_elseif','sintactico.py',72),
  ('condicion_else -> ELSE LBRACE cuerpo RBRACE','condicion_else',4,'p_condicion_else','sintactico.py',75),
  ('condicion_ifelse -> condicion_if','condicion_ifelse',1,'p_condicion_ifelse','sintactico.py',78),
  ('condicion_ifelse -> condicion_if condicion_else','condicion_ifelse',2,'p_condicion_ifelse','sintactico.py',79),
  ('condicion_ifelse -> condicion_if condicion_elseif','condicion_ifelse',2,'p_condicion_ifelse','sintactico.py',80),
  ('condicion_ifelse -> condicion_if condicion_elseif condicion_else','condicion_ifelse',3,'p_condicion_ifelse','sintactico.py',81),
  ('condicion_booleana -> AND','condicion_booleana',1,'p_condicion_boolena','sintactico.py',84),
  ('condicion_booleana -> OR','condicion_booleana',1,'p_condicion_boolena','sintactico.py',85),
  ('condicion_booleana -> XOR','condicion_booleana',1,'p_condicion_boolena','sintactico.py',86),
  ('condicion_booleana -> IS_EQUAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',87),
  ('condicion_booleana -> IS_NOT_EQUAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',88),
  ('condicion_booleana -> IS_IDENTICAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',89),
  ('condicion_booleana -> IS_NOT_IDENTICAL','condicion_booleana',1,'p_condicion_boolena','sintactico.py',90),
  ('condicion_booleana -> BOOLEAN_NOT','condicion_booleana',1,'p_condicion_boolena','sintactico.py',91),
  ('operaciones_mat -> valor operadores valor','operaciones_mat',3,'p_operaciones_mat','sintactico.py',96),
  ('operaciones_mat -> valor operadores operaciones_mat','operaciones_mat',3,'p_operaciones_mat','sintactico.py',97),
  ('operaciones_mat_par -> LPAREN valor operadores valor RPAREN','operaciones_mat_par',5,'p_operaciones_mat_par','sintactico.py',102),
  ('operaciones_mat_par -> LPAREN valor operadores operaciones_mat_par RPAREN','operaciones_mat_par',5,'p_operaciones_mat_par','sintactico.py',103),
  ('asignacion -> VARIABLE EQUALS valor SEMI','asignacion',4,'p_asignacion','sintactico.py',107),
  ('asignacion_array -> VARIABLE EQUALS array_def SEMI','asignacion_array',4,'p_asignacion_array','sintactico.py',112),
  ('constante -> DEFINE LPAREN STRING COMMA valor RPAREN SEMI','constante',7,'p_constante','sintactico.py',115),
  ('constante -> DEFINE LPAREN NOMBRE COMMA ARRAY RPAREN SEMI','constante',7,'p_constante','sintactico.py',116),
  ('lectura -> READLINE LPAREN STRING RPAREN SEMI','lectura',5,'p_lectura','sintactico.py',120),
  ('lectura -> READLINE LPAREN RPAREN SEMI','lectura',4,'p_lectura','sintactico.py',121),
  ('proteccion -> PUBLIC','proteccion',1,'p_proteccion','sintactico.py',124),
  ('proteccion -> PRIVATE','proteccion',1,'p_proteccion','sintactico.py',125),
  ('proteccion -> PROTECTED','proteccion',1,'p_proteccion','sintactico.py',126),
  ('proteccion -> STATIC','proteccion',1,'p_proteccion','sintactico.py',127),
  ('funciones -> funcion_nparams','funciones',1,'p_funciones','sintactico.py',131),
  ('funciones -> proteccion funcion_nparams','funciones',2,'p_funciones','sintactico.py',132),
  ('funciones -> funcion_opreturn','funciones',1,'p_funciones','sintactico.py',133),
  ('funciones -> proteccion funcion_opreturn','funciones',2,'p_funciones','sintactico.py',134),
  ('funciones -> funcion_blank','funciones',1,'p_funciones','sintactico.py',135),
  ('funciones -> proteccion funcion_blank','funciones',2,'p_funciones','sintactico.py',136),
  ('funciones -> funcion_void','funciones',1,'p_funciones','sintactico.py',137),
  ('param -> VARIABLE','param',1,'p_param','sintactico.py',141),
  ('param -> asignacion','param',1,'p_param','sintactico.py',142),
  ('funcion_nparams -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def','funcion_nparams',6,'p_funcion_nparams','sintactico.py',145),
  ('params_list -> params_list COMMA param','params_list',3,'p_params_list','sintactico.py',148),
  ('params_list -> param','params_list',1,'p_params_list','sintactico.py',149),
  ('funcion_opreturn -> FUNCTION NOMBRE LPAREN params_list RPAREN stc_bloque_def','funcion_opreturn',6,'p_funcion_opreturn','sintactico.py',152),
  ('funcion_void -> FUNCTION NOMBRE LPAREN RPAREN COLON VOID LBRACE empty RBRACE','funcion_void',9,'p_funcion_void','sintactico.py',155),
  ('funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN stc_bloque_def','funcion_blank',5,'p_funcion_blank','sintactico.py',158),
  ('funcion_blank -> FUNCTION NOMBRE LPAREN RPAREN LBRACE empty RBRACE','funcion_blank',7,'p_funcion_blank','sintactico.py',159),
  ('condicion -> VARIABLE operador_logico VARIABLE','condicion',3,'p_condicion','sintactico.py',165),
  ('condicion -> valor operador_logico valor','condicion',3,'p_condicion','sintactico.py',166),
  ('bwhile -> WHILE LPAREN condicion RPAREN LBRACE stc_bloque RBRACE','bwhile',7,'p_bwhile','sintactico.py',170),
  ('bwhile -> WHILE LPAREN condicion RPAREN COLON stc_bloque','bwhile',6,'p_bwhile','sintactico.py',171),
  ('bdo -> DO LBRACE cuerpo RBRACE bwhile','bdo',5,'p_bdo','sintactico.py',174),
  ('bswitch -> SWITCH LPAREN VARIABLE RPAREN LBRACE innerSwitch RBRACE','bswitch',7,'p_bswitch','sintactico.py',177),
  ('innerSwitch -> CASE ENTERO COLON cuerpo BREAK SEMI','innerSwitch',6,'p_innerSwitch','sintactico.py',180),
  ('innerSwitch -> CASE ENTERO COLON cuerpo BREAK SEMI innerSwitch','innerSwitch',7,'p_innerSwitch','sintactico.py',181),
  ('bfor -> FOR LPAREN asignacion SEMI condicion SEMI for_incr RPAREN stc_bloque_def','bfor',9,'p_bfor','sintactico.py',186),
  ('stc_bloque -> stc_bloque cuerpo','stc_bloque',2,'p_stc_bloque','sintactico.py',189),
  ('stc_bloque -> empty','stc_bloque',1,'p_stc_bloque','sintactico.py',190),
  ('stc_bloque -> RETURN','stc_bloque',1,'p_stc_bloque','sintactico.py',191),
  ('stc_bloque -> RETURN NULL','stc_bloque',2,'p_stc_bloque','sintactico.py',192),
  ('stc_bloque_def -> LBRACE stc_bloque RBRACE','stc_bloque_def',3,'p_stc_bloque_def','sintactico.py',196),
  ('for_incr -> VARIABLE SUMA SUMA','for_incr',3,'p_for_incr','sintactico.py',199),
  ('for_incr -> SUMA SUMA VARIABLE','for_incr',3,'p_for_incr','sintactico.py',200),
  ('for_incr -> VARIABLE RESTA RESTA','for_incr',3,'p_for_incr','sintactico.py',201),
  ('for_incr -> RESTA RESTA VARIABLE','for_incr',3,'p_for_incr','sintactico.py',202),
  ('for_incr -> VARIABLE SUMA EQUALS numero','for_incr',4,'p_for_incr','sintactico.py',203),
  ('for_incr -> VARIABLE RESTA EQUALS numero','for_incr',4,'p_for_incr','sintactico.py',204),
  ('bforeach -> FOREACH LPAREN VARIABLE AS VARIABLE RPAREN stc_bloque_def','bforeach',7,'p_bforeach','sintactico.py',207),
  ('array_def -> ARRAY LPAREN RPAREN','array_def',3,'p_array_def','sintactico.py',210),
  ('array_def -> ARRAY LPAREN array_elmnt RPAREN','array_def',4,'p_array_def','sintactico.py',211),
  ('array_elmnt -> valor','array_elmnt',1,'p_array_elmnt','sintactico.py',214),
  ('array_elmnt -> empty','array_elmnt',1,'p_array_elmnt','sintactico.py',215),
  ('btry -> TRY LBRACE stc_bloque_def RBRACE catches','btry',5,'p_btry','sintactico.py',218),
  ('catches -> catches CATCH LPAREN NOMBRE VARIABLE RPAREN stc_bloque_def','catches',7,'p_catches','sintactico.py',221),
  ('catches -> empty','catches',1,'p_catches','sintactico.py',222),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',225),
  ('bgoto -> GOTO NOMBRE SEMI','bgoto',3,'p_bgoto','sintactico.py',228),
]
